(function () { "use strict";
var $hxClasses = {},$estr = function() { return js.Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function inherit() {}; inherit.prototype = from; var proto = new inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var ApplicationMain = function() { }
$hxClasses["ApplicationMain"] = ApplicationMain;
ApplicationMain.__name__ = ["ApplicationMain"];
ApplicationMain.main = function() {
	ApplicationMain.completed = 0;
	ApplicationMain.loaders = new haxe.ds.StringMap();
	ApplicationMain.urlLoaders = new haxe.ds.StringMap();
	ApplicationMain.total = 0;
	flash.Lib.get_current().loaderInfo = flash.display.LoaderInfo.create(null);
	try {
		if(Reflect.hasField(js.Browser.window,"winParameters")) flash.Lib.get_current().loaderInfo.parameters = (Reflect.field(js.Browser.window,"winParameters"))();
		flash.Lib.get_current().get_stage().loaderInfo = flash.Lib.get_current().loaderInfo;
	} catch( e ) {
	}
	ApplicationMain.preloader = new NMEPreloader();
	flash.Lib.get_current().addChild(ApplicationMain.preloader);
	ApplicationMain.preloader.onInit();
	var loader = new flash.display.Loader();
	ApplicationMain.loaders.set("assets/hxlogo.png",loader);
	ApplicationMain.total++;
	var resourcePrefix = "__ASSET__:bitmap_";
	var _g = 0, _g1 = haxe.Resource.listNames();
	while(_g < _g1.length) {
		var resourceName = _g1[_g];
		++_g;
		if(StringTools.startsWith(resourceName,resourcePrefix)) {
			var type = Type.resolveClass(StringTools.replace(resourceName.substring(resourcePrefix.length),"_","."));
			if(type != null) {
				ApplicationMain.total++;
				var instance = Type.createInstance(type,[0,0,true,16777215,ApplicationMain.bitmapClass_onComplete]);
			}
		}
	}
	if(ApplicationMain.total == 0) ApplicationMain.begin(); else {
		var $it0 = ApplicationMain.loaders.keys();
		while( $it0.hasNext() ) {
			var path = $it0.next();
			var loader1 = ApplicationMain.loaders.get(path);
			loader1.contentLoaderInfo.addEventListener("complete",ApplicationMain.loader_onComplete);
			loader1.load(new flash.net.URLRequest(path));
		}
		var $it1 = ApplicationMain.urlLoaders.keys();
		while( $it1.hasNext() ) {
			var path = $it1.next();
			var urlLoader = ApplicationMain.urlLoaders.get(path);
			urlLoader.addEventListener("complete",ApplicationMain.loader_onComplete);
			urlLoader.load(new flash.net.URLRequest(path));
		}
	}
}
ApplicationMain.begin = function() {
	ApplicationMain.preloader.addEventListener(flash.events.Event.COMPLETE,ApplicationMain.preloader_onComplete);
	ApplicationMain.preloader.onLoaded();
}
ApplicationMain.bitmapClass_onComplete = function(instance) {
	ApplicationMain.completed++;
	var classType = Type.getClass(instance);
	classType.preload = instance;
	if(ApplicationMain.completed == ApplicationMain.total) ApplicationMain.begin();
}
ApplicationMain.loader_onComplete = function(event) {
	ApplicationMain.completed++;
	ApplicationMain.preloader.onUpdate(ApplicationMain.completed,ApplicationMain.total);
	if(ApplicationMain.completed == ApplicationMain.total) ApplicationMain.begin();
}
ApplicationMain.preloader_onComplete = function(event) {
	ApplicationMain.preloader.removeEventListener(flash.events.Event.COMPLETE,ApplicationMain.preloader_onComplete);
	flash.Lib.get_current().removeChild(ApplicationMain.preloader);
	ApplicationMain.preloader = null;
	if(Reflect.field(BasicApplication,"main") == null) {
		var mainDisplayObj = Type.createInstance(DocumentClass,[]);
		if(js.Boot.__instanceof(mainDisplayObj,flash.display.DisplayObject)) flash.Lib.get_current().addChild(mainDisplayObj);
	} else Reflect.field(BasicApplication,"main").apply(BasicApplication,[]);
}
var flash = {}
flash.events = {}
flash.events.IEventDispatcher = function() { }
$hxClasses["flash.events.IEventDispatcher"] = flash.events.IEventDispatcher;
flash.events.IEventDispatcher.__name__ = ["flash","events","IEventDispatcher"];
flash.events.IEventDispatcher.prototype = {
	__class__: flash.events.IEventDispatcher
}
flash.events.EventDispatcher = function(target) {
	if(target != null) this.__target = target; else this.__target = this;
	this.__eventMap = [];
};
$hxClasses["flash.events.EventDispatcher"] = flash.events.EventDispatcher;
flash.events.EventDispatcher.__name__ = ["flash","events","EventDispatcher"];
flash.events.EventDispatcher.__interfaces__ = [flash.events.IEventDispatcher];
flash.events.EventDispatcher.compareListeners = function(l1,l2) {
	return l1.mPriority == l2.mPriority?0:l1.mPriority > l2.mPriority?-1:1;
}
flash.events.EventDispatcher.prototype = {
	willTrigger: function(type) {
		return this.hasEventListener(type);
	}
	,toString: function() {
		return "[ " + this.__name__ + " ]";
	}
	,setList: function(type,list) {
		this.__eventMap[type] = list;
	}
	,removeEventListener: function(type,listener,inCapture) {
		if(inCapture == null) inCapture = false;
		if(!this.existList(type)) return;
		var list = this.getList(type);
		var capture = inCapture == null?false:inCapture;
		var _g1 = 0, _g = list.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(list[i].Is(listener,capture)) {
				list.splice(i,1);
				return;
			}
		}
	}
	,hasEventListener: function(type) {
		return this.existList(type);
	}
	,getList: function(type) {
		return this.__eventMap[type];
	}
	,existList: function(type) {
		return this.__eventMap != null && this.__eventMap[type] != undefined;
	}
	,dispatchEvent: function(event) {
		if(event.target == null) event.target = this.__target;
		var capture = event.eventPhase == flash.events.EventPhase.CAPTURING_PHASE;
		if(this.existList(event.type)) {
			var list = this.getList(event.type);
			var idx = 0;
			while(idx < list.length) {
				var listener = list[idx];
				if(listener.mUseCapture == capture) {
					listener.dispatchEvent(event);
					if(event.__getIsCancelledNow()) return true;
				}
				if(idx < list.length && listener != list[idx]) {
				} else idx++;
			}
			return true;
		}
		return false;
	}
	,addEventListener: function(type,inListener,useCapture,inPriority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(inPriority == null) inPriority = 0;
		if(useCapture == null) useCapture = false;
		var capture = useCapture == null?false:useCapture;
		var priority = inPriority == null?0:inPriority;
		var list = this.getList(type);
		if(!this.existList(type)) {
			list = [];
			this.setList(type,list);
		}
		list.push(new flash.events.Listener(inListener,capture,priority));
		list.sort(flash.events.EventDispatcher.compareListeners);
	}
	,__class__: flash.events.EventDispatcher
}
flash.display = {}
flash.display.IBitmapDrawable = function() { }
$hxClasses["flash.display.IBitmapDrawable"] = flash.display.IBitmapDrawable;
flash.display.IBitmapDrawable.__name__ = ["flash","display","IBitmapDrawable"];
flash.display.IBitmapDrawable.prototype = {
	__class__: flash.display.IBitmapDrawable
}
flash.display.DisplayObject = function() {
	flash.events.EventDispatcher.call(this,null);
	this.___id = flash.utils.Uuid.uuid();
	this.set_parent(null);
	this.set_transform(new flash.geom.Transform(this));
	this.__x = 0.0;
	this.__y = 0.0;
	this.__scaleX = 1.0;
	this.__scaleY = 1.0;
	this.__rotation = 0.0;
	this.__width = 0.0;
	this.__height = 0.0;
	this.set_visible(true);
	this.alpha = 1.0;
	this.__filters = new Array();
	this.__boundsRect = new flash.geom.Rectangle();
	this.__scrollRect = null;
	this.__mask = null;
	this.__maskingObj = null;
	this.set___combinedVisible(this.get_visible());
};
$hxClasses["flash.display.DisplayObject"] = flash.display.DisplayObject;
flash.display.DisplayObject.__name__ = ["flash","display","DisplayObject"];
flash.display.DisplayObject.__interfaces__ = [flash.display.IBitmapDrawable];
flash.display.DisplayObject.__super__ = flash.events.EventDispatcher;
flash.display.DisplayObject.prototype = $extend(flash.events.EventDispatcher.prototype,{
	__srUpdateDivs: function() {
		var gfx = this.__getGraphics();
		if(gfx == null || this.parent == null) return;
		if(this.__scrollRect == null) {
			if(this._srAxes != null && gfx.__surface.parentNode == this._srAxes && this._srWindow.parentNode != null) this._srWindow.parentNode.replaceChild(gfx.__surface,this._srWindow);
			return;
		}
		if(this._srWindow == null) {
			this._srWindow = js.Browser.document.createElement("div");
			this._srAxes = js.Browser.document.createElement("div");
			this._srWindow.style.setProperty("position","absolute","");
			this._srWindow.style.setProperty("left","0px","");
			this._srWindow.style.setProperty("top","0px","");
			this._srWindow.style.setProperty("width","0px","");
			this._srWindow.style.setProperty("height","0px","");
			this._srWindow.style.setProperty("overflow","hidden","");
			this._srAxes.style.setProperty("position","absolute","");
			this._srAxes.style.setProperty("left","0px","");
			this._srAxes.style.setProperty("top","0px","");
			this._srWindow.appendChild(this._srAxes);
		}
		var pnt = this.parent.localToGlobal(new flash.geom.Point(this.get_x(),this.get_y()));
		this._srWindow.style.left = pnt.x + "px";
		this._srWindow.style.top = pnt.y + "px";
		this._srWindow.style.width = this.__scrollRect.width + "px";
		this._srWindow.style.height = this.__scrollRect.height + "px";
		this._srAxes.style.left = -pnt.x - this.__scrollRect.x + "px";
		this._srAxes.style.top = -pnt.y - this.__scrollRect.y + "px";
		if(gfx.__surface.parentNode != this._srAxes && gfx.__surface.parentNode != null) {
			gfx.__surface.parentNode.insertBefore(this._srWindow,gfx.__surface);
			flash.Lib.__removeSurface(gfx.__surface);
			this._srAxes.appendChild(gfx.__surface);
		}
	}
	,__getSrWindow: function() {
		return this._srWindow;
	}
	,set_width: function(inValue) {
		if(this.get__boundsInvalid()) this.validateBounds();
		var w = this.__boundsRect.width;
		if(this.__scaleX * w != inValue) {
			if(w == 0) {
				this.__scaleX = 1;
				this.__invalidateMatrix(true);
				this.___renderFlags |= 64;
				if(this.parent != null) this.parent.___renderFlags |= 64;
				w = this.__boundsRect.width;
			}
			if(w <= 0) return 0;
			this.__scaleX = inValue / w;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
		}
		return inValue;
	}
	,get_width: function() {
		if(this.get__boundsInvalid()) this.validateBounds();
		return this.__width;
	}
	,set_y: function(inValue) {
		if(this.__y != inValue) {
			this.__y = inValue;
			this.__invalidateMatrix(true);
			if(this.parent != null) this.parent.__invalidateBounds();
		}
		return inValue;
	}
	,get_y: function() {
		return this.__y;
	}
	,set_x: function(inValue) {
		if(this.__x != inValue) {
			this.__x = inValue;
			this.__invalidateMatrix(true);
			if(this.parent != null) this.parent.__invalidateBounds();
		}
		return inValue;
	}
	,get_x: function() {
		return this.__x;
	}
	,set_visible: function(inValue) {
		if(this.__visible != inValue) {
			this.__visible = inValue;
			this.setSurfaceVisible(inValue);
		}
		return this.__visible;
	}
	,get_visible: function() {
		return this.__visible;
	}
	,set_transform: function(inValue) {
		this.transform = inValue;
		this.__x = this.transform.get_matrix().tx;
		this.__y = this.transform.get_matrix().ty;
		this.__invalidateMatrix(true);
		return inValue;
	}
	,get__topmostSurface: function() {
		var gfx = this.__getGraphics();
		if(gfx != null) return gfx.__surface;
		return null;
	}
	,get_stage: function() {
		var gfx = this.__getGraphics();
		if(gfx != null) return flash.Lib.__getStage();
		return null;
	}
	,set_scrollRect: function(inValue) {
		this.__scrollRect = inValue;
		this.__srUpdateDivs();
		return inValue;
	}
	,get_scrollRect: function() {
		if(this.__scrollRect == null) return null;
		return this.__scrollRect.clone();
	}
	,set_scaleY: function(inValue) {
		if(this.__scaleY != inValue) {
			this.__scaleY = inValue;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
		}
		return inValue;
	}
	,get_scaleY: function() {
		return this.__scaleY;
	}
	,set_scaleX: function(inValue) {
		if(this.__scaleX != inValue) {
			this.__scaleX = inValue;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
		}
		return inValue;
	}
	,get_scaleX: function() {
		return this.__scaleX;
	}
	,set_rotation: function(inValue) {
		if(this.__rotation != inValue) {
			this.__rotation = inValue;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
		}
		return inValue;
	}
	,get_rotation: function() {
		return this.__rotation;
	}
	,set_parent: function(inValue) {
		if(inValue == this.parent) return inValue;
		this.__invalidateMatrix();
		if(this.parent != null) {
			HxOverrides.remove(this.parent.__children,this);
			this.parent.__invalidateBounds();
		}
		if(inValue != null) {
			inValue.___renderFlags |= 64;
			if(inValue.parent != null) inValue.parent.___renderFlags |= 64;
		}
		if(this.parent == null && inValue != null) {
			this.parent = inValue;
			var evt = new flash.events.Event(flash.events.Event.ADDED,true,false);
			this.dispatchEvent(evt);
		} else if(this.parent != null && inValue == null) {
			this.parent = inValue;
			var evt = new flash.events.Event(flash.events.Event.REMOVED,true,false);
			this.dispatchEvent(evt);
		} else this.parent = inValue;
		return inValue;
	}
	,set___combinedVisible: function(inValue) {
		if(this.__combinedVisible != inValue) {
			this.__combinedVisible = inValue;
			this.setSurfaceVisible(inValue);
		}
		return this.__combinedVisible;
	}
	,get_mouseY: function() {
		return this.globalToLocal(new flash.geom.Point(0,this.get_stage().get_mouseY())).y;
	}
	,get_mouseX: function() {
		return this.globalToLocal(new flash.geom.Point(this.get_stage().get_mouseX(),0)).x;
	}
	,get__matrixInvalid: function() {
		return (this.___renderFlags & 4) != 0;
	}
	,get__matrixChainInvalid: function() {
		return (this.___renderFlags & 8) != 0;
	}
	,set_mask: function(inValue) {
		if(this.__mask != null) this.__mask.__maskingObj = null;
		this.__mask = inValue;
		if(this.__mask != null) this.__mask.__maskingObj = this;
		return this.__mask;
	}
	,get_mask: function() {
		return this.__mask;
	}
	,set_height: function(inValue) {
		if(this.get__boundsInvalid()) this.validateBounds();
		var h = this.__boundsRect.height;
		if(this.__scaleY * h != inValue) {
			if(h == 0) {
				this.__scaleY = 1;
				this.__invalidateMatrix(true);
				this.___renderFlags |= 64;
				if(this.parent != null) this.parent.___renderFlags |= 64;
				h = this.__boundsRect.height;
			}
			if(h <= 0) return 0;
			this.__scaleY = inValue / h;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
		}
		return inValue;
	}
	,get_height: function() {
		if(this.get__boundsInvalid()) this.validateBounds();
		return this.__height;
	}
	,set_filters: function(filters) {
		var oldFilterCount = this.__filters == null?0:this.__filters.length;
		if(filters == null) {
			this.__filters = null;
			if(oldFilterCount > 0) this.invalidateGraphics();
		} else {
			this.__filters = new Array();
			var _g = 0;
			while(_g < filters.length) {
				var filter = filters[_g];
				++_g;
				this.__filters.push(filter.clone());
			}
			this.invalidateGraphics();
		}
		return filters;
	}
	,get__boundsInvalid: function() {
		var gfx = this.__getGraphics();
		if(gfx == null) return (this.___renderFlags & 64) != 0; else return (this.___renderFlags & 64) != 0 || gfx.boundsDirty;
	}
	,get_filters: function() {
		if(this.__filters == null) return [];
		var result = new Array();
		var _g = 0, _g1 = this.__filters;
		while(_g < _g1.length) {
			var filter = _g1[_g];
			++_g;
			result.push(filter.clone());
		}
		return result;
	}
	,get__bottommostSurface: function() {
		var gfx = this.__getGraphics();
		if(gfx != null) return gfx.__surface;
		return null;
	}
	,__validateMatrix: function() {
		var parentMatrixInvalid = (this.___renderFlags & 8) != 0 && this.parent != null;
		if((this.___renderFlags & 4) != 0 || parentMatrixInvalid) {
			if(parentMatrixInvalid) this.parent.__validateMatrix();
			var m = this.transform.get_matrix();
			if((this.___renderFlags & 16) != 0) this.___renderFlags &= -5;
			if((this.___renderFlags & 4) != 0) {
				m.identity();
				m.scale(this.__scaleX,this.__scaleY);
				var rad = this.__rotation * flash.geom.Transform.DEG_TO_RAD;
				if(rad != 0.0) m.rotate(rad);
				m.translate(this.__x,this.__y);
				this.transform._matrix.copy(m);
				m;
			}
			var cm = this.transform.__getFullMatrix(null);
			var fm = this.parent == null?m:this.parent.transform.__getFullMatrix(m);
			this._fullScaleX = fm._sx;
			this._fullScaleY = fm._sy;
			if(cm.a != fm.a || cm.b != fm.b || cm.c != fm.c || cm.d != fm.d || cm.tx != fm.tx || cm.ty != fm.ty) {
				this.transform.__setFullMatrix(fm);
				this.___renderFlags |= 32;
			}
			this.___renderFlags &= -29;
		}
	}
	,__unifyChildrenWithDOM: function(lastMoveObj) {
		var gfx = this.__getGraphics();
		if(gfx != null && lastMoveObj != null && this != lastMoveObj) {
			var ogfx = lastMoveObj.__getGraphics();
			if(ogfx != null) flash.Lib.__setSurfaceZIndexAfter(this.__scrollRect == null?gfx.__surface:this._srWindow,lastMoveObj.__scrollRect == null?ogfx.__surface:lastMoveObj == this.parent?ogfx.__surface:lastMoveObj._srWindow);
		}
		if(gfx == null) return lastMoveObj; else return this;
	}
	,__testFlag: function(mask) {
		return (this.___renderFlags & mask) != 0;
	}
	,__setMatrix: function(inValue) {
		this.transform._matrix.copy(inValue);
		return inValue;
	}
	,__setFullMatrix: function(inValue) {
		return this.transform.__setFullMatrix(inValue);
	}
	,__setFlagToValue: function(mask,value) {
		if(value) this.___renderFlags |= mask; else this.___renderFlags &= ~mask;
	}
	,__setFlag: function(mask) {
		this.___renderFlags |= mask;
	}
	,__setDimensions: function() {
		if(this.scale9Grid != null) {
			this.__boundsRect.width *= this.__scaleX;
			this.__boundsRect.height *= this.__scaleY;
			this.__width = this.__boundsRect.width;
			this.__height = this.__boundsRect.height;
		} else {
			this.__width = this.__boundsRect.width * this.__scaleX;
			this.__height = this.__boundsRect.height * this.__scaleY;
		}
	}
	,__render: function(inMask,clipRect) {
		if(!this.__combinedVisible) return;
		var gfx = this.__getGraphics();
		if(gfx == null) return;
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		if(gfx.__render(inMask,this.__filters,1,1)) {
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.__applyFilters(gfx.__surface);
			this.___renderFlags |= 32;
		}
		var fullAlpha = (this.parent != null?this.parent.__combinedAlpha:1) * this.alpha;
		if(inMask != null) {
			var m = this.getSurfaceTransform(gfx);
			flash.Lib.__drawToSurface(gfx.__surface,inMask,m,fullAlpha,clipRect);
		} else {
			if((this.___renderFlags & 32) != 0) {
				var m = this.getSurfaceTransform(gfx);
				flash.Lib.__setSurfaceTransform(gfx.__surface,m);
				this.___renderFlags &= -33;
				this.__srUpdateDivs();
			}
			flash.Lib.__setSurfaceOpacity(gfx.__surface,fullAlpha);
		}
	}
	,__removeFromStage: function() {
		var gfx = this.__getGraphics();
		if(gfx != null && flash.Lib.__isOnStage(gfx.__surface)) {
			flash.Lib.__removeSurface(gfx.__surface);
			var evt = new flash.events.Event(flash.events.Event.REMOVED_FROM_STAGE,false,false);
			this.dispatchEvent(evt);
		}
	}
	,__matrixOverridden: function() {
		this.__x = this.transform.get_matrix().tx;
		this.__y = this.transform.get_matrix().ty;
		this.___renderFlags |= 16;
		this.___renderFlags |= 4;
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
	}
	,__isOnStage: function() {
		var gfx = this.__getGraphics();
		if(gfx != null && flash.Lib.__isOnStage(gfx.__surface)) return true;
		return false;
	}
	,__invalidateMatrix: function(local) {
		if(local == null) local = false;
		if(local) this.___renderFlags |= 4; else this.___renderFlags |= 8;
	}
	,__invalidateBounds: function() {
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
	}
	,__getSurface: function() {
		var gfx = this.__getGraphics();
		var surface = null;
		if(gfx != null) surface = gfx.__surface;
		return surface;
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.get_visible()) return null;
		var gfx = this.__getGraphics();
		if(gfx != null) {
			gfx.__render();
			var extX = gfx.__extent.x;
			var extY = gfx.__extent.y;
			var local = this.globalToLocal(point);
			if(local.x - extX <= 0 || local.y - extY <= 0 || (local.x - extX) * this.get_scaleX() > this.get_width() || (local.y - extY) * this.get_scaleY() > this.get_height()) return null;
			if(gfx.__hitTest(local.x,local.y)) return this;
		}
		return null;
	}
	,__getMatrix: function() {
		return this.transform.get_matrix();
	}
	,__getInteractiveObjectStack: function(outStack) {
		var io = this;
		if(io != null) outStack.push(io);
		if(this.parent != null) this.parent.__getInteractiveObjectStack(outStack);
	}
	,__getGraphics: function() {
		return null;
	}
	,__getFullMatrix: function(localMatrix) {
		return this.transform.__getFullMatrix(localMatrix);
	}
	,__fireEvent: function(event) {
		var stack = [];
		if(this.parent != null) this.parent.__getInteractiveObjectStack(stack);
		var l = stack.length;
		if(l > 0) {
			event.__setPhase(flash.events.EventPhase.CAPTURING_PHASE);
			stack.reverse();
			var _g = 0;
			while(_g < stack.length) {
				var obj = stack[_g];
				++_g;
				event.currentTarget = obj;
				obj.__dispatchEvent(event);
				if(event.__getIsCancelled()) return;
			}
		}
		event.__setPhase(flash.events.EventPhase.AT_TARGET);
		event.currentTarget = this;
		this.__dispatchEvent(event);
		if(event.__getIsCancelled()) return;
		if(event.bubbles) {
			event.__setPhase(flash.events.EventPhase.BUBBLING_PHASE);
			stack.reverse();
			var _g = 0;
			while(_g < stack.length) {
				var obj = stack[_g];
				++_g;
				event.currentTarget = obj;
				obj.__dispatchEvent(event);
				if(event.__getIsCancelled()) return;
			}
		}
	}
	,__dispatchEvent: function(event) {
		if(event.target == null) event.target = this;
		event.currentTarget = this;
		return flash.events.EventDispatcher.prototype.dispatchEvent.call(this,event);
	}
	,__contains: function(child) {
		return false;
	}
	,__clearFlag: function(mask) {
		this.___renderFlags &= ~mask;
	}
	,__broadcast: function(event) {
		this.__dispatchEvent(event);
	}
	,__applyFilters: function(surface) {
		if(this.__filters != null) {
			var _g = 0, _g1 = this.__filters;
			while(_g < _g1.length) {
				var filter = _g1[_g];
				++_g;
				filter.__applyFilter(surface);
			}
		}
	}
	,__addToStage: function(newParent,beforeSibling) {
		var gfx = this.__getGraphics();
		if(gfx == null) return;
		if(newParent.__getGraphics() != null) {
			flash.Lib.__setSurfaceId(gfx.__surface,this.___id);
			if(beforeSibling != null && beforeSibling.__getGraphics() != null) flash.Lib.__appendSurface(gfx.__surface,beforeSibling.get__bottommostSurface()); else {
				var stageChildren = [];
				var _g = 0, _g1 = newParent.__children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					if(child.get_stage() != null) stageChildren.push(child);
				}
				if(stageChildren.length < 1) flash.Lib.__appendSurface(gfx.__surface,null,newParent.get__topmostSurface()); else {
					var nextSibling = stageChildren[stageChildren.length - 1];
					var container;
					while(js.Boot.__instanceof(nextSibling,flash.display.DisplayObjectContainer)) {
						container = js.Boot.__cast(nextSibling , flash.display.DisplayObjectContainer);
						if(container.__children.length > 0) nextSibling = container.__children[container.__children.length - 1]; else break;
					}
					if(nextSibling.__getGraphics() != gfx) flash.Lib.__appendSurface(gfx.__surface,null,nextSibling.get__topmostSurface()); else flash.Lib.__appendSurface(gfx.__surface);
				}
			}
			flash.Lib.__setSurfaceTransform(gfx.__surface,this.getSurfaceTransform(gfx));
		} else if(newParent.name == "Stage") flash.Lib.__appendSurface(gfx.__surface);
		if(this.__isOnStage()) {
			this.__srUpdateDivs();
			var evt = new flash.events.Event(flash.events.Event.ADDED_TO_STAGE,false,false);
			this.dispatchEvent(evt);
		}
	}
	,validateBounds: function() {
		if(this.get__boundsInvalid()) {
			var gfx = this.__getGraphics();
			if(gfx == null) {
				this.__boundsRect.x = this.get_x();
				this.__boundsRect.y = this.get_y();
				this.__boundsRect.width = 0;
				this.__boundsRect.height = 0;
			} else {
				this.__boundsRect = gfx.__extent.clone();
				if(this.scale9Grid != null) {
					this.__boundsRect.width *= this.__scaleX;
					this.__boundsRect.height *= this.__scaleY;
					this.__width = this.__boundsRect.width;
					this.__height = this.__boundsRect.height;
				} else {
					this.__width = this.__boundsRect.width * this.__scaleX;
					this.__height = this.__boundsRect.height * this.__scaleY;
				}
				gfx.boundsDirty = false;
			}
			this.___renderFlags &= -65;
		}
	}
	,toString: function() {
		return "[DisplayObject name=" + this.name + " id=" + this.___id + "]";
	}
	,setSurfaceVisible: function(inValue) {
		var gfx = this.__getGraphics();
		if(gfx != null && gfx.__surface != null) flash.Lib.__setSurfaceVisible(gfx.__surface,inValue);
	}
	,localToGlobal: function(point) {
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		return this.transform.__getFullMatrix(null).transformPoint(point);
	}
	,invalidateGraphics: function() {
		var gfx = this.__getGraphics();
		if(gfx != null) {
			gfx.__changed = true;
			gfx.__clearNextCycle = true;
		}
	}
	,hitTestPoint: function(x,y,shapeFlag) {
		if(shapeFlag == null) shapeFlag = false;
		var boundingBox = shapeFlag == null?true:!shapeFlag;
		if(!boundingBox) return this.__getObjectUnderPoint(new flash.geom.Point(x,y)) != null; else {
			var gfx = this.__getGraphics();
			if(gfx != null) {
				var extX = gfx.__extent.x;
				var extY = gfx.__extent.y;
				var local = this.globalToLocal(new flash.geom.Point(x,y));
				if(local.x - extX < 0 || local.y - extY < 0 || (local.x - extX) * this.get_scaleX() > this.get_width() || (local.y - extY) * this.get_scaleY() > this.get_height()) return false; else return true;
			}
			return false;
		}
	}
	,hitTestObject: function(obj) {
		if(obj != null && obj.parent != null && this.parent != null) {
			var currentBounds = this.getBounds(this);
			var targetBounds = obj.getBounds(this);
			return currentBounds.intersects(targetBounds);
		}
		return false;
	}
	,handleGraphicsUpdated: function(gfx) {
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		this.__applyFilters(gfx.__surface);
		this.___renderFlags |= 32;
	}
	,globalToLocal: function(inPos) {
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		return this.transform.__getFullMatrix(null).invert().transformPoint(inPos);
	}
	,getSurfaceTransform: function(gfx) {
		var extent = gfx.__extentWithFilters;
		var fm = this.transform.__getFullMatrix(null);
		fm.__translateTransformed(extent.get_topLeft());
		return fm;
	}
	,getScreenBounds: function() {
		if(this.get__boundsInvalid()) this.validateBounds();
		return this.__boundsRect.clone();
	}
	,getRect: function(targetCoordinateSpace) {
		return this.getBounds(targetCoordinateSpace);
	}
	,getBounds: function(targetCoordinateSpace) {
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		if(this.get__boundsInvalid()) this.validateBounds();
		var m = this.transform.__getFullMatrix(null);
		if(targetCoordinateSpace != null) m.concat(targetCoordinateSpace.transform.__getFullMatrix(null).invert());
		var rect = this.__boundsRect.transform(m);
		return rect;
	}
	,drawToSurface: function(inSurface,matrix,inColorTransform,blendMode,clipRect,smoothing) {
		var oldAlpha = this.alpha;
		this.alpha = 1;
		this.__render(inSurface,clipRect);
		this.alpha = oldAlpha;
	}
	,dispatchEvent: function(event) {
		var result = this.__dispatchEvent(event);
		if(event.__getIsCancelled()) return true;
		if(event.bubbles && this.parent != null) this.parent.dispatchEvent(event);
		return result;
	}
	,__class__: flash.display.DisplayObject
	,__properties__: {set_filters:"set_filters",get_filters:"get_filters",set_height:"set_height",get_height:"get_height",set_mask:"set_mask",get_mask:"get_mask",get_mouseX:"get_mouseX",get_mouseY:"get_mouseY",set_parent:"set_parent",set_rotation:"set_rotation",get_rotation:"get_rotation",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scrollRect:"set_scrollRect",get_scrollRect:"get_scrollRect",get_stage:"get_stage",set_transform:"set_transform",set_visible:"set_visible",get_visible:"get_visible",set_width:"set_width",get_width:"get_width",set_x:"set_x",get_x:"get_x",set_y:"set_y",get_y:"get_y",set___combinedVisible:"set___combinedVisible",get__bottommostSurface:"get__bottommostSurface",get__boundsInvalid:"get__boundsInvalid",get__matrixChainInvalid:"get__matrixChainInvalid",get__matrixInvalid:"get__matrixInvalid",get__topmostSurface:"get__topmostSurface"}
});
flash.display.InteractiveObject = function() {
	flash.display.DisplayObject.call(this);
	this.tabEnabled = false;
	this.mouseEnabled = true;
	this.doubleClickEnabled = true;
	this.set_tabIndex(0);
};
$hxClasses["flash.display.InteractiveObject"] = flash.display.InteractiveObject;
flash.display.InteractiveObject.__name__ = ["flash","display","InteractiveObject"];
flash.display.InteractiveObject.__super__ = flash.display.DisplayObject;
flash.display.InteractiveObject.prototype = $extend(flash.display.DisplayObject.prototype,{
	set_tabIndex: function(inIndex) {
		return this.__tabIndex = inIndex;
	}
	,get_tabIndex: function() {
		return this.__tabIndex;
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.mouseEnabled) return null; else return flash.display.DisplayObject.prototype.__getObjectUnderPoint.call(this,point);
	}
	,toString: function() {
		return "[InteractiveObject name=" + this.name + " id=" + this.___id + "]";
	}
	,__class__: flash.display.InteractiveObject
	,__properties__: $extend(flash.display.DisplayObject.prototype.__properties__,{set_tabIndex:"set_tabIndex",get_tabIndex:"get_tabIndex"})
});
flash.display.DisplayObjectContainer = function() {
	this.__children = new Array();
	this.mouseChildren = true;
	this.tabChildren = true;
	flash.display.InteractiveObject.call(this);
	this.__combinedAlpha = this.alpha;
};
$hxClasses["flash.display.DisplayObjectContainer"] = flash.display.DisplayObjectContainer;
flash.display.DisplayObjectContainer.__name__ = ["flash","display","DisplayObjectContainer"];
flash.display.DisplayObjectContainer.__super__ = flash.display.InteractiveObject;
flash.display.DisplayObjectContainer.prototype = $extend(flash.display.InteractiveObject.prototype,{
	set_scrollRect: function(inValue) {
		inValue = flash.display.InteractiveObject.prototype.set_scrollRect.call(this,inValue);
		this.__unifyChildrenWithDOM();
		return inValue;
	}
	,set_visible: function(inVal) {
		this.set___combinedVisible(this.parent != null?this.parent.__combinedVisible && inVal:inVal);
		return flash.display.InteractiveObject.prototype.set_visible.call(this,inVal);
	}
	,get_numChildren: function() {
		return this.__children.length;
	}
	,set___combinedVisible: function(inVal) {
		if(inVal != this.__combinedVisible) {
			var _g = 0, _g1 = this.__children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.set___combinedVisible(child.get_visible() && inVal);
			}
		}
		return flash.display.InteractiveObject.prototype.set___combinedVisible.call(this,inVal);
	}
	,set_filters: function(filters) {
		flash.display.InteractiveObject.prototype.set_filters.call(this,filters);
		var _g = 0, _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_filters(filters);
		}
		return filters;
	}
	,__unifyChildrenWithDOM: function(lastMoveObj) {
		var obj = flash.display.InteractiveObject.prototype.__unifyChildrenWithDOM.call(this,lastMoveObj);
		var _g = 0, _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			obj = child.__unifyChildrenWithDOM(obj);
			if(child.get_scrollRect() != null) obj = child;
		}
		return obj;
	}
	,__swapSurface: function(c1,c2) {
		if(this.__children[c1] == null) throw "Null element at index " + c1 + " length " + this.__children.length;
		if(this.__children[c2] == null) throw "Null element at index " + c2 + " length " + this.__children.length;
		var gfx1 = this.__children[c1].__getGraphics();
		var gfx2 = this.__children[c2].__getGraphics();
		if(gfx1 != null && gfx2 != null) {
			var surface1 = this.__children[c1].__scrollRect == null?gfx1.__surface:this.__children[c1].__getSrWindow();
			var surface2 = this.__children[c2].__scrollRect == null?gfx2.__surface:this.__children[c2].__getSrWindow();
			if(surface1 != null && surface2 != null) flash.Lib.__swapSurface(surface1,surface2);
		}
	}
	,__render: function(inMask,clipRect) {
		if(!this.__visible) return;
		if(clipRect == null && this.__scrollRect != null) clipRect = this.__scrollRect;
		flash.display.InteractiveObject.prototype.__render.call(this,inMask,clipRect);
		this.__combinedAlpha = this.parent != null?this.parent.__combinedAlpha * this.alpha:this.alpha;
		var _g = 0, _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.__visible) {
				if(clipRect != null) {
					if((child.___renderFlags & 4) != 0 || (child.___renderFlags & 8) != 0) child.__validateMatrix();
				}
				child.__render(inMask,clipRect);
			}
		}
		if(this.__addedChildren) {
			this.__unifyChildrenWithDOM();
			this.__addedChildren = false;
		}
	}
	,__removeFromStage: function() {
		flash.display.InteractiveObject.prototype.__removeFromStage.call(this);
		var _g = 0, _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__removeFromStage();
		}
	}
	,__removeChild: function(child) {
		HxOverrides.remove(this.__children,child);
		child.__removeFromStage();
		child.set_parent(null);
		return child;
	}
	,__invalidateMatrix: function(local) {
		if(local == null) local = false;
		if(!((this.___renderFlags & 8) != 0) && !((this.___renderFlags & 4) != 0)) {
			var _g = 0, _g1 = this.__children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.__invalidateMatrix();
			}
		}
		flash.display.InteractiveObject.prototype.__invalidateMatrix.call(this,local);
	}
	,__getObjectsUnderPoint: function(point,stack) {
		var l = this.__children.length - 1;
		var _g1 = 0, _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			var result = this.__children[l - i].__getObjectUnderPoint(point);
			if(result != null) stack.push(result);
		}
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.get_visible()) return null;
		var l = this.__children.length - 1;
		var _g1 = 0, _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			var result = null;
			if(this.mouseEnabled) result = this.__children[l - i].__getObjectUnderPoint(point);
			if(result != null) return this.mouseChildren?result:this;
		}
		return flash.display.InteractiveObject.prototype.__getObjectUnderPoint.call(this,point);
	}
	,__contains: function(child) {
		if(child == null) return false;
		if(this == child) return true;
		var _g = 0, _g1 = this.__children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c == child || c.__contains(child)) return true;
		}
		return false;
	}
	,__broadcast: function(event) {
		var _g = 0, _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__broadcast(event);
		}
		this.dispatchEvent(event);
	}
	,__addToStage: function(newParent,beforeSibling) {
		flash.display.InteractiveObject.prototype.__addToStage.call(this,newParent,beforeSibling);
		var _g = 0, _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.__getGraphics() == null || !child.__isOnStage()) child.__addToStage(this);
		}
	}
	,validateBounds: function() {
		if(this.get__boundsInvalid()) {
			flash.display.InteractiveObject.prototype.validateBounds.call(this);
			var _g = 0, _g1 = this.__children;
			while(_g < _g1.length) {
				var obj = _g1[_g];
				++_g;
				if(obj.get_visible()) {
					var r = obj.getBounds(this);
					if(r.width != 0 || r.height != 0) {
						if(this.__boundsRect.width == 0 && this.__boundsRect.height == 0) this.__boundsRect = r.clone(); else this.__boundsRect.extendBounds(r);
					}
				}
			}
			if(this.scale9Grid != null) {
				this.__boundsRect.width *= this.__scaleX;
				this.__boundsRect.height *= this.__scaleY;
				this.__width = this.__boundsRect.width;
				this.__height = this.__boundsRect.height;
			} else {
				this.__width = this.__boundsRect.width * this.__scaleX;
				this.__height = this.__boundsRect.height * this.__scaleY;
			}
		}
	}
	,toString: function() {
		return "[DisplayObjectContainer name=" + this.name + " id=" + this.___id + "]";
	}
	,swapChildrenAt: function(child1,child2) {
		var swap = this.__children[child1];
		this.__children[child1] = this.__children[child2];
		this.__children[child2] = swap;
		swap = null;
	}
	,swapChildren: function(child1,child2) {
		var c1 = -1;
		var c2 = -1;
		var swap;
		var _g1 = 0, _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.__children[i] == child1) c1 = i; else if(this.__children[i] == child2) c2 = i;
		}
		if(c1 != -1 && c2 != -1) {
			swap = this.__children[c1];
			this.__children[c1] = this.__children[c2];
			this.__children[c2] = swap;
			swap = null;
			this.__swapSurface(c1,c2);
			child1.__unifyChildrenWithDOM();
			child2.__unifyChildrenWithDOM();
		}
	}
	,setChildIndex: function(child,index) {
		if(index > this.__children.length) throw "Invalid index position " + index;
		var oldIndex = this.getChildIndex(child);
		if(oldIndex < 0) {
			var msg = "setChildIndex : object " + child.name + " not found.";
			if(child.parent == this) {
				var realindex = -1;
				var _g1 = 0, _g = this.__children.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(this.__children[i] == child) {
						realindex = i;
						break;
					}
				}
				if(realindex != -1) msg += "Internal error: Real child index was " + Std.string(realindex); else msg += "Internal error: Child was not in __children array!";
			}
			throw msg;
		}
		if(index < oldIndex) {
			var i = oldIndex;
			while(i > index) {
				this.swapChildren(this.__children[i],this.__children[i - 1]);
				i--;
			}
		} else if(oldIndex < index) {
			var i = oldIndex;
			while(i < index) {
				this.swapChildren(this.__children[i],this.__children[i + 1]);
				i++;
			}
		}
	}
	,removeChildAt: function(index) {
		if(index >= 0 && index < this.__children.length) return this.__removeChild(this.__children[index]);
		throw "removeChildAt(" + index + ") : none found?";
	}
	,removeChild: function(inChild) {
		var _g = 0, _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child == inChild) return (function($this) {
				var $r;
				HxOverrides.remove($this.__children,child);
				child.__removeFromStage();
				child.set_parent(null);
				$r = child;
				return $r;
			}(this));
		}
		throw "removeChild : none found?";
	}
	,getObjectsUnderPoint: function(point) {
		var result = new Array();
		this.__getObjectsUnderPoint(point,result);
		return result;
	}
	,getChildIndex: function(inChild) {
		var _g1 = 0, _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.__children[i] == inChild) return i;
		}
		return -1;
	}
	,getChildByName: function(inName) {
		var _g = 0, _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.name == inName) return child;
		}
		return null;
	}
	,getChildAt: function(index) {
		if(index >= 0 && index < this.__children.length) return this.__children[index];
		throw "getChildAt : index out of bounds " + index + "/" + this.__children.length;
		return null;
	}
	,contains: function(child) {
		return this.__contains(child);
	}
	,addChildAt: function(object,index) {
		if(index > this.__children.length || index < 0) throw "Invalid index position " + index;
		this.__addedChildren = true;
		if(object.parent == this) {
			this.setChildIndex(object,index);
			return object;
		}
		if(index == this.__children.length) return this.addChild(object); else {
			if(this.__isOnStage()) object.__addToStage(this,this.__children[index]);
			this.__children.splice(index,0,object);
			object.set_parent(this);
		}
		return object;
	}
	,addChild: function(object) {
		if(object == null) throw "DisplayObjectContainer asked to add null child object";
		if(object == this) throw "Adding to self";
		this.__addedChildren = true;
		if(object.parent == this) {
			this.setChildIndex(object,this.__children.length - 1);
			return object;
		}
		object.set_parent(this);
		if(this.__isOnStage()) object.__addToStage(this);
		if(this.__children == null) this.__children = new Array();
		this.__children.push(object);
		return object;
	}
	,__class__: flash.display.DisplayObjectContainer
	,__properties__: $extend(flash.display.InteractiveObject.prototype.__properties__,{get_numChildren:"get_numChildren"})
});
flash.display.Sprite = function() {
	flash.display.DisplayObjectContainer.call(this);
	this.__graphics = new flash.display.Graphics();
	this.buttonMode = false;
};
$hxClasses["flash.display.Sprite"] = flash.display.Sprite;
flash.display.Sprite.__name__ = ["flash","display","Sprite"];
flash.display.Sprite.__super__ = flash.display.DisplayObjectContainer;
flash.display.Sprite.prototype = $extend(flash.display.DisplayObjectContainer.prototype,{
	set_useHandCursor: function(cursor) {
		if(cursor == this.useHandCursor) return cursor;
		if(this.__cursorCallbackOver != null) this.removeEventListener(flash.events.MouseEvent.ROLL_OVER,this.__cursorCallbackOver);
		if(this.__cursorCallbackOut != null) this.removeEventListener(flash.events.MouseEvent.ROLL_OUT,this.__cursorCallbackOut);
		if(!cursor) flash.Lib.__setCursor(flash._Lib.CursorType.Default); else {
			this.__cursorCallbackOver = function(_) {
				flash.Lib.__setCursor(flash._Lib.CursorType.Pointer);
			};
			this.__cursorCallbackOut = function(_) {
				flash.Lib.__setCursor(flash._Lib.CursorType.Default);
			};
			this.addEventListener(flash.events.MouseEvent.ROLL_OVER,this.__cursorCallbackOver);
			this.addEventListener(flash.events.MouseEvent.ROLL_OUT,this.__cursorCallbackOut);
		}
		this.useHandCursor = cursor;
		return cursor;
	}
	,get_graphics: function() {
		return this.__graphics;
	}
	,get_dropTarget: function() {
		return this.__dropTarget;
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,toString: function() {
		return "[Sprite name=" + this.name + " id=" + this.___id + "]";
	}
	,stopDrag: function() {
		if(this.__isOnStage()) {
			this.get_stage().__stopDrag(this);
			var l = this.parent.__children.length - 1;
			var obj = this.get_stage();
			var _g1 = 0, _g = this.parent.__children.length;
			while(_g1 < _g) {
				var i = _g1++;
				var result = this.parent.__children[l - i].__getObjectUnderPoint(new flash.geom.Point(this.get_stage().get_mouseX(),this.get_stage().get_mouseY()));
				if(result != null) obj = result;
			}
			if(obj != this) this.__dropTarget = obj; else this.__dropTarget = this.get_stage();
		}
	}
	,startDrag: function(lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
		if(this.__isOnStage()) this.get_stage().__startDrag(this,lockCenter,bounds);
	}
	,__class__: flash.display.Sprite
	,__properties__: $extend(flash.display.DisplayObjectContainer.prototype.__properties__,{get_dropTarget:"get_dropTarget",get_graphics:"get_graphics",set_useHandCursor:"set_useHandCursor"})
});
var BasicApplication = function() {
	flash.display.Sprite.call(this);
	this.rotY = 0;
	this.addEventListener(flash.events.Event.ADDED_TO_STAGE,$bind(this,this.onAddedToStage));
};
$hxClasses["BasicApplication"] = BasicApplication;
BasicApplication.__name__ = ["BasicApplication"];
BasicApplication.__super__ = flash.display.Sprite;
BasicApplication.prototype = $extend(flash.display.Sprite.prototype,{
	onResize: function(event) {
		this.view.set_x(0);
		this.view.set_y(0);
		this.view.set_width(this.get_stage().get_stageWidth());
		this.view.set_height(this.get_stage().get_stageHeight());
	}
	,render: function() {
		this.rotY += 1;
		this._plane.set_rotationY(this.rotY);
		this.view.render();
	}
	,onEnterFrame: function(event) {
		this.render();
	}
	,initListeners: function() {
		this.addEventListener(flash.events.Event.ENTER_FRAME,$bind(this,this.onEnterFrame));
		this.get_stage().addEventListener(flash.events.Event.RESIZE,$bind(this,this.onResize));
		this.onResize();
	}
	,initObjects: function() {
		var logo = openfl.Assets.getBitmapData("assets/hxlogo.png");
		var material = new away3d.materials.TextureMaterial(new away3d.textures.BitmapTexture(logo),false);
		this._plane = new away3d.entities.Mesh(new away3d.primitives.CubeGeometry(100,100,100),material);
		this.view.get_scene().addChild(this._plane);
	}
	,initEngine: function() {
		this.get_stage().scaleMode = flash.display.StageScaleMode.NO_SCALE;
		this.get_stage().align = flash.display.StageAlign.TOP_LEFT;
		this._stage3DManager = away3d.core.managers.Stage3DManager.getInstance(this.get_stage());
		this._stage3DProxy = this._stage3DManager.getFreeStage3DProxy();
		this.view = new away3d.containers.View3D();
		this.view.set_stage3DProxy(this._stage3DProxy);
		this.scene = this.view.get_scene();
		this.camera = this.view.get_camera();
		this.view.get_camera().set_z(-600);
		this.view.get_camera().set_y(500);
		this.view.get_camera().lookAt(new flash.geom.Vector3D());
		this.initObjects();
		this.initListeners();
	}
	,init: function() {
		this.set_width(800);
		this.set_height(480);
		this.initEngine();
	}
	,onAddedToStage: function(e) {
		this.removeEventListener(flash.events.Event.ADDED_TO_STAGE,$bind(this,this.onAddedToStage));
		this.init();
	}
	,__class__: BasicApplication
});
var DocumentClass = function() {
	BasicApplication.call(this);
};
$hxClasses["DocumentClass"] = DocumentClass;
DocumentClass.__name__ = ["DocumentClass"];
DocumentClass.__super__ = BasicApplication;
DocumentClass.prototype = $extend(BasicApplication.prototype,{
	get_stage: function() {
		return flash.Lib.get_current().get_stage();
	}
	,__class__: DocumentClass
});
var openfl = {}
openfl.AssetLibrary = function() {
};
$hxClasses["openfl.AssetLibrary"] = openfl.AssetLibrary;
openfl.AssetLibrary.__name__ = ["openfl","AssetLibrary"];
openfl.AssetLibrary.prototype = {
	loadSound: function(id,handler) {
		handler(this.getSound(id));
	}
	,loadMusic: function(id,handler) {
		handler(this.getMusic(id));
	}
	,loadMovieClip: function(id,handler) {
		handler(this.getMovieClip(id));
	}
	,loadFont: function(id,handler) {
		handler(this.getFont(id));
	}
	,loadBytes: function(id,handler) {
		handler(this.getBytes(id));
	}
	,loadBitmapData: function(id,handler) {
		handler(this.getBitmapData(id));
	}
	,load: function(handler) {
		handler(this);
	}
	,isLocal: function(id,type) {
		return true;
	}
	,getSound: function(id) {
		return null;
	}
	,getPath: function(id) {
		return null;
	}
	,getMusic: function(id) {
		return this.getSound(id);
	}
	,getMovieClip: function(id) {
		return null;
	}
	,getFont: function(id) {
		return null;
	}
	,getBytes: function(id) {
		return null;
	}
	,getBitmapData: function(id) {
		return null;
	}
	,exists: function(id,type) {
		return false;
	}
	,__class__: openfl.AssetLibrary
}
var DefaultAssetLibrary = function() {
	openfl.AssetLibrary.call(this);
	DefaultAssetLibrary.className.set("assets/font/simfang.ttf",__ASSET__assets_font_simfang_ttf);
	var value = Reflect.field(openfl.AssetType,"font".toUpperCase());
	DefaultAssetLibrary.type.set("assets/font/simfang.ttf",value);
	DefaultAssetLibrary.path.set("assets/hxlogo.png","assets/hxlogo.png");
	var value = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/hxlogo.png",value);
	DefaultAssetLibrary.className.set("font/simfang.ttf",__ASSET__font_simfang_ttf);
	var value = Reflect.field(openfl.AssetType,"font".toUpperCase());
	DefaultAssetLibrary.type.set("font/simfang.ttf",value);
};
$hxClasses["DefaultAssetLibrary"] = DefaultAssetLibrary;
DefaultAssetLibrary.__name__ = ["DefaultAssetLibrary"];
DefaultAssetLibrary.__super__ = openfl.AssetLibrary;
DefaultAssetLibrary.prototype = $extend(openfl.AssetLibrary.prototype,{
	loadSound: function(id,handler) {
		handler(this.getSound(id));
	}
	,loadMusic: function(id,handler) {
		handler(this.getMusic(id));
	}
	,loadFont: function(id,handler) {
		handler(this.getFont(id));
	}
	,loadBytes: function(id,handler) {
		if(DefaultAssetLibrary.path.exists(id)) {
			var loader = new flash.net.URLLoader();
			loader.addEventListener(flash.events.Event.COMPLETE,function(event) {
				var bytes = new flash.utils.ByteArray();
				bytes.writeUTFBytes(event.currentTarget.data);
				bytes.position = 0;
				handler(bytes);
			});
			loader.load(new flash.net.URLRequest(DefaultAssetLibrary.path.get(id)));
		} else handler(this.getBytes(id));
	}
	,loadBitmapData: function(id,handler) {
		if(DefaultAssetLibrary.path.exists(id)) {
			var loader = new flash.display.Loader();
			loader.contentLoaderInfo.addEventListener(flash.events.Event.COMPLETE,function(event) {
				handler((js.Boot.__cast(event.currentTarget.content , flash.display.Bitmap)).bitmapData);
			});
			loader.load(new flash.net.URLRequest(DefaultAssetLibrary.path.get(id)));
		} else handler(this.getBitmapData(id));
	}
	,isLocal: function(id,type) {
		return true;
	}
	,getSound: function(id) {
		return new flash.media.Sound(new flash.net.URLRequest(DefaultAssetLibrary.path.get(id)));
	}
	,getPath: function(id) {
		return DefaultAssetLibrary.path.get(id);
	}
	,getMusic: function(id) {
		return new flash.media.Sound(new flash.net.URLRequest(DefaultAssetLibrary.path.get(id)));
	}
	,getFont: function(id) {
		return js.Boot.__cast(Type.createInstance(DefaultAssetLibrary.className.get(id),[]) , flash.text.Font);
	}
	,getBytes: function(id) {
		var bytes = null;
		var data = ApplicationMain.urlLoaders.get(DefaultAssetLibrary.path.get(id)).data;
		if(js.Boot.__instanceof(data,String)) {
			bytes = new flash.utils.ByteArray();
			bytes.writeUTFBytes(data);
		} else if(js.Boot.__instanceof(data,flash.utils.ByteArray)) bytes = data; else bytes = null;
		if(bytes != null) {
			bytes.position = 0;
			return bytes;
		} else return null;
	}
	,getBitmapData: function(id) {
		return (js.Boot.__cast(ApplicationMain.loaders.get(DefaultAssetLibrary.path.get(id)).contentLoaderInfo.content , flash.display.Bitmap)).bitmapData;
	}
	,exists: function(id,type) {
		var assetType = DefaultAssetLibrary.type.get(id);
		if(assetType != null) {
			if(assetType == type || (type == openfl.AssetType.SOUND || type == openfl.AssetType.MUSIC) && (assetType == openfl.AssetType.MUSIC || assetType == openfl.AssetType.SOUND)) return true;
			if(type == openfl.AssetType.BINARY || type == null) return true;
		}
		return false;
	}
	,__class__: DefaultAssetLibrary
});
flash.text = {}
flash.text.Font = function() {
	this.__metrics = [];
	this.__fontScale = 9.0;
	var className = Type.getClassName(Type.getClass(this));
	if(flash.text.Font.__fontData == null) {
		flash.text.Font.__fontData = [];
		flash.text.Font.__fontData["Bitstream_Vera_Sans"] = haxe.Unserializer.run(flash.text.Font.DEFAULT_FONT_DATA);
	}
	if(className == "flash.text.Font") this.set_fontName("Bitstream_Vera_Sans"); else this.set_fontName(className.split(".").pop());
};
$hxClasses["flash.text.Font"] = flash.text.Font;
flash.text.Font.__name__ = ["flash","text","Font"];
flash.text.Font.enumerateFonts = function(enumerateDeviceFonts) {
	if(enumerateDeviceFonts == null) enumerateDeviceFonts = false;
	return flash.text.Font.__registeredFonts.slice();
}
flash.text.Font.__ofResource = function(resourceName,fontName) {
	if(fontName == null) fontName = "";
	var data = haxe.Unserializer.run(haxe.Resource.getString(resourceName));
	if(data == null) {
	} else {
		if(fontName == "") {
			flash.text.Font.__fontData[resourceName] = data.hash;
			fontName = data.fontName;
		}
		flash.text.Font.__fontData[data.fontName] = data.hash;
	}
	return fontName;
}
flash.text.Font.registerFont = function(font) {
	var instance = js.Boot.__cast(Type.createInstance(font,[]) , flash.text.Font);
	if(instance != null) {
		if(Reflect.hasField(font,"resourceName")) instance.set_fontName(flash.text.Font.__ofResource(Reflect.field(font,"resourceName")));
		flash.text.Font.__registeredFonts.push(instance);
	}
}
flash.text.Font.prototype = {
	set_fontName: function(name) {
		if(name == "_sans" || name == "_serif" || name == "_typewriter") name = "Bitstream_Vera_Sans";
		this.fontName = name;
		if(flash.text.Font.__fontData[this.fontName] == null) try {
			flash.text.Font.__ofResource(name);
		} catch( e ) {
			this.fontName = "Bitstream_Vera_Sans";
		}
		if(flash.text.Font.__fontData[this.fontName] != null) try {
			this.__glyphData = flash.text.Font.__fontData[this.fontName];
		} catch( e ) {
			this.fontName = "Bitstream_Vera_Sans";
		}
		return name;
	}
	,__setScale: function(scale) {
		this.__fontScale = scale / 1024;
	}
	,__render: function(graphics,inChar,inX,inY,inOutline) {
		var index = 0;
		var glyph = this.__glyphData.get(inChar);
		if(glyph == null) return;
		var commands = glyph.commands;
		var data = glyph.data;
		var _g = 0;
		while(_g < commands.length) {
			var c = commands[_g];
			++_g;
			switch(c) {
			case 1:
				graphics.moveTo(inX + data[index++] * this.__fontScale,inY + data[index++] * this.__fontScale);
				break;
			case 2:
				graphics.lineTo(inX + data[index++] * this.__fontScale,inY + data[index++] * this.__fontScale);
				break;
			case 3:
				graphics.curveTo(inX + data[index++] * this.__fontScale,inY + data[index++] * this.__fontScale,inX + data[index++] * this.__fontScale,inY + data[index++] * this.__fontScale);
				break;
			}
		}
	}
	,__getAdvance: function(inGlyph,height) {
		var m = this.__metrics[inGlyph];
		if(m == null) {
			var glyph = this.__glyphData.get(inGlyph);
			if(glyph == null) return 0;
			this.__metrics[inGlyph] = m = glyph._width * this.__fontScale | 0;
		}
		if(m == null) return 0;
		return m;
	}
	,hasGlyph: function(str) {
		return this.__glyphData.exists(HxOverrides.cca(str,0));
	}
	,__class__: flash.text.Font
	,__properties__: {set_fontName:"set_fontName"}
}
var __ASSET__assets_font_simfang_ttf = function() {
	flash.text.Font.call(this);
};
$hxClasses["__ASSET__assets_font_simfang_ttf"] = __ASSET__assets_font_simfang_ttf;
__ASSET__assets_font_simfang_ttf.__name__ = ["__ASSET__assets_font_simfang_ttf"];
__ASSET__assets_font_simfang_ttf.__super__ = flash.text.Font;
__ASSET__assets_font_simfang_ttf.prototype = $extend(flash.text.Font.prototype,{
	__class__: __ASSET__assets_font_simfang_ttf
});
var __ASSET__font_simfang_ttf = function() {
	flash.text.Font.call(this);
};
$hxClasses["__ASSET__font_simfang_ttf"] = __ASSET__font_simfang_ttf;
__ASSET__font_simfang_ttf.__name__ = ["__ASSET__font_simfang_ttf"];
__ASSET__font_simfang_ttf.__super__ = flash.text.Font;
__ASSET__font_simfang_ttf.prototype = $extend(flash.text.Font.prototype,{
	__class__: __ASSET__font_simfang_ttf
});
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,matchedPos: function() {
		if(this.r.m == null) throw "No string matched";
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchedRight: function() {
		if(this.r.m == null) throw "No string matched";
		var sz = this.r.m.index + this.r.m[0].length;
		return this.r.s.substr(sz,this.r.s.length - sz);
	}
	,matched: function(n) {
		return this.r.m != null && n >= 0 && n < this.r.m.length?this.r.m[n]:(function($this) {
			var $r;
			throw "EReg::matched";
			return $r;
		}(this));
	}
	,match: function(s) {
		if(this.r.global) this.r.lastIndex = 0;
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
}
var HxOverrides = function() { }
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw "Invalid date format : " + s;
	}
}
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) return undefined;
	return x;
}
HxOverrides.substr = function(s,pos,len) {
	if(pos != null && pos != 0 && len != null && len < 0) return "";
	if(len == null) len = s.length;
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) pos = 0;
	} else if(len < 0) len = s.length + len - pos;
	return s.substr(pos,len);
}
HxOverrides.remove = function(a,obj) {
	var i = 0;
	var l = a.length;
	while(i < l) {
		if(a[i] == obj) {
			a.splice(i,1);
			return true;
		}
		i++;
	}
	return false;
}
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
}
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	iterator: function() {
		return { h : this.h, hasNext : function() {
			return this.h != null;
		}, next : function() {
			if(this.h == null) return null;
			var x = this.h[0];
			this.h = this.h[1];
			return x;
		}};
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,pop: function() {
		if(this.h == null) return null;
		var x = this.h[0];
		this.h = this.h[1];
		if(this.h == null) this.q = null;
		this.length--;
		return x;
	}
	,first: function() {
		return this.h == null?null:this.h[0];
	}
	,push: function(item) {
		var x = [item,this.h];
		this.h = x;
		if(this.q == null) this.q = x;
		this.length++;
	}
	,add: function(item) {
		var x = [item];
		if(this.h == null) this.h = x; else this.q[1] = x;
		this.q = x;
		this.length++;
	}
	,__class__: List
}
var IMap = function() { }
$hxClasses["IMap"] = IMap;
IMap.__name__ = ["IMap"];
var NMEPreloader = function() {
	flash.display.Sprite.call(this);
	var backgroundColor = this.getBackgroundColor();
	var r = backgroundColor >> 16 & 255;
	var g = backgroundColor >> 8 & 255;
	var b = backgroundColor & 255;
	var perceivedLuminosity = 0.299 * r + 0.587 * g + 0.114 * b;
	var color = 0;
	if(perceivedLuminosity < 70) color = 16777215;
	var x = 30;
	var height = 9;
	var y = this.getHeight() / 2 - height / 2;
	var width = this.getWidth() - x * 2;
	var padding = 3;
	this.outline = new flash.display.Sprite();
	this.outline.get_graphics().lineStyle(1,color,0.15,true);
	this.outline.get_graphics().drawRoundRect(0,0,width,height,padding * 2,padding * 2);
	this.outline.set_x(x);
	this.outline.set_y(y);
	this.addChild(this.outline);
	this.progress = new flash.display.Sprite();
	this.progress.get_graphics().beginFill(color,0.35);
	this.progress.get_graphics().drawRect(0,0,width - padding * 2,height - padding * 2);
	this.progress.set_x(x + padding);
	this.progress.set_y(y + padding);
	this.progress.set_scaleX(0);
	this.addChild(this.progress);
};
$hxClasses["NMEPreloader"] = NMEPreloader;
NMEPreloader.__name__ = ["NMEPreloader"];
NMEPreloader.__super__ = flash.display.Sprite;
NMEPreloader.prototype = $extend(flash.display.Sprite.prototype,{
	onUpdate: function(bytesLoaded,bytesTotal) {
		var percentLoaded = bytesLoaded / bytesTotal;
		if(percentLoaded > 1) percentLoaded == 1;
		this.progress.set_scaleX(percentLoaded);
	}
	,onLoaded: function() {
		this.dispatchEvent(new flash.events.Event(flash.events.Event.COMPLETE));
	}
	,onInit: function() {
	}
	,getWidth: function() {
		var width = 800;
		if(width > 0) return width; else return flash.Lib.get_current().get_stage().get_stageWidth();
	}
	,getHeight: function() {
		var height = 500;
		if(height > 0) return height; else return flash.Lib.get_current().get_stage().get_stageHeight();
	}
	,getBackgroundColor: function() {
		return 0;
	}
	,__class__: NMEPreloader
});
var OpenFLStage3D = function() { }
$hxClasses["OpenFLStage3D"] = OpenFLStage3D;
OpenFLStage3D.__name__ = ["OpenFLStage3D"];
OpenFLStage3D.requestAGLSLContext3D = function(stage3D,context3DRenderMode) {
	if(context3DRenderMode == null) context3DRenderMode = "auto";
	if(openfl.display.OpenGLView.get_isSupported()) {
		stage3D.context3D = new flash.display3D.AGLSLContext3D();
		stage3D.dispatchEvent(new flash.events.Event(flash.events.Event.CONTEXT3D_CREATE));
	} else stage3D.dispatchEvent(new flash.events.ErrorEvent(flash.events.ErrorEvent.ERROR));
}
OpenFLStage3D.getStage3D = function(stage,index) {
	if(flash._Vector.Vector_Impl_.get_length(OpenFLStage3D.stage3Ds) > index) return OpenFLStage3D.stage3Ds[index]; else {
		if(index > 0) throw "Only 1 Stage3D supported for now";
		var stage3D = new flash.display.Stage3D();
		OpenFLStage3D.stage3Ds[index] = stage3D;
		return stage3D;
	}
}
OpenFLStage3D.setRenderCallback = function(context3D,func) {
	context3D.setRenderMethod(func);
}
OpenFLStage3D.removeRenderCallback = function(context3D,func) {
	context3D.removeRenderMethod(func);
}
var Reflect = function() { }
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
}
Reflect.field = function(o,field) {
	var v = null;
	try {
		v = o[field];
	} catch( e ) {
	}
	return v;
}
Reflect.getProperty = function(o,field) {
	var tmp;
	return o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + field])?o[tmp]():o[field];
}
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) a.push(f);
		}
	}
	return a;
}
Reflect.isFunction = function(f) {
	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
}
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) return true;
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) return false;
	return f1.scope == f2.scope && f1.method == f2.method && f1.method != null;
}
Reflect.deleteField = function(o,field) {
	if(!Reflect.hasField(o,field)) return false;
	delete(o[field]);
	return true;
}
var Std = function() { }
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js.Boot.__string_rec(s,"");
}
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) v = parseInt(x);
	if(isNaN(v)) return null;
	return v;
}
Std.parseFloat = function(x) {
	return parseFloat(x);
}
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
}
var StringTools = function() { }
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
}
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
}
StringTools.startsWith = function(s,start) {
	return s.length >= start.length && HxOverrides.substr(s,0,start.length) == start;
}
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
}
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	do {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
	} while(n > 0);
	if(digits != null) while(s.length < digits) s = "0" + s;
	return s;
}
var Type = function() { }
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClass = function(o) {
	if(o == null) return null;
	return o.__class__;
}
Type.getClassName = function(c) {
	var a = c.__name__;
	return a.join(".");
}
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) return null;
	return cl;
}
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) return null;
	return e;
}
Type.createInstance = function(cl,args) {
	switch(args.length) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	default:
		throw "Too many arguments";
	}
	return null;
}
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
}
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) throw "No such constructor " + constr;
	if(Reflect.isFunction(f)) {
		if(params == null) throw "Constructor " + constr + " need parameters";
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) throw "Constructor " + constr + " does not need parameters";
	return f;
}
Type.getEnumConstructs = function(e) {
	var a = e.__constructs__;
	return a.slice();
}
var aglsl = {}
aglsl.AGALTokenizer = function() {
};
$hxClasses["aglsl.AGALTokenizer"] = aglsl.AGALTokenizer;
aglsl.AGALTokenizer.__name__ = ["aglsl","AGALTokenizer"];
aglsl.AGALTokenizer.prototype = {
	readReg: function(s,mh,desc,bytes) {
		s.regnum = bytes.readUnsignedShort();
		s.indexoffset = bytes.readByte();
		s.swizzle = bytes.readUnsignedByte();
		s.regtype = bytes.readUnsignedByte();
		desc.regread[s.regtype][s.regnum] = 15;
		if(s.regtype == 5) {
			s.lodbiad = s.indexoffset;
			s.indexoffset = 0;
			s.swizzle = 0;
			s.readmode = bytes.readUnsignedByte();
			s.dim = s.readmode >> 4;
			s.readmode &= 15;
			s.special = bytes.readUnsignedByte();
			s.wrap = s.special >> 4;
			s.special &= 15;
			s.mipmap = bytes.readUnsignedByte();
			s.filter = s.mipmap >> 4;
			s.mipmap &= 15;
			desc.samplers[s.regnum] = s;
		} else {
			s.indexregtype = bytes.readUnsignedByte();
			s.indexselect = bytes.readUnsignedByte();
			s.indirectflag = bytes.readUnsignedByte();
		}
		if(s.indirectflag == 1) desc.hasindirect = true;
		if(s.indirectflag == 0 && mh > 0) {
			var mhi = 0;
			while(mhi < mh) {
				desc.regread[s.regtype][s.regnum + mhi] = desc.regread[s.regtype][s.regnum];
				mhi++;
			}
		}
	}
	,decribeAGALByteArray: function(bytes) {
		var data = [];
		var k = 0;
		while(k < (bytes.length | 0)) {
			data.push(bytes[k]);
			k++;
		}
		var header = new aglsl.Header();
		if(bytes.readUnsignedByte() != 160) throw "Bad AGAL : Missing 0xa0 magic byte.";
		header.version = bytes.readUnsignedInt();
		if(header.version >= 16) {
			bytes.readUnsignedByte();
			header.version >>= 1;
		}
		if(bytes.readUnsignedByte() != 161) throw "Bad AGAL : Missing 0xa1 magic byte.";
		header.progid = bytes.readUnsignedByte();
		var _sw0_ = header.progid;
		switch(_sw0_) {
		case 1:
			header.type = "fragment";
			break;
		case 0:
			header.type = "vertex";
			break;
		case 2:
			header.type = "cpu";
			break;
		default:
			header.type = "";
		}
		var desc = new aglsl.Description();
		var tokens = new Array();
		var agal2glsllut = aglsl.Mapping.get_agal2glsllut();
		while(bytes.position < bytes.length) {
			var token = new aglsl.Token();
			token.opcode = bytes.readUnsignedInt();
			var lutentry = aglsl.Mapping.get_agal2glsllut()[token.opcode];
			if(lutentry == null) throw "Opcode not valid or not implemented yet :  " + token.opcode;
			if(lutentry.matrixheight == 0) desc.hasmatrix = true;
			if(lutentry.dest) {
				token.dest.regnum = bytes.readUnsignedShort();
				token.dest.mask = bytes.readUnsignedByte();
				token.dest.regtype = bytes.readUnsignedByte();
				if(desc.regwrite[token.dest.regtype][token.dest.regnum] == null) desc.regwrite[token.dest.regtype][token.dest.regnum] = token.dest.mask; else desc.regwrite[token.dest.regtype][token.dest.regnum] |= token.dest.mask;
			} else {
				token.dest = null;
				bytes.readUnsignedInt();
			}
			if(lutentry.a) this.readReg(token.a,1,desc,bytes); else {
				token.a = null;
				bytes.readUnsignedInt();
				bytes.readUnsignedInt();
			}
			if(lutentry.b) this.readReg(token.b,lutentry.matrixheight | 0,desc,bytes); else {
				token.b = null;
				bytes.readUnsignedInt();
				bytes.readUnsignedInt();
			}
			tokens.push(token);
		}
		desc.header = header;
		desc.tokens = tokens;
		return desc;
	}
	,__class__: aglsl.AGALTokenizer
}
aglsl.AGLSLCompiler = function() {
};
$hxClasses["aglsl.AGLSLCompiler"] = aglsl.AGLSLCompiler;
aglsl.AGLSLCompiler.__name__ = ["aglsl","AGLSLCompiler"];
aglsl.AGLSLCompiler.prototype = {
	compile: function(programType,source) {
		var agalMiniAssembler = new aglsl.assembler.AGALMiniAssembler();
		var tokenizer = new aglsl.AGALTokenizer();
		var data;
		var concatSource;
		switch(programType) {
		case "vertex":
			concatSource = "part vertex 1 \n" + source + "endpart";
			agalMiniAssembler.assemble(concatSource);
			data = agalMiniAssembler.r.get("vertex").data;
			break;
		case "fragment":
			concatSource = "part fragment 1 \n" + source + "endpart";
			agalMiniAssembler.assemble(concatSource);
			data = agalMiniAssembler.r.get("fragment").data;
			break;
		default:
			throw "Unknown Context3DProgramType";
		}
		var description = tokenizer.decribeAGALByteArray(data);
		var parser = new aglsl.AGLSLParser();
		this.glsl = parser.parse(description);
		return this.glsl;
	}
	,__class__: aglsl.AGLSLCompiler
}
aglsl.AGLSLParser = function() {
};
$hxClasses["aglsl.AGLSLParser"] = aglsl.AGLSLParser;
aglsl.AGLSLParser.__name__ = ["aglsl","AGLSLParser"];
aglsl.AGLSLParser.prototype = {
	sourcetostring: function(s,subline,dwm,isscalar,desc,tag) {
		var swiz = ["x","y","z","w"];
		var r;
		if(s.indirectflag == 1) {
			r = "vcarrr[int(" + this.regtostring(s.indexregtype,s.regnum,desc,tag) + "." + swiz[s.indexselect] + ")";
			var realofs = subline + s.indexoffset;
			if(realofs < 0) r += Std.string(realofs);
			if(realofs > 0) r += "+" + Std.string(realofs);
			r += "]";
		} else r = this.regtostring(s.regtype,s.regnum + subline,desc,tag);
		if(s.regtype == 5) return r;
		if(isscalar) return r + "." + swiz[s.swizzle & 3];
		if(s.swizzle == 228 && dwm == 15) return r;
		r += ".";
		if((dwm & 1) == 1) r += swiz[s.swizzle & 3];
		if((dwm & 2) == 1) r += swiz[s.swizzle >> 2 & 3];
		if((dwm & 4) == 1) r += swiz[s.swizzle >> 4 & 3];
		if((dwm & 8) == 1) r += swiz[s.swizzle >> 6 & 3];
		return r;
	}
	,regtostring: function(regtype,regnum,desc,tag) {
		switch(regtype) {
		case 0:case 1:case 2:case 3:case 4:case 5:case 6:
			switch(regtype) {
			case 0:
				return "va" + regnum;
			}
			switch(regtype) {
			case 1:
				if(desc.hasindirect && desc.header.type == "vertex") return "vcarrr[" + regnum + "]"; else return tag + "c" + regnum;
				break;
			}
			switch(regtype) {
			case 2:
				return tag + "t" + regnum;
			}
			switch(regtype) {
			case 3:
				return desc.header.type == "vertex"?"outpos":"gl_FragColor";
			}
			switch(regtype) {
			case 4:
				return "vi" + regnum;
			}
			switch(regtype) {
			case 5:
				return "fs" + regnum;
			}
			return "tmp_FragDepth";
			throw "Unknown register type";
			break;
		default:
			throw "Unknown register type";
		}
	}
	,parse: function(desc) {
		var header = "";
		var body = "";
		var i = 0;
		header += "precision highp float;\n";
		var tag = desc.header.type.charAt(0);
		if(desc.header.type == "vertex") header += "uniform float yflip;\n";
		if(!desc.hasindirect) {
			i = 0;
			while(i < desc.regread[1].length) {
				if(desc.regread[1][i] > 0) header += "uniform vec4 " + tag + "c" + i + ";\n";
				i++;
			}
		} else header += "uniform vec4 " + tag + "carrr[" + aglsl.Context3D.maxvertexconstants + "];\n";
		i = 0;
		while(i < desc.regread[2].length || i < desc.regwrite[2].length) {
			if(desc.regread[2][i] > 0 || desc.regwrite[2][i] > 0) header += "vec4 " + tag + "t" + i + ";\n";
			i++;
		}
		i = 0;
		while(i < desc.regread[0].length) {
			if(desc.regread[0][i] > 0) header += "attribute vec4 va" + i + ";\n";
			i++;
		}
		i = 0;
		while(i < desc.regread[4].length || i < desc.regwrite[4].length) {
			if(desc.regread[4][i] > 0 || desc.regwrite[4][i] > 0) header += "varying vec4 vi" + i + ";\n";
			i++;
		}
		var samptype = ["2D","Cube","3D",""];
		i = 0;
		while(i < desc.samplers.length) {
			if(desc.samplers[i]) header += "uniform sampler" + samptype[desc.samplers[i].dim & 3] + " fs" + i + ";\n";
			i++;
		}
		if(desc.header.type == "vertex") header += "vec4 outpos;\n";
		if(desc.writedepth) header += "vec4 tmp_FragDepth;\n";
		body += "void main() {\n";
		i = 0;
		while(i < desc.tokens.length) {
			var lutentry = aglsl.Mapping.get_agal2glsllut()[desc.tokens[i].opcode];
			if(lutentry == null) throw "Opcode not valid or not implemented yet: ";
			var sublines = Math.max(lutentry.matrixheight,1) | 0;
			var _g = 0;
			while(_g < sublines) {
				var sl = _g++;
				var line = "  " + lutentry.s;
				var destregstring;
				var destcaststring;
				var destmaskstring;
				if(desc.tokens[i].dest != null) {
					if(lutentry.matrixheight > 0) {
						if((desc.tokens[i].dest.mask >> sl & 1) != 1) continue;
						destregstring = this.regtostring(desc.tokens[i].dest.regtype,desc.tokens[i].dest.regnum,desc,tag);
						destcaststring = "float";
						destmaskstring = ["x","y","z","w"][sl];
						destregstring += "." + destmaskstring;
					} else {
						destregstring = this.regtostring(desc.tokens[i].dest.regtype,desc.tokens[i].dest.regnum,desc,tag);
						if(desc.tokens[i].dest.mask != 15) {
							var ndest = 0;
							destmaskstring = "";
							if((desc.tokens[i].dest.mask & 1) == 1) {
								ndest++;
								destmaskstring += "x";
							}
							if((desc.tokens[i].dest.mask & 2) == 1) {
								ndest++;
								destmaskstring += "y";
							}
							if((desc.tokens[i].dest.mask & 4) == 1) {
								ndest++;
								destmaskstring += "z";
							}
							if((desc.tokens[i].dest.mask & 8) == 1) {
								ndest++;
								destmaskstring += "w";
							}
							destregstring += "." + destmaskstring;
							switch(ndest) {
							case 1:
								destcaststring = "float";
								break;
							case 2:
								destcaststring = "vec2";
								break;
							case 3:
								destcaststring = "vec3";
								break;
							default:
								throw "Unexpected destination mask";
							}
						} else {
							destcaststring = "vec4";
							destmaskstring = "xyzw";
						}
					}
					line = StringTools.replace(line,"%dest",destregstring);
					line = StringTools.replace(line,"%cast",destcaststring);
					line = StringTools.replace(line,"%dm",destmaskstring);
				}
				var dwm = 15;
				if(!lutentry.ndwm && lutentry.dest && desc.tokens[i].dest != null) dwm = desc.tokens[i].dest.mask;
				if(desc.tokens[i].a != null) line = StringTools.replace(line,"%a",this.sourcetostring(desc.tokens[i].a,0,dwm,lutentry.scalar,desc,tag));
				if(desc.tokens[i].b != null) {
					line = StringTools.replace(line,"%b",this.sourcetostring(desc.tokens[i].b,sl,dwm,lutentry.scalar,desc,tag));
					if(desc.tokens[i].b.regtype == 5) {
						var texdim = ["2D","Cube","3D"][desc.tokens[i].b.dim];
						var texsize = ["vec2","vec3","vec3"][desc.tokens[i].b.dim];
						line = StringTools.replace(line,"%texdim",texdim);
						line = StringTools.replace(line,"%texsize",texsize);
						var texlod = "";
						line = StringTools.replace(line,"%lod",texlod);
					}
				}
				body += line;
			}
			i++;
		}
		if(desc.header.type == "vertex") body += "  gl_Position = vec4(outpos.x, yflip*outpos.y, outpos.z*2.0 - outpos.w, outpos.w);\n";
		if(desc.writedepth) body += "  gl_FragDepth = clamp(tmp_FragDepth,0.0,1.0);\n";
		body += "}\n";
		return header + body;
	}
	,__class__: aglsl.AGLSLParser
}
aglsl.Sampler = function() {
	this.lodbias = 0;
	this.dim = 0;
	this.readmode = 0;
	this.special = 0;
	this.wrap = 0;
	this.mipmap = 0;
	this.filter = 0;
};
$hxClasses["aglsl.Sampler"] = aglsl.Sampler;
aglsl.Sampler.__name__ = ["aglsl","Sampler"];
aglsl.Sampler.prototype = {
	__class__: aglsl.Sampler
}
aglsl.Context3D = function() {
};
$hxClasses["aglsl.Context3D"] = aglsl.Context3D;
aglsl.Context3D.__name__ = ["aglsl","Context3D"];
aglsl.Context3D.prototype = {
	__class__: aglsl.Context3D
}
aglsl.Description = function() {
	this.regread = [[],[],[],[],[],[],[]];
	this.regwrite = [[],[],[],[],[],[],[]];
	this.hasindirect = false;
	this.writedepth = false;
	this.hasmatrix = false;
	this.samplers = [];
	this.tokens = [];
	this.header = new aglsl.Header();
};
$hxClasses["aglsl.Description"] = aglsl.Description;
aglsl.Description.__name__ = ["aglsl","Description"];
aglsl.Description.prototype = {
	__class__: aglsl.Description
}
aglsl.Destination = function() {
	this.mask = 0;
	this.regnum = 0;
	this.regtype = 0;
	this.dim = 0;
};
$hxClasses["aglsl.Destination"] = aglsl.Destination;
aglsl.Destination.__name__ = ["aglsl","Destination"];
aglsl.Destination.prototype = {
	__class__: aglsl.Destination
}
aglsl.Header = function() {
	this.progid = 0;
	this.version = 0;
	this.type = "";
};
$hxClasses["aglsl.Header"] = aglsl.Header;
aglsl.Header.__name__ = ["aglsl","Header"];
aglsl.Header.prototype = {
	__class__: aglsl.Header
}
aglsl.Mapping = function() { }
$hxClasses["aglsl.Mapping"] = aglsl.Mapping;
aglsl.Mapping.__name__ = ["aglsl","Mapping"];
aglsl.Mapping.__properties__ = {get_agal2glsllut:"get_agal2glsllut"}
aglsl.Mapping.get_agal2glsllut = function() {
	if(aglsl.Mapping._agal2glsllut == null) aglsl.Mapping._agal2glsllut = [new aglsl.OpLUT("%dest = %cast(%a);\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(%a + %b);\n",0,true,true,true,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(%a - %b);\n",0,true,true,true,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(%a * %b);\n",0,true,true,true,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(%a / %b);\n",0,true,true,true,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(1.0) / %a;\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(min(%a,%b));\n",0,true,true,true,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(max(%a,%b));\n",0,true,true,true,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(fract(%a));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(sqrt(abs(%a)));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(inversesqrt(abs(%a)));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(pow(abs(%a),%b));\n",0,true,true,true,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(log2(abs(%a)));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(exp2(%a));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(normalize(vec3( %a ) ));\n",0,true,true,false,null,null,true,null,null,null),new aglsl.OpLUT("%dest = %cast(sin(%a));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(cos(%a));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(cross(vec3(%a),vec3(%b)));\n",0,true,true,true,null,null,true,null,null,null),new aglsl.OpLUT("%dest = %cast(dot(vec3(%a),vec3(%b)));\n",0,true,true,true,null,null,true,null,null,null),new aglsl.OpLUT("%dest = %cast(dot(vec4(%a),vec4(%b)));\n",0,true,true,true,null,null,true,null,null,null),new aglsl.OpLUT("%dest = %cast(abs(%a));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(%a * -1.0);\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(clamp(%a,0.0,1.0));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(dot(vec3(%a),vec3(%b)));\n",null,true,true,true,3,3,true,null,null,null),new aglsl.OpLUT("%dest = %cast(dot(vec4(%a),vec4(%b)));\n",null,true,true,true,4,4,true,null,null,null),new aglsl.OpLUT("%dest = %cast(dot(vec4(%a),vec4(%b)));\n",null,true,true,true,4,3,true,null,null,null),new aglsl.OpLUT("%dest = %cast(dFdx(%a));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(dFdx(%a));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("if (float(%a)==float(%b)) {;\n",0,false,true,true,null,null,null,true,null,null),new aglsl.OpLUT("if (float(%a)!=float(%b)) {;\n",0,false,true,true,null,null,null,true,null,null),new aglsl.OpLUT("if (float(%a)>=float(%b)) {;\n",0,false,true,true,null,null,null,true,null,null),new aglsl.OpLUT("if (float(%a)<float(%b)) {;\n",0,false,true,true,null,null,null,true,null,null),new aglsl.OpLUT("} else {;\n",0,false,false,false,null,null,null,null,null,null),new aglsl.OpLUT("};\n",0,false,false,false,null,null,null,null,null,null),new aglsl.OpLUT(null,null,null,null,false,null,null,null,null,null,null),new aglsl.OpLUT(null,null,null,null,false,null,null,null,null,null,null),new aglsl.OpLUT(null,null,null,null,false,null,null,null,null,null,null),new aglsl.OpLUT(null,null,null,null,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(texture%texdimLod(%b,%texsize(%a)).%dm);\n",null,true,true,true,null,null,null,null,true,null),new aglsl.OpLUT("if ( float(%a)<0.0 ) discard;\n",null,false,true,false,null,null,null,true,null,null),new aglsl.OpLUT("%dest = %cast(texture%texdim(%b,%texsize(%a)%lod).%dm);\n",null,true,true,true,null,null,true,null,true,true),new aglsl.OpLUT("%dest = %cast(greaterThanEqual(%a,%b).%dm);\n",0,true,true,true,null,null,true,null,true,null),new aglsl.OpLUT("%dest = %cast(lessThan(%a,%b).%dm);\n",0,true,true,true,null,null,true,null,true,null),new aglsl.OpLUT("%dest = %cast(sign(%a));\n",0,true,true,false,null,null,null,null,null,null),new aglsl.OpLUT("%dest = %cast(equal(%a,%b).%dm);\n",0,true,true,true,null,null,true,null,true,null),new aglsl.OpLUT("%dest = %cast(notEqual(%a,%b).%dm);\n",0,true,true,true,null,null,true,null,true,null)];
	return aglsl.Mapping._agal2glsllut;
}
aglsl.OpLUT = function(s,flags,dest,a,b,matrixwidth,matrixheight,ndwm,scaler,dm,lod) {
	if(lod == null) lod = false;
	if(dm == null) dm = false;
	if(scaler == null) scaler = false;
	if(ndwm == null) ndwm = false;
	if(matrixheight == null) matrixheight = 0;
	if(matrixwidth == null) matrixwidth = 0;
	if(b == null) b = false;
	if(a == null) a = false;
	if(dest == null) dest = false;
	if(flags == null) flags = 0;
	this.s = s;
	this.flags = flags;
	this.dest = dest;
	this.a = a;
	this.b = b;
	this.matrixwidth = matrixwidth;
	this.matrixheight = matrixheight;
	this.ndwm = ndwm;
	this.scalar = scaler;
	this.dm = dm;
	this.lod = lod;
};
$hxClasses["aglsl.OpLUT"] = aglsl.OpLUT;
aglsl.OpLUT.__name__ = ["aglsl","OpLUT"];
aglsl.OpLUT.prototype = {
	__class__: aglsl.OpLUT
}
aglsl.Token = function() {
	this.dest = new aglsl.Destination();
	this.opcode = 0;
	this.a = new aglsl.Destination();
	this.b = new aglsl.Destination();
};
$hxClasses["aglsl.Token"] = aglsl.Token;
aglsl.Token.__name__ = ["aglsl","Token"];
aglsl.Token.prototype = {
	__class__: aglsl.Token
}
aglsl.assembler = {}
aglsl.assembler.AGALMiniAssembler = function() {
	this.r = new haxe.ds.StringMap();
	this.cur = new aglsl.assembler.Part();
};
$hxClasses["aglsl.assembler.AGALMiniAssembler"] = aglsl.assembler.AGALMiniAssembler;
aglsl.assembler.AGALMiniAssembler.__name__ = ["aglsl","assembler","AGALMiniAssembler"];
aglsl.assembler.AGALMiniAssembler.prototype = {
	addHeader: function(partname,version) {
		if(version == 0) version = 1;
		if(this.r.exists(partname) == false) {
			this.r.set(partname,new aglsl.assembler.Part(partname,version));
			this.emitHeader(this.r.get(partname));
		} else if(this.r.get(partname).version != version) throw "Multiple versions for part " + partname;
		this.cur = this.r.get(partname);
	}
	,emitSource: function(pr,token,opsrc) {
		var tmp = new EReg("vc\\[(v[tcai])(\\d+)\\.([xyzw])([\\+\\-]\\d+)?\\](\\.[xyzw]{1,4})?","i");
		var indexed = aglsl.assembler.ERegTools.match(token,tmp,4);
		var reg;
		if(indexed.length > 0) {
			if(!aglsl.assembler.RegMap.get_map().exists(indexed[1])) return false;
			var selindex = { x : 0, y : 1, z : 2, w : 3};
			var em = { num : Std.parseInt(indexed[2]) | 0, code : aglsl.assembler.RegMap.get_map().get(indexed[1]).code, swizzle : this.stringToSwizzle(indexed[5]), select : Reflect.field(selindex,indexed[3]), offset : Std.parseInt(indexed[4]) | 0};
			pr.data.writeShort(em.num);
			pr.data.writeByte(em.offset);
			pr.data.writeByte(em.swizzle);
			pr.data.writeByte(1);
			pr.data.writeByte(em.code);
			pr.data.writeByte(em.select);
			pr.data.writeByte(128);
		} else {
			tmp = new EReg("([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?","i");
			reg = aglsl.assembler.ERegTools.match(token,tmp,3);
			if(!aglsl.assembler.RegMap.get_map().exists(reg[1])) return false;
			var em = { num : Std.parseInt(reg[2]) | 0, code : aglsl.assembler.RegMap.get_map().get(reg[1]).code, swizzle : this.stringToSwizzle(reg[3])};
			pr.data.writeShort(em.num);
			pr.data.writeByte(0);
			pr.data.writeByte(em.swizzle);
			pr.data.writeByte(em.code);
			pr.data.writeByte(0);
			pr.data.writeByte(0);
			pr.data.writeByte(0);
		}
		return true;
	}
	,emitSampler: function(pr,token,opsrc,opts) {
		var tmp = new EReg("fs(\\d*)","i");
		var reg = aglsl.assembler.ERegTools.match(token,tmp);
		if(reg.length < 1) return false;
		if(reg[1] == null) reg[1] = "0";
		pr.data.writeShort(Std.parseInt(reg[1]));
		pr.data.writeByte(0);
		pr.data.writeByte(0);
		var samplerbits = 5;
		var sampleroptset = 0;
		var i = 0;
		while(i < opts.length) {
			var o = js.Boot.__cast(aglsl.assembler.SamplerMap.get_map().get(opts[i].toLowerCase()) , aglsl.assembler.Sampler);
			if(o != null) {
				if((sampleroptset >> o.shift & o.mask) != 0) {
				}
				sampleroptset |= o.mask << o.shift;
				samplerbits &= ~(o.mask << o.shift);
				samplerbits |= o.value << o.shift;
			} else {
			}
			i++;
		}
		pr.data.writeUnsignedInt(samplerbits);
		return true;
	}
	,stringToSwizzle: function(s) {
		if(s == null) return 228;
		var chartoindex = { x : 0, y : 1, z : 2, w : 3};
		var sw = 0;
		if(s.charAt(0) != ".") throw "Missing . for swizzle";
		if(s.length > 1) sw |= Reflect.field(chartoindex,s.charAt(1));
		if(s.length > 2) sw |= Reflect.field(chartoindex,s.charAt(2)) << 2; else sw |= (sw & 3) << 2;
		if(s.length > 3) sw |= Reflect.field(chartoindex,s.charAt(3)) << 4; else sw |= (sw & 12) << 2;
		if(s.length > 4) sw |= Reflect.field(chartoindex,s.charAt(4)) << 6; else sw |= (sw & 48) << 2;
		return sw;
	}
	,stringToMask: function(s) {
		if(s == null) return 15;
		var r = 0;
		if(s.indexOf("x") != -1) r |= 1;
		if(s.indexOf("y") != -1) r |= 2;
		if(s.indexOf("z") != -1) r |= 4;
		if(s.indexOf("w") != -1) r |= 8;
		return r;
	}
	,emitDest: function(pr,token,opdest) {
		var tmp = new EReg("([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?","i");
		var reg = aglsl.assembler.ERegTools.match(token,tmp,3);
		var _map = aglsl.assembler.RegMap.get_map();
		if(!aglsl.assembler.RegMap.get_map().exists(reg[1])) return false;
		if(Std.parseInt(reg[2]) == null) reg[2] = "0";
		var em = { num : Std.parseInt(reg[2]) | 0, code : aglsl.assembler.RegMap.get_map().get(reg[1]).code, mask : this.stringToMask(reg[3])};
		var tmp2 = new EReg("([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?","i");
		tmp2.match(token);
		pr.data.writeShort(em.num);
		pr.data.writeByte(em.mask);
		pr.data.writeByte(em.code);
		return true;
	}
	,emitZeroQword: function(pr) {
		pr.data.writeUnsignedInt(0);
		pr.data.writeUnsignedInt(0);
	}
	,emitZeroDword: function(pr) {
		pr.data.writeUnsignedInt(0);
	}
	,emitOpcode: function(pr,opcode) {
		pr.data.writeUnsignedInt(opcode);
	}
	,emitHeader: function(pr) {
		pr.data.writeByte(160);
		pr.data.writeUnsignedInt(pr.version);
		if(pr.version >= 16) pr.data.writeByte(0);
		pr.data.writeByte(161);
		var _sw1_ = pr.name;
		switch(_sw1_) {
		case "fragment":
			pr.data.writeByte(1);
			break;
		case "vertex":
			pr.data.writeByte(0);
			break;
		case "cpu":
			pr.data.writeByte(2);
			break;
		default:
			pr.data.writeByte(255);
		}
	}
	,processLine: function(line,linenr) {
		var startcomment = line.indexOf("//");
		if(startcomment != -1) line = HxOverrides.substr(line,0,startcomment);
		var reg = new EReg("^\\s+|\\s+$","g");
		line = aglsl.assembler.ERegTools.replace(line,reg,"");
		if(!(line.length > 0)) return;
		reg = new EReg("<.*>","g");
		var optsi = aglsl.assembler.ERegTools.search(line,reg);
		var opts = null;
		if(optsi != -1) {
			reg = new EReg("([\\w\\.\\-\\+]+)","gi");
			opts = aglsl.assembler.ERegTools.match(HxOverrides.substr(line,optsi,null),reg);
			line = HxOverrides.substr(line,0,optsi);
		}
		reg = new EReg("([\\w\\.\\+\\[\\]]+)","gi");
		var tokens = aglsl.assembler.ERegTools.match(line,reg);
		if(tokens.length < 1) {
			if(line.length >= 3) {
			}
			return;
		}
		var _sw0_ = tokens[0];
		switch(_sw0_) {
		case "part":
			this.addHeader(tokens[1],Std.parseInt(tokens[2]));
			break;
		case "endpart":
			if(this.cur == null) throw "Unexpected endpart";
			this.cur.data.position = 0;
			this.cur = null;
			return;
			if(this.cur == null) return;
			if(this.cur.name == "comment") return;
			var op = js.Boot.__cast(aglsl.assembler.OpcodeMap.get_map().get(tokens[0]) , aglsl.assembler.Opcode);
			if(op == null) throw "Bad opcode " + tokens[0] + " " + linenr + ": " + line;
			this.emitOpcode(this.cur,op.opcode);
			var ti = 1;
			if(op.dest != null && op.dest != "none") {
				if(!this.emitDest(this.cur,tokens[ti++],op.dest)) throw "Bad destination register " + tokens[ti - 1] + " " + linenr + ": " + line;
			} else this.emitZeroDword(this.cur);
			if(op.a != null && op.a.format != "none") {
				if(!this.emitSource(this.cur,tokens[ti++],op.a)) throw "Bad source register " + tokens[ti - 1] + " " + linenr + ": " + line;
			} else this.emitZeroQword(this.cur);
			if(op.b != null && op.b.format != "none") {
				if(op.b.format == "sampler") {
					if(!this.emitSampler(this.cur,tokens[ti++],op.b,opts)) throw "Bad sampler register " + tokens[ti - 1] + " " + linenr + ": " + line;
				} else if(!this.emitSource(this.cur,tokens[ti++],op.b)) throw "Bad source register " + tokens[ti - 1] + " " + linenr + ": " + line;
			} else this.emitZeroQword(this.cur);
			break;
		default:
			if(this.cur == null) return;
			if(this.cur.name == "comment") return;
			var op = js.Boot.__cast(aglsl.assembler.OpcodeMap.get_map().get(tokens[0]) , aglsl.assembler.Opcode);
			if(op == null) throw "Bad opcode " + tokens[0] + " " + linenr + ": " + line;
			this.emitOpcode(this.cur,op.opcode);
			var ti = 1;
			if(op.dest != null && op.dest != "none") {
				if(!this.emitDest(this.cur,tokens[ti++],op.dest)) throw "Bad destination register " + tokens[ti - 1] + " " + linenr + ": " + line;
			} else this.emitZeroDword(this.cur);
			if(op.a != null && op.a.format != "none") {
				if(!this.emitSource(this.cur,tokens[ti++],op.a)) throw "Bad source register " + tokens[ti - 1] + " " + linenr + ": " + line;
			} else this.emitZeroQword(this.cur);
			if(op.b != null && op.b.format != "none") {
				if(op.b.format == "sampler") {
					if(!this.emitSampler(this.cur,tokens[ti++],op.b,opts)) throw "Bad sampler register " + tokens[ti - 1] + " " + linenr + ": " + line;
				} else if(!this.emitSource(this.cur,tokens[ti++],op.b)) throw "Bad source register " + tokens[ti - 1] + " " + linenr + ": " + line;
			} else this.emitZeroQword(this.cur);
		}
	}
	,assemble: function(source,ext_part,ext_version) {
		if(ext_version == null) ext_version = 0;
		if(ext_version == 0) ext_version = 1;
		if(ext_part != null) this.addHeader(ext_part,ext_version);
		var reg = new EReg("[\n\r]+","g");
		var lines = reg.split(source);
		var _g1 = 0, _g = lines.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.processLine(lines[i],i);
		}
		return this.r;
	}
	,__class__: aglsl.assembler.AGALMiniAssembler
}
aglsl.assembler.ERegTools = function() { }
$hxClasses["aglsl.assembler.ERegTools"] = aglsl.assembler.ERegTools;
aglsl.assembler.ERegTools.__name__ = ["aglsl","assembler","ERegTools"];
aglsl.assembler.ERegTools.replace = function(s,sub,by) {
	return sub.replace(s,by);
}
aglsl.assembler.ERegTools.search = function(s,sub) {
	if(sub.match(s)) return sub.matchedPos().pos;
	return -1;
}
aglsl.assembler.ERegTools.match = function(str,rgx,len) {
	if(len == null) len = 1;
	var tmp = [];
	while(rgx.match(str)) {
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			tmp.push(rgx.matched(i));
		}
		str = rgx.matchedRight();
	}
	return tmp;
}
aglsl.assembler.FS = function() {
};
$hxClasses["aglsl.assembler.FS"] = aglsl.assembler.FS;
aglsl.assembler.FS.__name__ = ["aglsl","assembler","FS"];
aglsl.assembler.FS.prototype = {
	__class__: aglsl.assembler.FS
}
aglsl.assembler.Flags = function() {
};
$hxClasses["aglsl.assembler.Flags"] = aglsl.assembler.Flags;
aglsl.assembler.Flags.__name__ = ["aglsl","assembler","Flags"];
aglsl.assembler.Flags.prototype = {
	__class__: aglsl.assembler.Flags
}
aglsl.assembler.Opcode = function(dest,aformat,asize,bformat,bsize,opcode,simple,horizontal,fragonly,matrix) {
	if(matrix == null) matrix = false;
	if(fragonly == null) fragonly = false;
	if(horizontal == null) horizontal = false;
	this.a = new aglsl.assembler.FS();
	this.b = new aglsl.assembler.FS();
	this.flags = new aglsl.assembler.Flags();
	this.dest = dest;
	this.a.format = aformat;
	this.a.size = asize;
	this.b.format = bformat;
	this.b.size = bsize;
	this.opcode = opcode;
	this.flags.simple = simple;
	this.flags.horizontal = horizontal;
	this.flags.fragonly = fragonly;
	this.flags.matrix = matrix;
};
$hxClasses["aglsl.assembler.Opcode"] = aglsl.assembler.Opcode;
aglsl.assembler.Opcode.__name__ = ["aglsl","assembler","Opcode"];
aglsl.assembler.Opcode.prototype = {
	__class__: aglsl.assembler.Opcode
}
aglsl.assembler.OpcodeMap = function() {
};
$hxClasses["aglsl.assembler.OpcodeMap"] = aglsl.assembler.OpcodeMap;
aglsl.assembler.OpcodeMap.__name__ = ["aglsl","assembler","OpcodeMap"];
aglsl.assembler.OpcodeMap.__properties__ = {get_map:"get_map"}
aglsl.assembler.OpcodeMap.get_map = function() {
	if(aglsl.assembler.OpcodeMap._map == null) {
		aglsl.assembler.OpcodeMap._map = new haxe.ds.StringMap();
		aglsl.assembler.OpcodeMap._map.set("mov",new aglsl.assembler.Opcode("vector","vector",4,"none",0,0,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("add",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,1,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("sub",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,2,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("mul",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,3,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("div",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,4,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("rcp",new aglsl.assembler.Opcode("vector","vector",4,"none",0,5,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("min",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,6,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("max",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,7,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("frc",new aglsl.assembler.Opcode("vector","vector",4,"none",0,8,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("sqt",new aglsl.assembler.Opcode("vector","vector",4,"none",0,9,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("rsq",new aglsl.assembler.Opcode("vector","vector",4,"none",0,10,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("pow",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,11,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("log",new aglsl.assembler.Opcode("vector","vector",4,"none",0,12,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("exp",new aglsl.assembler.Opcode("vector","vector",4,"none",0,13,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("nrm",new aglsl.assembler.Opcode("vector","vector",4,"none",0,14,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("sin",new aglsl.assembler.Opcode("vector","vector",4,"none",0,15,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("cos",new aglsl.assembler.Opcode("vector","vector",4,"none",0,16,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("crs",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,17,true,true,null,null));
		aglsl.assembler.OpcodeMap._map.set("dp3",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,18,true,true,null,null));
		aglsl.assembler.OpcodeMap._map.set("dp4",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,19,true,true,null,null));
		aglsl.assembler.OpcodeMap._map.set("abs",new aglsl.assembler.Opcode("vector","vector",4,"none",0,20,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("neg",new aglsl.assembler.Opcode("vector","vector",4,"none",0,21,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("sat",new aglsl.assembler.Opcode("vector","vector",4,"none",0,22,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("ted",new aglsl.assembler.Opcode("vector","vector",4,"sampler",1,38,true,null,true,null));
		aglsl.assembler.OpcodeMap._map.set("kil",new aglsl.assembler.Opcode("none","scalar",1,"none",0,39,true,null,true,null));
		aglsl.assembler.OpcodeMap._map.set("tex",new aglsl.assembler.Opcode("vector","vector",4,"sampler",1,40,true,null,true,null));
		aglsl.assembler.OpcodeMap._map.set("m33",new aglsl.assembler.Opcode("vector","matrix",3,"vector",3,23,true,null,null,true));
		aglsl.assembler.OpcodeMap._map.set("m44",new aglsl.assembler.Opcode("vector","matrix",4,"vector",4,24,true,null,null,true));
		aglsl.assembler.OpcodeMap._map.set("m43",new aglsl.assembler.Opcode("vector","matrix",3,"vector",4,25,true,null,null,true));
		aglsl.assembler.OpcodeMap._map.set("sge",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,41,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("slt",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,42,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("sgn",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,43,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("seq",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,44,true,null,null,null));
		aglsl.assembler.OpcodeMap._map.set("sne",new aglsl.assembler.Opcode("vector","vector",4,"vector",4,45,true,null,null,null));
	}
	return aglsl.assembler.OpcodeMap._map;
}
aglsl.assembler.OpcodeMap.prototype = {
	__class__: aglsl.assembler.OpcodeMap
}
aglsl.assembler.Part = function(name,version) {
	if(version == null) version = 0;
	if(name == null) name = "";
	this.name = name;
	this.version = version;
	this.data = new flash.utils.ByteArray();
	this.data.littleEndian = true;
	"littleEndian";
};
$hxClasses["aglsl.assembler.Part"] = aglsl.assembler.Part;
aglsl.assembler.Part.__name__ = ["aglsl","assembler","Part"];
aglsl.assembler.Part.prototype = {
	__class__: aglsl.assembler.Part
}
aglsl.assembler.Reg = function(code,desc) {
	this.code = code;
	this.desc = desc;
};
$hxClasses["aglsl.assembler.Reg"] = aglsl.assembler.Reg;
aglsl.assembler.Reg.__name__ = ["aglsl","assembler","Reg"];
aglsl.assembler.Reg.prototype = {
	__class__: aglsl.assembler.Reg
}
aglsl.assembler.RegMap = function() {
};
$hxClasses["aglsl.assembler.RegMap"] = aglsl.assembler.RegMap;
aglsl.assembler.RegMap.__name__ = ["aglsl","assembler","RegMap"];
aglsl.assembler.RegMap.__properties__ = {get_map:"get_map"}
aglsl.assembler.RegMap.get_map = function() {
	if(aglsl.assembler.RegMap._map == null) {
		aglsl.assembler.RegMap._map = new haxe.ds.StringMap();
		aglsl.assembler.RegMap._map.set("va",new aglsl.assembler.Reg(0,"vertex attribute"));
		aglsl.assembler.RegMap._map.set("fc",new aglsl.assembler.Reg(1,"fragment constant"));
		aglsl.assembler.RegMap._map.set("vc",new aglsl.assembler.Reg(1,"vertex constant"));
		aglsl.assembler.RegMap._map.set("ft",new aglsl.assembler.Reg(2,"fragment temporary"));
		aglsl.assembler.RegMap._map.set("vt",new aglsl.assembler.Reg(2,"vertex temporary"));
		aglsl.assembler.RegMap._map.set("vo",new aglsl.assembler.Reg(3,"vertex output"));
		aglsl.assembler.RegMap._map.set("op",new aglsl.assembler.Reg(3,"vertex output"));
		aglsl.assembler.RegMap._map.set("fd",new aglsl.assembler.Reg(3,"fragment depth output"));
		aglsl.assembler.RegMap._map.set("fo",new aglsl.assembler.Reg(3,"fragment output"));
		aglsl.assembler.RegMap._map.set("oc",new aglsl.assembler.Reg(3,"fragment output"));
		aglsl.assembler.RegMap._map.set("v",new aglsl.assembler.Reg(4,"varying"));
		aglsl.assembler.RegMap._map.set("vi",new aglsl.assembler.Reg(4,"varying output"));
		aglsl.assembler.RegMap._map.set("fi",new aglsl.assembler.Reg(4,"varying input"));
		aglsl.assembler.RegMap._map.set("fs",new aglsl.assembler.Reg(5,"sampler"));
	}
	return aglsl.assembler.RegMap._map;
}
aglsl.assembler.RegMap.prototype = {
	__class__: aglsl.assembler.RegMap
}
aglsl.assembler.Sampler = function(shift,mask,value) {
	this.shift = shift;
	this.mask = mask;
	this.value = value;
};
$hxClasses["aglsl.assembler.Sampler"] = aglsl.assembler.Sampler;
aglsl.assembler.Sampler.__name__ = ["aglsl","assembler","Sampler"];
aglsl.assembler.Sampler.prototype = {
	__class__: aglsl.assembler.Sampler
}
aglsl.assembler.SamplerMap = function() {
};
$hxClasses["aglsl.assembler.SamplerMap"] = aglsl.assembler.SamplerMap;
aglsl.assembler.SamplerMap.__name__ = ["aglsl","assembler","SamplerMap"];
aglsl.assembler.SamplerMap.__properties__ = {get_map:"get_map"}
aglsl.assembler.SamplerMap.get_map = function() {
	if(aglsl.assembler.SamplerMap._map == null) {
		aglsl.assembler.SamplerMap._map = new haxe.ds.StringMap();
		aglsl.assembler.SamplerMap._map.set("rgba",new aglsl.assembler.Sampler(8,15,0));
		aglsl.assembler.SamplerMap._map.set("rg",new aglsl.assembler.Sampler(8,15,5));
		aglsl.assembler.SamplerMap._map.set("r",new aglsl.assembler.Sampler(8,15,4));
		aglsl.assembler.SamplerMap._map.set("compressed",new aglsl.assembler.Sampler(8,15,1));
		aglsl.assembler.SamplerMap._map.set("compressed_alpha",new aglsl.assembler.Sampler(8,15,2));
		aglsl.assembler.SamplerMap._map.set("dxt1",new aglsl.assembler.Sampler(8,15,1));
		aglsl.assembler.SamplerMap._map.set("dxt5",new aglsl.assembler.Sampler(8,15,2));
		aglsl.assembler.SamplerMap._map.set("2d",new aglsl.assembler.Sampler(12,15,0));
		aglsl.assembler.SamplerMap._map.set("cube",new aglsl.assembler.Sampler(12,15,1));
		aglsl.assembler.SamplerMap._map.set("3d",new aglsl.assembler.Sampler(12,15,2));
		aglsl.assembler.SamplerMap._map.set("centroid",new aglsl.assembler.Sampler(16,1,1));
		aglsl.assembler.SamplerMap._map.set("ignoresampler",new aglsl.assembler.Sampler(16,4,4));
		aglsl.assembler.SamplerMap._map.set("clamp",new aglsl.assembler.Sampler(20,15,0));
		aglsl.assembler.SamplerMap._map.set("repeat",new aglsl.assembler.Sampler(20,15,1));
		aglsl.assembler.SamplerMap._map.set("wrap",new aglsl.assembler.Sampler(20,15,1));
		aglsl.assembler.SamplerMap._map.set("nomip",new aglsl.assembler.Sampler(24,15,0));
		aglsl.assembler.SamplerMap._map.set("mipnone",new aglsl.assembler.Sampler(24,15,0));
		aglsl.assembler.SamplerMap._map.set("mipnearest",new aglsl.assembler.Sampler(24,15,1));
		aglsl.assembler.SamplerMap._map.set("miplinear",new aglsl.assembler.Sampler(24,15,2));
		aglsl.assembler.SamplerMap._map.set("nearest",new aglsl.assembler.Sampler(28,15,0));
		aglsl.assembler.SamplerMap._map.set("linear",new aglsl.assembler.Sampler(28,15,1));
	}
	return aglsl.assembler.SamplerMap._map;
}
aglsl.assembler.SamplerMap.prototype = {
	__class__: aglsl.assembler.SamplerMap
}
var away3d = {}
away3d.Stage3DUtils = function() { }
$hxClasses["away3d.Stage3DUtils"] = away3d.Stage3DUtils;
away3d.Stage3DUtils.__name__ = ["away3d","Stage3DUtils"];
away3d.Stage3DUtils.fillArray = function(f,start,len,value) {
	var _g1 = start, _g = start + len;
	while(_g1 < _g) {
		var i = _g1++;
		f[i] = value;
	}
}
away3d.Stage3DUtils.fillVector = function(f,start,len,value) {
	var _g1 = start, _g = start + len;
	while(_g1 < _g) {
		var i = _g1++;
		f[i] = value;
	}
}
away3d.Stage3DUtils.copyColumnTo = function(mat,column,vector3D) {
	switch(column) {
	case 0:
		vector3D.x = mat.rawData[0];
		vector3D.y = mat.rawData[1];
		vector3D.z = mat.rawData[2];
		vector3D.w = mat.rawData[3];
		break;
	case 1:
		vector3D.x = mat.rawData[4];
		vector3D.y = mat.rawData[5];
		vector3D.z = mat.rawData[6];
		vector3D.w = mat.rawData[7];
		break;
	case 2:
		vector3D.x = mat.rawData[8];
		vector3D.y = mat.rawData[9];
		vector3D.z = mat.rawData[10];
		vector3D.w = mat.rawData[11];
		break;
	case 3:
		vector3D.x = mat.rawData[12];
		vector3D.y = mat.rawData[13];
		vector3D.z = mat.rawData[14];
		vector3D.w = mat.rawData[15];
		break;
	default:
		throw new flash.errors.Error("ArgumentError, Column " + column + " out of bounds [0, ..., 3]");
	}
}
away3d.Stage3DUtils.copyRowFrom = function(mat,row,vector3D) {
	switch(row) {
	case 0:
		mat.rawData[0] = vector3D.x;
		mat.rawData[4] = vector3D.y;
		mat.rawData[8] = vector3D.z;
		mat.rawData[12] = vector3D.w;
		break;
	case 1:
		mat.rawData[1] = vector3D.x;
		mat.rawData[5] = vector3D.y;
		mat.rawData[9] = vector3D.z;
		mat.rawData[13] = vector3D.w;
		break;
	case 2:
		mat.rawData[2] = vector3D.x;
		mat.rawData[6] = vector3D.y;
		mat.rawData[10] = vector3D.z;
		mat.rawData[14] = vector3D.w;
		break;
	case 3:
		mat.rawData[3] = vector3D.x;
		mat.rawData[7] = vector3D.y;
		mat.rawData[11] = vector3D.z;
		mat.rawData[15] = vector3D.w;
		break;
	default:
		throw new flash.errors.Error("ArgumentError, Row " + row + " out of bounds [0, ..., 3]");
	}
}
away3d.Stage3DUtils.copyRowTo = function(mat,row,vector3D) {
	switch(row) {
	case 0:
		vector3D.x = mat.rawData[0];
		vector3D.y = mat.rawData[4];
		vector3D.z = mat.rawData[8];
		vector3D.w = mat.rawData[12];
		break;
	case 1:
		vector3D.x = mat.rawData[1];
		vector3D.y = mat.rawData[5];
		vector3D.z = mat.rawData[9];
		vector3D.w = mat.rawData[13];
		break;
	case 2:
		vector3D.x = mat.rawData[2];
		vector3D.y = mat.rawData[6];
		vector3D.z = mat.rawData[10];
		vector3D.w = mat.rawData[14];
		break;
	case 3:
		vector3D.x = mat.rawData[3];
		vector3D.y = mat.rawData[7];
		vector3D.z = mat.rawData[11];
		vector3D.w = mat.rawData[15];
		break;
	default:
		throw new flash.errors.Error("ArgumentError, Row " + row + " out of bounds [0, ..., 3]");
	}
}
away3d.Stage3DUtils.copyRawDataFrom = function(mat,vector,index,transpose) {
	if(transpose == null) transpose = false;
	if(index == null) index = 0;
	if(transpose) mat.transpose();
	var l = flash._Vector.Vector_Impl_.get_length(vector) - index;
	var _g = 0;
	while(_g < l) {
		var c = _g++;
		mat.rawData[c] = vector[c + index];
	}
	if(transpose) mat.transpose();
}
away3d.Stage3DUtils.copyRawDataTo = function(mat,vector,index,transpose) {
	if(transpose == null) transpose = false;
	if(index == null) index = 0;
	if(transpose) mat.transpose();
	var l = flash._Vector.Vector_Impl_.get_length(mat.rawData);
	var _g = 0;
	while(_g < l) {
		var c = _g++;
		vector[c + index] = mat.rawData[c];
	}
	if(transpose) mat.transpose();
}
away3d.animators = {}
away3d.animators.IAnimationSet = function() { }
$hxClasses["away3d.animators.IAnimationSet"] = away3d.animators.IAnimationSet;
away3d.animators.IAnimationSet.__name__ = ["away3d","animators","IAnimationSet"];
away3d.animators.IAnimationSet.prototype = {
	__class__: away3d.animators.IAnimationSet
	,__properties__: {get_usesCPU:"get_usesCPU"}
}
away3d.animators.IAnimator = function() { }
$hxClasses["away3d.animators.IAnimator"] = away3d.animators.IAnimator;
away3d.animators.IAnimator.__name__ = ["away3d","animators","IAnimator"];
away3d.animators.IAnimator.prototype = {
	__class__: away3d.animators.IAnimator
	,__properties__: {get_animationSet:"get_animationSet"}
}
away3d.materials = {}
away3d.materials.compilation = {}
away3d.materials.compilation.ShaderRegisterCache = function(profile) {
	this._profile = profile;
};
$hxClasses["away3d.materials.compilation.ShaderRegisterCache"] = away3d.materials.compilation.ShaderRegisterCache;
away3d.materials.compilation.ShaderRegisterCache.__name__ = ["away3d","materials","compilation","ShaderRegisterCache"];
away3d.materials.compilation.ShaderRegisterCache.prototype = {
	get_numUsedVaryings: function() {
		return this._numUsedVaryings;
	}
	,get_numUsedTextures: function() {
		return this._numUsedTextures;
	}
	,get_numUsedStreams: function() {
		return this._numUsedStreams;
	}
	,get_numUsedFragmentConstants: function() {
		return this._numUsedFragmentConstants;
	}
	,get_numUsedVertexConstants: function() {
		return this._numUsedVertexConstants;
	}
	,get_fragmentOutputRegister: function() {
		return this._fragmentOutputRegister;
	}
	,set_fragmentConstantOffset: function(value) {
		this._fragmentConstantOffset = value;
		return value;
	}
	,get_fragmentConstantOffset: function() {
		return this._fragmentConstantOffset;
	}
	,set_varyingsOffset: function(value) {
		this._varyingsOffset = value;
		return value;
	}
	,get_varyingsOffset: function() {
		return this._varyingsOffset;
	}
	,set_vertexAttributesOffset: function(value) {
		this._vertexAttributesOffset = value;
		return value;
	}
	,get_vertexAttributesOffset: function() {
		return this._vertexAttributesOffset;
	}
	,set_vertexConstantOffset: function(vertexConstantOffset) {
		this._vertexConstantOffset = vertexConstantOffset;
		return vertexConstantOffset;
	}
	,get_vertexConstantOffset: function() {
		return this._vertexConstantOffset;
	}
	,getFreeTextureReg: function() {
		++this._numUsedTextures;
		return this._textureCache.requestFreeVectorReg();
	}
	,getFreeVertexAttribute: function() {
		++this._numUsedStreams;
		return this._vertexAttributesCache.requestFreeVectorReg();
	}
	,getFreeVertexSingleTemp: function() {
		return this._vertexTempCache.requestFreeRegComponent();
	}
	,getFreeVertexVectorTemp: function() {
		return this._vertexTempCache.requestFreeVectorReg();
	}
	,getFreeVertexConstant: function() {
		++this._numUsedVertexConstants;
		return this._vertexConstantsCache.requestFreeVectorReg();
	}
	,getFreeFragmentConstant: function() {
		++this._numUsedFragmentConstants;
		return this._fragmentConstantsCache.requestFreeVectorReg();
	}
	,getFreeVarying: function() {
		++this._numUsedVaryings;
		return this._varyingCache.requestFreeVectorReg();
	}
	,getFreeFragmentSingleTemp: function() {
		return this._fragmentTempCache.requestFreeRegComponent();
	}
	,getFreeFragmentVectorTemp: function() {
		return this._fragmentTempCache.requestFreeVectorReg();
	}
	,removeVertexTempUsage: function(register) {
		this._vertexTempCache.removeUsage(register);
	}
	,addVertexTempUsages: function(register,usageCount) {
		this._vertexTempCache.addUsage(register,usageCount);
	}
	,removeFragmentTempUsage: function(register) {
		this._fragmentTempCache.removeUsage(register);
	}
	,addFragmentTempUsages: function(register,usageCount) {
		this._fragmentTempCache.addUsage(register,usageCount);
	}
	,dispose: function() {
		this._fragmentTempCache.dispose();
		this._vertexTempCache.dispose();
		this._varyingCache.dispose();
		this._fragmentConstantsCache.dispose();
		this._vertexAttributesCache.dispose();
		this._fragmentTempCache = null;
		this._vertexTempCache = null;
		this._varyingCache = null;
		this._fragmentConstantsCache = null;
		this._vertexAttributesCache = null;
		this._fragmentOutputRegister = null;
		this._vertexOutputRegister = null;
	}
	,reset: function() {
		this._fragmentTempCache = new away3d.materials.compilation.RegisterPool("ft",8,false);
		this._vertexTempCache = new away3d.materials.compilation.RegisterPool("vt",8,false);
		this._varyingCache = new away3d.materials.compilation.RegisterPool("v",8);
		this._textureCache = new away3d.materials.compilation.RegisterPool("fs",8);
		this._vertexAttributesCache = new away3d.materials.compilation.RegisterPool("va",8);
		this._fragmentConstantsCache = new away3d.materials.compilation.RegisterPool("fc",28);
		this._vertexConstantsCache = new away3d.materials.compilation.RegisterPool("vc",128);
		this._fragmentOutputRegister = new away3d.materials.compilation.ShaderRegisterElement("oc",-1);
		this._vertexOutputRegister = new away3d.materials.compilation.ShaderRegisterElement("op",-1);
		this._numUsedVertexConstants = 0;
		this._numUsedStreams = 0;
		this._numUsedTextures = 0;
		this._numUsedVaryings = 0;
		this._numUsedFragmentConstants = 0;
		var i;
		i = 0;
		while(i < this._vertexAttributesOffset) {
			this.getFreeVertexAttribute();
			++i;
		}
		i = 0;
		while(i < this._vertexConstantOffset) {
			this.getFreeVertexConstant();
			++i;
		}
		i = 0;
		while(i < this._varyingsOffset) {
			this.getFreeVarying();
			++i;
		}
		i = 0;
		while(i < this._fragmentConstantOffset) {
			this.getFreeFragmentConstant();
			++i;
		}
	}
	,__class__: away3d.materials.compilation.ShaderRegisterCache
	,__properties__: {set_vertexConstantOffset:"set_vertexConstantOffset",get_vertexConstantOffset:"get_vertexConstantOffset",set_vertexAttributesOffset:"set_vertexAttributesOffset",get_vertexAttributesOffset:"get_vertexAttributesOffset",set_varyingsOffset:"set_varyingsOffset",get_varyingsOffset:"get_varyingsOffset",set_fragmentConstantOffset:"set_fragmentConstantOffset",get_fragmentConstantOffset:"get_fragmentConstantOffset",get_fragmentOutputRegister:"get_fragmentOutputRegister",get_numUsedVertexConstants:"get_numUsedVertexConstants",get_numUsedFragmentConstants:"get_numUsedFragmentConstants",get_numUsedStreams:"get_numUsedStreams",get_numUsedTextures:"get_numUsedTextures",get_numUsedVaryings:"get_numUsedVaryings"}
}
away3d.animators.data = {}
away3d.animators.data.AnimationRegisterCache = function(profile) {
	this.indexDictionary = new haxe.ds.WeakMap();
	this.vertexConstantData = flash._Vector.Vector_Impl_._new();
	this.fragmentConstantData = flash._Vector.Vector_Impl_._new();
	away3d.materials.compilation.ShaderRegisterCache.call(this,profile);
};
$hxClasses["away3d.animators.data.AnimationRegisterCache"] = away3d.animators.data.AnimationRegisterCache;
away3d.animators.data.AnimationRegisterCache.__name__ = ["away3d","animators","data","AnimationRegisterCache"];
away3d.animators.data.AnimationRegisterCache.__super__ = away3d.materials.compilation.ShaderRegisterCache;
away3d.animators.data.AnimationRegisterCache.prototype = $extend(away3d.materials.compilation.ShaderRegisterCache.prototype,{
	setFragmentConst: function(index,x,y,z,w) {
		if(w == null) w = 0;
		if(z == null) z = 0;
		if(y == null) y = 0;
		if(x == null) x = 0;
		var _index = (index - this._fragmentConstantOffset) * 4;
		this.fragmentConstantData[_index++] = x;
		this.fragmentConstantData[_index++] = y;
		this.fragmentConstantData[_index++] = z;
		this.fragmentConstantData[_index] = w;
	}
	,setVertexConstFromMatrix: function(index,matrix) {
		var rawData = matrix.rawData;
		var _index = (index - this._vertexConstantOffset) * 4;
		this.vertexConstantData[_index++] = rawData[0];
		this.vertexConstantData[_index++] = rawData[4];
		this.vertexConstantData[_index++] = rawData[8];
		this.vertexConstantData[_index++] = rawData[12];
		this.vertexConstantData[_index++] = rawData[1];
		this.vertexConstantData[_index++] = rawData[5];
		this.vertexConstantData[_index++] = rawData[9];
		this.vertexConstantData[_index++] = rawData[13];
		this.vertexConstantData[_index++] = rawData[2];
		this.vertexConstantData[_index++] = rawData[6];
		this.vertexConstantData[_index++] = rawData[10];
		this.vertexConstantData[_index++] = rawData[14];
		this.vertexConstantData[_index++] = rawData[3];
		this.vertexConstantData[_index++] = rawData[7];
		this.vertexConstantData[_index++] = rawData[11];
		this.vertexConstantData[_index] = rawData[15];
	}
	,setVertexConstFromVector: function(index,data) {
		var _index = (index - this._vertexConstantOffset) * 4;
		var i = 0;
		while(i < flash._Vector.Vector_Impl_.get_length(data)) {
			this.vertexConstantData[_index++] = data[i];
			i++;
		}
	}
	,setVertexConst: function(index,x,y,z,w) {
		if(w == null) w = 0;
		if(z == null) z = 0;
		if(y == null) y = 0;
		if(x == null) x = 0;
		var _index = (index - this._vertexConstantOffset) * 4;
		this.vertexConstantData[_index++] = x;
		this.vertexConstantData[_index++] = y;
		this.vertexConstantData[_index++] = z;
		this.vertexConstantData[_index] = w;
	}
	,setDataLength: function() {
		this._numVertexConstant = this._numUsedVertexConstants - this._vertexConstantOffset;
		this._numFragmentConstant = this._numUsedFragmentConstants - this._fragmentConstantOffset;
		var value = this._numVertexConstant * 4;
		if(value < this.vertexConstantData.length) this.vertexConstantData = this.vertexConstantData.slice(0,value);
		while(value > this.vertexConstantData.length) this.vertexConstantData.push(null);
		value;
		var value = this._numFragmentConstant * 4;
		if(value < this.fragmentConstantData.length) this.fragmentConstantData = this.fragmentConstantData.slice(0,value);
		while(value > this.fragmentConstantData.length) this.fragmentConstantData.push(null);
		value;
	}
	,get_numFragmentConstant: function() {
		return this._numFragmentConstant;
	}
	,get_numVertexConstant: function() {
		return this._numVertexConstant;
	}
	,getRegisterFromString: function(code) {
		var temp = new EReg("(\\d+)","").split(code);
		return new away3d.materials.compilation.ShaderRegisterElement(temp[0],Std.parseInt(temp[1]));
	}
	,getColorCombinationCode: function(shadedTarget) {
		var code = "";
		if(this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {
			var colorTarget = this.getRegisterFromString(shadedTarget);
			this.addFragmentTempUsages(colorTarget,1);
			if(this.hasColorMulNode) code += "mul " + Std.string(colorTarget) + "," + Std.string(colorTarget) + "," + Std.string(this.colorMulVary) + "\n";
			if(this.hasColorAddNode) code += "add " + Std.string(colorTarget) + "," + Std.string(colorTarget) + "," + Std.string(this.colorAddVary) + "\n";
		}
		return code;
	}
	,getColorPassCode: function() {
		var code = "";
		if(this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {
			if(this.hasColorMulNode) code += "mov " + Std.string(this.colorMulVary) + "," + Std.string(this.colorMulTarget) + "\n";
			if(this.hasColorAddNode) code += "mov " + Std.string(this.colorAddVary) + "," + Std.string(this.colorAddTarget) + "\n";
		}
		return code;
	}
	,initColorRegisters: function() {
		var code = "";
		if(this.hasColorMulNode) {
			this.colorMulTarget = this.getFreeVertexVectorTemp();
			this.addVertexTempUsages(this.colorMulTarget,1);
			this.colorMulVary = this.getFreeVarying();
			code += "mov " + Std.string(this.colorMulTarget) + "," + Std.string(this.vertexOneConst) + "\n";
		}
		if(this.hasColorAddNode) {
			this.colorAddTarget = this.getFreeVertexVectorTemp();
			this.addVertexTempUsages(this.colorAddTarget,1);
			this.colorAddVary = this.getFreeVarying();
			code += "mov " + Std.string(this.colorAddTarget) + "," + Std.string(this.vertexZeroConst) + "\n";
		}
		return code;
	}
	,getCombinationCode: function() {
		return "add " + Std.string(this.scaleAndRotateTarget) + ".xyz," + Std.string(this.scaleAndRotateTarget) + ".xyz," + Std.string(this.positionTarget) + ".xyz\n";
	}
	,getInitCode: function() {
		var len = flash._Vector.Vector_Impl_.get_length(this.sourceRegisters);
		var code = "";
		var i = 0;
		while(i < len) {
			code += "mov " + this.targetRegisters[i] + "," + this.sourceRegisters[i] + "\n";
			i++;
		}
		code += "mov " + Std.string(this.positionTarget) + ".xyz," + this.vertexZeroConst.toString() + "\n";
		if(this.needVelocity) code += "mov " + Std.string(this.velocityTarget) + ".xyz," + this.vertexZeroConst.toString() + "\n";
		return code;
	}
	,getRegisterIndex: function(node,parameterIndex) {
		return this.indexDictionary.get(node)[parameterIndex];
	}
	,setRegisterIndex: function(node,parameterIndex,registerIndex) {
		if(!this.indexDictionary.exists(node)) this.indexDictionary.set(node,flash._Vector.Vector_Impl_._new(8,true));
		var t = this.indexDictionary.get(node);
		t[parameterIndex] = registerIndex;
	}
	,setUVSourceAndTarget: function(UVAttribute,UVVaring) {
		this.uvVar = this.getRegisterFromString(UVVaring);
		this.uvAttribute = this.getRegisterFromString(UVAttribute);
		this.uvTarget = new away3d.materials.compilation.ShaderRegisterElement(this.positionTarget.get_regName(),this.positionTarget.get_index());
	}
	,reset: function() {
		away3d.materials.compilation.ShaderRegisterCache.prototype.reset.call(this);
		this.rotationRegisters = flash._Vector.Vector_Impl_._new();
		this.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);
		this.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);
		this.addVertexTempUsages(this.scaleAndRotateTarget,1);
		var i = 1;
		while(i < flash._Vector.Vector_Impl_.get_length(this.targetRegisters)) {
			flash._Vector.Vector_Impl_.push(this.rotationRegisters,this.getRegisterFromString(this.targetRegisters[i]));
			this.addVertexTempUsages(this.rotationRegisters[i - 1],1);
			i++;
		}
		this.scaleAndRotateTarget = new away3d.materials.compilation.ShaderRegisterElement(this.scaleAndRotateTarget.get_regName(),this.scaleAndRotateTarget.get_index());
		this.vertexZeroConst = this.getFreeVertexConstant();
		this.vertexZeroConst = new away3d.materials.compilation.ShaderRegisterElement(this.vertexZeroConst.get_regName(),this.vertexZeroConst.get_index(),0);
		this.vertexOneConst = new away3d.materials.compilation.ShaderRegisterElement(this.vertexZeroConst.get_regName(),this.vertexZeroConst.get_index(),1);
		this.vertexTwoConst = new away3d.materials.compilation.ShaderRegisterElement(this.vertexZeroConst.get_regName(),this.vertexZeroConst.get_index(),2);
		this.positionTarget = this.getFreeVertexVectorTemp();
		this.addVertexTempUsages(this.positionTarget,1);
		this.positionTarget = new away3d.materials.compilation.ShaderRegisterElement(this.positionTarget.get_regName(),this.positionTarget.get_index());
		if(this.needVelocity) {
			this.velocityTarget = this.getFreeVertexVectorTemp();
			this.addVertexTempUsages(this.velocityTarget,1);
			this.velocityTarget = new away3d.materials.compilation.ShaderRegisterElement(this.velocityTarget.get_regName(),this.velocityTarget.get_index());
			this.vertexTime = new away3d.materials.compilation.ShaderRegisterElement(this.velocityTarget.get_regName(),this.velocityTarget.get_index(),3);
			this.vertexLife = new away3d.materials.compilation.ShaderRegisterElement(this.positionTarget.get_regName(),this.positionTarget.get_index(),3);
		} else {
			var tempTime = this.getFreeVertexVectorTemp();
			this.addVertexTempUsages(tempTime,1);
			this.vertexTime = new away3d.materials.compilation.ShaderRegisterElement(tempTime.get_regName(),tempTime.get_index(),0);
			this.vertexLife = new away3d.materials.compilation.ShaderRegisterElement(tempTime.get_regName(),tempTime.get_index(),1);
		}
	}
	,__class__: away3d.animators.data.AnimationRegisterCache
	,__properties__: $extend(away3d.materials.compilation.ShaderRegisterCache.prototype.__properties__,{get_numVertexConstant:"get_numVertexConstant",get_numFragmentConstant:"get_numFragmentConstant"})
});
away3d.animators.data.AnimationSubGeometry = function() {
	this._vertexBuffer = flash._Vector.Vector_Impl_._new(8);
	this._bufferContext = flash._Vector.Vector_Impl_._new(8);
	this._bufferDirty = flash._Vector.Vector_Impl_._new(8);
	this.numProcessedVertices = 0;
	this.previousTime = -100000;
	this.animationParticles = flash._Vector.Vector_Impl_._new();
	var i = 0;
	while(i < 8) {
		this._bufferDirty[i] = true;
		i++;
	}
};
$hxClasses["away3d.animators.data.AnimationSubGeometry"] = away3d.animators.data.AnimationSubGeometry;
away3d.animators.data.AnimationSubGeometry.__name__ = ["away3d","animators","data","AnimationSubGeometry"];
away3d.animators.data.AnimationSubGeometry.prototype = {
	get_totalLenOfOneVertex: function() {
		return this._totalLenOfOneVertex;
	}
	,get_numVertices: function() {
		return this._numVertices;
	}
	,get_vertexData: function() {
		return this._vertexData;
	}
	,invalidateBuffer: function() {
		var i = 0;
		while(i < 8) {
			this._bufferDirty[i] = true;
			i++;
		}
	}
	,dispose: function() {
		while(flash._Vector.Vector_Impl_.get_length(this._vertexBuffer) > 0) {
			var vertexBuffer = flash._Vector.Vector_Impl_.pop(this._vertexBuffer);
			if(vertexBuffer != null) vertexBuffer.dispose();
		}
	}
	,activateVertexBuffer: function(index,bufferOffset,stage3DProxy,format) {
		var contextIndex = stage3DProxy.get_stage3DIndex();
		var context = stage3DProxy.get_context3D();
		var buffer = this._vertexBuffer[contextIndex];
		if(buffer == null || this._bufferContext[contextIndex] != context) {
			buffer = this._vertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices,this._totalLenOfOneVertex);
			this._bufferContext[contextIndex] = context;
			this._bufferDirty[contextIndex] = true;
		}
		if(this._bufferDirty[contextIndex]) {
			buffer.uploadFromVector(this._vertexData,0,this._numVertices);
			this._bufferDirty[contextIndex] = false;
		}
		context.setVertexBufferAt(index,buffer,bufferOffset,format);
	}
	,createVertexData: function(numVertices,totalLenOfOneVertex) {
		this._numVertices = numVertices;
		this._totalLenOfOneVertex = totalLenOfOneVertex;
		this._vertexData = flash._Vector.Vector_Impl_._new(numVertices * totalLenOfOneVertex,true);
	}
	,__class__: away3d.animators.data.AnimationSubGeometry
	,__properties__: {get_vertexData:"get_vertexData",get_numVertices:"get_numVertices",get_totalLenOfOneVertex:"get_totalLenOfOneVertex"}
}
away3d.animators.data.ParticleAnimationData = function(index,startTime,duration,delay,particle) {
	this.index = index;
	this.startTime = startTime;
	this.totalTime = duration + delay;
	this.duration = duration;
	this.delay = delay;
	this.startVertexIndex = particle.startVertexIndex;
	this.numVertices = particle.numVertices;
};
$hxClasses["away3d.animators.data.ParticleAnimationData"] = away3d.animators.data.ParticleAnimationData;
away3d.animators.data.ParticleAnimationData.__name__ = ["away3d","animators","data","ParticleAnimationData"];
away3d.animators.data.ParticleAnimationData.prototype = {
	__class__: away3d.animators.data.ParticleAnimationData
}
away3d.library = {}
away3d.library.assets = {}
away3d.library.assets.NamedAssetBase = function(name) {
	if(name == null) name = "null";
	this._name = name;
	this._originalName = name;
	this.updateFullPath();
	flash.events.EventDispatcher.call(this);
};
$hxClasses["away3d.library.assets.NamedAssetBase"] = away3d.library.assets.NamedAssetBase;
away3d.library.assets.NamedAssetBase.__name__ = ["away3d","library","assets","NamedAssetBase"];
away3d.library.assets.NamedAssetBase.__super__ = flash.events.EventDispatcher;
away3d.library.assets.NamedAssetBase.prototype = $extend(flash.events.EventDispatcher.prototype,{
	updateFullPath: function() {
		this._full_path = [this._namespace,this._name];
	}
	,resetAssetPath: function(name,ns,overrideOriginal) {
		if(overrideOriginal == null) overrideOriginal = true;
		this._name = name != null?name:"null";
		this._namespace = ns != null?ns:away3d.library.assets.NamedAssetBase.DEFAULT_NAMESPACE;
		if(overrideOriginal) this._originalName = this._name;
		this.updateFullPath();
	}
	,assetPathEquals: function(name,ns) {
		return this._name == name && (ns == null || this._namespace == ns);
	}
	,get_assetFullPath: function() {
		return this._full_path;
	}
	,get_assetNamespace: function() {
		return this._namespace;
	}
	,set_name: function(val) {
		var prev;
		prev = this._name;
		this._name = val;
		if(this._name == null) this._name = "null";
		this.updateFullPath();
		if(this.hasEventListener(away3d.events.AssetEvent.ASSET_RENAME)) this.dispatchEvent(new away3d.events.AssetEvent(away3d.events.AssetEvent.ASSET_RENAME,js.Boot.__cast(this , away3d.library.assets.IAsset),prev));
		return val;
	}
	,get_name: function() {
		return this._name;
	}
	,set_id: function(newID) {
		this._id = newID;
		return newID;
	}
	,get_id: function() {
		return this._id;
	}
	,get_originalName: function() {
		return this._originalName;
	}
	,__class__: away3d.library.assets.NamedAssetBase
	,__properties__: {get_originalName:"get_originalName",set_id:"set_id",get_id:"get_id",set_name:"set_name",get_name:"get_name",get_assetNamespace:"get_assetNamespace",get_assetFullPath:"get_assetFullPath"}
});
away3d.library.assets.IAsset = function() { }
$hxClasses["away3d.library.assets.IAsset"] = away3d.library.assets.IAsset;
away3d.library.assets.IAsset.__name__ = ["away3d","library","assets","IAsset"];
away3d.library.assets.IAsset.__interfaces__ = [flash.events.IEventDispatcher];
away3d.library.assets.IAsset.prototype = {
	__class__: away3d.library.assets.IAsset
	,__properties__: {set_name:"set_name",get_name:"get_name",set_id:"set_id",get_id:"get_id",get_assetNamespace:"get_assetNamespace",get_assetType:"get_assetType",get_assetFullPath:"get_assetFullPath"}
}
away3d.animators.nodes = {}
away3d.animators.nodes.AnimationNodeBase = function() {
	away3d.library.assets.NamedAssetBase.call(this);
};
$hxClasses["away3d.animators.nodes.AnimationNodeBase"] = away3d.animators.nodes.AnimationNodeBase;
away3d.animators.nodes.AnimationNodeBase.__name__ = ["away3d","animators","nodes","AnimationNodeBase"];
away3d.animators.nodes.AnimationNodeBase.__interfaces__ = [away3d.library.assets.IAsset];
away3d.animators.nodes.AnimationNodeBase.__super__ = away3d.library.assets.NamedAssetBase;
away3d.animators.nodes.AnimationNodeBase.prototype = $extend(away3d.library.assets.NamedAssetBase.prototype,{
	get_assetType: function() {
		return away3d.library.assets.AssetType.ANIMATION_NODE;
	}
	,dispose: function() {
	}
	,get_stateClass: function() {
		return this._stateClass;
	}
	,__class__: away3d.animators.nodes.AnimationNodeBase
	,__properties__: $extend(away3d.library.assets.NamedAssetBase.prototype.__properties__,{get_stateClass:"get_stateClass",get_assetType:"get_assetType"})
});
away3d.animators.states = {}
away3d.animators.states.IAnimationState = function() { }
$hxClasses["away3d.animators.states.IAnimationState"] = away3d.animators.states.IAnimationState;
away3d.animators.states.IAnimationState.__name__ = ["away3d","animators","states","IAnimationState"];
away3d.animators.states.IAnimationState.prototype = {
	__class__: away3d.animators.states.IAnimationState
	,__properties__: {get_positionDelta:"get_positionDelta"}
}
away3d.animators.states.AnimationStateBase = function(animator,animationNode) {
	this._rootDelta = new flash.geom.Vector3D();
	this._positionDeltaDirty = true;
	this._animator = animator;
	this._animationNode = animationNode;
};
$hxClasses["away3d.animators.states.AnimationStateBase"] = away3d.animators.states.AnimationStateBase;
away3d.animators.states.AnimationStateBase.__name__ = ["away3d","animators","states","AnimationStateBase"];
away3d.animators.states.AnimationStateBase.__interfaces__ = [away3d.animators.states.IAnimationState];
away3d.animators.states.AnimationStateBase.prototype = {
	updatePositionDelta: function() {
	}
	,updateTime: function(time) {
		this._time = time - this._startTime;
		this._positionDeltaDirty = true;
	}
	,phase: function(value) {
	}
	,update: function(time) {
		if(this._time == time - this._startTime) return;
		this.updateTime(time);
	}
	,offset: function(startTime) {
		this._startTime = startTime;
		this._positionDeltaDirty = true;
	}
	,get_positionDelta: function() {
		if(this._positionDeltaDirty) this.updatePositionDelta();
		return this._rootDelta;
	}
	,__class__: away3d.animators.states.AnimationStateBase
	,__properties__: {get_positionDelta:"get_positionDelta"}
}
away3d.bounds = {}
away3d.bounds.BoundingVolumeBase = function() {
	this._aabbPoints = flash._Vector.Vector_Impl_._new();
	this._aabbPointsDirty = true;
	this._min = new flash.geom.Vector3D();
	this._max = new flash.geom.Vector3D();
};
$hxClasses["away3d.bounds.BoundingVolumeBase"] = away3d.bounds.BoundingVolumeBase;
away3d.bounds.BoundingVolumeBase.__name__ = ["away3d","bounds","BoundingVolumeBase"];
away3d.bounds.BoundingVolumeBase.prototype = {
	transformFrom: function(bounds,matrix) {
		throw new away3d.errors.AbstractMethodError();
	}
	,classifyToPlane: function(plane) {
		throw new away3d.errors.AbstractMethodError();
		return 0;
	}
	,createBoundingRenderable: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,updateBoundingRenderable: function() {
		throw new away3d.errors.AbstractMethodError();
	}
	,updateAABBPoints: function() {
		var maxX = this._max.x;
		var maxY = this._max.y;
		var maxZ = this._max.z;
		var minX = this._min.x;
		var minY = this._min.y;
		var minZ = this._min.z;
		this._aabbPoints[0] = minX;
		this._aabbPoints[1] = minY;
		this._aabbPoints[2] = minZ;
		this._aabbPoints[3] = maxX;
		this._aabbPoints[4] = minY;
		this._aabbPoints[5] = minZ;
		this._aabbPoints[6] = minX;
		this._aabbPoints[7] = maxY;
		this._aabbPoints[8] = minZ;
		this._aabbPoints[9] = maxX;
		this._aabbPoints[10] = maxY;
		this._aabbPoints[11] = minZ;
		this._aabbPoints[12] = minX;
		this._aabbPoints[13] = minY;
		this._aabbPoints[14] = maxZ;
		this._aabbPoints[15] = maxX;
		this._aabbPoints[16] = minY;
		this._aabbPoints[17] = maxZ;
		this._aabbPoints[18] = minX;
		this._aabbPoints[19] = maxY;
		this._aabbPoints[20] = maxZ;
		this._aabbPoints[21] = maxX;
		this._aabbPoints[22] = maxY;
		this._aabbPoints[23] = maxZ;
		this._aabbPointsDirty = false;
	}
	,containsPoint: function(position) {
		return false;
	}
	,rayIntersection: function(position,direction,targetNormal) {
		return -1;
	}
	,clone: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,overlaps: function(bounds) {
		var min = bounds._min;
		var max = bounds._max;
		return this._max.x > min.x && this._min.x < max.x && this._max.y > min.y && this._min.y < max.y && this._max.z > min.z && this._min.z < max.z;
	}
	,isInFrustum: function(planes,numPlanes) {
		throw new away3d.errors.AbstractMethodError();
		return false;
	}
	,fromExtremes: function(minX,minY,minZ,maxX,maxY,maxZ) {
		this._min.x = minX;
		this._min.y = minY;
		this._min.z = minZ;
		this._max.x = maxX;
		this._max.y = maxY;
		this._max.z = maxZ;
		this._aabbPointsDirty = true;
		if(this._boundingRenderable != null) this.updateBoundingRenderable();
	}
	,fromSphere: function(center,radius) {
		this.fromExtremes(center.x - radius,center.y - radius,center.z - radius,center.x + radius,center.y + radius,center.z + radius);
	}
	,fromGeometry: function(geometry) {
		var subGeoms = geometry.get_subGeometries();
		var numSubGeoms = flash._Vector.Vector_Impl_.get_length(subGeoms);
		var minX;
		var minY;
		var minZ;
		var maxX;
		var maxY;
		var maxZ;
		if(numSubGeoms > 0) {
			var j = 0;
			minX = minY = minZ = 100000;
			maxX = maxY = maxZ = -100000;
			while(j < numSubGeoms) {
				var subGeom = subGeoms[j++];
				var vertices = subGeom.get_vertexData();
				var vertexDataLen = flash._Vector.Vector_Impl_.get_length(vertices);
				var i = subGeom.get_vertexOffset();
				var stride = subGeom.get_vertexStride();
				while(i < vertexDataLen) {
					var v = vertices[i];
					if(v < minX) minX = v; else if(v > maxX) maxX = v;
					v = vertices[i + 1];
					if(v < minY) minY = v; else if(v > maxY) maxY = v;
					v = vertices[i + 2];
					if(v < minZ) minZ = v; else if(v > maxZ) maxZ = v;
					i += stride;
				}
			}
			this.fromExtremes(minX,minY,minZ,maxX,maxY,maxZ);
		} else this.fromExtremes(0,0,0,0,0,0);
	}
	,fromVertices: function(vertices) {
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(vertices);
		var minX;
		var minY;
		var minZ;
		var maxX;
		var maxY;
		var maxZ;
		if(len == 0) {
			this.nullify();
			return;
		}
		var v;
		minX = maxX = vertices[i++];
		minY = maxY = vertices[i++];
		minZ = maxZ = vertices[i++];
		while(i < len) {
			v = vertices[i++];
			if(v < minX) minX = v; else if(v > maxX) maxX = v;
			v = vertices[i++];
			if(v < minY) minY = v; else if(v > maxY) maxY = v;
			v = vertices[i++];
			if(v < minZ) minZ = v; else if(v > maxZ) maxZ = v;
		}
		this.fromExtremes(minX,minY,minZ,maxX,maxY,maxZ);
	}
	,disposeRenderable: function() {
		if(this._boundingRenderable != null) this._boundingRenderable.dispose();
		this._boundingRenderable = null;
	}
	,nullify: function() {
		this._min.x = this._min.y = this._min.z = 0;
		this._max.x = this._max.y = this._max.z = 0;
		this._aabbPointsDirty = true;
		if(this._boundingRenderable != null) this.updateBoundingRenderable();
	}
	,get_boundingRenderable: function() {
		if(this._boundingRenderable == null) {
			this._boundingRenderable = this.createBoundingRenderable();
			this.updateBoundingRenderable();
		}
		return this._boundingRenderable;
	}
	,get_aabbPoints: function() {
		if(this._aabbPointsDirty) this.updateAABBPoints();
		return this._aabbPoints;
	}
	,get_min: function() {
		return this._min;
	}
	,get_max: function() {
		return this._max;
	}
	,__class__: away3d.bounds.BoundingVolumeBase
	,__properties__: {get_max:"get_max",get_min:"get_min",get_aabbPoints:"get_aabbPoints",get_boundingRenderable:"get_boundingRenderable"}
}
away3d.bounds.AxisAlignedBoundingBox = function() {
	this._centerX = 0;
	this._centerY = 0;
	this._centerZ = 0;
	this._halfExtentsX = 0;
	this._halfExtentsY = 0;
	this._halfExtentsZ = 0;
	away3d.bounds.BoundingVolumeBase.call(this);
};
$hxClasses["away3d.bounds.AxisAlignedBoundingBox"] = away3d.bounds.AxisAlignedBoundingBox;
away3d.bounds.AxisAlignedBoundingBox.__name__ = ["away3d","bounds","AxisAlignedBoundingBox"];
away3d.bounds.AxisAlignedBoundingBox.__super__ = away3d.bounds.BoundingVolumeBase;
away3d.bounds.AxisAlignedBoundingBox.prototype = $extend(away3d.bounds.BoundingVolumeBase.prototype,{
	transformFrom: function(bounds,matrix) {
		var aabb = js.Boot.__cast(bounds , away3d.bounds.AxisAlignedBoundingBox);
		var cx = aabb._centerX;
		var cy = aabb._centerY;
		var cz = aabb._centerZ;
		var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		away3d.Stage3DUtils.copyRawDataTo(matrix,raw);
		var m11 = raw[0];
		var m12 = raw[4];
		var m13 = raw[8];
		var m14 = raw[12];
		var m21 = raw[1];
		var m22 = raw[5];
		var m23 = raw[9];
		var m24 = raw[13];
		var m31 = raw[2];
		var m32 = raw[6];
		var m33 = raw[10];
		var m34 = raw[14];
		this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;
		this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;
		this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;
		if(m11 < 0) m11 = -m11;
		if(m12 < 0) m12 = -m12;
		if(m13 < 0) m13 = -m13;
		if(m21 < 0) m21 = -m21;
		if(m22 < 0) m22 = -m22;
		if(m23 < 0) m23 = -m23;
		if(m31 < 0) m31 = -m31;
		if(m32 < 0) m32 = -m32;
		if(m33 < 0) m33 = -m33;
		var hx = aabb._halfExtentsX;
		var hy = aabb._halfExtentsY;
		var hz = aabb._halfExtentsZ;
		this._halfExtentsX = hx * m11 + hy * m12 + hz * m13;
		this._halfExtentsY = hx * m21 + hy * m22 + hz * m23;
		this._halfExtentsZ = hx * m31 + hy * m32 + hz * m33;
		this._min.x = this._centerX - this._halfExtentsX;
		this._min.y = this._centerY - this._halfExtentsY;
		this._min.z = this._centerZ - this._halfExtentsZ;
		this._max.x = this._centerX + this._halfExtentsX;
		this._max.y = this._centerY + this._halfExtentsY;
		this._max.z = this._centerZ + this._halfExtentsZ;
	}
	,classifyToPlane: function(plane) {
		var a = plane.a;
		var b = plane.b;
		var c = plane.c;
		var centerDistance = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;
		if(a < 0) a = -a;
		if(b < 0) b = -b;
		if(c < 0) c = -c;
		var boundOffset = a * this._halfExtentsX + b * this._halfExtentsY + c * this._halfExtentsZ;
		return centerDistance > boundOffset?away3d.core.math.PlaneClassification.FRONT:centerDistance < -boundOffset?away3d.core.math.PlaneClassification.BACK:away3d.core.math.PlaneClassification.INTERSECT;
	}
	,createBoundingRenderable: function() {
		return new away3d.primitives.WireframeCube(1,1,1,16777215,0.5);
	}
	,updateBoundingRenderable: function() {
		this._boundingRenderable.set_scaleX(Math.max(this._halfExtentsX * 2,0.001));
		this._boundingRenderable.set_scaleY(Math.max(this._halfExtentsY * 2,0.001));
		this._boundingRenderable.set_scaleZ(Math.max(this._halfExtentsZ * 2,0.001));
		this._boundingRenderable.set_x(this._centerX);
		this._boundingRenderable.set_y(this._centerY);
		this._boundingRenderable.set_z(this._centerZ);
	}
	,closestPointToPoint: function(point,target) {
		var p;
		if(target == null) target = new flash.geom.Vector3D();
		p = point.x;
		if(p < this._min.x) p = this._min.x;
		if(p > this._max.x) p = this._max.x;
		target.x = p;
		p = point.y;
		if(p < this._min.y) p = this._min.y;
		if(p > this._max.y) p = this._max.y;
		target.y = p;
		p = point.z;
		if(p < this._min.z) p = this._min.z;
		if(p > this._max.z) p = this._max.z;
		target.z = p;
		return target;
	}
	,get_halfExtentsZ: function() {
		return this._halfExtentsZ;
	}
	,get_halfExtentsY: function() {
		return this._halfExtentsY;
	}
	,get_halfExtentsX: function() {
		return this._halfExtentsX;
	}
	,clone: function() {
		var clone = new away3d.bounds.AxisAlignedBoundingBox();
		clone.fromExtremes(this._min.x,this._min.y,this._min.z,this._max.x,this._max.y,this._max.z);
		return clone;
	}
	,fromExtremes: function(minX,minY,minZ,maxX,maxY,maxZ) {
		this._centerX = (maxX + minX) * .5;
		this._centerY = (maxY + minY) * .5;
		this._centerZ = (maxZ + minZ) * .5;
		this._halfExtentsX = (maxX - minX) * .5;
		this._halfExtentsY = (maxY - minY) * .5;
		this._halfExtentsZ = (maxZ - minZ) * .5;
		away3d.bounds.BoundingVolumeBase.prototype.fromExtremes.call(this,minX,minY,minZ,maxX,maxY,maxZ);
	}
	,containsPoint: function(position) {
		var px = position.x - this._centerX;
		var py = position.y - this._centerY;
		var pz = position.z - this._centerZ;
		return px <= this._halfExtentsX && px >= -this._halfExtentsX && py <= this._halfExtentsY && py >= -this._halfExtentsY && pz <= this._halfExtentsZ && pz >= -this._halfExtentsZ;
	}
	,rayIntersection: function(position,direction,targetNormal) {
		if(this.containsPoint(position)) return 0;
		var px = position.x - this._centerX;
		var py = position.y - this._centerY;
		var pz = position.z - this._centerZ;
		var vx = direction.x;
		var vy = direction.y;
		var vz = direction.z;
		var ix;
		var iy;
		var iz;
		var rayEntryDistance = 0;
		var intersects = false;
		if(vx < 0) {
			rayEntryDistance = (this._halfExtentsX - px) / vx;
			if(rayEntryDistance > 0) {
				iy = py + rayEntryDistance * vy;
				iz = pz + rayEntryDistance * vz;
				if(iy > -this._halfExtentsY && iy < this._halfExtentsY && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {
					targetNormal.x = 1;
					targetNormal.y = 0;
					targetNormal.z = 0;
					intersects = true;
				}
			}
		}
		if(!intersects && vx > 0) {
			rayEntryDistance = (-this._halfExtentsX - px) / vx;
			if(rayEntryDistance > 0) {
				iy = py + rayEntryDistance * vy;
				iz = pz + rayEntryDistance * vz;
				if(iy > -this._halfExtentsY && iy < this._halfExtentsY && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {
					targetNormal.x = -1;
					targetNormal.y = 0;
					targetNormal.z = 0;
					intersects = true;
				}
			}
		}
		if(!intersects && vy < 0) {
			rayEntryDistance = (this._halfExtentsY - py) / vy;
			if(rayEntryDistance > 0) {
				ix = px + rayEntryDistance * vx;
				iz = pz + rayEntryDistance * vz;
				if(ix > -this._halfExtentsX && ix < this._halfExtentsX && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {
					targetNormal.x = 0;
					targetNormal.y = 1;
					targetNormal.z = 0;
					intersects = true;
				}
			}
		}
		if(!intersects && vy > 0) {
			rayEntryDistance = (-this._halfExtentsY - py) / vy;
			if(rayEntryDistance > 0) {
				ix = px + rayEntryDistance * vx;
				iz = pz + rayEntryDistance * vz;
				if(ix > -this._halfExtentsX && ix < this._halfExtentsX && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {
					targetNormal.x = 0;
					targetNormal.y = -1;
					targetNormal.z = 0;
					intersects = true;
				}
			}
		}
		if(!intersects && vz < 0) {
			rayEntryDistance = (this._halfExtentsZ - pz) / vz;
			if(rayEntryDistance > 0) {
				ix = px + rayEntryDistance * vx;
				iy = py + rayEntryDistance * vy;
				if(iy > -this._halfExtentsY && iy < this._halfExtentsY && ix > -this._halfExtentsX && ix < this._halfExtentsX) {
					targetNormal.x = 0;
					targetNormal.y = 0;
					targetNormal.z = 1;
					intersects = true;
				}
			}
		}
		if(!intersects && vz > 0) {
			rayEntryDistance = (-this._halfExtentsZ - pz) / vz;
			if(rayEntryDistance > 0) {
				ix = px + rayEntryDistance * vx;
				iy = py + rayEntryDistance * vy;
				if(iy > -this._halfExtentsY && iy < this._halfExtentsY && ix > -this._halfExtentsX && ix < this._halfExtentsX) {
					targetNormal.x = 0;
					targetNormal.y = 0;
					targetNormal.z = -1;
					intersects = true;
				}
			}
		}
		return intersects?rayEntryDistance:-1;
	}
	,isInFrustum: function(planes,numPlanes) {
		var i = 0;
		while(i < numPlanes) {
			var plane = planes[i];
			var a = plane.a;
			var b = plane.b;
			var c = plane.c;
			var flippedExtentX = a < 0?-this._halfExtentsX:this._halfExtentsX;
			var flippedExtentY = b < 0?-this._halfExtentsY:this._halfExtentsY;
			var flippedExtentZ = c < 0?-this._halfExtentsZ:this._halfExtentsZ;
			var projDist = a * (this._centerX + flippedExtentX) + b * (this._centerY + flippedExtentY) + c * (this._centerZ + flippedExtentZ) - plane.d;
			if(projDist < 0) return false;
			++i;
		}
		return true;
	}
	,nullify: function() {
		away3d.bounds.BoundingVolumeBase.prototype.nullify.call(this);
		this._centerX = this._centerY = this._centerZ = 0;
		this._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;
	}
	,__class__: away3d.bounds.AxisAlignedBoundingBox
	,__properties__: $extend(away3d.bounds.BoundingVolumeBase.prototype.__properties__,{get_halfExtentsX:"get_halfExtentsX",get_halfExtentsY:"get_halfExtentsY",get_halfExtentsZ:"get_halfExtentsZ"})
});
away3d.bounds.BoundingSphere = function() {
	this._radius = 0;
	this._centerX = 0;
	this._centerY = 0;
	this._centerZ = 0;
	away3d.bounds.BoundingVolumeBase.call(this);
};
$hxClasses["away3d.bounds.BoundingSphere"] = away3d.bounds.BoundingSphere;
away3d.bounds.BoundingSphere.__name__ = ["away3d","bounds","BoundingSphere"];
away3d.bounds.BoundingSphere.__super__ = away3d.bounds.BoundingVolumeBase;
away3d.bounds.BoundingSphere.prototype = $extend(away3d.bounds.BoundingVolumeBase.prototype,{
	transformFrom: function(bounds,matrix) {
		var sphere = js.Boot.__cast(bounds , away3d.bounds.BoundingSphere);
		var cx = sphere._centerX;
		var cy = sphere._centerY;
		var cz = sphere._centerZ;
		var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		away3d.Stage3DUtils.copyRawDataTo(matrix,raw);
		var m11 = raw[0];
		var m12 = raw[4];
		var m13 = raw[8];
		var m14 = raw[12];
		var m21 = raw[1];
		var m22 = raw[5];
		var m23 = raw[9];
		var m24 = raw[13];
		var m31 = raw[2];
		var m32 = raw[6];
		var m33 = raw[10];
		var m34 = raw[14];
		this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;
		this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;
		this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;
		if(m11 < 0) m11 = -m11;
		if(m12 < 0) m12 = -m12;
		if(m13 < 0) m13 = -m13;
		if(m21 < 0) m21 = -m21;
		if(m22 < 0) m22 = -m22;
		if(m23 < 0) m23 = -m23;
		if(m31 < 0) m31 = -m31;
		if(m32 < 0) m32 = -m32;
		if(m33 < 0) m33 = -m33;
		var r = sphere._radius;
		var rx = m11 + m12 + m13;
		var ry = m21 + m22 + m23;
		var rz = m31 + m32 + m33;
		this._radius = r * Math.sqrt(rx * rx + ry * ry + rz * rz);
		this._min.x = this._centerX - this._radius;
		this._min.y = this._centerY - this._radius;
		this._min.z = this._centerZ - this._radius;
		this._max.x = this._centerX + this._radius;
		this._max.y = this._centerY + this._radius;
		this._max.z = this._centerZ + this._radius;
	}
	,classifyToPlane: function(plane) {
		var a = plane.a;
		var b = plane.b;
		var c = plane.c;
		var dd = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;
		if(a < 0) a = -a;
		if(b < 0) b = -b;
		if(c < 0) c = -c;
		var rr = (a + b + c) * this._radius;
		return dd > rr?away3d.core.math.PlaneClassification.FRONT:dd < -rr?away3d.core.math.PlaneClassification.BACK:away3d.core.math.PlaneClassification.INTERSECT;
	}
	,createBoundingRenderable: function() {
		return new away3d.primitives.WireframeSphere(1,16,12,16777215,0.5);
	}
	,updateBoundingRenderable: function() {
		var sc = this._radius;
		if(sc == 0) sc = 0.001;
		this._boundingRenderable.set_scaleX(sc);
		this._boundingRenderable.set_scaleY(sc);
		this._boundingRenderable.set_scaleZ(sc);
		this._boundingRenderable.set_x(this._centerX);
		this._boundingRenderable.set_y(this._centerY);
		this._boundingRenderable.set_z(this._centerZ);
	}
	,containsPoint: function(position) {
		var px = position.x - this._centerX;
		var py = position.y - this._centerY;
		var pz = position.z - this._centerZ;
		var distance = Math.sqrt(px * px + py * py + pz * pz);
		return distance <= this._radius;
	}
	,rayIntersection: function(position,direction,targetNormal) {
		if(this.containsPoint(position)) return 0;
		var px = position.x - this._centerX;
		var py = position.y - this._centerY;
		var pz = position.z - this._centerZ;
		var vx = direction.x;
		var vy = direction.y;
		var vz = direction.z;
		var rayEntryDistance;
		var a = vx * vx + vy * vy + vz * vz;
		var b = 2 * (px * vx + py * vy + pz * vz);
		var c = px * px + py * py + pz * pz - this._radius * this._radius;
		var det = b * b - 4 * a * c;
		if(det >= 0) {
			var sqrtDet = Math.sqrt(det);
			rayEntryDistance = (-b - sqrtDet) / (2 * a);
			if(rayEntryDistance >= 0) {
				targetNormal.x = px + rayEntryDistance * vx;
				targetNormal.y = py + rayEntryDistance * vy;
				targetNormal.z = pz + rayEntryDistance * vz;
				targetNormal.normalize();
				return rayEntryDistance;
			}
		}
		return -1;
	}
	,clone: function() {
		var clone = new away3d.bounds.BoundingSphere();
		clone.fromSphere(new flash.geom.Vector3D(this._centerX,this._centerY,this._centerZ),this._radius);
		return clone;
	}
	,fromExtremes: function(minX,minY,minZ,maxX,maxY,maxZ) {
		this._centerX = (maxX + minX) * .5;
		this._centerY = (maxY + minY) * .5;
		this._centerZ = (maxZ + minZ) * .5;
		var d = maxX - minX;
		var y = maxY - minY;
		var z = maxZ - minZ;
		if(y > d) d = y;
		if(z > d) d = z;
		this._radius = d * Math.sqrt(.5);
		away3d.bounds.BoundingVolumeBase.prototype.fromExtremes.call(this,minX,minY,minZ,maxX,maxY,maxZ);
	}
	,fromSphere: function(center,radius) {
		this._centerX = center.x;
		this._centerY = center.y;
		this._centerZ = center.z;
		this._radius = radius;
		this._max.x = this._centerX + radius;
		this._max.y = this._centerY + radius;
		this._max.z = this._centerZ + radius;
		this._min.x = this._centerX - radius;
		this._min.y = this._centerY - radius;
		this._min.z = this._centerZ - radius;
		this._aabbPointsDirty = true;
		if(this._boundingRenderable != null) this.updateBoundingRenderable();
	}
	,isInFrustum: function(planes,numPlanes) {
		var i = 0;
		while(i < numPlanes) {
			var plane = planes[i];
			var flippedExtentX = plane.a < 0?-this._radius:this._radius;
			var flippedExtentY = plane.b < 0?-this._radius:this._radius;
			var flippedExtentZ = plane.c < 0?-this._radius:this._radius;
			var projDist = plane.a * (this._centerX + flippedExtentX) + plane.b * (this._centerY + flippedExtentY) + plane.c * (this._centerZ + flippedExtentZ) - plane.d;
			if(projDist < 0) return false;
			++i;
		}
		return true;
	}
	,nullify: function() {
		away3d.bounds.BoundingVolumeBase.prototype.nullify.call(this);
		this._centerX = this._centerY = this._centerZ = 0;
		this._radius = 0;
	}
	,get_radius: function() {
		return this._radius;
	}
	,__class__: away3d.bounds.BoundingSphere
	,__properties__: $extend(away3d.bounds.BoundingVolumeBase.prototype.__properties__,{get_radius:"get_radius"})
});
away3d.bounds.NullBounds = function(alwaysIn,renderable) {
	if(alwaysIn == null) alwaysIn = true;
	away3d.bounds.BoundingVolumeBase.call(this);
	this._alwaysIn = alwaysIn;
	this._renderable = renderable;
	this._max.x = this._max.y = this._max.z = 100000;
	this._min.x = this._min.y = this._min.z = this._alwaysIn?-100000:100000;
};
$hxClasses["away3d.bounds.NullBounds"] = away3d.bounds.NullBounds;
away3d.bounds.NullBounds.__name__ = ["away3d","bounds","NullBounds"];
away3d.bounds.NullBounds.__super__ = away3d.bounds.BoundingVolumeBase;
away3d.bounds.NullBounds.prototype = $extend(away3d.bounds.BoundingVolumeBase.prototype,{
	transformFrom: function(bounds,matrix) {
		this._alwaysIn = (js.Boot.__cast(bounds , away3d.bounds.NullBounds))._alwaysIn;
	}
	,classifyToPlane: function(plane) {
		return away3d.core.math.PlaneClassification.INTERSECT;
	}
	,fromExtremes: function(minX,minY,minZ,maxX,maxY,maxZ) {
	}
	,fromSphere: function(center,radius) {
	}
	,fromGeometry: function(geometry) {
	}
	,isInFrustum: function(planes,numPlanes) {
		return this._alwaysIn;
	}
	,createBoundingRenderable: function() {
		return this._renderable != null?this._renderable:new away3d.primitives.WireframeSphere(100,16,12,16777215,0.5);
	}
	,clone: function() {
		return new away3d.bounds.NullBounds(this._alwaysIn);
	}
	,__class__: away3d.bounds.NullBounds
});
away3d.core = {}
away3d.core.base = {}
away3d.core.base.Object3D = function() {
	this._smallestNumber = 0.0000000000000000000001;
	this._transformDirty = true;
	this._rotationX = 0;
	this._rotationY = 0;
	this._rotationZ = 0;
	this._eulers = new flash.geom.Vector3D();
	this._flipY = new flash.geom.Matrix3D();
	this._zOffset = 0;
	this._transform = new flash.geom.Matrix3D();
	this._scaleX = 1;
	this._scaleY = 1;
	this._scaleZ = 1;
	this._x = 0;
	this._y = 0;
	this._z = 0;
	this._pivotPoint = new flash.geom.Vector3D();
	this._pivotZero = true;
	this._pos = new flash.geom.Vector3D();
	this._rot = new flash.geom.Vector3D();
	this._sca = new flash.geom.Vector3D();
	this._transformComponents = flash._Vector.Vector_Impl_._new(3,true);
	this._transformComponents[0] = this._pos;
	this._transformComponents[1] = this._rot;
	this._transformComponents[2] = this._sca;
	this._transform.identity();
	this._flipY.append(new flash.geom.Matrix3D([1,0.0,0.0,0.0,0.0,-1,0.0,0.0,0.0,0.0,1,0.0,0.0,0.0,0.0,1.0]));
	away3d.library.assets.NamedAssetBase.call(this);
};
$hxClasses["away3d.core.base.Object3D"] = away3d.core.base.Object3D;
away3d.core.base.Object3D.__name__ = ["away3d","core","base","Object3D"];
away3d.core.base.Object3D.__super__ = away3d.library.assets.NamedAssetBase;
away3d.core.base.Object3D.prototype = $extend(away3d.library.assets.NamedAssetBase.prototype,{
	set_zOffset: function(value) {
		this._zOffset = value;
		return value;
	}
	,get_zOffset: function() {
		return this._zOffset;
	}
	,updateTransform: function() {
		this._pos.x = this._x;
		this._pos.y = this._y;
		this._pos.z = this._z;
		this._rot.x = this._rotationX;
		this._rot.y = this._rotationY;
		this._rot.z = this._rotationZ;
		this._sca.x = this._scaleX;
		this._sca.y = this._scaleY;
		this._sca.z = this._scaleZ;
		this._transform.recompose(this._transformComponents);
		if(!this._pivotZero) {
			this._transform.prependTranslation(-this._pivotPoint.x,-this._pivotPoint.y,-this._pivotPoint.z);
			this._transform.appendTranslation(this._pivotPoint.x,this._pivotPoint.y,this._pivotPoint.z);
		}
		this._transformDirty = false;
		this._positionDirty = false;
		this._rotationDirty = false;
		this._scaleDirty = false;
	}
	,invalidateTransform: function() {
		this._transformDirty = true;
	}
	,disposeAsset: function() {
		this.dispose();
	}
	,dispose: function() {
	}
	,lookAt: function(target,upAxis) {
		var yAxis;
		var zAxis;
		var xAxis;
		var raw;
		if(upAxis == null) upAxis = new flash.geom.Vector3D(0,1,0);
		zAxis = target.subtract(this.get_position());
		zAxis.normalize();
		xAxis = new flash.geom.Vector3D(upAxis.y * zAxis.z - upAxis.z * zAxis.y,upAxis.z * zAxis.x - upAxis.x * zAxis.z,upAxis.x * zAxis.y - upAxis.y * zAxis.x,1);
		xAxis.normalize();
		if(Math.sqrt(xAxis.x * xAxis.x + xAxis.y * xAxis.y + xAxis.z * xAxis.z) < .05) xAxis = upAxis.crossProduct(new flash.geom.Vector3D(0,0,1));
		yAxis = new flash.geom.Vector3D(zAxis.y * xAxis.z - zAxis.z * xAxis.y,zAxis.z * xAxis.x - zAxis.x * xAxis.z,zAxis.x * xAxis.y - zAxis.y * xAxis.x,1);
		raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		raw[0] = this._scaleX * xAxis.x;
		raw[1] = this._scaleX * xAxis.y;
		raw[2] = this._scaleX * xAxis.z;
		raw[3] = 0;
		raw[4] = this._scaleY * yAxis.x;
		raw[5] = this._scaleY * yAxis.y;
		raw[6] = this._scaleY * yAxis.z;
		raw[7] = 0;
		raw[8] = this._scaleZ * zAxis.x;
		raw[9] = this._scaleZ * zAxis.y;
		raw[10] = this._scaleZ * zAxis.z;
		raw[11] = 0;
		raw[12] = this._x;
		raw[13] = this._y;
		raw[14] = this._z;
		raw[15] = 1;
		away3d.Stage3DUtils.copyRawDataFrom(this._transform,raw);
		this.set_transform(this.get_transform());
		if(zAxis.z < 0) {
			this.set_rotationY(180 - this.get_rotationY());
			var _g = this;
			_g.set_rotationX(_g.get_rotationX() - 180);
			var _g = this;
			_g.set_rotationZ(_g.get_rotationZ() - 180);
		}
	}
	,rotate: function(axis,angle) {
		var m = new flash.geom.Matrix3D();
		m.prependRotation(angle,axis,null);
		var vec = m.decompose()[1];
		this._rotationX += vec.x;
		this._rotationY += vec.y;
		this._rotationZ += vec.z;
		this.invalidateRotation();
	}
	,rotateTo: function(ax,ay,az) {
		this._rotationX = ax * away3d.core.math.MathConsts.DEGREES_TO_RADIANS;
		this._rotationY = ay * away3d.core.math.MathConsts.DEGREES_TO_RADIANS;
		this._rotationZ = az * away3d.core.math.MathConsts.DEGREES_TO_RADIANS;
		this.invalidateRotation();
	}
	,clone: function() {
		var clone = new away3d.core.base.Object3D();
		clone.set_pivotPoint(this.get_pivotPoint());
		clone.set_transform(this.get_transform());
		clone.set_name(this.get_name());
		return clone;
	}
	,roll: function(angle) {
		this.rotate(new flash.geom.Vector3D(0,0,1),angle);
	}
	,yaw: function(angle) {
		this.rotate(new flash.geom.Vector3D(0,1,0),angle);
	}
	,pitch: function(angle) {
		this.rotate(new flash.geom.Vector3D(1,0,0),angle);
	}
	,translateLocal: function(axis,distance) {
		var x = axis.x;
		var y = axis.y;
		var z = axis.z;
		var len = distance / Math.sqrt(x * x + y * y + z * z);
		this.get_transform().prependTranslation(x * len,y * len,z * len);
		away3d.Stage3DUtils.copyColumnTo(this._transform,3,this._pos);
		this._x = this._pos.x;
		this._y = this._pos.y;
		this._z = this._pos.z;
		this.invalidatePosition();
	}
	,translate: function(axis,distance) {
		var x = axis.x;
		var y = axis.y;
		var z = axis.z;
		var len = distance / Math.sqrt(x * x + y * y + z * z);
		this._x += x * len;
		this._y += y * len;
		this._z += z * len;
		this.invalidatePosition();
	}
	,movePivot: function(dx,dy,dz) {
		if(this._pivotPoint == null) this._pivotPoint = new flash.geom.Vector3D();
		this._pivotPoint.x += dx;
		this._pivotPoint.y += dy;
		this._pivotPoint.z += dz;
		this.invalidatePivot();
	}
	,moveTo: function(dx,dy,dz) {
		if(this._x == dx && this._y == dy && this._z == dz) return;
		this._x = dx;
		this._y = dy;
		this._z = dz;
		this.invalidatePosition();
	}
	,moveDown: function(distance) {
		this.translateLocal(new flash.geom.Vector3D(0,1,0),-distance);
	}
	,moveUp: function(distance) {
		this.translateLocal(new flash.geom.Vector3D(0,1,0),distance);
	}
	,moveRight: function(distance) {
		this.translateLocal(new flash.geom.Vector3D(1,0,0),distance);
	}
	,moveLeft: function(distance) {
		this.translateLocal(new flash.geom.Vector3D(1,0,0),-distance);
	}
	,moveBackward: function(distance) {
		this.translateLocal(new flash.geom.Vector3D(0,0,1),-distance);
	}
	,moveForward: function(distance) {
		this.translateLocal(new flash.geom.Vector3D(0,0,1),distance);
	}
	,scale: function(value) {
		this._scaleX *= value;
		this._scaleY *= value;
		this._scaleZ *= value;
		this.invalidateScale();
	}
	,get_downVector: function() {
		var director = away3d.core.math.Matrix3DUtils.getUp(this.get_transform());
		director.x *= -1;
		director.y *= -1;
		director.z *= -1;
		return director;
	}
	,get_leftVector: function() {
		var director = away3d.core.math.Matrix3DUtils.getRight(this.get_transform());
		director.x *= -1;
		director.y *= -1;
		director.z *= -1;
		return director;
	}
	,get_backVector: function() {
		var director = away3d.core.math.Matrix3DUtils.getForward(this.get_transform());
		director.x *= -1;
		director.y *= -1;
		director.z *= -1;
		return director;
	}
	,get_upVector: function() {
		return away3d.core.math.Matrix3DUtils.getUp(this.get_transform());
	}
	,get_rightVector: function() {
		return away3d.core.math.Matrix3DUtils.getRight(this.get_transform());
	}
	,get_forwardVector: function() {
		return away3d.core.math.Matrix3DUtils.getForward(this.get_transform());
	}
	,set_position: function(value) {
		this._x = value.x;
		this._y = value.y;
		this._z = value.z;
		this.invalidatePosition();
		return value;
	}
	,get_position: function() {
		away3d.Stage3DUtils.copyColumnTo(this.get_transform(),3,this._pos);
		return this._pos.clone();
	}
	,set_pivotPoint: function(pivot) {
		this._pivotPoint = new flash.geom.Vector3D(pivot.x,pivot.y,pivot.z,pivot.w);
		this.invalidatePivot();
		return pivot;
	}
	,get_pivotPoint: function() {
		return this._pivotPoint;
	}
	,set_transform: function(val) {
		if(val.rawData[0] == 0) {
			var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
			away3d.Stage3DUtils.copyRawDataTo(val,raw);
			raw[0] = this._smallestNumber;
			away3d.Stage3DUtils.copyRawDataFrom(val,raw);
		}
		var elements = val.decompose();
		var vec;
		vec = elements[0];
		if(this._x != vec.x || this._y != vec.y || this._z != vec.z) {
			this._x = vec.x;
			this._y = vec.y;
			this._z = vec.z;
			this.invalidatePosition();
		}
		vec = elements[1];
		if(this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {
			this._rotationX = vec.x;
			this._rotationY = vec.y;
			this._rotationZ = vec.z;
			this.invalidateRotation();
		}
		vec = elements[2];
		if(this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {
			this._scaleX = vec.x;
			this._scaleY = vec.y;
			this._scaleZ = vec.z;
			this.invalidateScale();
		}
		return val;
	}
	,get_transform: function() {
		if(this._transformDirty) this.updateTransform();
		return this._transform;
	}
	,set_eulers: function(value) {
		this._rotationX = value.x * away3d.core.math.MathConsts.DEGREES_TO_RADIANS;
		this._rotationY = value.y * away3d.core.math.MathConsts.DEGREES_TO_RADIANS;
		this._rotationZ = value.z * away3d.core.math.MathConsts.DEGREES_TO_RADIANS;
		this.invalidateRotation();
		return value;
	}
	,get_eulers: function() {
		this._eulers.x = this._rotationX * away3d.core.math.MathConsts.RADIANS_TO_DEGREES;
		this._eulers.y = this._rotationY * away3d.core.math.MathConsts.RADIANS_TO_DEGREES;
		this._eulers.z = this._rotationZ * away3d.core.math.MathConsts.RADIANS_TO_DEGREES;
		return this._eulers;
	}
	,set_scaleZ: function(val) {
		if(this._scaleZ == val) return val;
		this._scaleZ = val;
		this.invalidateScale();
		return val;
	}
	,get_scaleZ: function() {
		return this._scaleZ;
	}
	,set_scaleY: function(val) {
		if(this._scaleY == val) return val;
		this._scaleY = val;
		this.invalidateScale();
		return val;
	}
	,get_scaleY: function() {
		return this._scaleY;
	}
	,set_scaleX: function(val) {
		if(this._scaleX == val) return val;
		this._scaleX = val;
		this.invalidateScale();
		return val;
	}
	,get_scaleX: function() {
		return this._scaleX;
	}
	,set_rotationZ: function(val) {
		if(this.get_rotationZ() == val) return val;
		this._rotationZ = val * away3d.core.math.MathConsts.DEGREES_TO_RADIANS;
		this.invalidateRotation();
		return val;
	}
	,get_rotationZ: function() {
		return this._rotationZ * away3d.core.math.MathConsts.RADIANS_TO_DEGREES;
	}
	,set_rotationY: function(val) {
		if(this.get_rotationY() == val) return val;
		this._rotationY = val * away3d.core.math.MathConsts.DEGREES_TO_RADIANS;
		this.invalidateRotation();
		return val;
	}
	,get_rotationY: function() {
		return this._rotationY * away3d.core.math.MathConsts.RADIANS_TO_DEGREES;
	}
	,set_rotationX: function(val) {
		if(this.get_rotationX() == val) return val;
		this._rotationX = val * away3d.core.math.MathConsts.DEGREES_TO_RADIANS;
		this.invalidateRotation();
		return val;
	}
	,get_rotationX: function() {
		return this._rotationX * away3d.core.math.MathConsts.RADIANS_TO_DEGREES;
	}
	,set_z: function(val) {
		if(this._z == val) return val;
		this._z = val;
		this.invalidatePosition();
		return val;
	}
	,get_z: function() {
		return this._z;
	}
	,set_y: function(val) {
		if(this._y == val) return val;
		this._y = val;
		this.invalidatePosition();
		return val;
	}
	,get_y: function() {
		return this._y;
	}
	,set_x: function(val) {
		if(this._x == val) return val;
		this._x = val;
		this.invalidatePosition();
		return val;
	}
	,get_x: function() {
		return this._x;
	}
	,notifyScaleChanged: function() {
		if(this._scaleChanged == null) this._scaleChanged = new away3d.events.Object3DEvent(away3d.events.Object3DEvent.SCALE_CHANGED,this);
		this.dispatchEvent(this._scaleChanged);
	}
	,invalidateScale: function() {
		if(this._scaleDirty) return;
		this._scaleDirty = true;
		this.invalidateTransform();
		if(this._listenToScaleChanged) this.notifyScaleChanged();
	}
	,notifyRotationChanged: function() {
		if(this._rotationChanged == null) this._rotationChanged = new away3d.events.Object3DEvent(away3d.events.Object3DEvent.ROTATION_CHANGED,this);
		this.dispatchEvent(this._rotationChanged);
	}
	,invalidateRotation: function() {
		if(this._rotationDirty) return;
		this._rotationDirty = true;
		this.invalidateTransform();
		if(this._listenToRotationChanged) this.notifyRotationChanged();
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		away3d.library.assets.NamedAssetBase.prototype.removeEventListener.call(this,type,listener,useCapture);
		if(this.hasEventListener(type)) return;
		switch(type) {
		case away3d.events.Object3DEvent.POSITION_CHANGED:
			this._listenToPositionChanged = false;
			break;
		case away3d.events.Object3DEvent.ROTATION_CHANGED:
			this._listenToRotationChanged = false;
			break;
		case away3d.events.Object3DEvent.SCALE_CHANGED:
			this._listenToScaleChanged = false;
			break;
		}
	}
	,addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		away3d.library.assets.NamedAssetBase.prototype.addEventListener.call(this,type,listener,useCapture,priority,useWeakReference);
		switch(type) {
		case away3d.events.Object3DEvent.POSITION_CHANGED:
			this._listenToPositionChanged = true;
			break;
		case away3d.events.Object3DEvent.ROTATION_CHANGED:
			this._listenToRotationChanged = true;
			break;
		case away3d.events.Object3DEvent.SCALE_CHANGED:
			this._listenToRotationChanged = true;
			break;
		}
	}
	,notifyPositionChanged: function() {
		if(this._positionChanged == null) this._positionChanged = new away3d.events.Object3DEvent(away3d.events.Object3DEvent.POSITION_CHANGED,this);
		this.dispatchEvent(this._positionChanged);
	}
	,invalidatePosition: function() {
		if(this._positionDirty) return;
		this._positionDirty = true;
		this.invalidateTransform();
		if(this._listenToPositionChanged) this.notifyPositionChanged();
	}
	,invalidatePivot: function() {
		this._pivotZero = this._pivotPoint.x == 0 && this._pivotPoint.y == 0 && this._pivotPoint.z == 0;
		this.invalidateTransform();
	}
	,__class__: away3d.core.base.Object3D
	,__properties__: $extend(away3d.library.assets.NamedAssetBase.prototype.__properties__,{set_x:"set_x",get_x:"get_x",set_y:"set_y",get_y:"get_y",set_z:"set_z",get_z:"get_z",set_rotationX:"set_rotationX",get_rotationX:"get_rotationX",set_rotationY:"set_rotationY",get_rotationY:"get_rotationY",set_rotationZ:"set_rotationZ",get_rotationZ:"get_rotationZ",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleZ:"set_scaleZ",get_scaleZ:"get_scaleZ",set_eulers:"set_eulers",get_eulers:"get_eulers",set_transform:"set_transform",get_transform:"get_transform",set_pivotPoint:"set_pivotPoint",get_pivotPoint:"get_pivotPoint",set_position:"set_position",get_position:"get_position",get_forwardVector:"get_forwardVector",get_rightVector:"get_rightVector",get_upVector:"get_upVector",get_backVector:"get_backVector",get_leftVector:"get_leftVector",get_downVector:"get_downVector",set_zOffset:"set_zOffset",get_zOffset:"get_zOffset"})
});
away3d.containers = {}
away3d.containers.ObjectContainer3D = function() {
	this._sceneTransform = new flash.geom.Matrix3D();
	this._sceneTransformDirty = true;
	this._children = flash._Vector.Vector_Impl_._new();
	this._mouseChildren = true;
	this._inverseSceneTransform = new flash.geom.Matrix3D();
	this._inverseSceneTransformDirty = true;
	this._scenePosition = new flash.geom.Vector3D();
	this._scenePositionDirty = true;
	this._explicitVisibility = true;
	this._implicitVisibility = true;
	this._ignoreTransform = false;
	away3d.core.base.Object3D.call(this);
};
$hxClasses["away3d.containers.ObjectContainer3D"] = away3d.containers.ObjectContainer3D;
away3d.containers.ObjectContainer3D.__name__ = ["away3d","containers","ObjectContainer3D"];
away3d.containers.ObjectContainer3D.__interfaces__ = [away3d.library.assets.IAsset];
away3d.containers.ObjectContainer3D.__super__ = away3d.core.base.Object3D;
away3d.containers.ObjectContainer3D.prototype = $extend(away3d.core.base.Object3D.prototype,{
	removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		away3d.core.base.Object3D.prototype.removeEventListener.call(this,type,listener,useCapture);
		if(this.hasEventListener(type)) return;
		switch(type) {
		case away3d.events.Object3DEvent.SCENETRANSFORM_CHANGED:
			this._listenToSceneTransformChanged = false;
			break;
		case away3d.events.Object3DEvent.SCENE_CHANGED:
			this._listenToSceneChanged = false;
			break;
		}
	}
	,addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		away3d.core.base.Object3D.prototype.addEventListener.call(this,type,listener,useCapture,priority,useWeakReference);
		switch(type) {
		case away3d.events.Object3DEvent.SCENETRANSFORM_CHANGED:
			this._listenToSceneTransformChanged = true;
			break;
		case away3d.events.Object3DEvent.SCENE_CHANGED:
			this._listenToSceneChanged = true;
			break;
		}
	}
	,updateImplicitVisibility: function() {
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		this._implicitVisibility = this._parent._explicitVisibility && this._parent._implicitVisibility;
		var i = 0;
		while(i < len) {
			this._children[i].updateImplicitVisibility();
			++i;
		}
	}
	,dispatchEvent: function(event) {
		var ret = away3d.core.base.Object3D.prototype.dispatchEvent.call(this,event);
		if(event.bubbles) {
			if(this._parent != null) this._parent.dispatchEvent(event); else if(this._scene != null) this._scene.dispatchEvent(event);
		}
		return ret;
	}
	,rotate: function(axis,angle) {
		away3d.core.base.Object3D.prototype.rotate.call(this,axis,angle);
		this.notifySceneTransformChange();
	}
	,clone: function() {
		var clone = new away3d.containers.ObjectContainer3D();
		clone.set_pivotPoint(this.get_pivotPoint());
		clone.set_transform(this.get_transform());
		clone.set_partition(this.get_partition());
		clone.set_name(this.get_name());
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		var i = 0;
		while(i < len) {
			clone.addChild(js.Boot.__cast(this._children[i].clone() , away3d.containers.ObjectContainer3D));
			++i;
		}
		return clone;
	}
	,disposeWithChildren: function() {
		this.dispose();
		while(this.get_numChildren() > 0) this.getChildAt(0).dispose();
	}
	,dispose: function() {
		if(this.get_parent() != null) this.get_parent().removeChild(this);
	}
	,translateLocal: function(axis,distance) {
		away3d.core.base.Object3D.prototype.translateLocal.call(this,axis,distance);
		this.notifySceneTransformChange();
	}
	,lookAt: function(target,upAxis) {
		away3d.core.base.Object3D.prototype.lookAt.call(this,target,upAxis);
		this.notifySceneTransformChange();
	}
	,get_numChildren: function() {
		return flash._Vector.Vector_Impl_.get_length(this._children);
	}
	,getChildAt: function(index) {
		return this._children[index];
	}
	,removeChildInternal: function(childIndex,child) {
		flash._Vector.Vector_Impl_.splice(this._children,childIndex,1);
		child.setParent(null);
		if(child._explicitPartition == null) child.set_implicitPartition(null);
	}
	,removeChildAt: function(index) {
		var child = this._children[index];
		this.removeChildInternal(index,child);
	}
	,removeChild: function(child) {
		if(child == null) throw new flash.errors.Error("Parameter child cannot be null");
		var childIndex = flash._Vector.Vector_Impl_.indexOf(this._children,child);
		if(childIndex == -1) throw new flash.errors.Error("Parameter is not a child of the caller");
		this.removeChildInternal(childIndex,child);
	}
	,addChildren: function(childarray) {
		var _g = 0;
		while(_g < childarray.length) {
			var child = childarray[_g];
			++_g;
			this.addChild(child);
		}
	}
	,addChild: function(child) {
		if(child == null) throw new flash.errors.Error("Parameter child cannot be null.");
		if(child._parent != null) child._parent.removeChild(child);
		if(child._explicitPartition == null) child.set_implicitPartition(this._implicitPartition);
		child.setParent(this);
		child.set_scene(this._scene);
		child.notifySceneTransformChange();
		child.updateMouseChildren();
		child.updateImplicitVisibility();
		flash._Vector.Vector_Impl_.push(this._children,child);
		return child;
	}
	,contains: function(child) {
		return flash._Vector.Vector_Impl_.indexOf(this._children,child) >= 0;
	}
	,get_parent: function() {
		return this._parent;
	}
	,get_inverseSceneTransform: function() {
		if(this._inverseSceneTransformDirty) {
			this._inverseSceneTransform.copyFrom(this.get_sceneTransform());
			this._inverseSceneTransform.invert();
			this._inverseSceneTransformDirty = false;
		}
		return this._inverseSceneTransform;
	}
	,set_scene: function(value) {
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		while(i < len) this._children[i++].set_scene(value);
		if(this._scene == value) return value;
		if(value == null) this._oldScene = this._scene;
		if(this._explicitPartition != null && this._oldScene != null && this._oldScene != this._scene) this.set_partition(null);
		if(value != null) this._oldScene = null;
		this._scene = value;
		if(this._scene != null) this._scene.dispatchEvent(new away3d.events.Scene3DEvent(away3d.events.Scene3DEvent.ADDED_TO_SCENE,this)); else if(this._oldScene != null) this._oldScene.dispatchEvent(new away3d.events.Scene3DEvent(away3d.events.Scene3DEvent.REMOVED_FROM_SCENE,this));
		return value;
	}
	,get_scene: function() {
		return this._scene;
	}
	,get_sceneTransform: function() {
		if(this._sceneTransformDirty) this.updateSceneTransform();
		return this._sceneTransform;
	}
	,set_partition: function(value) {
		this._explicitPartition = value;
		this.set_implicitPartition(value != null?value:this._parent != null?this._parent.get_implicitPartition():null);
		return value;
	}
	,get_partition: function() {
		return this._explicitPartition;
	}
	,get_maxZ: function() {
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		var max = -100000;
		var m;
		while(i < len) {
			var child = this._children[i++];
			m = child.get_maxZ() + child.get_z();
			if(m > max) max = m;
		}
		return max;
	}
	,get_maxY: function() {
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		var max = -100000;
		var m;
		while(i < len) {
			var child = this._children[i++];
			m = child.get_maxY() + child.get_y();
			if(m > max) max = m;
		}
		return max;
	}
	,get_maxX: function() {
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		var max = -100000;
		var m;
		while(i < len) {
			var child = this._children[i++];
			m = child.get_maxX() + child.get_x();
			if(m > max) max = m;
		}
		return max;
	}
	,get_minZ: function() {
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		var min = 100000;
		var m;
		while(i < len) {
			var child = this._children[i++];
			m = child.get_minZ() + child.get_z();
			if(m < min) min = m;
		}
		return min;
	}
	,get_minY: function() {
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		var min = 100000;
		var m;
		while(i < len) {
			var child = this._children[i++];
			m = child.get_minY() + child.get_y();
			if(m < min) min = m;
		}
		return min;
	}
	,get_minX: function() {
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		var min = 100000;
		var m;
		while(i < len) {
			var child = this._children[i++];
			m = child.get_minX() + child.get_x();
			if(m < min) min = m;
		}
		return min;
	}
	,get_scenePosition: function() {
		if(this._scenePositionDirty) {
			away3d.Stage3DUtils.copyColumnTo(this.get_sceneTransform(),3,this._scenePosition);
			this._scenePositionDirty = false;
		}
		return this._scenePosition;
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.CONTAINER;
	}
	,set_visible: function(value) {
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		this._explicitVisibility = value;
		var i = 0;
		while(i < len) {
			this._children[i].updateImplicitVisibility();
			++i;
		}
		return value;
	}
	,get_visible: function() {
		return this._explicitVisibility;
	}
	,set_mouseChildren: function(value) {
		this._mouseChildren = value;
		this.updateMouseChildren();
		return value;
	}
	,get_mouseChildren: function() {
		return this._mouseChildren;
	}
	,updateSceneTransform: function() {
		if(this._parent != null && !this._parent._isRoot) {
			this._sceneTransform.copyFrom(this._parent.get_sceneTransform());
			this._sceneTransform.prepend(this.get_transform());
		} else this._sceneTransform.copyFrom(this.get_transform());
		this._sceneTransformDirty = false;
	}
	,invalidateSceneTransform: function() {
		this._sceneTransformDirty = !this._ignoreTransform;
		this._inverseSceneTransformDirty = !this._ignoreTransform;
		this._scenePositionDirty = !this._ignoreTransform;
	}
	,invalidateTransform: function() {
		away3d.core.base.Object3D.prototype.invalidateTransform.call(this);
		this.notifySceneTransformChange();
	}
	,set_mouseEnabled: function(value) {
		this._mouseEnabled = value;
		this.updateMouseChildren();
		return value;
	}
	,get_mouseEnabled: function() {
		return this._mouseEnabled;
	}
	,updateMouseChildren: function() {
		if(this._parent != null && !this._parent._isRoot) this._ancestorsAllowMouseEnabled = this.get_parent()._ancestorsAllowMouseEnabled && this._parent.get_mouseChildren(); else this._ancestorsAllowMouseEnabled = this.get_mouseChildren();
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		var i = 0;
		while(i < len) {
			this._children[i].updateMouseChildren();
			++i;
		}
	}
	,notifySceneChange: function() {
		this.notifySceneTransformChange();
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		while(i < len) this._children[i++].notifySceneChange();
		if(this._listenToSceneChanged) {
			if(this._scenechanged == null) this._scenechanged = new away3d.events.Object3DEvent(away3d.events.Object3DEvent.SCENE_CHANGED,this);
			this.dispatchEvent(this._scenechanged);
		}
	}
	,notifySceneTransformChange: function() {
		if(this._sceneTransformDirty || this._ignoreTransform) return;
		this.invalidateSceneTransform();
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		while(i < len) this._children[i++].notifySceneTransformChange();
		if(this._listenToSceneTransformChanged) {
			if(this._sceneTransformChanged == null) this._sceneTransformChanged = new away3d.events.Object3DEvent(away3d.events.Object3DEvent.SCENETRANSFORM_CHANGED,this);
			this.dispatchEvent(this._sceneTransformChanged);
		}
	}
	,setParent: function(value) {
		this._parent = value;
		this.updateMouseChildren();
		if(value == null) {
			this.set_scene(null);
			return;
		}
		this.notifySceneTransformChange();
		this.notifySceneChange();
	}
	,get_isVisible: function() {
		return this._implicitVisibility && this._explicitVisibility;
	}
	,set_implicitPartition: function(value) {
		if(value == this._implicitPartition) return value;
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._children);
		var child;
		this._implicitPartition = value;
		while(i < len) {
			child = this._children[i++];
			if(child._explicitPartition == null) child.set_implicitPartition(value);
		}
		return value;
	}
	,get_implicitPartition: function() {
		return this._implicitPartition;
	}
	,set_ignoreTransform: function(value) {
		this._ignoreTransform = value;
		this._sceneTransformDirty = !value;
		this._inverseSceneTransformDirty = !value;
		this._scenePositionDirty = !value;
		if(!value) {
			this._sceneTransform.identity();
			this._scenePosition.x = 0;
			this._scenePosition.y = 0;
			this._scenePosition.z = 0;
		}
		return value;
	}
	,get_ignoreTransform: function() {
		return this._ignoreTransform;
	}
	,__class__: away3d.containers.ObjectContainer3D
	,__properties__: $extend(away3d.core.base.Object3D.prototype.__properties__,{set_ignoreTransform:"set_ignoreTransform",get_ignoreTransform:"get_ignoreTransform",set_implicitPartition:"set_implicitPartition",get_implicitPartition:"get_implicitPartition",get_isVisible:"get_isVisible",set_mouseEnabled:"set_mouseEnabled",get_mouseEnabled:"get_mouseEnabled",set_mouseChildren:"set_mouseChildren",get_mouseChildren:"get_mouseChildren",set_visible:"set_visible",get_visible:"get_visible",get_assetType:"get_assetType",get_scenePosition:"get_scenePosition",get_minX:"get_minX",get_minY:"get_minY",get_minZ:"get_minZ",get_maxX:"get_maxX",get_maxY:"get_maxY",get_maxZ:"get_maxZ",set_partition:"set_partition",get_partition:"get_partition",get_sceneTransform:"get_sceneTransform",set_scene:"set_scene",get_scene:"get_scene",get_inverseSceneTransform:"get_inverseSceneTransform",get_parent:"get_parent",get_numChildren:"get_numChildren"})
});
away3d.entities = {}
away3d.entities.Entity = function() {
	this._boundsIsShown = false;
	this._boundsInvalid = true;
	this._worldBoundsInvalid = true;
	away3d.containers.ObjectContainer3D.call(this);
	this._bounds = this.getDefaultBoundingVolume();
	this._worldBounds = this.getDefaultBoundingVolume();
};
$hxClasses["away3d.entities.Entity"] = away3d.entities.Entity;
away3d.entities.Entity.__name__ = ["away3d","entities","Entity"];
away3d.entities.Entity.__super__ = away3d.containers.ObjectContainer3D;
away3d.entities.Entity.prototype = $extend(away3d.containers.ObjectContainer3D.prototype,{
	internalUpdate: function() {
		if(this._controller != null) this._controller.update();
	}
	,removeBounds: function() {
		if(this._boundsIsShown) {
			this._boundsIsShown = false;
			this.removeChild(this._bounds.get_boundingRenderable());
			this._bounds.disposeRenderable();
		}
	}
	,addBounds: function() {
		if(!this._boundsIsShown) {
			this._boundsIsShown = true;
			this.addChild(this._bounds.get_boundingRenderable());
		}
	}
	,notifyPartitionUnassigned: function() {
		if(this._scene != null) this._scene.unregisterPartition(this);
	}
	,notifyPartitionAssigned: function() {
		if(this._scene != null) this._scene.registerPartition(this);
	}
	,notifySceneBoundsInvalid: function() {
		if(this._scene != null) this._scene.invalidateEntityBounds(this);
	}
	,updateMouseChildren: function() {
		if(this._parent == null && this.get_pickingCollider() != null) {
			if(js.Boot.__instanceof(this._parent,away3d.entities.Entity)) {
				var collider = (js.Boot.__cast(this._parent , away3d.entities.Entity)).get_pickingCollider();
				if(collider != null) this.set_pickingCollider(collider);
			}
		}
		away3d.containers.ObjectContainer3D.prototype.updateMouseChildren.call(this);
	}
	,invalidateBounds: function() {
		this._boundsInvalid = true;
		this._worldBoundsInvalid = true;
		this.notifySceneBoundsInvalid();
	}
	,invalidateSceneTransform: function() {
		if(!this._ignoreTransform) {
			away3d.containers.ObjectContainer3D.prototype.invalidateSceneTransform.call(this);
			this._worldBoundsInvalid = true;
			this.notifySceneBoundsInvalid();
		}
	}
	,updateBounds: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,getDefaultBoundingVolume: function() {
		return new away3d.bounds.AxisAlignedBoundingBox();
	}
	,createEntityPartitionNode: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,isIntersectingRay: function(rayPosition,rayDirection) {
		var localRayPosition = this.get_inverseSceneTransform().transformVector(rayPosition);
		var localRayDirection = this.get_inverseSceneTransform().deltaTransformVector(rayDirection);
		if(this.get_pickingCollisionVO().localNormal == null) this.get_pickingCollisionVO().localNormal = new flash.geom.Vector3D();
		var rayEntryDistance = this.get_bounds().rayIntersection(localRayPosition,localRayDirection,this.get_pickingCollisionVO().localNormal);
		if(rayEntryDistance < 0) return false;
		this.get_pickingCollisionVO().rayEntryDistance = rayEntryDistance;
		this.get_pickingCollisionVO().localRayPosition = localRayPosition;
		this.get_pickingCollisionVO().localRayDirection = localRayDirection;
		this.get_pickingCollisionVO().rayPosition = rayPosition;
		this.get_pickingCollisionVO().rayDirection = rayDirection;
		this.get_pickingCollisionVO().rayOriginIsInsideBounds = rayEntryDistance == 0;
		return true;
	}
	,getEntityPartitionNode: function() {
		if(this._partitionNode == null) this._partitionNode = this.createEntityPartitionNode();
		return this._partitionNode;
	}
	,set_pickingCollider: function(value) {
		this._pickingCollider = value;
		return value;
	}
	,get_pickingCollider: function() {
		return this._pickingCollider;
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.ENTITY;
	}
	,set_scene: function(value) {
		if(value == this._scene) return value;
		if(this._scene != null) this._scene.unregisterEntity(this);
		if(value != null) value.registerEntity(this);
		away3d.containers.ObjectContainer3D.prototype.set_scene.call(this,value);
		return value;
	}
	,set_implicitPartition: function(value) {
		if(value == this._implicitPartition) return value;
		if(this._implicitPartition != null) this.notifyPartitionUnassigned();
		away3d.containers.ObjectContainer3D.prototype.set_implicitPartition.call(this,value);
		this.notifyPartitionAssigned();
		return value;
	}
	,updateWorldBounds: function() {
		this._worldBounds.transformFrom(this.get_bounds(),this.get_sceneTransform());
		this._worldBoundsInvalid = false;
	}
	,get_worldBounds: function() {
		if(this._worldBoundsInvalid) this.updateWorldBounds();
		return this._worldBounds;
	}
	,set_bounds: function(value) {
		this.removeBounds();
		this._bounds = value;
		this._worldBounds = value.clone();
		this.invalidateBounds();
		if(this._showBounds) this.addBounds();
		return value;
	}
	,get_bounds: function() {
		if(this._boundsInvalid) this.updateBounds();
		return this._bounds;
	}
	,get_maxZ: function() {
		if(this._boundsInvalid) this.updateBounds();
		return this._bounds.get_max().z;
	}
	,get_maxY: function() {
		if(this._boundsInvalid) this.updateBounds();
		return this._bounds.get_max().y;
	}
	,get_maxX: function() {
		if(this._boundsInvalid) this.updateBounds();
		return this._bounds.get_max().x;
	}
	,get_minZ: function() {
		if(this._boundsInvalid) this.updateBounds();
		return this._bounds.get_min().z;
	}
	,get_minY: function() {
		if(this._boundsInvalid) this.updateBounds();
		return this._bounds.get_min().y;
	}
	,get_minX: function() {
		if(this._boundsInvalid) this.updateBounds();
		return this._bounds.get_min().x;
	}
	,set_showBounds: function(value) {
		if(value == this._showBounds) return value;
		this._showBounds = value;
		if(this._showBounds) this.addBounds(); else this.removeBounds();
		return value;
	}
	,get_showBounds: function() {
		return this._showBounds;
	}
	,collidesBefore: function(shortestCollisionDistance,findClosest) {
		return true;
	}
	,get_pickingCollisionVO: function() {
		if(this._pickingCollisionVO == null) this._pickingCollisionVO = new away3d.core.pick.PickingCollisionVO(this);
		return this._pickingCollisionVO;
	}
	,set_staticNode: function(value) {
		this._staticNode = value;
		return value;
	}
	,get_staticNode: function() {
		return this._staticNode;
	}
	,set_shaderPickingDetails: function(value) {
		this._shaderPickingDetails = value;
		return value;
	}
	,get_shaderPickingDetails: function() {
		return this._shaderPickingDetails;
	}
	,set_ignoreTransform: function(value) {
		if(this._scene != null) this._scene.invalidateEntityBounds(this);
		away3d.containers.ObjectContainer3D.prototype.set_ignoreTransform.call(this,value);
		return value;
	}
	,__class__: away3d.entities.Entity
	,__properties__: $extend(away3d.containers.ObjectContainer3D.prototype.__properties__,{set_shaderPickingDetails:"set_shaderPickingDetails",get_shaderPickingDetails:"get_shaderPickingDetails",set_staticNode:"set_staticNode",get_staticNode:"get_staticNode",get_pickingCollisionVO:"get_pickingCollisionVO",set_showBounds:"set_showBounds",get_showBounds:"get_showBounds",set_bounds:"set_bounds",get_bounds:"get_bounds",get_worldBounds:"get_worldBounds",set_pickingCollider:"set_pickingCollider",get_pickingCollider:"get_pickingCollider"})
});
away3d.cameras = {}
away3d.cameras.Camera3D = function(lens) {
	this._viewProjection = new flash.geom.Matrix3D();
	this._viewProjectionDirty = true;
	this._frustumPlanesDirty = true;
	away3d.entities.Entity.call(this);
	this._lens = lens;
	if(this._lens == null) this._lens = new away3d.cameras.lenses.PerspectiveLens();
	this._lens.addEventListener(away3d.events.LensEvent.MATRIX_CHANGED,$bind(this,this.onLensMatrixChanged));
	this._frustumPlanes = flash._Vector.Vector_Impl_._new(6,true);
	var i = 0;
	while(i < 6) {
		this._frustumPlanes[i] = new away3d.core.math.Plane3D();
		++i;
	}
	this.set_z(-1000);
};
$hxClasses["away3d.cameras.Camera3D"] = away3d.cameras.Camera3D;
away3d.cameras.Camera3D.__name__ = ["away3d","cameras","Camera3D"];
away3d.cameras.Camera3D.__super__ = away3d.entities.Entity;
away3d.cameras.Camera3D.prototype = $extend(away3d.entities.Entity.prototype,{
	project: function(point3d) {
		return this.get_lens().project(this.get_inverseSceneTransform().transformVector(point3d));
	}
	,getRay: function(nX,nY,sZ) {
		return this.get_sceneTransform().deltaTransformVector(this.get_lens().unproject(nX,nY,sZ));
	}
	,unproject: function(nX,nY,sZ) {
		return this.get_sceneTransform().transformVector(this.get_lens().unproject(nX,nY,sZ));
	}
	,get_viewProjection: function() {
		if(this._viewProjectionDirty) {
			this._viewProjection.copyFrom(this.get_inverseSceneTransform());
			this._viewProjection.append(this._lens.get_matrix());
			this._viewProjectionDirty = false;
		}
		return this._viewProjection;
	}
	,set_lens: function(value) {
		if(this._lens == value) return value;
		if(value == null) throw new flash.errors.Error("Lens cannot be null!");
		this._lens.removeEventListener(away3d.events.LensEvent.MATRIX_CHANGED,$bind(this,this.onLensMatrixChanged));
		this._lens = value;
		this._lens.addEventListener(away3d.events.LensEvent.MATRIX_CHANGED,$bind(this,this.onLensMatrixChanged));
		this.dispatchEvent(new away3d.events.CameraEvent(away3d.events.CameraEvent.LENS_CHANGED,this));
		return value;
	}
	,get_lens: function() {
		return this._lens;
	}
	,createEntityPartitionNode: function() {
		return new away3d.core.partition.CameraNode(this);
	}
	,updateBounds: function() {
		this._bounds.nullify();
		this._boundsInvalid = false;
	}
	,invalidateSceneTransform: function() {
		away3d.entities.Entity.prototype.invalidateSceneTransform.call(this);
		this._viewProjectionDirty = true;
		this._frustumPlanesDirty = true;
	}
	,updateFrustum: function() {
		var a;
		var b;
		var c;
		var c11;
		var c12;
		var c13;
		var c14;
		var c21;
		var c22;
		var c23;
		var c24;
		var c31;
		var c32;
		var c33;
		var c34;
		var c41;
		var c42;
		var c43;
		var c44;
		var p;
		var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		var invLen;
		away3d.Stage3DUtils.copyRawDataTo(this.get_viewProjection(),raw);
		c11 = raw[0];
		c12 = raw[4];
		c13 = raw[8];
		c14 = raw[12];
		c21 = raw[1];
		c22 = raw[5];
		c23 = raw[9];
		c24 = raw[13];
		c31 = raw[2];
		c32 = raw[6];
		c33 = raw[10];
		c34 = raw[14];
		c41 = raw[3];
		c42 = raw[7];
		c43 = raw[11];
		c44 = raw[15];
		p = this._frustumPlanes[0];
		a = c41 + c11;
		b = c42 + c12;
		c = c43 + c13;
		invLen = 1 / Math.sqrt(a * a + b * b + c * c);
		p.a = a * invLen;
		p.b = b * invLen;
		p.c = c * invLen;
		p.d = -(c44 + c14) * invLen;
		p = this._frustumPlanes[1];
		a = c41 - c11;
		b = c42 - c12;
		c = c43 - c13;
		invLen = 1 / Math.sqrt(a * a + b * b + c * c);
		p.a = a * invLen;
		p.b = b * invLen;
		p.c = c * invLen;
		p.d = (c14 - c44) * invLen;
		p = this._frustumPlanes[2];
		a = c41 + c21;
		b = c42 + c22;
		c = c43 + c23;
		invLen = 1 / Math.sqrt(a * a + b * b + c * c);
		p.a = a * invLen;
		p.b = b * invLen;
		p.c = c * invLen;
		p.d = -(c44 + c24) * invLen;
		p = this._frustumPlanes[3];
		a = c41 - c21;
		b = c42 - c22;
		c = c43 - c23;
		invLen = 1 / Math.sqrt(a * a + b * b + c * c);
		p.a = a * invLen;
		p.b = b * invLen;
		p.c = c * invLen;
		p.d = (c24 - c44) * invLen;
		p = this._frustumPlanes[4];
		a = c31;
		b = c32;
		c = c33;
		invLen = 1 / Math.sqrt(a * a + b * b + c * c);
		p.a = a * invLen;
		p.b = b * invLen;
		p.c = c * invLen;
		p.d = -c34 * invLen;
		p = this._frustumPlanes[5];
		a = c41 - c31;
		b = c42 - c32;
		c = c43 - c33;
		invLen = 1 / Math.sqrt(a * a + b * b + c * c);
		p.a = a * invLen;
		p.b = b * invLen;
		p.c = c * invLen;
		p.d = (c34 - c44) * invLen;
		this._frustumPlanesDirty = false;
	}
	,get_frustumPlanes: function() {
		if(this._frustumPlanesDirty) this.updateFrustum();
		return this._frustumPlanes;
	}
	,onLensMatrixChanged: function(event) {
		this._viewProjectionDirty = true;
		this._frustumPlanesDirty = true;
		this.dispatchEvent(event);
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.CAMERA;
	}
	,getDefaultBoundingVolume: function() {
		return new away3d.bounds.NullBounds();
	}
	,__class__: away3d.cameras.Camera3D
	,__properties__: $extend(away3d.entities.Entity.prototype.__properties__,{get_frustumPlanes:"get_frustumPlanes",set_lens:"set_lens",get_lens:"get_lens",get_viewProjection:"get_viewProjection"})
});
away3d.cameras.lenses = {}
away3d.cameras.lenses.LensBase = function() {
	flash.events.EventDispatcher.call(this);
	this._scissorRect = new flash.geom.Rectangle();
	this._viewPort = new flash.geom.Rectangle();
	this._near = 20;
	this._far = 3000;
	this._aspectRatio = 1;
	this._matrixInvalid = true;
	this._frustumCorners = flash._Vector.Vector_Impl_._new(24,true);
	this._unprojectionInvalid = true;
	this._matrix = new flash.geom.Matrix3D();
};
$hxClasses["away3d.cameras.lenses.LensBase"] = away3d.cameras.lenses.LensBase;
away3d.cameras.lenses.LensBase.__name__ = ["away3d","cameras","lenses","LensBase"];
away3d.cameras.lenses.LensBase.__super__ = flash.events.EventDispatcher;
away3d.cameras.lenses.LensBase.prototype = $extend(flash.events.EventDispatcher.prototype,{
	updateViewport: function(x,y,width,height) {
		this._viewPort.x = x;
		this._viewPort.y = y;
		this._viewPort.width = width;
		this._viewPort.height = height;
		this.invalidateMatrix();
	}
	,updateScissorRect: function(x,y,width,height) {
		this._scissorRect.x = x;
		this._scissorRect.y = y;
		this._scissorRect.width = width;
		this._scissorRect.height = height;
		this.invalidateMatrix();
	}
	,updateMatrix: function() {
		throw new away3d.errors.AbstractMethodError();
	}
	,invalidateMatrix: function() {
		this._matrixInvalid = true;
		this._unprojectionInvalid = true;
		this.dispatchEvent(new away3d.events.LensEvent(away3d.events.LensEvent.MATRIX_CHANGED,this));
	}
	,set_aspectRatio: function(value) {
		if(this._aspectRatio == value || value * 0 != 0) return value;
		this._aspectRatio = value;
		this.invalidateMatrix();
		return value;
	}
	,get_aspectRatio: function() {
		return this._aspectRatio;
	}
	,clone: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,unproject: function(nX,nY,sZ) {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,get_unprojectionMatrix: function() {
		if(this._unprojectionInvalid) {
			if(this._unprojection == null) this._unprojection = new flash.geom.Matrix3D();
			this._unprojection.copyFrom(this.get_matrix());
			this._unprojection.invert();
			this._unprojectionInvalid = false;
		}
		return this._unprojection;
	}
	,project: function(point3d) {
		var v = this.get_matrix().transformVector(point3d);
		v.x = v.x / v.w;
		v.y = -v.y / v.w;
		v.z = point3d.z;
		return v;
	}
	,set_far: function(value) {
		if(value == this._far) return value;
		this._far = value;
		this.invalidateMatrix();
		return value;
	}
	,get_far: function() {
		return this._far;
	}
	,set_near: function(value) {
		if(value == this._near) return value;
		this._near = value;
		this.invalidateMatrix();
		return value;
	}
	,get_near: function() {
		return this._near;
	}
	,set_matrix: function(value) {
		this._matrix = value;
		this.invalidateMatrix();
		return value;
	}
	,get_matrix: function() {
		if(this._matrixInvalid) {
			this.updateMatrix();
			this._matrixInvalid = false;
		}
		return this._matrix;
	}
	,set_frustumCorners: function(frustumCorners) {
		this._frustumCorners = frustumCorners;
		return frustumCorners;
	}
	,get_frustumCorners: function() {
		return this._frustumCorners;
	}
	,__class__: away3d.cameras.lenses.LensBase
	,__properties__: {set_frustumCorners:"set_frustumCorners",get_frustumCorners:"get_frustumCorners",set_matrix:"set_matrix",get_matrix:"get_matrix",set_near:"set_near",get_near:"get_near",set_far:"set_far",get_far:"get_far",get_unprojectionMatrix:"get_unprojectionMatrix",set_aspectRatio:"set_aspectRatio",get_aspectRatio:"get_aspectRatio"}
});
away3d.cameras.lenses.FreeMatrixLens = function() {
	away3d.cameras.lenses.LensBase.call(this);
	this._matrix.copyFrom(new away3d.cameras.lenses.PerspectiveLens().get_matrix());
};
$hxClasses["away3d.cameras.lenses.FreeMatrixLens"] = away3d.cameras.lenses.FreeMatrixLens;
away3d.cameras.lenses.FreeMatrixLens.__name__ = ["away3d","cameras","lenses","FreeMatrixLens"];
away3d.cameras.lenses.FreeMatrixLens.__super__ = away3d.cameras.lenses.LensBase;
away3d.cameras.lenses.FreeMatrixLens.prototype = $extend(away3d.cameras.lenses.LensBase.prototype,{
	updateMatrix: function() {
		this._matrixInvalid = false;
	}
	,clone: function() {
		var clone = new away3d.cameras.lenses.FreeMatrixLens();
		clone._matrix.copyFrom(this._matrix);
		clone._near = this._near;
		clone._far = this._far;
		clone._aspectRatio = this._aspectRatio;
		clone.invalidateMatrix();
		return clone;
	}
	,set_aspectRatio: function(value) {
		this._aspectRatio = value;
		return value;
	}
	,set_far: function(value) {
		this._far = value;
		return value;
	}
	,set_near: function(value) {
		this._near = value;
		return value;
	}
	,__class__: away3d.cameras.lenses.FreeMatrixLens
});
away3d.cameras.lenses.PerspectiveLens = function(fieldOfView) {
	if(fieldOfView == null) fieldOfView = 60;
	away3d.cameras.lenses.LensBase.call(this);
	this.set_fieldOfView(fieldOfView);
};
$hxClasses["away3d.cameras.lenses.PerspectiveLens"] = away3d.cameras.lenses.PerspectiveLens;
away3d.cameras.lenses.PerspectiveLens.__name__ = ["away3d","cameras","lenses","PerspectiveLens"];
away3d.cameras.lenses.PerspectiveLens.__super__ = away3d.cameras.lenses.LensBase;
away3d.cameras.lenses.PerspectiveLens.prototype = $extend(away3d.cameras.lenses.LensBase.prototype,{
	updateMatrix: function() {
		var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		this._yMax = this._near * this._focalLengthInv;
		this._xMax = this._yMax * this._aspectRatio;
		var left;
		var right;
		var top;
		var bottom;
		if(this._scissorRect.x == 0 && this._scissorRect.y == 0 && this._scissorRect.width == this._viewPort.width && this._scissorRect.height == this._viewPort.height) {
			left = -this._xMax;
			right = this._xMax;
			top = -this._yMax;
			bottom = this._yMax;
			raw[0] = this._near / this._xMax;
			raw[5] = this._near / this._yMax;
			raw[10] = this._far / (this._far - this._near);
			raw[11] = 1;
			raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;
			raw[14] = -this._near * raw[10];
		} else {
			var xWidth = this._xMax * (this._viewPort.width / this._scissorRect.width);
			var yHgt = this._yMax * (this._viewPort.height / this._scissorRect.height);
			var center = this._xMax * (this._scissorRect.x * 2 - this._viewPort.width) / this._scissorRect.width + this._xMax;
			var middle = -this._yMax * (this._scissorRect.y * 2 - this._viewPort.height) / this._scissorRect.height - this._yMax;
			left = center - xWidth;
			right = center + xWidth;
			top = middle - yHgt;
			bottom = middle + yHgt;
			raw[0] = 2 * this._near / (right - left);
			raw[5] = 2 * this._near / (bottom - top);
			raw[8] = (right + left) / (right - left);
			raw[9] = (bottom + top) / (bottom - top);
			raw[10] = (this._far + this._near) / (this._far - this._near);
			raw[11] = 1;
			raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;
			raw[14] = -2 * this._far * this._near / (this._far - this._near);
		}
		away3d.Stage3DUtils.copyRawDataFrom(this._matrix,raw);
		var yMaxFar = this._far * this._focalLengthInv;
		var xMaxFar = yMaxFar * this._aspectRatio;
		this._frustumCorners[0] = this._frustumCorners[9] = left;
		this._frustumCorners[3] = this._frustumCorners[6] = right;
		this._frustumCorners[1] = this._frustumCorners[4] = top;
		this._frustumCorners[7] = this._frustumCorners[10] = bottom;
		this._frustumCorners[12] = this._frustumCorners[21] = -xMaxFar;
		this._frustumCorners[15] = this._frustumCorners[18] = xMaxFar;
		this._frustumCorners[13] = this._frustumCorners[16] = -yMaxFar;
		this._frustumCorners[19] = this._frustumCorners[22] = yMaxFar;
		this._frustumCorners[2] = this._frustumCorners[5] = this._frustumCorners[8] = this._frustumCorners[11] = this._near;
		this._frustumCorners[14] = this._frustumCorners[17] = this._frustumCorners[20] = this._frustumCorners[23] = this._far;
		this._matrixInvalid = false;
	}
	,clone: function() {
		var clone = new away3d.cameras.lenses.PerspectiveLens(this._fieldOfView);
		clone._near = this._near;
		clone._far = this._far;
		clone._aspectRatio = this._aspectRatio;
		return clone;
	}
	,unproject: function(nX,nY,sZ) {
		var v = new flash.geom.Vector3D(nX,-nY,sZ,1.0);
		v.x *= sZ;
		v.y *= sZ;
		v = this.get_unprojectionMatrix().transformVector(v);
		v.z = sZ;
		return v;
	}
	,set_focalLength: function(value) {
		if(value == this._focalLength) return value;
		this._focalLength = value;
		this._focalLengthInv = 1 / this._focalLength;
		this._fieldOfView = Math.atan(this._focalLengthInv) * 360 / Math.PI;
		this.invalidateMatrix();
		return value;
	}
	,get_focalLength: function() {
		return this._focalLength;
	}
	,set_fieldOfView: function(value) {
		if(value == this._fieldOfView) return value;
		this._fieldOfView = value;
		this._focalLengthInv = Math.tan(this._fieldOfView * Math.PI / 360);
		this._focalLength = 1 / this._focalLengthInv;
		this.invalidateMatrix();
		return value;
	}
	,get_fieldOfView: function() {
		return this._fieldOfView;
	}
	,__class__: away3d.cameras.lenses.PerspectiveLens
	,__properties__: $extend(away3d.cameras.lenses.LensBase.prototype.__properties__,{set_fieldOfView:"set_fieldOfView",get_fieldOfView:"get_fieldOfView",set_focalLength:"set_focalLength",get_focalLength:"get_focalLength"})
});
away3d.containers.Scene3D = function() {
	this._partitions = flash._Vector.Vector_Impl_._new();
	this._sceneGraphRoot = new away3d.containers.ObjectContainer3D();
	this._sceneGraphRoot.set_scene(this);
	this._sceneGraphRoot._isRoot = true;
	this._sceneGraphRoot.set_partition(new away3d.core.partition.Partition3D(new away3d.core.partition.NodeBase()));
	flash.events.EventDispatcher.call(this);
};
$hxClasses["away3d.containers.Scene3D"] = away3d.containers.Scene3D;
away3d.containers.Scene3D.__name__ = ["away3d","containers","Scene3D"];
away3d.containers.Scene3D.__super__ = flash.events.EventDispatcher;
away3d.containers.Scene3D.prototype = $extend(flash.events.EventDispatcher.prototype,{
	addPartitionUnique: function(partition) {
		if(flash._Vector.Vector_Impl_.indexOf(this._partitions,partition) == -1) flash._Vector.Vector_Impl_.push(this._partitions,partition);
	}
	,unregisterPartition: function(entity) {
		entity.get_implicitPartition().removeEntity(entity);
	}
	,registerPartition: function(entity) {
		this.addPartitionUnique(entity.get_implicitPartition());
	}
	,invalidateEntityBounds: function(entity) {
		entity.get_implicitPartition().markForUpdate(entity);
	}
	,unregisterEntity: function(entity) {
		entity.get_implicitPartition().removeEntity(entity);
	}
	,registerEntity: function(entity) {
		var partition = entity.get_implicitPartition();
		this.addPartitionUnique(partition);
		partition.markForUpdate(entity);
	}
	,get_numChildren: function() {
		return this._sceneGraphRoot.get_numChildren();
	}
	,getChildAt: function(index) {
		return this._sceneGraphRoot.getChildAt(index);
	}
	,removeChildAt: function(index) {
		this._sceneGraphRoot.removeChildAt(index);
	}
	,removeChild: function(child) {
		this._sceneGraphRoot.removeChild(child);
	}
	,addChild: function(child) {
		return this._sceneGraphRoot.addChild(child);
	}
	,contains: function(child) {
		return this._sceneGraphRoot.contains(child);
	}
	,set_partition: function(value) {
		this._sceneGraphRoot.set_partition(value);
		this.dispatchEvent(new away3d.events.Scene3DEvent(away3d.events.Scene3DEvent.PARTITION_CHANGED,this._sceneGraphRoot));
		return value;
	}
	,get_partition: function() {
		return this._sceneGraphRoot.get_partition();
	}
	,traversePartitions: function(traverser) {
		var i = 0;
		var len = flash._Vector.Vector_Impl_.get_length(this._partitions);
		traverser.scene = this;
		while(i < len) this._partitions[i++].traverse(traverser);
	}
	,__class__: away3d.containers.Scene3D
	,__properties__: {set_partition:"set_partition",get_partition:"get_partition",get_numChildren:"get_numChildren"}
});
away3d.containers.View3D = function(scene,camera,renderer,forceSoftware,profile) {
	if(profile == null) profile = "baseline";
	if(forceSoftware == null) forceSoftware = false;
	this._width = 0;
	this._height = 0;
	this._localPos = new flash.geom.Point();
	this._globalPos = new flash.geom.Point();
	this._time = 0;
	this._backgroundColor = 0;
	this._backgroundAlpha = 1;
	this._depthTextureInvalid = true;
	this._backBufferInvalid = true;
	this._rightClickMenuEnabled = true;
	this._shareContext = false;
	this._scissorRectDirty = true;
	this._viewportDirty = true;
	this._layeredView = false;
	flash.events.EventDispatcher.call(this);
	this._profile = profile;
	this._scene = scene;
	if(this._scene == null) this._scene = new away3d.containers.Scene3D();
	this._scene.addEventListener(away3d.events.Scene3DEvent.PARTITION_CHANGED,$bind(this,this.onScenePartitionChanged));
	this._camera = camera;
	if(this._camera == null) this._camera = new away3d.cameras.Camera3D();
	this._renderer = renderer;
	if(this._renderer == null) this._renderer = new away3d.core.render.DefaultRenderer();
	this._depthRenderer = new away3d.core.render.DepthRenderer();
	this._forceSoftware = forceSoftware;
	this._entityCollector = this._renderer.createEntityCollector();
	this._entityCollector.set_camera(this._camera);
	this._scissorRect = new flash.geom.Rectangle();
	this._mouse3DManager = new away3d.core.managers.Mouse3DManager();
	this._mouse3DManager.enableMouseListeners(this);
	this._touch3DManager = new away3d.core.managers.Touch3DManager();
	this._touch3DManager.set_view(this);
	this._touch3DManager.enableTouchListeners(this);
	this.addEventListener(flash.events.Event.ADDED_TO_STAGE,$bind(this,this.onAddedToStage),false,0,true);
	this.addEventListener(flash.events.Event.ADDED,$bind(this,this.onAdded),false,0,true);
	this._camera.addEventListener(away3d.events.CameraEvent.LENS_CHANGED,$bind(this,this.onLensChanged));
	this._camera.set_partition(this._scene.get_partition());
};
$hxClasses["away3d.containers.View3D"] = away3d.containers.View3D;
away3d.containers.View3D.__name__ = ["away3d","containers","View3D"];
away3d.containers.View3D.__super__ = flash.events.EventDispatcher;
away3d.containers.View3D.prototype = $extend(flash.events.EventDispatcher.prototype,{
	onViewportUpdated: function(event) {
		if(this._shareContext) {
			this._scissorRect.x = this._globalPos.x - this._stage3DProxy.get_x();
			this._scissorRect.y = this._globalPos.y - this._stage3DProxy.get_y();
			this._scissorRectDirty = true;
		}
		this._viewportDirty = true;
	}
	,onAdded: function(event) {
		this._parentIsStage = this.get_parent() == this.get_stage();
		this._globalPos = this.get_parent().localToGlobal(this._localPos);
		this._globalPosDirty = true;
	}
	,onAddedToStage: function(event) {
		if(this._addedToStage) return;
		this._addedToStage = true;
		if(this._stage3DProxy == null) {
			this._stage3DProxy = away3d.core.managers.Stage3DManager.getInstance(this.get_stage()).getFreeStage3DProxy(this._forceSoftware,this._profile);
			this._stage3DProxy.addEventListener(away3d.events.Stage3DEvent.VIEWPORT_UPDATED,$bind(this,this.onViewportUpdated));
		}
		this._globalPosDirty = true;
		this._rttBufferManager = away3d.core.managers.RTTBufferManager.getInstance(this._stage3DProxy);
		this._renderer.set_stage3DProxy(this._depthRenderer.set_stage3DProxy(this._stage3DProxy));
		if(this._width == 0) this.set_width(this.get_stage().get_stageWidth()); else this._rttBufferManager.set_viewWidth(this._width | 0);
		if(this._height == 0) this.set_height(this.get_stage().get_stageHeight()); else this._rttBufferManager.set_viewHeight(this._height | 0);
		if(this._shareContext) this._mouse3DManager.addViewLayer(this);
	}
	,onLensChanged: function(event) {
		this._scissorRectDirty = true;
		this._viewportDirty = true;
	}
	,get_entityCollector: function() {
		return this._entityCollector;
	}
	,set_touchPicker: function(value) {
		this._touch3DManager.set_touchPicker(value);
		return value;
	}
	,get_touchPicker: function() {
		return this._touch3DManager.get_touchPicker();
	}
	,set_mousePicker: function(value) {
		this._mouse3DManager.set_mousePicker(value);
		return value;
	}
	,get_mousePicker: function() {
		return this._mouse3DManager.get_mousePicker();
	}
	,getRay: function(sX,sY,sZ) {
		return this._camera.getRay((sX * 2 - this._width) / this._width,(sY * 2 - this._height) / this._height,sZ);
	}
	,unproject: function(sX,sY,sZ) {
		return this._camera.unproject((sX * 2 - this._width) / this._stage3DProxy.get_width(),(sY * 2 - this._height) / this._stage3DProxy.get_height(),sZ);
	}
	,project: function(point3d) {
		var v = this._camera.project(point3d);
		v.x = (v.x + 1.0) * this._width / 2.0;
		v.y = (v.y + 1.0) * this._height / 2.0;
		return v;
	}
	,dispose: function() {
		this._stage3DProxy.removeEventListener(away3d.events.Stage3DEvent.VIEWPORT_UPDATED,$bind(this,this.onViewportUpdated));
		if(!this.get_shareContext()) this._stage3DProxy.dispose();
		this._renderer.dispose();
		if(this._depthRender != null) this._depthRender.dispose();
		if(this._rttBufferManager != null) this._rttBufferManager.dispose();
		this._mouse3DManager.disableMouseListeners(this);
		this._mouse3DManager.dispose();
		this._touch3DManager.disableTouchListeners(this);
		this._touch3DManager.dispose();
		this._rttBufferManager = null;
		this._depthRender = null;
		this._mouse3DManager = null;
		this._touch3DManager = null;
		this._depthRenderer = null;
		this._stage3DProxy = null;
		this._renderer = null;
		this._entityCollector = null;
	}
	,initDepthTexture: function(context) {
		this._depthTextureInvalid = false;
		if(this._depthRender != null) this._depthRender.dispose();
		this._depthRender = context.createTexture(this._rttBufferManager.get_textureWidth(),this._rttBufferManager.get_textureHeight(),flash.display3D.Context3DTextureFormat.BGRA,true);
	}
	,renderSceneDepthToTexture: function(entityCollector) {
		if(this._depthTextureInvalid || this._depthRender == null) this.initDepthTexture(this._stage3DProxy._context3D);
		this._depthRenderer.set_textureRatioX(this._rttBufferManager.get_textureRatioX());
		this._depthRenderer.set_textureRatioY(this._rttBufferManager.get_textureRatioY());
		this._depthRenderer.render(entityCollector,this._depthRender);
	}
	,renderDepthPrepass: function(entityCollector) {
		this._depthRenderer.set_disableColor(true);
		if(this._filter3DRenderer != null || this._renderer.get_renderToTexture()) {
			this._depthRenderer.set_textureRatioX(this._rttBufferManager.get_textureRatioX());
			this._depthRenderer.set_textureRatioY(this._rttBufferManager.get_textureRatioY());
			this._depthRenderer.render(entityCollector,this._filter3DRenderer.getMainInputTexture(this._stage3DProxy),this._rttBufferManager.get_renderToTextureRect());
		} else {
			this._depthRenderer.set_textureRatioX(1);
			this._depthRenderer.set_textureRatioY(1);
			this._depthRenderer.render(entityCollector);
		}
		this._depthRenderer.set_disableColor(false);
	}
	,updateViewSizeData: function() {
		this._camera.get_lens().set_aspectRatio(this._aspectRatio);
		if(this._scissorRectDirty) {
			this._scissorRectDirty = false;
			this._camera.get_lens().updateScissorRect(this._scissorRect.x,this._scissorRect.y,this._scissorRect.width,this._scissorRect.height);
		}
		if(this._viewportDirty) {
			this._viewportDirty = false;
			this._camera.get_lens().updateViewport(this._stage3DProxy.get_viewPort().x,this._stage3DProxy.get_viewPort().y,this._stage3DProxy.get_viewPort().width,this._stage3DProxy.get_viewPort().height);
		}
		if(this._filter3DRenderer != null || this._renderer.get_renderToTexture()) {
			this._renderer.set_textureRatioX(this._rttBufferManager.get_textureRatioX());
			this._renderer.set_textureRatioY(this._rttBufferManager.get_textureRatioY());
		} else {
			this._renderer.set_textureRatioX(1);
			this._renderer.set_textureRatioY(1);
		}
	}
	,updateTime: function() {
		var time = flash.Lib.getTimer();
		if(this._time == 0) this._time = time;
		this._deltaTime = time - this._time | 0;
		this._time = time;
	}
	,updateGlobalPos: function() {
		this._globalPosDirty = false;
		if(this._stage3DProxy == null) return;
		if(this._shareContext) {
			this._scissorRect.x = this._globalPos.x - this._stage3DProxy.get_x();
			this._scissorRect.y = this._globalPos.y - this._stage3DProxy.get_y();
		} else {
			this._scissorRect.x = 0;
			this._scissorRect.y = 0;
			this._stage3DProxy.set_x(this._globalPos.x);
			this._stage3DProxy.set_y(this._globalPos.y);
		}
		this._scissorRectDirty = true;
	}
	,render: function() {
		if(!this.get_stage3DProxy().recoverFromDisposal()) {
			this._backBufferInvalid = true;
			return;
		}
		if(this._backBufferInvalid) this.updateBackBuffer();
		if(this._shareContext && this._layeredView) this.get_stage3DProxy().clearDepthBuffer();
		if(!this._parentIsStage) {
			var globalPos = this.get_parent().localToGlobal(this._localPos);
			if(this._globalPos.x != globalPos.x || this._globalPos.y != globalPos.y) {
				this._globalPos = globalPos;
				this._globalPosDirty = true;
			}
		}
		if(this._globalPosDirty) this.updateGlobalPos();
		this.updateTime();
		this.updateViewSizeData();
		this._entityCollector.clear();
		this._scene.traversePartitions(this._entityCollector);
		this._mouse3DManager.updateCollider(this);
		this._touch3DManager.updateCollider();
		if(this._requireDepthRender) this.renderSceneDepthToTexture(this._entityCollector);
		if(this._depthPrepass) this.renderDepthPrepass(this._entityCollector);
		this._renderer.set_clearOnRender(!this._depthPrepass);
		if(this._filter3DRenderer != null && this._stage3DProxy._context3D != null) {
			this._renderer.render(this._entityCollector,this._filter3DRenderer.getMainInputTexture(this._stage3DProxy),this._rttBufferManager.get_renderToTextureRect());
			this._filter3DRenderer.render(this._stage3DProxy,this.get_camera(),this._depthRender);
		} else {
			this._renderer.set_shareContext(this._shareContext);
			if(this._shareContext) this._renderer.render(this._entityCollector,null,this._scissorRect); else this._renderer.render(this._entityCollector);
		}
		if(!this._shareContext) {
			this.get_stage3DProxy().present();
			this._mouse3DManager.fireMouseEvents();
			this._touch3DManager.fireTouchEvents();
		}
		this._entityCollector.cleanUp();
		this.get_stage3DProxy().set_bufferClear(false);
	}
	,addSourceURL: function(url) {
		this._sourceURL = url;
	}
	,updateBackBuffer: function() {
		if(this._stage3DProxy.get_context3D() != null && !this._shareContext) {
			if(this._width > 0 && this._height > 0) {
				if(this._stage3DProxy.get_usesSoftwareRendering()) {
					if(this._width > 2048) this._width = 2048;
					if(this._height > 2048) this._height = 2048;
				}
				this._stage3DProxy.configureBackBuffer(this._width | 0,this._height | 0,this._antiAlias,true);
				this._backBufferInvalid = false;
			} else {
				this.set_width(this.get_stage().get_stageWidth());
				this.set_height(this.get_stage().get_stageHeight());
			}
		}
	}
	,set_shareContext: function(value) {
		if(this._shareContext == value) return value;
		this._shareContext = value;
		this._globalPosDirty = true;
		return value;
	}
	,get_shareContext: function() {
		return this._shareContext;
	}
	,get_renderedFacesCount: function() {
		return this._entityCollector.get_numTriangles();
	}
	,set_antiAlias: function(value) {
		this._antiAlias = value;
		this._renderer.set_antiAlias(value);
		this._backBufferInvalid = true;
		return value;
	}
	,get_antiAlias: function() {
		return this._antiAlias;
	}
	,get_parent: function() {
		return this.get_stage();
	}
	,get_stage: function() {
		return flash.Lib.get_current().get_stage();
	}
	,get_mouseY: function() {
		return this.get_stage().get_mouseY();
	}
	,get_mouseX: function() {
		return this.get_stage().get_mouseX();
	}
	,get_x: function() {
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,set_visible: function(value) {
		if(this._stage3DProxy != null && !this._shareContext) this._stage3DProxy.set_visible(value);
	}
	,set_y: function(value) {
		if(this.get_y() == value) return value;
		this._y = value;
		this._localPos.y = value;
		this._globalPos.y = this.get_parent() != null?this.get_parent().localToGlobal(this._localPos).y:value;
		this._globalPosDirty = true;
		return value;
	}
	,set_x: function(value) {
		if(this.get_x() == value) return value;
		this._x = value;
		this._localPos.x = value;
		this._globalPos.x = this.get_parent() != null?this.get_parent().localToGlobal(this._localPos).x:value;
		this._globalPosDirty = true;
		return value;
	}
	,set_height: function(value) {
		if(this._stage3DProxy != null && this._stage3DProxy.get_usesSoftwareRendering() && value > 2048) value = 2048;
		if(this._height == value) return value;
		if(this._rttBufferManager != null) this._rttBufferManager.set_viewHeight(value | 0);
		this._height = value;
		this._aspectRatio = this._width / this._height;
		this._camera.get_lens().set_aspectRatio(this._aspectRatio);
		this._depthTextureInvalid = true;
		this._renderer.set_viewHeight(value);
		this._scissorRect.height = value;
		this._backBufferInvalid = true;
		this._scissorRectDirty = true;
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_width: function(value) {
		if(this._stage3DProxy != null && this._stage3DProxy.get_usesSoftwareRendering() && value > 2048) value = 2048;
		if(this._width == value) return value;
		if(this._rttBufferManager != null) this._rttBufferManager.set_viewWidth(value | 0);
		this._width = value;
		this._renderer.set_viewWidth(value);
		this._scissorRect.width = value;
		this._aspectRatio = this._width / this._height;
		this._camera.get_lens().set_aspectRatio(this._aspectRatio);
		this._depthTextureInvalid = true;
		this._backBufferInvalid = true;
		this._scissorRectDirty = true;
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,get_deltaTime: function() {
		return this._deltaTime;
	}
	,set_scene: function(scene) {
		this._scene.removeEventListener(away3d.events.Scene3DEvent.PARTITION_CHANGED,$bind(this,this.onScenePartitionChanged));
		this._scene = scene;
		this._scene.addEventListener(away3d.events.Scene3DEvent.PARTITION_CHANGED,$bind(this,this.onScenePartitionChanged));
		if(this._camera != null) this._camera.set_partition(this._scene.get_partition());
		return scene;
	}
	,get_scene: function() {
		return this._scene;
	}
	,set_camera: function(camera) {
		this._camera.removeEventListener(away3d.events.CameraEvent.LENS_CHANGED,$bind(this,this.onLensChanged));
		this._camera = camera;
		this._entityCollector.set_camera(this._camera);
		if(this._scene != null) this._camera.set_partition(this._scene.get_partition());
		this._camera.addEventListener(away3d.events.CameraEvent.LENS_CHANGED,$bind(this,this.onLensChanged));
		this._scissorRectDirty = true;
		this._viewportDirty = true;
		return camera;
	}
	,get_camera: function() {
		return this._camera;
	}
	,set_backgroundAlpha: function(value) {
		if(value > 1) value = 1; else if(value < 0) value = 0;
		this._renderer.set_backgroundAlpha(value);
		this._backgroundAlpha = value;
		return value;
	}
	,get_backgroundAlpha: function() {
		return this._backgroundAlpha;
	}
	,set_backgroundColor: function(value) {
		this._backgroundColor = value;
		this._renderer.set_backgroundR((value >> 16 & 255) / 255);
		this._renderer.set_backgroundG((value >> 8 & 255) / 255);
		this._renderer.set_backgroundB((value & 255) / 255);
		return value;
	}
	,get_backgroundColor: function() {
		return this._backgroundColor;
	}
	,set_renderer: function(value) {
		this._renderer.dispose();
		this._renderer = value;
		this._entityCollector = this._renderer.createEntityCollector();
		this._entityCollector.set_camera(this._camera);
		this._renderer.set_stage3DProxy(this._stage3DProxy);
		this._renderer.set_antiAlias(this._antiAlias);
		this._renderer.set_backgroundR((this._backgroundColor >> 16 & 255) / 255);
		this._renderer.set_backgroundG((this._backgroundColor >> 8 & 255) / 255);
		this._renderer.set_backgroundB((this._backgroundColor & 255) / 255);
		this._renderer.set_backgroundAlpha(this._backgroundAlpha);
		this._renderer.set_viewWidth(this._width);
		this._renderer.set_viewHeight(this._height);
		this._backBufferInvalid = true;
		return value;
	}
	,get_renderer: function() {
		return this._renderer;
	}
	,set_filters3d: function(value) {
		if(value != null && value.length == 0) value = null;
		if(this._filter3DRenderer != null && value == null) {
			this._filter3DRenderer.dispose();
			this._filter3DRenderer = null;
		} else if(this._filter3DRenderer == null && value != null) {
			this._filter3DRenderer = new away3d.core.render.Filter3DRenderer(this.get_stage3DProxy());
			this._filter3DRenderer.set_filters(value);
		}
		if(this._filter3DRenderer != null) {
			this._filter3DRenderer.set_filters(value);
			this._requireDepthRender = this._filter3DRenderer.get_requireDepthRender();
		} else {
			this._requireDepthRender = false;
			if(this._depthRender != null) {
				this._depthRender.dispose();
				this._depthRender = null;
			}
		}
		return value;
	}
	,get_filters3d: function() {
		return this._filter3DRenderer != null?this._filter3DRenderer.get_filters():null;
	}
	,set_layeredView: function(value) {
		this._layeredView = value;
		return value;
	}
	,get_layeredView: function() {
		return this._layeredView;
	}
	,set_background: function(value) {
		this._background = value;
		this._renderer.set_background(this._background);
		return value;
	}
	,get_background: function() {
		return this._background;
	}
	,set_forceMouseMove: function(value) {
		this._mouse3DManager.set_forceMouseMove(value);
		this._touch3DManager.set_forceTouchMove(value);
		return value;
	}
	,get_forceMouseMove: function() {
		return this._mouse3DManager.get_forceMouseMove();
	}
	,set_stage3DProxy: function(stage3DProxy) {
		if(this._stage3DProxy != null) this._stage3DProxy.removeEventListener(away3d.events.Stage3DEvent.VIEWPORT_UPDATED,$bind(this,this.onViewportUpdated));
		this._stage3DProxy = stage3DProxy;
		this._stage3DProxy.addEventListener(away3d.events.Stage3DEvent.VIEWPORT_UPDATED,$bind(this,this.onViewportUpdated));
		this._renderer.set_stage3DProxy(this._depthRenderer.set_stage3DProxy(this._stage3DProxy));
		this._globalPosDirty = true;
		this._backBufferInvalid = true;
		return stage3DProxy;
	}
	,get_stage3DProxy: function() {
		return this._stage3DProxy;
	}
	,set_rightClickMenuEnabled: function(val) {
		this._rightClickMenuEnabled = val;
		return val;
	}
	,get_rightClickMenuEnabled: function() {
		return this._rightClickMenuEnabled;
	}
	,onScenePartitionChanged: function(event) {
		if(this._camera != null) this._camera.set_partition(this.get_scene().get_partition());
	}
	,visitWebsite: function(e) {
	}
	,set_depthPrepass: function(value) {
		this._depthPrepass = value;
		return value;
	}
	,get_depthPrepass: function() {
		return this._depthPrepass;
	}
	,viewSource: function(e) {
	}
	,__class__: away3d.containers.View3D
	,__properties__: {set_depthPrepass:"set_depthPrepass",get_depthPrepass:"get_depthPrepass",set_rightClickMenuEnabled:"set_rightClickMenuEnabled",get_rightClickMenuEnabled:"get_rightClickMenuEnabled",set_stage3DProxy:"set_stage3DProxy",get_stage3DProxy:"get_stage3DProxy",set_forceMouseMove:"set_forceMouseMove",get_forceMouseMove:"get_forceMouseMove",set_background:"set_background",get_background:"get_background",set_layeredView:"set_layeredView",get_layeredView:"get_layeredView",set_filters3d:"set_filters3d",get_filters3d:"get_filters3d",set_renderer:"set_renderer",get_renderer:"get_renderer",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_backgroundAlpha:"set_backgroundAlpha",get_backgroundAlpha:"get_backgroundAlpha",set_camera:"set_camera",get_camera:"get_camera",set_scene:"set_scene",get_scene:"get_scene",get_deltaTime:"get_deltaTime",set_antiAlias:"set_antiAlias",get_antiAlias:"get_antiAlias",get_renderedFacesCount:"get_renderedFacesCount",set_shareContext:"set_shareContext",get_shareContext:"get_shareContext",set_mousePicker:"set_mousePicker",get_mousePicker:"get_mousePicker",set_touchPicker:"set_touchPicker",get_touchPicker:"get_touchPicker",get_entityCollector:"get_entityCollector",get_mouseX:"get_mouseX",get_mouseY:"get_mouseY",get_parent:"get_parent",get_stage:"get_stage",set_width:"set_width",get_width:"get_width",set_height:"set_height",get_height:"get_height",set_x:"set_x",get_x:"get_x",set_y:"set_y",get_y:"get_y"}
});
away3d.controllers = {}
away3d.controllers.ControllerBase = function(targetObject) {
	this._autoUpdate = true;
	this.set_targetObject(targetObject);
};
$hxClasses["away3d.controllers.ControllerBase"] = away3d.controllers.ControllerBase;
away3d.controllers.ControllerBase.__name__ = ["away3d","controllers","ControllerBase"];
away3d.controllers.ControllerBase.prototype = {
	update: function(interpolate) {
		if(interpolate == null) interpolate = true;
		throw new away3d.errors.AbstractMethodError();
	}
	,set_autoUpdate: function(val) {
		if(this._autoUpdate == val) return val;
		this._autoUpdate = val;
		if(this._targetObject != null) {
			if(this._autoUpdate) this._targetObject._controller = this; else this._targetObject._controller = null;
		}
		return val;
	}
	,get_autoUpdate: function() {
		return this._autoUpdate;
	}
	,set_targetObject: function(val) {
		if(this._targetObject == val) return val;
		if(this._targetObject != null && this._autoUpdate) this._targetObject._controller = null;
		this._targetObject = val;
		if(this._targetObject != null && this._autoUpdate) this._targetObject._controller = this;
		this.notifyUpdate();
		return val;
	}
	,get_targetObject: function() {
		return this._targetObject;
	}
	,notifyUpdate: function() {
		if(this._targetObject != null && this._targetObject.get_implicitPartition() != null && this._autoUpdate) this._targetObject.get_implicitPartition().markForUpdate(this._targetObject);
	}
	,__class__: away3d.controllers.ControllerBase
	,__properties__: {set_targetObject:"set_targetObject",get_targetObject:"get_targetObject",set_autoUpdate:"set_autoUpdate",get_autoUpdate:"get_autoUpdate"}
}
away3d.core.base.SubGeometryBase = function() {
	this._faceNormalsDirty = true;
	this._faceTangentsDirty = true;
	this._indexBuffer = flash._Vector.Vector_Impl_._new(8);
	this._indexBufferContext = flash._Vector.Vector_Impl_._new(8);
	this._indicesInvalid = flash._Vector.Vector_Impl_._new(8,true);
	this._autoDeriveVertexNormals = true;
	this._autoDeriveVertexTangents = true;
	this._autoGenerateUVs = false;
	this._useFaceWeights = false;
	this._vertexNormalsDirty = true;
	this._vertexTangentsDirty = true;
	this._scaleU = 1;
	this._scaleV = 1;
	this._uvsDirty = true;
};
$hxClasses["away3d.core.base.SubGeometryBase"] = away3d.core.base.SubGeometryBase;
away3d.core.base.SubGeometryBase.__name__ = ["away3d","core","base","SubGeometryBase"];
away3d.core.base.SubGeometryBase.prototype = {
	updateDummyUVs: function(target) {
		this._uvsDirty = false;
		var idx;
		var uvIdx;
		var stride = this.get_UVStride();
		var skip = stride - 2;
		var len = flash._Vector.Vector_Impl_.get_length(this._vertexData) / this.get_vertexStride() * stride | 0;
		if(target == null) target = flash._Vector.Vector_Impl_._new();
		flash._Vector.Vector_Impl_.set_fixed(target,false);
		if(len < target.length) target = target.slice(0,len);
		while(len > target.length) target.push(null);
		len;
		flash._Vector.Vector_Impl_.set_fixed(target,true);
		idx = this.get_UVOffset();
		uvIdx = 0;
		while(idx < len) {
			target[idx++] = uvIdx * .5;
			target[idx++] = 1.0 - (uvIdx & 1);
			idx += skip;
			if(++uvIdx == 3) uvIdx = 0;
		}
		return target;
	}
	,applyTransformation: function(transform) {
		var vertices = this._vertexData;
		var normals = this.get_vertexNormalData();
		var tangents = this.get_vertexTangentData();
		var posStride = this.get_vertexStride();
		var normalStride = this.get_vertexNormalStride();
		var tangentStride = this.get_vertexTangentStride();
		var posOffset = this.get_vertexOffset();
		var normalOffset = this.get_vertexNormalOffset();
		var tangentOffset = this.get_vertexTangentOffset();
		var len = flash._Vector.Vector_Impl_.get_length(vertices) / posStride | 0;
		var i = 0;
		var i1;
		var i2;
		var vector = new flash.geom.Vector3D();
		var bakeNormals = normals != null;
		var bakeTangents = tangents != null;
		var invTranspose = null;
		if(bakeNormals || bakeTangents) {
			invTranspose = new flash.geom.Matrix3D(flash._Vector.Vector_Impl_.copy(transform.rawData));
			invTranspose.invert();
			invTranspose.transpose();
		}
		var vi0 = posOffset;
		var ni0 = normalOffset;
		var ti0 = tangentOffset;
		i = 0;
		while(i < len) {
			i1 = vi0 + 1;
			i2 = vi0 + 2;
			vector.x = vertices[vi0];
			vector.y = vertices[i1];
			vector.z = vertices[i2];
			vector = transform.transformVector(vector);
			vertices[vi0] = vector.x;
			vertices[i1] = vector.y;
			vertices[i2] = vector.z;
			vi0 += posStride;
			if(bakeNormals) {
				i1 = ni0 + 1;
				i2 = ni0 + 2;
				vector.x = normals[ni0];
				vector.y = normals[i1];
				vector.z = normals[i2];
				vector = invTranspose.deltaTransformVector(vector);
				vector.normalize();
				normals[ni0] = vector.x;
				normals[i1] = vector.y;
				normals[i2] = vector.z;
				ni0 += normalStride;
			}
			if(bakeTangents) {
				i1 = ti0 + 1;
				i2 = ti0 + 2;
				vector.x = tangents[ti0];
				vector.y = tangents[i1];
				vector.z = tangents[i2];
				vector = invTranspose.deltaTransformVector(vector);
				vector.normalize();
				tangents[ti0] = vector.x;
				tangents[i1] = vector.y;
				tangents[i2] = vector.z;
				ti0 += tangentStride;
			}
			++i;
		}
	}
	,scale: function(scale) {
		var vertices = this.get_UVData();
		var len = flash._Vector.Vector_Impl_.get_length(vertices);
		var offset = this.get_vertexOffset();
		var stride = this.get_vertexStride();
		var i = offset;
		while(i < len) {
			vertices[i] *= scale;
			vertices[i + 1] *= scale;
			vertices[i + 2] *= scale;
			i += stride;
		}
	}
	,scaleUV: function(scaleU,scaleV) {
		if(scaleV == null) scaleV = 1;
		if(scaleU == null) scaleU = 1;
		var offset = this.get_UVOffset();
		var stride = this.get_UVStride();
		var uvs = this.get_UVData();
		var len = flash._Vector.Vector_Impl_.get_length(uvs);
		var ratioU = scaleU / this._scaleU;
		var ratioV = scaleV / this._scaleV;
		var i = offset;
		while(i < len) {
			uvs[i] *= ratioU;
			uvs[i + 1] *= ratioV;
			i += stride;
		}
		this._scaleU = scaleU;
		this._scaleV = scaleV;
	}
	,get_scaleV: function() {
		return this._scaleV;
	}
	,get_scaleU: function() {
		return this._scaleU;
	}
	,set_parentGeometry: function(value) {
		this._parentGeometry = value;
		return value;
	}
	,get_parentGeometry: function() {
		return this._parentGeometry;
	}
	,invalidateBounds: function() {
		if(this._parentGeometry != null) this._parentGeometry.invalidateBounds(js.Boot.__cast(this , away3d.core.base.ISubGeometry));
	}
	,get_UVOffset: function() {
		throw new away3d.errors.AbstractMethodError();
		return 0;
	}
	,get_vertexTangentOffset: function() {
		throw new away3d.errors.AbstractMethodError();
		return 0;
	}
	,get_vertexNormalOffset: function() {
		throw new away3d.errors.AbstractMethodError();
		return 0;
	}
	,get_vertexOffset: function() {
		throw new away3d.errors.AbstractMethodError();
		return 0;
	}
	,get_vertexTangentStride: function() {
		throw new away3d.errors.AbstractMethodError();
		return 0;
	}
	,get_vertexNormalStride: function() {
		throw new away3d.errors.AbstractMethodError();
		return 0;
	}
	,get_vertexStride: function() {
		throw new away3d.errors.AbstractMethodError();
		return 0;
	}
	,get_UVData: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,get_vertexTangentData: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,get_vertexNormalData: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,get_vertexPositionData: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,get_vertexData: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,get_UVStride: function() {
		throw new away3d.errors.AbstractMethodError();
		return 0;
	}
	,invalidateBuffers: function(invalid) {
		var i = 0;
		while(i < 8) {
			invalid[i] = true;
			++i;
		}
	}
	,get_faceNormals: function() {
		if(this._faceNormalsDirty) this.updateFaceNormals();
		return this._faceNormals;
	}
	,set_autoDeriveVertexTangents: function(value) {
		this._autoDeriveVertexTangents = value;
		this._vertexTangentsDirty = value;
		return value;
	}
	,get_autoDeriveVertexTangents: function() {
		return this._autoDeriveVertexTangents;
	}
	,disposeVertexBuffers: function(buffers) {
		var i = 0;
		while(i < 8) {
			if(buffers[i] != null) {
				buffers[i].dispose();
				buffers[i] = null;
			}
			++i;
		}
	}
	,disposeIndexBuffers: function(buffers) {
		var i = 0;
		while(i < 8) {
			if(buffers[i] != null) {
				buffers[i].dispose();
				buffers[i] = null;
			}
			++i;
		}
	}
	,updateIndexData: function(indices) {
		this._indices = indices;
		this._numIndices = flash._Vector.Vector_Impl_.get_length(indices);
		var numTriangles = this._numIndices / 3 | 0;
		if(this._numTriangles != numTriangles) this.disposeIndexBuffers(this._indexBuffer);
		this._numTriangles = numTriangles;
		this.invalidateBuffers(this._indicesInvalid);
		this._faceNormalsDirty = true;
		if(this._autoDeriveVertexNormals) this._vertexNormalsDirty = true;
		if(this._autoDeriveVertexTangents) this._vertexTangentsDirty = true;
	}
	,get_indexData: function() {
		return this._indices;
	}
	,dispose: function() {
		this.disposeIndexBuffers(this._indexBuffer);
		this._indices = null;
		this._indexBufferContext = null;
		this._faceNormals = null;
		this._faceWeights = null;
		this._faceTangents = null;
		this._vertexData = null;
	}
	,updateVertexTangents: function(target) {
		if(this._faceTangentsDirty) this.updateFaceTangents();
		var i = 0;
		var lenV = flash._Vector.Vector_Impl_.get_length(this._vertexData);
		var tangentStride = this.get_vertexTangentStride();
		var tangentOffset = this.get_vertexTangentOffset();
		if(target == null) target = flash._Vector.Vector_Impl_._new(lenV,true);
		i = tangentOffset;
		while(i < lenV) {
			target[i] = 0.0;
			target[i + 1] = 0.0;
			target[i + 2] = 0.0;
			i += tangentStride;
		}
		var k = 0;
		var lenI = flash._Vector.Vector_Impl_.get_length(this._indices);
		var index;
		var weight;
		var f1 = 0;
		var f2 = 1;
		var f3 = 2;
		i = 0;
		while(i < lenI) {
			weight = this._useFaceWeights?this._faceWeights[k++]:1;
			index = tangentOffset + this._indices[i++] * tangentStride;
			target[index++] += this._faceTangents[f1] * weight;
			target[index++] += this._faceTangents[f2] * weight;
			target[index] += this._faceTangents[f3] * weight;
			index = tangentOffset + this._indices[i++] * tangentStride;
			target[index++] += this._faceTangents[f1] * weight;
			target[index++] += this._faceTangents[f2] * weight;
			target[index] += this._faceTangents[f3] * weight;
			index = tangentOffset + this._indices[i++] * tangentStride;
			target[index++] += this._faceTangents[f1] * weight;
			target[index++] += this._faceTangents[f2] * weight;
			target[index] += this._faceTangents[f3] * weight;
			f1 += 3;
			f2 += 3;
			f3 += 3;
		}
		i = tangentOffset;
		while(i < lenV) {
			var vx = target[i];
			var vy = target[i + 1];
			var vz = target[i + 2];
			var d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);
			target[i] = vx * d;
			target[i + 1] = vy * d;
			target[i + 2] = vz * d;
			i += tangentStride;
		}
		this._vertexTangentsDirty = false;
		return target;
	}
	,updateVertexNormals: function(target) {
		if(this._faceNormalsDirty) this.updateFaceNormals();
		var v1;
		var f1 = 0;
		var f2 = 1;
		var f3 = 2;
		var lenV = flash._Vector.Vector_Impl_.get_length(this._vertexData);
		var normalStride = this.get_vertexNormalStride();
		var normalOffset = this.get_vertexNormalOffset();
		if(target == null) target = flash._Vector.Vector_Impl_._new(lenV,true);
		v1 = normalOffset;
		while(v1 < lenV) {
			target[v1] = 0.0;
			target[v1 + 1] = 0.0;
			target[v1 + 2] = 0.0;
			v1 += normalStride;
		}
		var i = 0;
		var k = 0;
		var lenI = flash._Vector.Vector_Impl_.get_length(this._indices);
		var index;
		var weight;
		while(i < lenI) {
			weight = this._useFaceWeights?this._faceWeights[k++]:1;
			index = normalOffset + this._indices[i++] * normalStride;
			target[index++] += this._faceNormals[f1] * weight;
			target[index++] += this._faceNormals[f2] * weight;
			target[index] += this._faceNormals[f3] * weight;
			index = normalOffset + this._indices[i++] * normalStride;
			target[index++] += this._faceNormals[f1] * weight;
			target[index++] += this._faceNormals[f2] * weight;
			target[index] += this._faceNormals[f3] * weight;
			index = normalOffset + this._indices[i++] * normalStride;
			target[index++] += this._faceNormals[f1] * weight;
			target[index++] += this._faceNormals[f2] * weight;
			target[index] += this._faceNormals[f3] * weight;
			f1 += 3;
			f2 += 3;
			f3 += 3;
		}
		v1 = normalOffset;
		while(v1 < lenV) {
			var vx = target[v1];
			var vy = target[v1 + 1];
			var vz = target[v1 + 2];
			var d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);
			target[v1] = vx * d;
			target[v1 + 1] = vy * d;
			target[v1 + 2] = vz * d;
			v1 += normalStride;
		}
		this._vertexNormalsDirty = false;
		return target;
	}
	,updateFaceNormals: function() {
		var i = 0;
		var j = 0;
		var k = 0;
		var index;
		var len = flash._Vector.Vector_Impl_.get_length(this._indices);
		var x1;
		var x2;
		var x3;
		var y1;
		var y2;
		var y3;
		var z1;
		var z2;
		var z3;
		var dx1;
		var dy1;
		var dz1;
		var dx2;
		var dy2;
		var dz2;
		var cx;
		var cy;
		var cz;
		var d;
		var vertices = this._vertexData;
		var posStride = this.get_vertexStride();
		var posOffset = this.get_vertexOffset();
		if(this._faceNormals == null) this._faceNormals = flash._Vector.Vector_Impl_._new(len,true);
		if(this._faceWeights == null) this._faceWeights = flash._Vector.Vector_Impl_._new(len / 3 | 0,true);
		while(i < len) {
			index = posOffset + this._indices[i++] * posStride;
			x1 = vertices[index];
			y1 = vertices[index + 1];
			z1 = vertices[index + 2];
			index = posOffset + this._indices[i++] * posStride;
			x2 = vertices[index];
			y2 = vertices[index + 1];
			z2 = vertices[index + 2];
			index = posOffset + this._indices[i++] * posStride;
			x3 = vertices[index];
			y3 = vertices[index + 1];
			z3 = vertices[index + 2];
			dx1 = x3 - x1;
			dy1 = y3 - y1;
			dz1 = z3 - z1;
			dx2 = x2 - x1;
			dy2 = y2 - y1;
			dz2 = z2 - z1;
			cx = dz1 * dy2 - dy1 * dz2;
			cy = dx1 * dz2 - dz1 * dx2;
			cz = dy1 * dx2 - dx1 * dy2;
			d = Math.sqrt(cx * cx + cy * cy + cz * cz);
			if(this._useFaceWeights) {
				var w = d * 10000;
				if(w < 1) w = 1;
				this._faceWeights[k++] = w;
			}
			d = 1 / d;
			this._faceNormals[j++] = cx * d;
			this._faceNormals[j++] = cy * d;
			this._faceNormals[j++] = cz * d;
		}
		this._faceNormalsDirty = false;
	}
	,updateFaceTangents: function() {
		var i = 0;
		var index1;
		var index2;
		var index3;
		var len = flash._Vector.Vector_Impl_.get_length(this._indices);
		var ui;
		var vi;
		var v0;
		var dv1;
		var dv2;
		var denom;
		var x0;
		var y0;
		var z0;
		var dx1;
		var dy1;
		var dz1;
		var dx2;
		var dy2;
		var dz2;
		var cx;
		var cy;
		var cz;
		var vertices = this._vertexData;
		var uvs = this.get_UVData();
		var posStride = this.get_vertexStride();
		var posOffset = this.get_vertexOffset();
		var texStride = this.get_UVStride();
		var texOffset = this.get_UVOffset();
		if(this._faceTangents == null) this._faceTangents = flash._Vector.Vector_Impl_._new(flash._Vector.Vector_Impl_.get_length(this._indices),true);
		while(i < len) {
			index1 = this._indices[i];
			index2 = this._indices[i + 1];
			index3 = this._indices[i + 2];
			ui = texOffset + index1 * texStride + 1;
			v0 = uvs[ui];
			ui = texOffset + index2 * texStride + 1;
			dv1 = uvs[ui] - v0;
			ui = texOffset + index3 * texStride + 1;
			dv2 = uvs[ui] - v0;
			vi = posOffset + index1 * posStride;
			x0 = vertices[vi];
			y0 = vertices[vi + 1];
			z0 = vertices[vi + 2];
			vi = posOffset + index2 * posStride;
			dx1 = vertices[vi] - x0;
			dy1 = vertices[vi + 1] - y0;
			dz1 = vertices[vi + 2] - z0;
			vi = posOffset + index3 * posStride;
			dx2 = vertices[vi] - x0;
			dy2 = vertices[vi + 1] - y0;
			dz2 = vertices[vi + 2] - z0;
			cx = dv2 * dx1 - dv1 * dx2;
			cy = dv2 * dy1 - dv1 * dy2;
			cz = dv2 * dz1 - dv1 * dz2;
			denom = 1 / Math.sqrt(cx * cx + cy * cy + cz * cz);
			this._faceTangents[i++] = denom * cx;
			this._faceTangents[i++] = denom * cy;
			this._faceTangents[i++] = denom * cz;
		}
		this._faceTangentsDirty = false;
	}
	,getIndexBuffer: function(stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(this._indexBuffer[contextIndex] == null || this._indexBufferContext[contextIndex] != context) {
			this._indexBuffer[contextIndex] = context.createIndexBuffer(this._numIndices);
			this._indexBufferContext[contextIndex] = context;
			this._indicesInvalid[contextIndex] = true;
		}
		if(this._indicesInvalid[contextIndex]) {
			this._indexBuffer[contextIndex].uploadFromVector(this._indices,0,this._numIndices);
			this._indicesInvalid[contextIndex] = false;
		}
		return this._indexBuffer[contextIndex];
	}
	,get_numTriangles: function() {
		return this._numTriangles;
	}
	,set_useFaceWeights: function(value) {
		this._useFaceWeights = value;
		if(this._autoDeriveVertexNormals) this._vertexNormalsDirty = true;
		if(this._autoDeriveVertexTangents) this._vertexTangentsDirty = true;
		this._faceNormalsDirty = true;
		return value;
	}
	,get_useFaceWeights: function() {
		return this._useFaceWeights;
	}
	,set_autoDeriveVertexNormals: function(value) {
		this._autoDeriveVertexNormals = value;
		this._vertexNormalsDirty = value;
		return value;
	}
	,get_autoDeriveVertexNormals: function() {
		return this._autoDeriveVertexNormals;
	}
	,set_autoGenerateDummyUVs: function(value) {
		this._autoGenerateUVs = value;
		this._uvsDirty = value;
		return value;
	}
	,get_autoGenerateDummyUVs: function() {
		return this._autoGenerateUVs;
	}
	,__class__: away3d.core.base.SubGeometryBase
	,__properties__: {set_autoGenerateDummyUVs:"set_autoGenerateDummyUVs",get_autoGenerateDummyUVs:"get_autoGenerateDummyUVs",set_autoDeriveVertexNormals:"set_autoDeriveVertexNormals",get_autoDeriveVertexNormals:"get_autoDeriveVertexNormals",set_useFaceWeights:"set_useFaceWeights",get_useFaceWeights:"get_useFaceWeights",get_numTriangles:"get_numTriangles",get_indexData:"get_indexData",set_autoDeriveVertexTangents:"set_autoDeriveVertexTangents",get_autoDeriveVertexTangents:"get_autoDeriveVertexTangents",get_faceNormals:"get_faceNormals",get_UVStride:"get_UVStride",get_vertexData:"get_vertexData",get_vertexPositionData:"get_vertexPositionData",get_vertexNormalData:"get_vertexNormalData",get_vertexTangentData:"get_vertexTangentData",get_UVData:"get_UVData",get_vertexStride:"get_vertexStride",get_vertexNormalStride:"get_vertexNormalStride",get_vertexTangentStride:"get_vertexTangentStride",get_vertexOffset:"get_vertexOffset",get_vertexNormalOffset:"get_vertexNormalOffset",get_vertexTangentOffset:"get_vertexTangentOffset",get_UVOffset:"get_UVOffset",set_parentGeometry:"set_parentGeometry",get_parentGeometry:"get_parentGeometry",get_scaleU:"get_scaleU",get_scaleV:"get_scaleV"}
}
away3d.core.base.ISubGeometry = function() { }
$hxClasses["away3d.core.base.ISubGeometry"] = away3d.core.base.ISubGeometry;
away3d.core.base.ISubGeometry.__name__ = ["away3d","core","base","ISubGeometry"];
away3d.core.base.ISubGeometry.prototype = {
	__class__: away3d.core.base.ISubGeometry
	,__properties__: {get_numVertices:"get_numVertices",get_numTriangles:"get_numTriangles",get_vertexStride:"get_vertexStride",get_vertexNormalStride:"get_vertexNormalStride",get_vertexTangentStride:"get_vertexTangentStride",get_UVStride:"get_UVStride",get_secondaryUVStride:"get_secondaryUVStride",get_vertexData:"get_vertexData",get_vertexNormalData:"get_vertexNormalData",get_vertexTangentData:"get_vertexTangentData",get_vertexOffset:"get_vertexOffset",get_vertexNormalOffset:"get_vertexNormalOffset",get_vertexTangentOffset:"get_vertexTangentOffset",get_UVOffset:"get_UVOffset",get_secondaryUVOffset:"get_secondaryUVOffset",get_indexData:"get_indexData",get_UVData:"get_UVData",get_scaleU:"get_scaleU",get_scaleV:"get_scaleV",set_parentGeometry:"set_parentGeometry",get_parentGeometry:"get_parentGeometry",get_faceNormals:"get_faceNormals",set_autoDeriveVertexNormals:"set_autoDeriveVertexNormals",get_autoDeriveVertexNormals:"get_autoDeriveVertexNormals",set_autoDeriveVertexTangents:"set_autoDeriveVertexTangents",get_autoDeriveVertexTangents:"get_autoDeriveVertexTangents",get_vertexPositionData:"get_vertexPositionData"}
}
away3d.core.base.CompactSubGeometry = function() {
	this._vertexDataInvalid = flash._Vector.Vector_Impl_._new(8,true);
	this._vertexBuffer = flash._Vector.Vector_Impl_._new(8);
	this._bufferContext = flash._Vector.Vector_Impl_._new(8);
	this._autoDeriveVertexNormals = false;
	this._autoDeriveVertexTangents = false;
	away3d.core.base.SubGeometryBase.call(this);
};
$hxClasses["away3d.core.base.CompactSubGeometry"] = away3d.core.base.CompactSubGeometry;
away3d.core.base.CompactSubGeometry.__name__ = ["away3d","core","base","CompactSubGeometry"];
away3d.core.base.CompactSubGeometry.__interfaces__ = [away3d.core.base.ISubGeometry];
away3d.core.base.CompactSubGeometry.__super__ = away3d.core.base.SubGeometryBase;
away3d.core.base.CompactSubGeometry.prototype = $extend(away3d.core.base.SubGeometryBase.prototype,{
	fromVectors: function(verts,uvs,normals,tangents) {
		var vertLen = flash._Vector.Vector_Impl_.get_length(verts) / 3 * 13 | 0;
		var index = 0;
		var v = 0;
		var n = 0;
		var t = 0;
		var u = 0;
		var data = flash._Vector.Vector_Impl_._new(vertLen,true);
		while(index < vertLen) {
			data[index++] = verts[v++];
			data[index++] = verts[v++];
			data[index++] = verts[v++];
			if(normals != null && flash._Vector.Vector_Impl_.get_length(normals) > 0) {
				data[index++] = normals[n++];
				data[index++] = normals[n++];
				data[index++] = normals[n++];
			} else {
				data[index++] = 0;
				data[index++] = 0;
				data[index++] = 0;
			}
			if(tangents != null && flash._Vector.Vector_Impl_.get_length(tangents) > 0) {
				data[index++] = tangents[t++];
				data[index++] = tangents[t++];
				data[index++] = tangents[t++];
			} else {
				data[index++] = 0;
				data[index++] = 0;
				data[index++] = 0;
			}
			if(uvs != null && flash._Vector.Vector_Impl_.get_length(uvs) > 0) {
				data[index++] = uvs[u];
				data[index++] = uvs[u + 1];
				data[index++] = uvs[u++];
				data[index++] = uvs[u++];
			} else {
				data[index++] = 0;
				data[index++] = 0;
				data[index++] = 0;
				data[index++] = 0;
			}
		}
		this.set_autoDeriveVertexNormals(!(normals != null && flash._Vector.Vector_Impl_.get_length(normals) > 0));
		this.set_autoDeriveVertexTangents(!(tangents != null && flash._Vector.Vector_Impl_.get_length(tangents) > 0));
		this.set_autoGenerateDummyUVs(!(uvs != null && flash._Vector.Vector_Impl_.get_length(uvs) > 0));
		this.updateData(data);
	}
	,stripBuffer: function(offset,numEntries) {
		var data = flash._Vector.Vector_Impl_._new(this._numVertices * numEntries);
		var i = 0;
		var j = offset;
		var skip = 13 - numEntries;
		var v = 0;
		while(v < this._numVertices) {
			var k = 0;
			while(k < numEntries) {
				data[i++] = this._vertexData[j++];
				++k;
			}
			j += skip;
			++v;
		}
		return data;
	}
	,get_vertexPositionData: function() {
		if(this._isolatedVertexPositionDataDirty || this._isolatedVertexPositionData == null) {
			this._isolatedVertexPositionData = this.stripBuffer(0,3);
			this._isolatedVertexPositionDataDirty = false;
		}
		return this._isolatedVertexPositionData;
	}
	,cloneWithSeperateBuffers: function() {
		var clone = new away3d.core.base.SubGeometry();
		clone.updateVertexData(this._isolatedVertexPositionData != null?this._isolatedVertexPositionData:this._isolatedVertexPositionData = this.stripBuffer(0,3));
		clone.set_autoDeriveVertexNormals(this._autoDeriveVertexNormals);
		clone.set_autoDeriveVertexTangents(this._autoDeriveVertexTangents);
		if(!this._autoDeriveVertexNormals) clone.updateVertexNormalData(this.stripBuffer(3,3));
		if(!this._autoDeriveVertexTangents) clone.updateVertexTangentData(this.stripBuffer(6,3));
		clone.updateUVData(this.stripBuffer(9,2));
		clone.updateSecondaryUVData(this.stripBuffer(11,2));
		clone.updateIndexData(flash._Vector.Vector_Impl_.concat(this.get_indexData()));
		return clone;
	}
	,invalidateBuffers: function(invalid) {
		away3d.core.base.SubGeometryBase.prototype.invalidateBuffers.call(this,invalid);
		this._activeDataInvalid = true;
	}
	,disposeVertexBuffers: function(buffers) {
		away3d.core.base.SubGeometryBase.prototype.disposeVertexBuffers.call(this,buffers);
		this._activeBuffer = null;
	}
	,dispose: function() {
		away3d.core.base.SubGeometryBase.prototype.dispose.call(this);
		this.disposeVertexBuffers(this._vertexBuffer);
		this._vertexBuffer = null;
	}
	,get_secondaryUVOffset: function() {
		return 11;
	}
	,get_UVOffset: function() {
		return 9;
	}
	,get_vertexTangentOffset: function() {
		return 6;
	}
	,get_vertexNormalOffset: function() {
		return 3;
	}
	,get_vertexOffset: function() {
		return 0;
	}
	,get_secondaryUVStride: function() {
		return 13;
	}
	,get_UVStride: function() {
		return 13;
	}
	,get_vertexTangentStride: function() {
		return 13;
	}
	,get_vertexNormalStride: function() {
		return 13;
	}
	,get_vertexStride: function() {
		return 13;
	}
	,scaleUV: function(scaleU,scaleV) {
		if(scaleV == null) scaleV = 1;
		if(scaleU == null) scaleU = 1;
		away3d.core.base.SubGeometryBase.prototype.scaleUV.call(this,scaleU,scaleV);
		this.invalidateBuffers(this._vertexDataInvalid);
	}
	,clone: function() {
		var clone = new away3d.core.base.CompactSubGeometry();
		clone._autoDeriveVertexNormals = this._autoDeriveVertexNormals;
		clone._autoDeriveVertexTangents = this._autoDeriveVertexTangents;
		clone.updateData(flash._Vector.Vector_Impl_.concat(this._vertexData));
		clone.updateIndexData(flash._Vector.Vector_Impl_.concat(this._indices));
		return clone;
	}
	,scale: function(scale) {
		away3d.core.base.SubGeometryBase.prototype.scale.call(this,scale);
		this.invalidateBuffers(this._vertexDataInvalid);
	}
	,applyTransformation: function(transform) {
		away3d.core.base.SubGeometryBase.prototype.applyTransformation.call(this,transform);
		this.invalidateBuffers(this._vertexDataInvalid);
	}
	,get_UVData: function() {
		if(this._uvsDirty && this._autoGenerateUVs) {
			this._vertexData = this.updateDummyUVs(this._vertexData);
			this.invalidateBuffers(this._vertexDataInvalid);
		}
		return this._vertexData;
	}
	,get_vertexTangentData: function() {
		if(this._autoDeriveVertexTangents && this._vertexTangentsDirty) this._vertexData = this.updateVertexTangents(this._vertexData);
		return this._vertexData;
	}
	,get_vertexNormalData: function() {
		if(this._autoDeriveVertexNormals && this._vertexNormalsDirty) this._vertexData = this.updateVertexNormals(this._vertexData);
		return this._vertexData;
	}
	,updateVertexTangents: function(target) {
		if(this._vertexNormalsDirty) this._vertexData = this.updateVertexNormals(this._vertexData);
		this.invalidateBuffers(this._vertexDataInvalid);
		return away3d.core.base.SubGeometryBase.prototype.updateVertexTangents.call(this,target);
	}
	,updateVertexNormals: function(target) {
		this.invalidateBuffers(this._vertexDataInvalid);
		return away3d.core.base.SubGeometryBase.prototype.updateVertexNormals.call(this,target);
	}
	,get_vertexData: function() {
		if(this._autoDeriveVertexNormals && this._vertexNormalsDirty) this._vertexData = this.updateVertexNormals(this._vertexData);
		if(this._autoDeriveVertexTangents && this._vertexTangentsDirty) this._vertexData = this.updateVertexTangents(this._vertexData);
		if(this._uvsDirty && this._autoGenerateUVs) this._vertexData = this.updateDummyUVs(this._vertexData);
		return this._vertexData;
	}
	,updateActiveBuffer: function(contextIndex) {
		this._contextIndex = contextIndex;
		this._activeDataInvalid = this._vertexDataInvalid[contextIndex];
		this._activeBuffer = this._vertexBuffer[contextIndex];
		this._activeContext = this._bufferContext[contextIndex];
	}
	,createBuffer: function(contextIndex,context) {
		this._vertexBuffer[contextIndex] = this._activeBuffer = context.createVertexBuffer(this._numVertices,13);
		this._bufferContext[contextIndex] = this._activeContext = context;
		this._vertexDataInvalid[contextIndex] = this._activeDataInvalid = true;
	}
	,activateVertexTangentBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(contextIndex != this._contextIndex) this.updateActiveBuffer(contextIndex);
		if(this._activeBuffer == null || this._activeContext != context) this.createBuffer(contextIndex,context);
		if(this._activeDataInvalid) this.uploadData(contextIndex);
		context.setVertexBufferAt(index,this._activeBuffer,6,flash.display3D.Context3DVertexBufferFormat.FLOAT_3);
	}
	,activateVertexNormalBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(contextIndex != this._contextIndex) this.updateActiveBuffer(contextIndex);
		if(this._activeBuffer == null || this._activeContext != context) this.createBuffer(contextIndex,context);
		if(this._activeDataInvalid) this.uploadData(contextIndex);
		context.setVertexBufferAt(index,this._activeBuffer,3,flash.display3D.Context3DVertexBufferFormat.FLOAT_3);
	}
	,uploadData: function(contextIndex) {
		this._activeBuffer.uploadFromVector(this._vertexData,0,this._numVertices);
		this._vertexDataInvalid[contextIndex] = this._activeDataInvalid = false;
	}
	,activateSecondaryUVBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(contextIndex != this._contextIndex) this.updateActiveBuffer(contextIndex);
		if(this._activeBuffer == null || this._activeContext != context) this.createBuffer(contextIndex,context);
		if(this._activeDataInvalid) this.uploadData(contextIndex);
		context.setVertexBufferAt(index,this._activeBuffer,11,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
	}
	,activateUVBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(this._uvsDirty && this._autoGenerateUVs) {
			this._vertexData = this.updateDummyUVs(this._vertexData);
			this.invalidateBuffers(this._vertexDataInvalid);
		}
		if(contextIndex != this._contextIndex) this.updateActiveBuffer(contextIndex);
		if(this._activeBuffer == null || this._activeContext != context) this.createBuffer(contextIndex,context);
		if(this._activeDataInvalid) this.uploadData(contextIndex);
		context.setVertexBufferAt(index,this._activeBuffer,9,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
	}
	,activateVertexBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(contextIndex != this._contextIndex) this.updateActiveBuffer(contextIndex);
		if(this._activeBuffer == null || this._activeContext != context) this.createBuffer(contextIndex,context);
		if(this._activeDataInvalid) this.uploadData(contextIndex);
		context.setVertexBufferAt(index,this._activeBuffer,0,flash.display3D.Context3DVertexBufferFormat.FLOAT_3);
	}
	,updateData: function(data) {
		if(this._autoDeriveVertexNormals) this._vertexNormalsDirty = true;
		if(this._autoDeriveVertexTangents) this._vertexTangentsDirty = true;
		this._faceNormalsDirty = true;
		this._faceTangentsDirty = true;
		this._isolatedVertexPositionDataDirty = true;
		this._vertexData = data;
		var numVertices = flash._Vector.Vector_Impl_.get_length(this._vertexData) / 13 | 0;
		if(numVertices != this._numVertices) this.disposeVertexBuffers(this._vertexBuffer);
		this._numVertices = numVertices;
		if(this._numVertices == 0) throw new flash.errors.Error("Bad data: geometry can't have zero triangles");
		this.invalidateBuffers(this._vertexDataInvalid);
		this.invalidateBounds();
	}
	,get_numVertices: function() {
		return this._numVertices;
	}
	,__class__: away3d.core.base.CompactSubGeometry
	,__properties__: $extend(away3d.core.base.SubGeometryBase.prototype.__properties__,{get_numVertices:"get_numVertices",get_secondaryUVStride:"get_secondaryUVStride",get_secondaryUVOffset:"get_secondaryUVOffset"})
});
away3d.core.base.Geometry = function() {
	away3d.library.assets.NamedAssetBase.call(this);
	this._subGeometries = flash._Vector.Vector_Impl_._new();
};
$hxClasses["away3d.core.base.Geometry"] = away3d.core.base.Geometry;
away3d.core.base.Geometry.__name__ = ["away3d","core","base","Geometry"];
away3d.core.base.Geometry.__interfaces__ = [away3d.library.assets.IAsset];
away3d.core.base.Geometry.__super__ = away3d.library.assets.NamedAssetBase;
away3d.core.base.Geometry.prototype = $extend(away3d.library.assets.NamedAssetBase.prototype,{
	invalidateBounds: function(subGeom) {
		if(this.hasEventListener(away3d.events.GeometryEvent.BOUNDS_INVALID)) this.dispatchEvent(new away3d.events.GeometryEvent(away3d.events.GeometryEvent.BOUNDS_INVALID,subGeom));
	}
	,validate: function() {
	}
	,convertToSeparateBuffers: function() {
		var subGeom;
		var numSubGeoms = flash._Vector.Vector_Impl_.get_length(this._subGeometries);
		var _removableCompactSubGeometries = flash._Vector.Vector_Impl_._new();
		var i = 0;
		while(i < numSubGeoms) {
			subGeom = this._subGeometries[i];
			if(js.Boot.__instanceof(subGeom,away3d.core.base.SubGeometry)) {
				++i;
				continue;
			}
			flash._Vector.Vector_Impl_.push(_removableCompactSubGeometries,subGeom);
			this.addSubGeometry(subGeom.cloneWithSeperateBuffers());
			++i;
		}
		var $it0 = ((function(_e) {
			return function() {
				return $iterator(flash._Vector.Vector_Impl_)(_e);
			};
		})(_removableCompactSubGeometries))();
		while( $it0.hasNext() ) {
			var s = $it0.next();
			this.removeSubGeometry(s);
			s.dispose();
		}
	}
	,scaleUV: function(scaleU,scaleV) {
		if(scaleV == null) scaleV = 1;
		if(scaleU == null) scaleU = 1;
		var numSubGeoms = flash._Vector.Vector_Impl_.get_length(this._subGeometries);
		var i = 0;
		while(i < numSubGeoms) {
			this._subGeometries[i].scaleUV(scaleU,scaleV);
			++i;
		}
	}
	,dispose: function() {
		var numSubGeoms = flash._Vector.Vector_Impl_.get_length(this._subGeometries);
		var i = 0;
		while(i < numSubGeoms) {
			var subGeom = this._subGeometries[0];
			this.removeSubGeometry(subGeom);
			subGeom.dispose();
			++i;
		}
	}
	,scale: function(scale) {
		var numSubGeoms = flash._Vector.Vector_Impl_.get_length(this._subGeometries);
		var i = 0;
		while(i < numSubGeoms) {
			this._subGeometries[i].scale(scale);
			++i;
		}
	}
	,clone: function() {
		var clone = new away3d.core.base.Geometry();
		var len = flash._Vector.Vector_Impl_.get_length(this._subGeometries);
		var i = 0;
		while(i < len) {
			clone.addSubGeometry(this._subGeometries[i].clone());
			++i;
		}
		return clone;
	}
	,removeSubGeometry: function(subGeometry) {
		flash._Vector.Vector_Impl_.splice(this._subGeometries,flash._Vector.Vector_Impl_.indexOf(this._subGeometries,subGeometry),1);
		subGeometry.set_parentGeometry(null);
		if(this.hasEventListener(away3d.events.GeometryEvent.SUB_GEOMETRY_REMOVED)) this.dispatchEvent(new away3d.events.GeometryEvent(away3d.events.GeometryEvent.SUB_GEOMETRY_REMOVED,subGeometry));
		this.invalidateBounds(subGeometry);
	}
	,addSubGeometry: function(subGeometry) {
		flash._Vector.Vector_Impl_.push(this._subGeometries,subGeometry);
		subGeometry.set_parentGeometry(this);
		if(this.hasEventListener(away3d.events.GeometryEvent.SUB_GEOMETRY_ADDED)) this.dispatchEvent(new away3d.events.GeometryEvent(away3d.events.GeometryEvent.SUB_GEOMETRY_ADDED,subGeometry));
		this.invalidateBounds(subGeometry);
	}
	,applyTransformation: function(transform) {
		var len = flash._Vector.Vector_Impl_.get_length(this._subGeometries);
		var i = 0;
		while(i < len) {
			this._subGeometries[i].applyTransformation(transform);
			++i;
		}
	}
	,get_subGeometries: function() {
		return this._subGeometries;
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.GEOMETRY;
	}
	,__class__: away3d.core.base.Geometry
	,__properties__: $extend(away3d.library.assets.NamedAssetBase.prototype.__properties__,{get_assetType:"get_assetType",get_subGeometries:"get_subGeometries"})
});
away3d.core.base.IMaterialOwner = function() { }
$hxClasses["away3d.core.base.IMaterialOwner"] = away3d.core.base.IMaterialOwner;
away3d.core.base.IMaterialOwner.__name__ = ["away3d","core","base","IMaterialOwner"];
away3d.core.base.IMaterialOwner.prototype = {
	__class__: away3d.core.base.IMaterialOwner
	,__properties__: {set_material:"set_material",get_material:"get_material",get_animator:"get_animator"}
}
away3d.core.base.IRenderable = function() { }
$hxClasses["away3d.core.base.IRenderable"] = away3d.core.base.IRenderable;
away3d.core.base.IRenderable.__name__ = ["away3d","core","base","IRenderable"];
away3d.core.base.IRenderable.__interfaces__ = [away3d.core.base.IMaterialOwner];
away3d.core.base.IRenderable.prototype = {
	__class__: away3d.core.base.IRenderable
	,__properties__: {get_sceneTransform:"get_sceneTransform",get_inverseSceneTransform:"get_inverseSceneTransform",get_mouseEnabled:"get_mouseEnabled",get_sourceEntity:"get_sourceEntity",get_castsShadows:"get_castsShadows",get_uvTransform:"get_uvTransform",get_shaderPickingDetails:"get_shaderPickingDetails",get_numVertices:"get_numVertices",get_numTriangles:"get_numTriangles",get_vertexStride:"get_vertexStride",get_vertexData:"get_vertexData",get_vertexNormalData:"get_vertexNormalData",get_vertexTangentData:"get_vertexTangentData",get_indexData:"get_indexData",get_UVData:"get_UVData"}
}
away3d.core.base.SkinnedSubGeometry = function(jointsPerVertex) {
	this._jointWeightsBuffer = flash._Vector.Vector_Impl_._new(8);
	this._jointIndexBuffer = flash._Vector.Vector_Impl_._new(8);
	this._jointWeightsInvalid = flash._Vector.Vector_Impl_._new(8,true);
	this._jointIndicesInvalid = flash._Vector.Vector_Impl_._new(8,true);
	this._jointWeightContext = flash._Vector.Vector_Impl_._new(8);
	this._jointIndexContext = flash._Vector.Vector_Impl_._new(8);
	away3d.core.base.CompactSubGeometry.call(this);
	this._jointsPerVertex = jointsPerVertex;
	this._bufferFormat = this.getVertexBufferFormat(this._jointsPerVertex);
};
$hxClasses["away3d.core.base.SkinnedSubGeometry"] = away3d.core.base.SkinnedSubGeometry;
away3d.core.base.SkinnedSubGeometry.__name__ = ["away3d","core","base","SkinnedSubGeometry"];
away3d.core.base.SkinnedSubGeometry.__super__ = away3d.core.base.CompactSubGeometry;
away3d.core.base.SkinnedSubGeometry.prototype = $extend(away3d.core.base.CompactSubGeometry.prototype,{
	updateJointIndexData: function(value) {
		this._jointIndexData = value;
		this.invalidateBuffers(this._jointIndicesInvalid);
	}
	,get_jointIndexData: function() {
		return this._jointIndexData;
	}
	,updateJointWeightsData: function(value) {
		this._numCondensedJoints = 0;
		this._condensedIndexLookUp = null;
		this._condensedJointIndexData = null;
		this._jointWeightsData = value;
		this.invalidateBuffers(this._jointWeightsInvalid);
	}
	,get_jointWeightsData: function() {
		return this._jointWeightsData;
	}
	,condenseIndexData: function() {
		var len = flash._Vector.Vector_Impl_.get_length(this._jointIndexData);
		var oldIndex;
		var newIndex = 0;
		var dic = new haxe.ds.IntMap();
		this._condensedJointIndexData = flash._Vector.Vector_Impl_._new(len,true);
		this._condensedIndexLookUp = flash._Vector.Vector_Impl_._new();
		var i = 0;
		while(i < len) {
			oldIndex = this._jointIndexData[i] | 0;
			if(!dic.exists(oldIndex)) {
				dic.set(oldIndex,newIndex);
				this._condensedIndexLookUp[newIndex++] = oldIndex;
				this._condensedIndexLookUp[newIndex++] = oldIndex + 1;
				this._condensedIndexLookUp[newIndex++] = oldIndex + 2;
			}
			this._condensedJointIndexData[i] = dic.get(oldIndex);
			++i;
		}
		this._numCondensedJoints = newIndex / 3 | 0;
		this.invalidateBuffers(this._jointIndicesInvalid);
	}
	,dispose: function() {
		away3d.core.base.CompactSubGeometry.prototype.dispose.call(this);
		this.disposeVertexBuffers(this._jointWeightsBuffer);
		this.disposeVertexBuffers(this._jointIndexBuffer);
	}
	,clone: function() {
		var clone = new away3d.core.base.SkinnedSubGeometry(this._jointsPerVertex);
		clone.updateData(flash._Vector.Vector_Impl_.concat(this._vertexData));
		clone.updateIndexData(flash._Vector.Vector_Impl_.concat(this._indices));
		clone.updateJointIndexData(flash._Vector.Vector_Impl_.concat(this._jointIndexData));
		clone.updateJointWeightsData(flash._Vector.Vector_Impl_.concat(this._jointWeightsData));
		clone._autoDeriveVertexNormals = this._autoDeriveVertexNormals;
		clone._autoDeriveVertexTangents = this._autoDeriveVertexTangents;
		clone._numCondensedJoints = this._numCondensedJoints;
		clone._condensedIndexLookUp = this._condensedIndexLookUp;
		clone._condensedJointIndexData = this._condensedJointIndexData;
		return clone;
	}
	,uploadData: function(contextIndex) {
		if(this._animatedData != null) {
			this._activeBuffer.uploadFromVector(this._animatedData,0,this._numVertices);
			this._vertexDataInvalid[contextIndex] = this._activeDataInvalid = false;
		} else away3d.core.base.CompactSubGeometry.prototype.uploadData.call(this,contextIndex);
	}
	,activateJointIndexBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(this._jointIndexContext[contextIndex] != context || this._jointIndexBuffer[contextIndex] == null) {
			this._jointIndexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices,this._jointsPerVertex);
			this._jointIndexContext[contextIndex] = context;
			this._jointIndicesInvalid[contextIndex] = true;
		}
		if(this._jointIndicesInvalid[contextIndex]) {
			this._jointIndexBuffer[contextIndex].uploadFromVector(this._numCondensedJoints > 0?this._condensedJointIndexData:this._jointIndexData,0,flash._Vector.Vector_Impl_.get_length(this._jointIndexData) / this._jointsPerVertex | 0);
			this._jointIndicesInvalid[contextIndex] = false;
		}
		context.setVertexBufferAt(index,this._jointIndexBuffer[contextIndex],0,this._bufferFormat);
	}
	,activateJointWeightsBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(this._jointWeightContext[contextIndex] != context || this._jointWeightsBuffer[contextIndex] == null) {
			this._jointWeightsBuffer[contextIndex] = context.createVertexBuffer(this._numVertices,this._jointsPerVertex);
			this._jointWeightContext[contextIndex] = context;
			this._jointWeightsInvalid[contextIndex] = true;
		}
		if(this._jointWeightsInvalid[contextIndex]) {
			this._jointWeightsBuffer[contextIndex].uploadFromVector(this._jointWeightsData,0,flash._Vector.Vector_Impl_.get_length(this._jointWeightsData) / this._jointsPerVertex | 0);
			this._jointWeightsInvalid[contextIndex] = false;
		}
		context.setVertexBufferAt(index,this._jointWeightsBuffer[contextIndex],0,this._bufferFormat);
	}
	,updateAnimatedData: function(value) {
		this._animatedData = value;
		this.invalidateBuffers(this._vertexDataInvalid);
	}
	,get_animatedData: function() {
		if(this._animatedData != null) return this._animatedData;
		return flash._Vector.Vector_Impl_.concat(this._vertexData);
	}
	,get_numCondensedJoints: function() {
		return this._numCondensedJoints;
	}
	,get_condensedIndexLookUp: function() {
		return this._condensedIndexLookUp;
	}
	,getVertexBufferFormat: function(size) {
		switch(size) {
		case 1:
			return flash.display3D.Context3DVertexBufferFormat.FLOAT_1;
		case 2:
			return flash.display3D.Context3DVertexBufferFormat.FLOAT_2;
		case 3:
			return flash.display3D.Context3DVertexBufferFormat.FLOAT_3;
		case 4:
			return flash.display3D.Context3DVertexBufferFormat.FLOAT_3;
		default:
			return null;
		}
	}
	,__class__: away3d.core.base.SkinnedSubGeometry
	,__properties__: $extend(away3d.core.base.CompactSubGeometry.prototype.__properties__,{get_condensedIndexLookUp:"get_condensedIndexLookUp",get_numCondensedJoints:"get_numCondensedJoints",get_animatedData:"get_animatedData",get_jointWeightsData:"get_jointWeightsData",get_jointIndexData:"get_jointIndexData"})
});
away3d.core.base.SubGeometry = function() {
	this._verticesInvalid = flash._Vector.Vector_Impl_._new(8,true);
	this._uvsInvalid = flash._Vector.Vector_Impl_._new(8,true);
	this._secondaryUvsInvalid = flash._Vector.Vector_Impl_._new(8,true);
	this._normalsInvalid = flash._Vector.Vector_Impl_._new(8,true);
	this._tangentsInvalid = flash._Vector.Vector_Impl_._new(8,true);
	this._vertexBuffer = flash._Vector.Vector_Impl_._new(8);
	this._uvBuffer = flash._Vector.Vector_Impl_._new(8);
	this._secondaryUvBuffer = flash._Vector.Vector_Impl_._new(8);
	this._vertexNormalBuffer = flash._Vector.Vector_Impl_._new(8);
	this._vertexTangentBuffer = flash._Vector.Vector_Impl_._new(8);
	this._vertexBufferContext = flash._Vector.Vector_Impl_._new(8);
	this._uvBufferContext = flash._Vector.Vector_Impl_._new(8);
	this._secondaryUvBufferContext = flash._Vector.Vector_Impl_._new(8);
	this._vertexNormalBufferContext = flash._Vector.Vector_Impl_._new(8);
	this._vertexTangentBufferContext = flash._Vector.Vector_Impl_._new(8);
	away3d.core.base.SubGeometryBase.call(this);
};
$hxClasses["away3d.core.base.SubGeometry"] = away3d.core.base.SubGeometry;
away3d.core.base.SubGeometry.__name__ = ["away3d","core","base","SubGeometry"];
away3d.core.base.SubGeometry.__interfaces__ = [away3d.core.base.ISubGeometry];
away3d.core.base.SubGeometry.__super__ = away3d.core.base.SubGeometryBase;
away3d.core.base.SubGeometry.prototype = $extend(away3d.core.base.SubGeometryBase.prototype,{
	cloneWithSeperateBuffers: function() {
		return js.Boot.__cast(this.clone() , away3d.core.base.SubGeometry);
	}
	,get_secondaryUVOffset: function() {
		return 0;
	}
	,get_UVOffset: function() {
		return 0;
	}
	,get_vertexTangentOffset: function() {
		return 0;
	}
	,get_vertexNormalOffset: function() {
		return 0;
	}
	,get_vertexOffset: function() {
		return 0;
	}
	,get_secondaryUVStride: function() {
		return 2;
	}
	,get_UVStride: function() {
		return 2;
	}
	,get_vertexNormalStride: function() {
		return 3;
	}
	,get_vertexTangentStride: function() {
		return 3;
	}
	,get_vertexStride: function() {
		return 3;
	}
	,disposeForStage3D: function(stage3DProxy) {
		var index = stage3DProxy._stage3DIndex;
		if(this._vertexBuffer[index] != null) {
			this._vertexBuffer[index].dispose();
			this._vertexBuffer[index] = null;
		}
		if(this._uvBuffer[index] != null) {
			this._uvBuffer[index].dispose();
			this._uvBuffer[index] = null;
		}
		if(this._secondaryUvBuffer[index] != null) {
			this._secondaryUvBuffer[index].dispose();
			this._secondaryUvBuffer[index] = null;
		}
		if(this._vertexNormalBuffer[index] != null) {
			this._vertexNormalBuffer[index].dispose();
			this._vertexNormalBuffer[index] = null;
		}
		if(this._vertexTangentBuffer[index] != null) {
			this._vertexTangentBuffer[index].dispose();
			this._vertexTangentBuffer[index] = null;
		}
		if(this._indexBuffer[index] != null) {
			this._indexBuffer[index].dispose();
			this._indexBuffer[index] = null;
		}
	}
	,updateDummyUVs: function(target) {
		this.invalidateBuffers(this._uvsInvalid);
		return away3d.core.base.SubGeometryBase.prototype.updateDummyUVs.call(this,target);
	}
	,updateVertexTangents: function(target) {
		if(this._vertexNormalsDirty) this._vertexNormals = this.updateVertexNormals(this._vertexNormals);
		this.invalidateBuffers(this._tangentsInvalid);
		return away3d.core.base.SubGeometryBase.prototype.updateVertexTangents.call(this,target);
	}
	,updateVertexNormals: function(target) {
		this.invalidateBuffers(this._normalsInvalid);
		return away3d.core.base.SubGeometryBase.prototype.updateVertexNormals.call(this,target);
	}
	,fromVectors: function(vertices,uvs,normals,tangents) {
		this.updateVertexData(vertices);
		this.updateUVData(uvs);
		this.updateVertexNormalData(normals);
		this.updateVertexTangentData(tangents);
	}
	,updateVertexTangentData: function(vertexTangents) {
		this._vertexTangentsDirty = false;
		this._autoDeriveVertexTangents = vertexTangents == null;
		this._vertexTangents = vertexTangents;
		this.invalidateBuffers(this._tangentsInvalid);
	}
	,get_vertexTangentData: function() {
		if(this._autoDeriveVertexTangents && this._vertexTangentsDirty) this._vertexTangents = this.updateVertexTangents(this._vertexTangents);
		return this._vertexTangents;
	}
	,updateVertexNormalData: function(vertexNormals) {
		this._vertexNormalsDirty = false;
		this._autoDeriveVertexNormals = vertexNormals == null;
		this._vertexNormals = vertexNormals;
		this.invalidateBuffers(this._normalsInvalid);
	}
	,get_vertexNormalData: function() {
		if(this._autoDeriveVertexNormals && this._vertexNormalsDirty) this._vertexNormals = this.updateVertexNormals(this._vertexNormals);
		return this._vertexNormals;
	}
	,updateSecondaryUVData: function(uvs) {
		this._secondaryUvs = uvs;
		this.invalidateBuffers(this._secondaryUvsInvalid);
	}
	,updateUVData: function(uvs) {
		if(this._autoDeriveVertexTangents) this._vertexTangentsDirty = true;
		this._faceTangentsDirty = true;
		this._uvs = uvs;
		this.invalidateBuffers(this._uvsInvalid);
	}
	,get_secondaryUVData: function() {
		return this._secondaryUvs;
	}
	,get_UVData: function() {
		if(this._uvsDirty && this._autoGenerateUVs) this._uvs = this.updateDummyUVs(this._uvs);
		return this._uvs;
	}
	,updateVertexData: function(vertices) {
		if(this._autoDeriveVertexNormals) this._vertexNormalsDirty = true;
		if(this._autoDeriveVertexTangents) this._vertexTangentsDirty = true;
		this._faceNormalsDirty = true;
		this._vertexData = vertices;
		var numVertices = flash._Vector.Vector_Impl_.get_length(vertices) / 3 | 0;
		if(numVertices != this._numVertices) this.disposeAllVertexBuffers();
		this._numVertices = numVertices;
		this.invalidateBuffers(this._verticesInvalid);
		this.invalidateBounds();
	}
	,get_vertexPositionData: function() {
		return this._vertexData;
	}
	,get_vertexData: function() {
		return this._vertexData;
	}
	,disposeAllVertexBuffers: function() {
		this.disposeVertexBuffers(this._vertexBuffer);
		this.disposeVertexBuffers(this._vertexNormalBuffer);
		this.disposeVertexBuffers(this._uvBuffer);
		this.disposeVertexBuffers(this._secondaryUvBuffer);
		this.disposeVertexBuffers(this._vertexTangentBuffer);
	}
	,dispose: function() {
		away3d.core.base.SubGeometryBase.prototype.dispose.call(this);
		this.disposeAllVertexBuffers();
		this._vertexBuffer = null;
		this._vertexNormalBuffer = null;
		this._uvBuffer = null;
		this._secondaryUvBuffer = null;
		this._vertexTangentBuffer = null;
		this._indexBuffer = null;
		this._uvs = null;
		this._secondaryUvs = null;
		this._vertexNormals = null;
		this._vertexTangents = null;
		this._vertexBufferContext = null;
		this._uvBufferContext = null;
		this._secondaryUvBufferContext = null;
		this._vertexNormalBufferContext = null;
		this._vertexTangentBufferContext = null;
	}
	,scaleUV: function(scaleU,scaleV) {
		if(scaleV == null) scaleV = 1;
		if(scaleU == null) scaleU = 1;
		away3d.core.base.SubGeometryBase.prototype.scaleUV.call(this,scaleU,scaleV);
		this.invalidateBuffers(this._uvsInvalid);
	}
	,scale: function(scale) {
		away3d.core.base.SubGeometryBase.prototype.scale.call(this,scale);
		this.invalidateBuffers(this._verticesInvalid);
	}
	,clone: function() {
		var clone = new away3d.core.base.SubGeometry();
		clone.updateVertexData(flash._Vector.Vector_Impl_.concat(this._vertexData));
		clone.updateUVData(flash._Vector.Vector_Impl_.concat(this._uvs));
		clone.updateIndexData(flash._Vector.Vector_Impl_.concat(this._indices));
		if(this._secondaryUvs != null) clone.updateSecondaryUVData(flash._Vector.Vector_Impl_.concat(this._secondaryUvs));
		if(!this._autoDeriveVertexNormals) clone.updateVertexNormalData(flash._Vector.Vector_Impl_.concat(this._vertexNormals));
		if(!this._autoDeriveVertexTangents) clone.updateVertexTangentData(flash._Vector.Vector_Impl_.concat(this._vertexTangents));
		return clone;
	}
	,applyTransformation: function(transform) {
		away3d.core.base.SubGeometryBase.prototype.applyTransformation.call(this,transform);
		this.invalidateBuffers(this._verticesInvalid);
		this.invalidateBuffers(this._normalsInvalid);
		this.invalidateBuffers(this._tangentsInvalid);
	}
	,activateVertexTangentBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(this._vertexTangentsDirty) this._vertexTangents = this.updateVertexTangents(this._vertexTangents);
		if(this._vertexTangentBuffer[contextIndex] == null || this._vertexTangentBufferContext[contextIndex] != context) {
			this._vertexTangentBuffer[contextIndex] = context.createVertexBuffer(this._numVertices,3);
			this._vertexTangentBufferContext[contextIndex] = context;
			this._tangentsInvalid[contextIndex] = true;
		}
		if(this._tangentsInvalid[contextIndex]) {
			this._vertexTangentBuffer[contextIndex].uploadFromVector(this._vertexTangents,0,this._numVertices);
			this._tangentsInvalid[contextIndex] = false;
		}
		context.setVertexBufferAt(index,this._vertexTangentBuffer[contextIndex],0,flash.display3D.Context3DVertexBufferFormat.FLOAT_3);
	}
	,activateVertexNormalBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(this._autoDeriveVertexNormals && this._vertexNormalsDirty) this._vertexNormals = this.updateVertexNormals(this._vertexNormals);
		if(this._vertexNormalBuffer[contextIndex] == null || this._vertexNormalBufferContext[contextIndex] != context) {
			this._vertexNormalBuffer[contextIndex] = context.createVertexBuffer(this._numVertices,3);
			this._vertexNormalBufferContext[contextIndex] = context;
			this._normalsInvalid[contextIndex] = true;
		}
		if(this._normalsInvalid[contextIndex]) {
			this._vertexNormalBuffer[contextIndex].uploadFromVector(this._vertexNormals,0,this._numVertices);
			this._normalsInvalid[contextIndex] = false;
		}
		context.setVertexBufferAt(index,this._vertexNormalBuffer[contextIndex],0,flash.display3D.Context3DVertexBufferFormat.FLOAT_3);
	}
	,activateSecondaryUVBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(this._secondaryUvBuffer[contextIndex] == null || this._secondaryUvBufferContext[contextIndex] != context) {
			this._secondaryUvBuffer[contextIndex] = context.createVertexBuffer(this._numVertices,2);
			this._secondaryUvBufferContext[contextIndex] = context;
			this._secondaryUvsInvalid[contextIndex] = true;
		}
		if(this._secondaryUvsInvalid[contextIndex]) {
			this._secondaryUvBuffer[contextIndex].uploadFromVector(this._secondaryUvs,0,this._numVertices);
			this._secondaryUvsInvalid[contextIndex] = false;
		}
		context.setVertexBufferAt(index,this._secondaryUvBuffer[contextIndex],0,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
	}
	,activateUVBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(this._autoGenerateUVs && this._uvsDirty) this._uvs = this.updateDummyUVs(this._uvs);
		if(this._uvBuffer[contextIndex] == null || this._uvBufferContext[contextIndex] != context) {
			this._uvBuffer[contextIndex] = context.createVertexBuffer(this._numVertices,2);
			this._uvBufferContext[contextIndex] = context;
			this._uvsInvalid[contextIndex] = true;
		}
		if(this._uvsInvalid[contextIndex]) {
			this._uvBuffer[contextIndex].uploadFromVector(this._uvs,0,this._numVertices);
			this._uvsInvalid[contextIndex] = false;
		}
		context.setVertexBufferAt(index,this._uvBuffer[contextIndex],0,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
	}
	,activateVertexBuffer: function(index,stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		if(this._vertexBuffer[contextIndex] == null || this._vertexBufferContext[contextIndex] != context) {
			this._vertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices,3);
			this._vertexBufferContext[contextIndex] = context;
			this._verticesInvalid[contextIndex] = true;
		}
		if(this._verticesInvalid[contextIndex]) {
			this._vertexBuffer[contextIndex].uploadFromVector(this._vertexData,0,this._numVertices);
			this._verticesInvalid[contextIndex] = false;
		}
		context.setVertexBufferAt(index,this._vertexBuffer[contextIndex],0,flash.display3D.Context3DVertexBufferFormat.FLOAT_3);
	}
	,get_numVertices: function() {
		return this._numVertices;
	}
	,__class__: away3d.core.base.SubGeometry
	,__properties__: $extend(away3d.core.base.SubGeometryBase.prototype.__properties__,{get_numVertices:"get_numVertices",get_secondaryUVData:"get_secondaryUVData",get_secondaryUVStride:"get_secondaryUVStride",get_secondaryUVOffset:"get_secondaryUVOffset"})
});
away3d.core.base.SubMesh = function(subGeometry,parentMesh,material) {
	this._uvRotation = 0;
	this._scaleU = 1;
	this._scaleV = 1;
	this._offsetU = 0;
	this._offsetV = 0;
	this._parentMesh = parentMesh;
	this._subGeometry = subGeometry;
	this.set_material(material);
};
$hxClasses["away3d.core.base.SubMesh"] = away3d.core.base.SubMesh;
away3d.core.base.SubMesh.__name__ = ["away3d","core","base","SubMesh"];
away3d.core.base.SubMesh.__interfaces__ = [away3d.core.base.IRenderable];
away3d.core.base.SubMesh.prototype = {
	getRenderSceneTransform: function(camera) {
		return this._parentMesh.get_sceneTransform();
	}
	,get_vertexTangentOffset: function() {
		return this._subGeometry.get_vertexTangentOffset();
	}
	,get_vertexNormalOffset: function() {
		return this._subGeometry.get_vertexNormalOffset();
	}
	,get_vertexOffset: function() {
		return this._subGeometry.get_vertexOffset();
	}
	,get_UVOffset: function() {
		return this._subGeometry.get_UVOffset();
	}
	,get_vertexTangentData: function() {
		return this._subGeometry.get_vertexTangentData();
	}
	,get_vertexNormalData: function() {
		return this._subGeometry.get_vertexNormalData();
	}
	,get_UVStride: function() {
		return this._subGeometry.get_UVStride();
	}
	,get_vertexStride: function() {
		return this._subGeometry.get_vertexStride();
	}
	,get_numVertices: function() {
		return this._subGeometry.get_numVertices();
	}
	,get_visible: function() {
		return this._parentMesh.get_visible();
	}
	,get_bounds: function() {
		return this._parentMesh.get_bounds();
	}
	,get_UVData: function() {
		return this._subGeometry.get_UVData();
	}
	,get_indexData: function() {
		return this._subGeometry.get_indexData();
	}
	,get_vertexData: function() {
		return this._subGeometry.get_vertexData();
	}
	,dispose: function() {
		this.set_material(null);
	}
	,updateUVTransform: function() {
		if(this._uvTransform == null) this._uvTransform = new flash.geom.Matrix();
		this._uvTransform.identity();
		if(this._uvRotation != 0) this._uvTransform.rotate(this._uvRotation);
		if(this._scaleU != 1 || this._scaleV != 1) this._uvTransform.scale(this._scaleU,this._scaleV);
		this._uvTransform.translate(this._offsetU,this._offsetV);
		this._uvTransformDirty = false;
	}
	,get_uvTransform: function() {
		if(this._uvTransformDirty) this.updateUVTransform();
		return this._uvTransform;
	}
	,set_parentMesh: function(value) {
		this._parentMesh = value;
		return value;
	}
	,get_parentMesh: function() {
		return this._parentMesh;
	}
	,get_castsShadows: function() {
		return this._parentMesh.get_castsShadows();
	}
	,get_mouseEnabled: function() {
		return this._parentMesh.get_mouseEnabled() || this._parentMesh._ancestorsAllowMouseEnabled;
	}
	,get_animator: function() {
		return this._parentMesh.get_animator();
	}
	,get_numTriangles: function() {
		return this._subGeometry.get_numTriangles();
	}
	,getIndexBuffer: function(stage3DProxy) {
		return this._subGeometry.getIndexBuffer(stage3DProxy);
	}
	,activateSecondaryUVBuffer: function(index,stage3DProxy) {
		this._subGeometry.activateSecondaryUVBuffer(index,stage3DProxy);
	}
	,activateUVBuffer: function(index,stage3DProxy) {
		this._subGeometry.activateUVBuffer(index,stage3DProxy);
	}
	,activateVertexTangentBuffer: function(index,stage3DProxy) {
		this._subGeometry.activateVertexTangentBuffer(index,stage3DProxy);
	}
	,activateVertexNormalBuffer: function(index,stage3DProxy) {
		this._subGeometry.activateVertexNormalBuffer(index,stage3DProxy);
	}
	,activateVertexBuffer: function(index,stage3DProxy) {
		this._subGeometry.activateVertexBuffer(index,stage3DProxy);
	}
	,get_inverseSceneTransform: function() {
		return this._parentMesh.get_inverseSceneTransform();
	}
	,get_sceneTransform: function() {
		return this._parentMesh.get_sceneTransform();
	}
	,set_material: function(value) {
		if(this._material != null) this._material.removeOwner(this);
		this._material = value;
		if(this._material != null) this._material.addOwner(this);
		return value;
	}
	,get_material: function() {
		if(this._material != null) return this._material;
		return this._parentMesh.get_material();
	}
	,set_subGeometry: function(value) {
		this._subGeometry = value;
		return value;
	}
	,get_subGeometry: function() {
		return this._subGeometry;
	}
	,get_sourceEntity: function() {
		return this._parentMesh;
	}
	,set_uvRotation: function(value) {
		if(value == this._uvRotation) return value;
		this._uvRotation = value;
		this._uvTransformDirty = true;
		return value;
	}
	,get_uvRotation: function() {
		return this._uvRotation;
	}
	,set_scaleV: function(value) {
		if(value == this._scaleV) return value;
		this._scaleV = value;
		this._uvTransformDirty = true;
		return value;
	}
	,get_scaleV: function() {
		return this._scaleV;
	}
	,set_scaleU: function(value) {
		if(value == this._scaleU) return value;
		this._scaleU = value;
		this._uvTransformDirty = true;
		return value;
	}
	,get_scaleU: function() {
		return this._scaleU;
	}
	,set_offsetV: function(value) {
		if(value == this._offsetV) return value;
		this._offsetV = value;
		this._uvTransformDirty = true;
		return value;
	}
	,get_offsetV: function() {
		return this._offsetV;
	}
	,set_offsetU: function(value) {
		if(value == this._offsetU) return value;
		this._offsetU = value;
		this._uvTransformDirty = true;
		return value;
	}
	,get_offsetU: function() {
		return this._offsetU;
	}
	,get_shaderPickingDetails: function() {
		return this.get_sourceEntity().get_shaderPickingDetails();
	}
	,__class__: away3d.core.base.SubMesh
	,__properties__: {get_shaderPickingDetails:"get_shaderPickingDetails",set_offsetU:"set_offsetU",get_offsetU:"get_offsetU",set_offsetV:"set_offsetV",get_offsetV:"get_offsetV",set_scaleU:"set_scaleU",get_scaleU:"get_scaleU",set_scaleV:"set_scaleV",get_scaleV:"get_scaleV",set_uvRotation:"set_uvRotation",get_uvRotation:"get_uvRotation",get_sourceEntity:"get_sourceEntity",set_subGeometry:"set_subGeometry",get_subGeometry:"get_subGeometry",set_material:"set_material",get_material:"get_material",get_sceneTransform:"get_sceneTransform",get_inverseSceneTransform:"get_inverseSceneTransform",get_numTriangles:"get_numTriangles",get_animator:"get_animator",get_mouseEnabled:"get_mouseEnabled",get_castsShadows:"get_castsShadows",set_parentMesh:"set_parentMesh",get_parentMesh:"get_parentMesh",get_uvTransform:"get_uvTransform",get_vertexData:"get_vertexData",get_indexData:"get_indexData",get_UVData:"get_UVData",get_bounds:"get_bounds",get_visible:"get_visible",get_numVertices:"get_numVertices",get_vertexStride:"get_vertexStride",get_UVStride:"get_UVStride",get_vertexNormalData:"get_vertexNormalData",get_vertexTangentData:"get_vertexTangentData",get_UVOffset:"get_UVOffset",get_vertexOffset:"get_vertexOffset",get_vertexNormalOffset:"get_vertexNormalOffset",get_vertexTangentOffset:"get_vertexTangentOffset"}
}
away3d.core.base.data = {}
away3d.core.base.data.ParticleData = function() {
};
$hxClasses["away3d.core.base.data.ParticleData"] = away3d.core.base.data.ParticleData;
away3d.core.base.data.ParticleData.__name__ = ["away3d","core","base","data","ParticleData"];
away3d.core.base.data.ParticleData.prototype = {
	__class__: away3d.core.base.data.ParticleData
}
away3d.core.data = {}
away3d.core.data.EntityListItem = function() {
};
$hxClasses["away3d.core.data.EntityListItem"] = away3d.core.data.EntityListItem;
away3d.core.data.EntityListItem.__name__ = ["away3d","core","data","EntityListItem"];
away3d.core.data.EntityListItem.prototype = {
	__class__: away3d.core.data.EntityListItem
}
away3d.core.data.EntityListItemPool = function() {
	this._index = 0;
	this._poolSize = 0;
	this._pool = flash._Vector.Vector_Impl_._new();
};
$hxClasses["away3d.core.data.EntityListItemPool"] = away3d.core.data.EntityListItemPool;
away3d.core.data.EntityListItemPool.__name__ = ["away3d","core","data","EntityListItemPool"];
away3d.core.data.EntityListItemPool.prototype = {
	dispose: function() {
		if(0 < this._pool.length) this._pool = this._pool.slice(0,0);
		while(0 > this._pool.length) this._pool.push(null);
		0;
	}
	,freeAll: function() {
		this._index = 0;
	}
	,getItem: function() {
		var item;
		if(this._index == this._poolSize) {
			item = new away3d.core.data.EntityListItem();
			this._pool[this._index++] = item;
			++this._poolSize;
		} else item = this._pool[this._index++];
		return item;
	}
	,__class__: away3d.core.data.EntityListItemPool
}
away3d.core.data.RenderableListItem = function() {
};
$hxClasses["away3d.core.data.RenderableListItem"] = away3d.core.data.RenderableListItem;
away3d.core.data.RenderableListItem.__name__ = ["away3d","core","data","RenderableListItem"];
away3d.core.data.RenderableListItem.prototype = {
	__class__: away3d.core.data.RenderableListItem
}
away3d.core.data.RenderableListItemPool = function() {
	this._index = 0;
	this._poolSize = 0;
	this._pool = flash._Vector.Vector_Impl_._new();
};
$hxClasses["away3d.core.data.RenderableListItemPool"] = away3d.core.data.RenderableListItemPool;
away3d.core.data.RenderableListItemPool.__name__ = ["away3d","core","data","RenderableListItemPool"];
away3d.core.data.RenderableListItemPool.prototype = {
	dispose: function() {
		if(0 < this._pool.length) this._pool = this._pool.slice(0,0);
		while(0 > this._pool.length) this._pool.push(null);
		0;
	}
	,freeAll: function() {
		this._index = 0;
	}
	,getItem: function() {
		if(this._index == this._poolSize) {
			var item = new away3d.core.data.RenderableListItem();
			this._pool[this._index++] = item;
			++this._poolSize;
			return item;
		} else return this._pool[this._index++];
	}
	,__class__: away3d.core.data.RenderableListItemPool
}
away3d.core.managers = {}
away3d.core.managers.AGALProgram3DCache = function(stage3DProxy) {
	this._stage3DProxy = stage3DProxy;
	this._program3Ds = new haxe.ds.StringMap();
	this._ids = new haxe.ds.StringMap();
	this._usages = [];
	this._keys = [];
};
$hxClasses["away3d.core.managers.AGALProgram3DCache"] = away3d.core.managers.AGALProgram3DCache;
away3d.core.managers.AGALProgram3DCache.__name__ = ["away3d","core","managers","AGALProgram3DCache"];
away3d.core.managers.AGALProgram3DCache.getInstance = function(stage3DProxy) {
	var index = stage3DProxy.get_stage3DIndex();
	if(away3d.core.managers.AGALProgram3DCache._instances == null) away3d.core.managers.AGALProgram3DCache._instances = flash._Vector.Vector_Impl_._new(8,true);
	if(away3d.core.managers.AGALProgram3DCache._instances[index] == null) {
		away3d.core.managers.AGALProgram3DCache._instances[index] = new away3d.core.managers.AGALProgram3DCache(stage3DProxy);
		stage3DProxy.addEventListener(away3d.events.Stage3DEvent.CONTEXT3D_DISPOSED,away3d.core.managers.AGALProgram3DCache.onContext3DDisposed,false,0,true);
		stage3DProxy.addEventListener(away3d.events.Stage3DEvent.CONTEXT3D_CREATED,away3d.core.managers.AGALProgram3DCache.onContext3DDisposed,false,0,true);
		stage3DProxy.addEventListener(away3d.events.Stage3DEvent.CONTEXT3D_RECREATED,away3d.core.managers.AGALProgram3DCache.onContext3DDisposed,false,0,true);
	}
	return away3d.core.managers.AGALProgram3DCache._instances[index];
}
away3d.core.managers.AGALProgram3DCache.getInstanceFromIndex = function(index) {
	if(away3d.core.managers.AGALProgram3DCache._instances[index] == null) throw new flash.errors.Error("Instance not created yet!");
	return away3d.core.managers.AGALProgram3DCache._instances[index];
}
away3d.core.managers.AGALProgram3DCache.onContext3DDisposed = function(event) {
	var stage3DProxy = js.Boot.__cast(event.target , away3d.core.managers.Stage3DProxy);
	var index = stage3DProxy.get_stage3DIndex();
	away3d.core.managers.AGALProgram3DCache._instances[index].dispose();
	away3d.core.managers.AGALProgram3DCache._instances[index] = null;
	stage3DProxy.removeEventListener(away3d.events.Stage3DEvent.CONTEXT3D_DISPOSED,away3d.core.managers.AGALProgram3DCache.onContext3DDisposed);
	stage3DProxy.removeEventListener(away3d.events.Stage3DEvent.CONTEXT3D_CREATED,away3d.core.managers.AGALProgram3DCache.onContext3DDisposed);
	stage3DProxy.removeEventListener(away3d.events.Stage3DEvent.CONTEXT3D_RECREATED,away3d.core.managers.AGALProgram3DCache.onContext3DDisposed);
}
away3d.core.managers.AGALProgram3DCache.prototype = {
	getKey: function(vertexCode,fragmentCode) {
		return vertexCode + "---" + fragmentCode;
	}
	,destroyProgram: function(key) {
		this._program3Ds.get(key).dispose();
		this._program3Ds.remove(key);
		this._ids.set(key,-1);
	}
	,freeProgram3D: function(programId) {
		this._usages[programId]--;
		if(this._usages[programId] == 0) this.destroyProgram(this._keys[programId]);
	}
	,setProgram3D: function(pass,vertexCode,fragmentCode) {
		var stageIndex = this._stage3DProxy.get_stage3DIndex();
		var program;
		var key = vertexCode + "---" + fragmentCode;
		if(!this._program3Ds.exists(key)) {
			this._keys[away3d.core.managers.AGALProgram3DCache._currentId] = key;
			this._usages[away3d.core.managers.AGALProgram3DCache._currentId] = 0;
			this._ids.set(key,away3d.core.managers.AGALProgram3DCache._currentId);
			++away3d.core.managers.AGALProgram3DCache._currentId;
			program = this._stage3DProxy.get_context3D().createProgram();
			var vertexByteCode = flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.VERTEX,vertexCode);
			var fragmentByteCode = flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.FRAGMENT,fragmentCode);
			program.upload(vertexByteCode,fragmentByteCode);
			this._program3Ds.set(key,program);
		}
		var oldId = pass._program3Dids[stageIndex];
		var newId = this._ids.get(key);
		if(oldId != newId) {
			if(oldId >= 0) this.freeProgram3D(oldId);
			this._usages[newId]++;
		}
		pass._program3Dids[stageIndex] = newId;
		pass._program3Ds[stageIndex] = this._program3Ds.get(key);
	}
	,dispose: function() {
		var keys = this._program3Ds.keys();
		while( keys.hasNext() ) {
			var key = keys.next();
			this.destroyProgram(key);
		}
		this._keys = null;
		this._program3Ds = null;
		this._usages = null;
	}
	,__class__: away3d.core.managers.AGALProgram3DCache
}
away3d.core.managers.AGALProgram3DCacheSingletonEnforcer = function() {
};
$hxClasses["away3d.core.managers.AGALProgram3DCacheSingletonEnforcer"] = away3d.core.managers.AGALProgram3DCacheSingletonEnforcer;
away3d.core.managers.AGALProgram3DCacheSingletonEnforcer.__name__ = ["away3d","core","managers","AGALProgram3DCacheSingletonEnforcer"];
away3d.core.managers.AGALProgram3DCacheSingletonEnforcer.prototype = {
	__class__: away3d.core.managers.AGALProgram3DCacheSingletonEnforcer
}
flash.events.Event = function(inType,inBubbles,inCancelable) {
	if(inCancelable == null) inCancelable = false;
	if(inBubbles == null) inBubbles = false;
	this.type = inType;
	this.bubbles = inBubbles;
	this.cancelable = inCancelable;
	this.__isCancelled = false;
	this.__isCancelledNow = false;
	this.target = null;
	this.currentTarget = null;
	this.eventPhase = flash.events.EventPhase.AT_TARGET;
};
$hxClasses["flash.events.Event"] = flash.events.Event;
flash.events.Event.__name__ = ["flash","events","Event"];
flash.events.Event.prototype = {
	__setPhase: function(phase) {
		this.eventPhase = phase;
	}
	,__getIsCancelledNow: function() {
		return this.__isCancelledNow;
	}
	,__getIsCancelled: function() {
		return this.__isCancelled;
	}
	,__createSimilar: function(type,related,targ) {
		var result = new flash.events.Event(type,this.bubbles,this.cancelable);
		if(targ != null) result.target = targ;
		return result;
	}
	,toString: function() {
		return "[Event type=" + this.type + " bubbles=" + Std.string(this.bubbles) + " cancelable=" + Std.string(this.cancelable) + "]";
	}
	,stopPropagation: function() {
		this.__isCancelled = true;
	}
	,stopImmediatePropagation: function() {
		this.__isCancelled = true;
		this.__isCancelledNow = true;
	}
	,clone: function() {
		return new flash.events.Event(this.type,this.bubbles,this.cancelable);
	}
	,__class__: flash.events.Event
}
away3d.events = {}
away3d.events.MouseEvent3D = function(type) {
	this._allowedToPropagate = true;
	flash.events.Event.call(this,type,true,true);
};
$hxClasses["away3d.events.MouseEvent3D"] = away3d.events.MouseEvent3D;
away3d.events.MouseEvent3D.__name__ = ["away3d","events","MouseEvent3D"];
away3d.events.MouseEvent3D.__super__ = flash.events.Event;
away3d.events.MouseEvent3D.prototype = $extend(flash.events.Event.prototype,{
	get_sceneNormal: function() {
		if(js.Boot.__instanceof(this.object,away3d.containers.ObjectContainer3D)) {
			var sceneNormal = (js.Boot.__cast(this.object , away3d.containers.ObjectContainer3D)).get_sceneTransform().deltaTransformVector(this.localNormal);
			sceneNormal.normalize();
			return sceneNormal;
		} else return this.localNormal;
	}
	,get_scenePosition: function() {
		if(js.Boot.__instanceof(this.object,away3d.containers.ObjectContainer3D)) return (js.Boot.__cast(this.object , away3d.containers.ObjectContainer3D)).get_sceneTransform().transformVector(this.localPosition); else return this.localPosition;
	}
	,clone: function() {
		var result = new away3d.events.MouseEvent3D(this.type);
		result.screenX = this.screenX;
		result.screenY = this.screenY;
		result.view = this.view;
		result.object = this.object;
		result.renderable = this.renderable;
		result.material = this.material;
		result.uv = this.uv;
		result.localPosition = this.localPosition;
		result.localNormal = this.localNormal;
		result.index = this.index;
		result.subGeometryIndex = this.subGeometryIndex;
		result.delta = this.delta;
		result.ctrlKey = this.ctrlKey;
		result.shiftKey = this.shiftKey;
		result._parentEvent = this;
		result._allowedToPropagate = this._allowedToPropagate;
		return result;
	}
	,stopImmediatePropagation: function() {
		flash.events.Event.prototype.stopImmediatePropagation.call(this);
		this._allowedToPropagate = false;
		if(this._parentEvent != null) this._parentEvent.stopImmediatePropagation();
	}
	,stopPropagation: function() {
		flash.events.Event.prototype.stopPropagation.call(this);
		this._allowedToPropagate = false;
		if(this._parentEvent != null) this._parentEvent.stopPropagation();
	}
	,__class__: away3d.events.MouseEvent3D
	,__properties__: {get_scenePosition:"get_scenePosition",get_sceneNormal:"get_sceneNormal"}
});
flash.events.EventPhase = function() { }
$hxClasses["flash.events.EventPhase"] = flash.events.EventPhase;
flash.events.EventPhase.__name__ = ["flash","events","EventPhase"];
flash._Vector = {}
flash._Vector.Vector_Impl_ = function() { }
$hxClasses["flash._Vector.Vector_Impl_"] = flash._Vector.Vector_Impl_;
flash._Vector.Vector_Impl_.__name__ = ["flash","_Vector","Vector_Impl_"];
flash._Vector.Vector_Impl_.__properties__ = {set_fixed:"set_fixed",get_fixed:"get_fixed",set_length:"set_length",get_length:"get_length"}
flash._Vector.Vector_Impl_._new = function(length,fixed) {
	return new Array();
}
flash._Vector.Vector_Impl_.concat = function(this1,a) {
	return this1.concat(a);
}
flash._Vector.Vector_Impl_.copy = function(this1) {
	return this1.slice();
}
flash._Vector.Vector_Impl_.iterator = function(this1) {
	return HxOverrides.iter(this1);
}
flash._Vector.Vector_Impl_.join = function(this1,sep) {
	return this1.join(sep);
}
flash._Vector.Vector_Impl_.pop = function(this1) {
	return this1.pop();
}
flash._Vector.Vector_Impl_.push = function(this1,x) {
	return this1.push(x);
}
flash._Vector.Vector_Impl_.reverse = function(this1) {
	this1.reverse();
}
flash._Vector.Vector_Impl_.shift = function(this1) {
	return this1.shift();
}
flash._Vector.Vector_Impl_.unshift = function(this1,x) {
	this1.unshift(x);
}
flash._Vector.Vector_Impl_.slice = function(this1,pos,end) {
	return this1.slice(pos,end);
}
flash._Vector.Vector_Impl_.sort = function(this1,f) {
	this1.sort(f);
}
flash._Vector.Vector_Impl_.splice = function(this1,pos,len) {
	return this1.splice(pos,len);
}
flash._Vector.Vector_Impl_.toString = function(this1) {
	return this1.toString();
}
flash._Vector.Vector_Impl_.indexOf = function(this1,x,from) {
	if(from == null) from = 0;
	var _g1 = from, _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(this1[i] == x) return i;
	}
	return -1;
}
flash._Vector.Vector_Impl_.lastIndexOf = function(this1,x,from) {
	if(from == null) from = 0;
	var i = this1.length - 1;
	while(i >= from) {
		if(this1[i] == x) return i;
		i--;
	}
	return -1;
}
flash._Vector.Vector_Impl_.ofArray = function(a) {
	return flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),a);
}
flash._Vector.Vector_Impl_.convert = function(v) {
	return v;
}
flash._Vector.Vector_Impl_.fromArray = function(a) {
	return a;
}
flash._Vector.Vector_Impl_.toArray = function(this1) {
	return this1;
}
flash._Vector.Vector_Impl_.get_length = function(this1) {
	return this1.length;
}
flash._Vector.Vector_Impl_.set_length = function(this1,value) {
	if(value < this1.length) this1 = this1.slice(0,value);
	while(value > this1.length) this1.push(null);
	return value;
}
flash._Vector.Vector_Impl_.get_fixed = function(this1) {
	return false;
}
flash._Vector.Vector_Impl_.set_fixed = function(this1,value) {
	return value;
}
away3d.core.managers.Mouse3DManager = function() {
	this._updateDirty = true;
	this._nullVector = new flash.geom.Vector3D();
	this._mouseMoveEvent = new flash.events.MouseEvent(flash.events.MouseEvent.MOUSE_MOVE);
	this._mousePicker = away3d.core.pick.PickingType.RAYCAST_FIRST_ENCOUNTERED;
	this._childDepth = 0;
	if(away3d.core.managers.Mouse3DManager._view3Ds == null) {
		away3d.core.managers.Mouse3DManager._view3Ds = new haxe.ds.ObjectMap();
		away3d.core.managers.Mouse3DManager._view3DLookup = flash._Vector.Vector_Impl_._new();
	}
};
$hxClasses["away3d.core.managers.Mouse3DManager"] = away3d.core.managers.Mouse3DManager;
away3d.core.managers.Mouse3DManager.__name__ = ["away3d","core","managers","Mouse3DManager"];
away3d.core.managers.Mouse3DManager.prototype = {
	set_mousePicker: function(value) {
		this._mousePicker = value;
		return value;
	}
	,get_mousePicker: function() {
		return this._mousePicker;
	}
	,set_forceMouseMove: function(value) {
		this._forceMouseMove = value;
		return value;
	}
	,get_forceMouseMove: function() {
		return this._forceMouseMove;
	}
	,onMouseWheel: function(event) {
		if(away3d.core.managers.Mouse3DManager._collidingObject != null) this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseWheel,event); else this.reThrowEvent(event);
		this._updateDirty = true;
	}
	,onMouseUp: function(event) {
		if(away3d.core.managers.Mouse3DManager._collidingObject != null) {
			this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseUp,event);
			away3d.core.managers.Mouse3DManager._previousCollidingObject = away3d.core.managers.Mouse3DManager._collidingObject;
		} else this.reThrowEvent(event);
		this._updateDirty = true;
	}
	,onMouseDown: function(event) {
		this._activeView = js.Boot.__cast(event.currentTarget , away3d.containers.View3D);
		this.updateCollider(this._activeView);
		if(away3d.core.managers.Mouse3DManager._collidingObject != null) {
			this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseDown,event);
			away3d.core.managers.Mouse3DManager._previousCollidingObject = away3d.core.managers.Mouse3DManager._collidingObject;
		} else this.reThrowEvent(event);
		this._updateDirty = true;
	}
	,onDoubleClick: function(event) {
		if(away3d.core.managers.Mouse3DManager._collidingObject != null) this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseDoubleClick,event); else this.reThrowEvent(event);
		this._updateDirty = true;
	}
	,onClick: function(event) {
		if(away3d.core.managers.Mouse3DManager._collidingObject != null) this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseClick,event); else this.reThrowEvent(event);
		this._updateDirty = true;
	}
	,onMouseOver: function(event) {
		this._activeView = js.Boot.__cast(event.currentTarget , away3d.containers.View3D);
		if(away3d.core.managers.Mouse3DManager._collidingObject != null && away3d.core.managers.Mouse3DManager._previousCollidingObject != away3d.core.managers.Mouse3DManager._collidingObject) this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseOver,event,away3d.core.managers.Mouse3DManager._collidingObject); else this.reThrowEvent(event);
		this._updateDirty = true;
	}
	,onMouseOut: function(event) {
		this._activeView = null;
		if(away3d.core.managers.Mouse3DManager._collidingObject != null) this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseOut,event,away3d.core.managers.Mouse3DManager._collidingObject);
		this._updateDirty = true;
	}
	,onMouseMove: function(event) {
		if(away3d.core.managers.Mouse3DManager._collidingObject != null) this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseMove,this._mouseMoveEvent = event); else this.reThrowEvent(event);
		this._updateDirty = true;
	}
	,traverseDisplayObjects: function(container) {
	}
	,hasKey: function(view) {
		var keys = away3d.core.managers.Mouse3DManager._view3Ds.keys();
		while( keys.hasNext() ) {
			var v = keys.next();
			if(v == view) return true;
		}
		return false;
	}
	,reThrowEvent: function(event) {
		if(this._activeView == null || this._activeView != null && !this._activeView.get_shareContext()) return;
		var keys = away3d.core.managers.Mouse3DManager._view3Ds.keys();
		while( keys.hasNext() ) {
			var v = keys.next();
			if(v != this._activeView && away3d.core.managers.Mouse3DManager._view3Ds.h[v.__id__] < away3d.core.managers.Mouse3DManager._view3Ds.h[this._activeView.__id__]) v.dispatchEvent(event);
		}
	}
	,queueDispatch: function(event,sourceEvent,collider) {
		event.ctrlKey = sourceEvent.ctrlKey;
		event.altKey = sourceEvent.altKey;
		event.shiftKey = sourceEvent.shiftKey;
		event.delta = sourceEvent.delta;
		event.screenX = sourceEvent.localX;
		event.screenY = sourceEvent.localY;
		if(collider == null) collider = away3d.core.managers.Mouse3DManager._collidingObject;
		if(collider != null) {
			event.object = collider.entity;
			event.renderable = collider.renderable;
			event.uv = collider.uv;
			event.localPosition = collider.localPosition != null?collider.localPosition.clone():null;
			event.localNormal = collider.localNormal != null?collider.localNormal.clone():null;
			event.index = collider.index;
			event.subGeometryIndex = collider.subGeometryIndex;
		} else {
			event.uv = null;
			event.object = null;
			event.localPosition = this._nullVector;
			event.localNormal = this._nullVector;
			event.index = 0;
			event.subGeometryIndex = 0;
		}
		flash._Vector.Vector_Impl_.push(away3d.core.managers.Mouse3DManager._queuedEvents,event);
	}
	,dispose: function() {
		this._mousePicker.dispose();
	}
	,disableMouseListeners: function(view) {
		view.removeEventListener(flash.events.MouseEvent.CLICK,$bind(this,this.onClick));
		view.removeEventListener(flash.events.MouseEvent.DOUBLE_CLICK,$bind(this,this.onDoubleClick));
		view.removeEventListener(flash.events.MouseEvent.MOUSE_DOWN,$bind(this,this.onMouseDown));
		view.removeEventListener(flash.events.MouseEvent.MOUSE_MOVE,$bind(this,this.onMouseMove));
		view.removeEventListener(flash.events.MouseEvent.MOUSE_UP,$bind(this,this.onMouseUp));
		view.removeEventListener(flash.events.MouseEvent.MOUSE_WHEEL,$bind(this,this.onMouseWheel));
		view.removeEventListener(flash.events.MouseEvent.MOUSE_OVER,$bind(this,this.onMouseOver));
		view.removeEventListener(flash.events.MouseEvent.MOUSE_OUT,$bind(this,this.onMouseOut));
	}
	,enableMouseListeners: function(view) {
		view.addEventListener(flash.events.MouseEvent.CLICK,$bind(this,this.onClick));
		view.addEventListener(flash.events.MouseEvent.DOUBLE_CLICK,$bind(this,this.onDoubleClick));
		view.addEventListener(flash.events.MouseEvent.MOUSE_DOWN,$bind(this,this.onMouseDown));
		view.addEventListener(flash.events.MouseEvent.MOUSE_MOVE,$bind(this,this.onMouseMove));
		view.addEventListener(flash.events.MouseEvent.MOUSE_UP,$bind(this,this.onMouseUp));
		view.addEventListener(flash.events.MouseEvent.MOUSE_WHEEL,$bind(this,this.onMouseWheel));
		view.addEventListener(flash.events.MouseEvent.MOUSE_OVER,$bind(this,this.onMouseOver));
		view.addEventListener(flash.events.MouseEvent.MOUSE_OUT,$bind(this,this.onMouseOut));
	}
	,addViewLayer: function(view) {
		var stg = view.get_stage();
		if(view.get_stage3DProxy().get_mouse3DManager() == null) view.get_stage3DProxy().set_mouse3DManager(this);
		if(!this.hasKey(view)) away3d.core.managers.Mouse3DManager._view3Ds.set(view,0);
		this._childDepth = 0;
		this.traverseDisplayObjects(stg);
		away3d.core.managers.Mouse3DManager._viewCount = this._childDepth;
	}
	,fireMouseEvents: function() {
		var i = 0;
		var len;
		var event;
		var dispatcher;
		if(away3d.core.managers.Mouse3DManager._collidingViewObjects != null) {
			away3d.core.managers.Mouse3DManager._collidingObject = null;
			var distance = 100000;
			var view;
			var v = away3d.core.managers.Mouse3DManager._viewCount - 1;
			while(v >= 0) {
				view = away3d.core.managers.Mouse3DManager._view3DLookup[v];
				if(away3d.core.managers.Mouse3DManager._collidingViewObjects[v] != null && (view.get_layeredView() || away3d.core.managers.Mouse3DManager._collidingViewObjects[v].rayEntryDistance < distance)) {
					distance = away3d.core.managers.Mouse3DManager._collidingViewObjects[v].rayEntryDistance;
					away3d.core.managers.Mouse3DManager._collidingObject = away3d.core.managers.Mouse3DManager._collidingViewObjects[v];
					if(view.get_layeredView()) break;
				}
				v--;
			}
		}
		if(away3d.core.managers.Mouse3DManager._collidingObject != away3d.core.managers.Mouse3DManager._previousCollidingObject) {
			if(away3d.core.managers.Mouse3DManager._previousCollidingObject != null) this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseOut,this._mouseMoveEvent,away3d.core.managers.Mouse3DManager._previousCollidingObject);
			if(away3d.core.managers.Mouse3DManager._collidingObject != null) this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseOver,this._mouseMoveEvent,away3d.core.managers.Mouse3DManager._collidingObject);
		}
		if(this._forceMouseMove && away3d.core.managers.Mouse3DManager._collidingObject != null) this.queueDispatch(away3d.core.managers.Mouse3DManager._mouseMove,this._mouseMoveEvent,away3d.core.managers.Mouse3DManager._collidingObject);
		len = flash._Vector.Vector_Impl_.get_length(away3d.core.managers.Mouse3DManager._queuedEvents);
		i = 0;
		while(i < len) {
			event = away3d.core.managers.Mouse3DManager._queuedEvents[i];
			dispatcher = event.object;
			while(dispatcher != null && !dispatcher._ancestorsAllowMouseEnabled) dispatcher = dispatcher.get_parent();
			if(dispatcher != null) dispatcher.dispatchEvent(event);
			++i;
		}
		if(0 < away3d.core.managers.Mouse3DManager._queuedEvents.length) away3d.core.managers.Mouse3DManager._queuedEvents = away3d.core.managers.Mouse3DManager._queuedEvents.slice(0,0);
		while(0 > away3d.core.managers.Mouse3DManager._queuedEvents.length) away3d.core.managers.Mouse3DManager._queuedEvents.push(null);
		0;
		this._updateDirty = false;
		away3d.core.managers.Mouse3DManager._previousCollidingObject = away3d.core.managers.Mouse3DManager._collidingObject;
	}
	,updateCollider: function(view) {
		away3d.core.managers.Mouse3DManager._previousCollidingView = away3d.core.managers.Mouse3DManager._collidingView;
		if(view != null) {
			if(view.get_stage3DProxy().get_bufferClear()) away3d.core.managers.Mouse3DManager._collidingViewObjects = flash._Vector.Vector_Impl_._new(away3d.core.managers.Mouse3DManager._viewCount);
			if(!view.get_shareContext()) {
				if(view == this._activeView && (this._forceMouseMove || this._updateDirty)) away3d.core.managers.Mouse3DManager._collidingObject = this._mousePicker.getViewCollision(view.get_mouseX(),view.get_mouseY(),view);
			} else {
			}
		}
	}
	,__class__: away3d.core.managers.Mouse3DManager
	,__properties__: {set_forceMouseMove:"set_forceMouseMove",get_forceMouseMove:"get_forceMouseMove",set_mousePicker:"set_mousePicker",get_mousePicker:"get_mousePicker"}
}
away3d.core.managers.RTTBufferManager = function(se,stage3DProxy) {
	this._viewWidth = -1;
	this._viewHeight = -1;
	this._textureWidth = -1;
	this._textureHeight = -1;
	this._buffersInvalid = true;
	if(se == null) throw new flash.errors.Error("No cheating the multiton!");
	this._renderToTextureRect = new flash.geom.Rectangle();
	this._stage3DProxy = stage3DProxy;
	flash.events.EventDispatcher.call(this);
};
$hxClasses["away3d.core.managers.RTTBufferManager"] = away3d.core.managers.RTTBufferManager;
away3d.core.managers.RTTBufferManager.__name__ = ["away3d","core","managers","RTTBufferManager"];
away3d.core.managers.RTTBufferManager.getInstance = function(stage3DProxy) {
	if(stage3DProxy == null) throw new flash.errors.Error("stage3DProxy key cannot be null!");
	if(away3d.core.managers.RTTBufferManager._instances == null) away3d.core.managers.RTTBufferManager._instances = new haxe.ds.ObjectMap();
	var rttb = away3d.core.managers.RTTBufferManager._instances.h[stage3DProxy.__id__];
	if(rttb == null) {
		rttb = new away3d.core.managers.RTTBufferManager(new away3d.core.managers.SingletonEnforcer(),stage3DProxy);
		away3d.core.managers.RTTBufferManager._instances.set(stage3DProxy,rttb);
	}
	return rttb;
}
away3d.core.managers.RTTBufferManager.__super__ = flash.events.EventDispatcher;
away3d.core.managers.RTTBufferManager.prototype = $extend(flash.events.EventDispatcher.prototype,{
	updateRTTBuffers: function() {
		var context = this._stage3DProxy.get_context3D();
		var textureVerts;
		var screenVerts;
		var x;
		var y;
		if(this._renderToTextureVertexBuffer == null) this._renderToTextureVertexBuffer = context.createVertexBuffer(4,5);
		if(this._renderToScreenVertexBuffer == null) this._renderToScreenVertexBuffer = context.createVertexBuffer(4,5);
		if(this._indexBuffer == null) {
			this._indexBuffer = context.createIndexBuffer(6);
			var tmp_data = [2,1,0,3,2,0];
			this._indexBuffer.uploadFromVector(flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),tmp_data),0,6);
		}
		this._textureRatioX = x = Math.min(this._viewWidth / this._textureWidth,1);
		this._textureRatioY = y = Math.min(this._viewHeight / this._textureHeight,1);
		var u1 = (1 - x) * .5;
		var u2 = (x + 1) * .5;
		var v1 = (y + 1) * .5;
		var v2 = (1 - y) * .5;
		textureVerts = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[-x,-y,u1,v1,0,x,-y,u2,v1,1,x,y,u2,v2,2,-x,y,u1,v2,3]);
		screenVerts = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[-1,-1,u1,v1,0,1,-1,u2,v1,1,1,1,u2,v2,2,-1,1,u1,v2,3]);
		this._renderToTextureVertexBuffer.uploadFromVector(textureVerts,0,4);
		this._renderToScreenVertexBuffer.uploadFromVector(screenVerts,0,4);
		this._buffersInvalid = false;
	}
	,dispose: function() {
		away3d.core.managers.RTTBufferManager._instances.remove(this._stage3DProxy);
		if(this._indexBuffer != null) {
			this._indexBuffer.dispose();
			this._renderToScreenVertexBuffer.dispose();
			this._renderToTextureVertexBuffer.dispose();
			this._renderToScreenVertexBuffer = null;
			this._renderToTextureVertexBuffer = null;
			this._indexBuffer = null;
		}
	}
	,get_textureHeight: function() {
		return this._textureHeight;
	}
	,get_textureWidth: function() {
		return this._textureWidth;
	}
	,get_renderToTextureRect: function() {
		if(this._buffersInvalid) this.updateRTTBuffers();
		return this._renderToTextureRect;
	}
	,get_indexBuffer: function() {
		return this._indexBuffer;
	}
	,get_renderToScreenVertexBuffer: function() {
		if(this._buffersInvalid) this.updateRTTBuffers();
		return this._renderToScreenVertexBuffer;
	}
	,get_renderToTextureVertexBuffer: function() {
		if(this._buffersInvalid) this.updateRTTBuffers();
		return this._renderToTextureVertexBuffer;
	}
	,set_viewHeight: function(value) {
		if(value == this._viewHeight) return value;
		this._viewHeight = value;
		this._buffersInvalid = true;
		this._textureHeight = away3d.tools.utils.TextureUtils.getBestPowerOf2(this._viewHeight);
		if(this._textureHeight > this._viewHeight) {
			this._renderToTextureRect.y = (this._textureHeight - this._viewHeight) * .5 | 0;
			this._renderToTextureRect.height = this._viewHeight;
		} else {
			this._renderToTextureRect.y = 0;
			this._renderToTextureRect.height = this._textureHeight;
		}
		this.dispatchEvent(new flash.events.Event(flash.events.Event.RESIZE));
		return value;
	}
	,get_viewHeight: function() {
		return this._viewHeight;
	}
	,set_viewWidth: function(value) {
		if(value == this._viewWidth) return value;
		this._viewWidth = value;
		this._buffersInvalid = true;
		this._textureWidth = away3d.tools.utils.TextureUtils.getBestPowerOf2(this._viewWidth);
		if(this._textureWidth > this._viewWidth) {
			this._renderToTextureRect.x = (this._textureWidth - this._viewWidth) * .5 | 0;
			this._renderToTextureRect.width = this._viewWidth;
		} else {
			this._renderToTextureRect.x = 0;
			this._renderToTextureRect.width = this._textureWidth;
		}
		this.dispatchEvent(new flash.events.Event(flash.events.Event.RESIZE));
		return value;
	}
	,get_viewWidth: function() {
		return this._viewWidth;
	}
	,get_textureRatioY: function() {
		if(this._buffersInvalid) this.updateRTTBuffers();
		return this._textureRatioY;
	}
	,get_textureRatioX: function() {
		if(this._buffersInvalid) this.updateRTTBuffers();
		return this._textureRatioX;
	}
	,__class__: away3d.core.managers.RTTBufferManager
	,__properties__: {get_textureRatioX:"get_textureRatioX",get_textureRatioY:"get_textureRatioY",set_viewWidth:"set_viewWidth",get_viewWidth:"get_viewWidth",set_viewHeight:"set_viewHeight",get_viewHeight:"get_viewHeight",get_renderToTextureVertexBuffer:"get_renderToTextureVertexBuffer",get_renderToScreenVertexBuffer:"get_renderToScreenVertexBuffer",get_indexBuffer:"get_indexBuffer",get_renderToTextureRect:"get_renderToTextureRect",get_textureWidth:"get_textureWidth",get_textureHeight:"get_textureHeight"}
});
away3d.core.managers.SingletonEnforcer = function() {
};
$hxClasses["away3d.core.managers.SingletonEnforcer"] = away3d.core.managers.SingletonEnforcer;
away3d.core.managers.SingletonEnforcer.__name__ = ["away3d","core","managers","SingletonEnforcer"];
away3d.core.managers.SingletonEnforcer.prototype = {
	__class__: away3d.core.managers.SingletonEnforcer
}
away3d.core.managers.Stage3DManager = function(stage,Stage3DManagerSingletonEnforcer) {
	if(Stage3DManagerSingletonEnforcer == null) throw new flash.errors.Error("This class is a multiton and cannot be instantiated manually. Use Stage3DManager.getInstance instead.");
	this._stage = stage;
	this.stage3DsLength = 1;
	if(away3d.core.managers.Stage3DManager._stageProxies == null) away3d.core.managers.Stage3DManager._stageProxies = flash._Vector.Vector_Impl_._new(this.stage3DsLength,true);
};
$hxClasses["away3d.core.managers.Stage3DManager"] = away3d.core.managers.Stage3DManager;
away3d.core.managers.Stage3DManager.__name__ = ["away3d","core","managers","Stage3DManager"];
away3d.core.managers.Stage3DManager.getInstance = function(stage) {
	if(away3d.core.managers.Stage3DManager._instances == null) away3d.core.managers.Stage3DManager._instances = new haxe.ds.ObjectMap();
	var manager = away3d.core.managers.Stage3DManager._instances.h[stage.__id__];
	if(manager == null) {
		manager = new away3d.core.managers.Stage3DManager(stage,new away3d.core.managers.Stage3DManagerSingletonEnforcer());
		away3d.core.managers.Stage3DManager._instances.set(stage,manager);
	}
	return manager;
}
away3d.core.managers.Stage3DManager.prototype = {
	get_numProxySlotsTotal: function() {
		return flash._Vector.Vector_Impl_.get_length(away3d.core.managers.Stage3DManager._stageProxies);
	}
	,get_numProxySlotsUsed: function() {
		return away3d.core.managers.Stage3DManager._numStageProxies;
	}
	,get_numProxySlotsFree: function() {
		return flash._Vector.Vector_Impl_.get_length(away3d.core.managers.Stage3DManager._stageProxies) - away3d.core.managers.Stage3DManager._numStageProxies;
	}
	,get_hasFreeStage3DProxy: function() {
		return (away3d.core.managers.Stage3DManager._numStageProxies | 0) < flash._Vector.Vector_Impl_.get_length(away3d.core.managers.Stage3DManager._stageProxies)?true:false;
	}
	,getFreeStage3DProxy: function(forceSoftware,profile) {
		if(profile == null) profile = "baseline";
		if(forceSoftware == null) forceSoftware = false;
		var i = 0;
		var len = this.stage3DsLength;
		while(i < len) {
			if(away3d.core.managers.Stage3DManager._stageProxies[i] == null) {
				this.getStage3DProxy(i,forceSoftware,profile);
				away3d.core.managers.Stage3DManager._stageProxies[i].set_width(this._stage.get_stageWidth());
				away3d.core.managers.Stage3DManager._stageProxies[i].set_height(this._stage.get_stageHeight());
				return away3d.core.managers.Stage3DManager._stageProxies[i];
			}
			++i;
		}
		throw new flash.errors.Error("Too many Stage3D instances used!");
		return null;
	}
	,removeStage3DProxy: function(stage3DProxy) {
		away3d.core.managers.Stage3DManager._numStageProxies--;
		away3d.core.managers.Stage3DManager._stageProxies[stage3DProxy.get_stage3DIndex()] = null;
	}
	,getStage3DProxy: function(index,forceSoftware,profile) {
		if(profile == null) profile = "baseline";
		if(forceSoftware == null) forceSoftware = false;
		if(away3d.core.managers.Stage3DManager._stageProxies[index] == null) {
			away3d.core.managers.Stage3DManager._numStageProxies++;
			away3d.core.managers.Stage3DManager._stageProxies[index] = new away3d.core.managers.Stage3DProxy(index,OpenFLStage3D.getStage3D(this._stage,index),this,forceSoftware,profile);
		}
		return away3d.core.managers.Stage3DManager._stageProxies[index];
	}
	,__class__: away3d.core.managers.Stage3DManager
	,__properties__: {get_hasFreeStage3DProxy:"get_hasFreeStage3DProxy",get_numProxySlotsFree:"get_numProxySlotsFree",get_numProxySlotsUsed:"get_numProxySlotsUsed",get_numProxySlotsTotal:"get_numProxySlotsTotal"}
}
away3d.core.managers.Stage3DManagerSingletonEnforcer = function() {
};
$hxClasses["away3d.core.managers.Stage3DManagerSingletonEnforcer"] = away3d.core.managers.Stage3DManagerSingletonEnforcer;
away3d.core.managers.Stage3DManagerSingletonEnforcer.__name__ = ["away3d","core","managers","Stage3DManagerSingletonEnforcer"];
away3d.core.managers.Stage3DManagerSingletonEnforcer.prototype = {
	__class__: away3d.core.managers.Stage3DManagerSingletonEnforcer
}
away3d.core.managers.Stage3DProxy = function(stage3DIndex,stage3D,stage3DManager,forceSoftware,profile) {
	if(profile == null) profile = "baseline";
	if(forceSoftware == null) forceSoftware = false;
	this._stage3DIndex = -1;
	this._stage3DIndex = stage3DIndex;
	this._stage3D = stage3D;
	this._stage3D.x = 0;
	this._stage3D.y = 0;
	this._stage3D.visible = true;
	this._stage3DManager = stage3DManager;
	this._viewPort = new flash.geom.Rectangle();
	this._enableDepthAndStencil = true;
	this._stage3D.addEventListener(flash.events.Event.CONTEXT3D_CREATE,$bind(this,this.onContext3DUpdate),false,1000,false);
	flash.events.EventDispatcher.call(this);
	this.forceSoftware = forceSoftware;
	this._profile = profile;
	this.start();
};
$hxClasses["away3d.core.managers.Stage3DProxy"] = away3d.core.managers.Stage3DProxy;
away3d.core.managers.Stage3DProxy.__name__ = ["away3d","core","managers","Stage3DProxy"];
away3d.core.managers.Stage3DProxy.__super__ = flash.events.EventDispatcher;
away3d.core.managers.Stage3DProxy.prototype = $extend(flash.events.EventDispatcher.prototype,{
	clearDepthBuffer: function() {
		if(this._context3D == null) return;
		this._context3D.clear(0,0,0,1,1,0,256);
	}
	,recoverFromDisposal: function() {
		if(this._context3D == null) return false;
		if(this._context3D.driverInfo == "Disposed") {
			this._context3D = null;
			this.dispatchEvent(new away3d.events.Stage3DEvent(away3d.events.Stage3DEvent.CONTEXT3D_DISPOSED));
			return false;
		}
		return true;
	}
	,onEnterFrame: function(event) {
		if(this._context3D == null) return;
		this.clear();
		this.present();
	}
	,requestContext: function(forceSoftware,profile) {
		if(profile == null) profile = "baseline";
		if(forceSoftware == null) forceSoftware = false;
		if(!this._usesSoftwareRendering) this._usesSoftwareRendering = forceSoftware;
		this._profile = profile;
		var renderMode = forceSoftware?flash.display3D.Context3DRenderMode.SOFTWARE:flash.display3D.Context3DRenderMode.AUTO;
		OpenFLStage3D.requestAGLSLContext3D(this._stage3D,Std.string(renderMode));
		this._contextRequested = true;
	}
	,onContext3DUpdate: function(event) {
		if(this._stage3D.context3D != null) {
			var hadContext = this._context3D != null;
			this._context3D = this._stage3D.context3D;
			this._context3D.enableErrorChecking = away3d.debug.Debug.active;
			if(this._backBufferWidth != 0 && this._backBufferHeight != 0) this._context3D.configureBackBuffer(this._backBufferWidth,this._backBufferHeight,this._antiAlias,this._enableDepthAndStencil);
			this.dispatchEvent(new away3d.events.Stage3DEvent(hadContext?away3d.events.Stage3DEvent.CONTEXT3D_RECREATED:away3d.events.Stage3DEvent.CONTEXT3D_CREATED));
		} else throw new flash.errors.Error("Rendering context lost!");
	}
	,freeContext3D: function() {
		if(this._context3D != null) {
			this._context3D.dispose();
			this.dispatchEvent(new away3d.events.Stage3DEvent(away3d.events.Stage3DEvent.CONTEXT3D_DISPOSED));
		}
		this._context3D = null;
	}
	,set_touch3DManager: function(value) {
		this._touch3DManager = value;
		return value;
	}
	,get_touch3DManager: function() {
		return this._touch3DManager;
	}
	,set_mouse3DManager: function(value) {
		this._mouse3DManager = value;
		return value;
	}
	,get_mouse3DManager: function() {
		return this._mouse3DManager;
	}
	,set_bufferClear: function(newBufferClear) {
		this._bufferClear = newBufferClear;
		return newBufferClear;
	}
	,get_bufferClear: function() {
		return this._bufferClear;
	}
	,set_visible: function(value) {
		this._stage3D.visible = value;
		return value;
	}
	,get_visible: function() {
		return this._stage3D.visible;
	}
	,set_color: function(color) {
		this._color = color;
		return color;
	}
	,get_color: function() {
		return this._color;
	}
	,get_viewPort: function() {
		this._viewportDirty = false;
		return this._viewPort;
	}
	,set_antiAlias: function(antiAlias) {
		this._antiAlias = antiAlias;
		this._backBufferDirty = true;
		return antiAlias;
	}
	,get_antiAlias: function() {
		return this._antiAlias;
	}
	,set_height: function(height) {
		if(this._viewPort.height == height) return height;
		this._viewPort.height = this._backBufferHeight = height;
		this._backBufferDirty = true;
		this.notifyViewportUpdated();
		return height;
	}
	,get_height: function() {
		return this._backBufferHeight;
	}
	,set_width: function(width) {
		if(this._viewPort.width == width) return width;
		this._viewPort.width = this._backBufferWidth = width;
		this._backBufferDirty = true;
		this.notifyViewportUpdated();
		return width;
	}
	,get_width: function() {
		return this._backBufferWidth;
	}
	,set_y: function(value) {
		if(this._viewPort.y == value) return value;
		this._stage3D.y = this._viewPort.y = value;
		this.notifyViewportUpdated();
		return value;
	}
	,get_y: function() {
		return this._stage3D.y;
	}
	,set_x: function(value) {
		if(this._viewPort.x == value) return value;
		this._stage3D.x = this._viewPort.x = value;
		this.notifyViewportUpdated();
		return value;
	}
	,get_x: function() {
		return this._stage3D.x;
	}
	,get_usesSoftwareRendering: function() {
		return this._usesSoftwareRendering;
	}
	,get_driverInfo: function() {
		return this._context3D != null?this._context3D.driverInfo:null;
	}
	,get_context3D: function() {
		return this._context3D;
	}
	,get_stage3D: function() {
		return this._stage3D;
	}
	,get_stage3DIndex: function() {
		return this._stage3DIndex;
	}
	,set_scissorRect: function(value) {
		this._scissorRect = value;
		this._context3D.setScissorRectangle(this._scissorRect);
		return value;
	}
	,get_scissorRect: function() {
		return this._scissorRect;
	}
	,present: function() {
		if(this._context3D == null) return;
		this._context3D.present();
		this._activeProgram3D = null;
		if(this._mouse3DManager != null) this._mouse3DManager.fireMouseEvents();
	}
	,clear: function() {
		if(this._context3D == null) return;
		if(this._backBufferDirty) {
			this.configureBackBuffer(this._backBufferWidth,this._backBufferHeight,this._antiAlias,this._enableDepthAndStencil);
			this._backBufferDirty = false;
		}
		this._context3D.clear((this._color >> 16 & 255) / 255.0,(this._color >> 8 & 255) / 255.0,(this._color & 255) / 255.0,(this._color >> 24 & 255) / 255.0);
		this._bufferClear = true;
	}
	,setRenderTarget: function(target,enableDepthAndStencil,surfaceSelector) {
		if(surfaceSelector == null) surfaceSelector = 0;
		if(enableDepthAndStencil == null) enableDepthAndStencil = false;
		if(this._renderTarget == target && surfaceSelector == this._renderSurfaceSelector && this._enableDepthAndStencil == enableDepthAndStencil) return;
		this._renderTarget = target;
		this._renderSurfaceSelector = surfaceSelector;
		this._enableDepthAndStencil = enableDepthAndStencil;
		if(target != null) this._context3D.setRenderToTexture(target,enableDepthAndStencil,this._antiAlias,surfaceSelector); else this._context3D.setRenderToBackBuffer();
	}
	,get_renderSurfaceSelector: function() {
		return this._renderSurfaceSelector;
	}
	,get_renderTarget: function() {
		return this._renderTarget;
	}
	,set_enableDepthAndStencil: function(enableDepthAndStencil) {
		this._enableDepthAndStencil = enableDepthAndStencil;
		this._backBufferDirty = true;
		return enableDepthAndStencil;
	}
	,get_enableDepthAndStencil: function() {
		return this._enableDepthAndStencil;
	}
	,configureBackBuffer: function(backBufferWidth,backBufferHeight,antiAlias,enableDepthAndStencil) {
		var oldWidth = this._backBufferWidth;
		var oldHeight = this._backBufferHeight;
		this._viewPort.width = this._backBufferWidth = backBufferWidth;
		this._viewPort.height = this._backBufferHeight = backBufferHeight;
		if(oldWidth != this._backBufferWidth || oldHeight != this._backBufferHeight) this.notifyViewportUpdated();
		this._antiAlias = antiAlias;
		this._enableDepthAndStencil = enableDepthAndStencil;
		if(this._context3D != null) this._context3D.configureBackBuffer(backBufferWidth,backBufferHeight,antiAlias,enableDepthAndStencil);
	}
	,dispose: function() {
		this._stage3DManager.removeStage3DProxy(this);
		this._stage3D.removeEventListener(flash.events.Event.CONTEXT3D_CREATE,$bind(this,this.onContext3DUpdate));
		this.freeContext3D();
		this._stage3D = null;
		this._stage3DManager = null;
		this._stage3DIndex = -1;
	}
	,get_profile: function() {
		return this._profile;
	}
	,start: function() {
		this.requestContext(this.forceSoftware,this._profile);
	}
	,notifyViewportUpdated: function() {
		if(this._viewportDirty) return;
		this._viewportDirty = true;
		if(!this.hasEventListener(away3d.events.Stage3DEvent.VIEWPORT_UPDATED)) return;
		this._viewportUpdated = new away3d.events.Stage3DEvent(away3d.events.Stage3DEvent.VIEWPORT_UPDATED);
		this.dispatchEvent(this._viewportUpdated);
	}
	,__class__: away3d.core.managers.Stage3DProxy
	,__properties__: {get_profile:"get_profile",set_enableDepthAndStencil:"set_enableDepthAndStencil",get_enableDepthAndStencil:"get_enableDepthAndStencil",get_renderTarget:"get_renderTarget",get_renderSurfaceSelector:"get_renderSurfaceSelector",set_scissorRect:"set_scissorRect",get_scissorRect:"get_scissorRect",get_stage3DIndex:"get_stage3DIndex",get_stage3D:"get_stage3D",get_context3D:"get_context3D",get_driverInfo:"get_driverInfo",get_usesSoftwareRendering:"get_usesSoftwareRendering",set_x:"set_x",get_x:"get_x",set_y:"set_y",get_y:"get_y",set_width:"set_width",get_width:"get_width",set_height:"set_height",get_height:"get_height",set_antiAlias:"set_antiAlias",get_antiAlias:"get_antiAlias",get_viewPort:"get_viewPort",set_color:"set_color",get_color:"get_color",set_visible:"set_visible",get_visible:"get_visible",set_bufferClear:"set_bufferClear",get_bufferClear:"get_bufferClear",set_mouse3DManager:"set_mouse3DManager",get_mouse3DManager:"get_mouse3DManager",set_touch3DManager:"set_touch3DManager",get_touch3DManager:"get_touch3DManager"}
});
var haxe = {}
haxe.ds = {}
haxe.ds.IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe.ds.IntMap;
haxe.ds.IntMap.__name__ = ["haxe","ds","IntMap"];
haxe.ds.IntMap.__interfaces__ = [IMap];
haxe.ds.IntMap.prototype = {
	iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,get: function(key) {
		return this.h[key];
	}
	,set: function(key,value) {
		this.h[key] = value;
	}
	,__class__: haxe.ds.IntMap
}
away3d.core.managers.Touch3DManager = function() {
	this._updateDirty = true;
	this._nullVector = new flash.geom.Vector3D();
	this._touchMoveEvent = new flash.events.TouchEvent("touchMove");
	this._touchPicker = away3d.core.pick.PickingType.RAYCAST_FIRST_ENCOUNTERED;
	this._touchPoints = flash._Vector.Vector_Impl_._new();
	this._touchPointFromId = new haxe.ds.IntMap();
};
$hxClasses["away3d.core.managers.Touch3DManager"] = away3d.core.managers.Touch3DManager;
away3d.core.managers.Touch3DManager.__name__ = ["away3d","core","managers","Touch3DManager"];
away3d.core.managers.Touch3DManager.prototype = {
	set_view: function(value) {
		this._view = value;
		return value;
	}
	,set_touchPicker: function(value) {
		this._touchPicker = value;
		return value;
	}
	,get_touchPicker: function() {
		return this._touchPicker;
	}
	,set_forceTouchMove: function(value) {
		this._forceTouchMove = value;
		return value;
	}
	,get_forceTouchMove: function() {
		return this._forceTouchMove;
	}
	,onTouchEnd: function(event) {
		var touch = this._touchPointFromId.get(event.touchPointID);
		this._collidingObject = away3d.core.managers.Touch3DManager._collidingObjectFromTouchId.get(touch.id);
		if(this._collidingObject != null) this.queueDispatch(away3d.events.TouchEvent3D.TOUCH_END,event,this._collidingObject,touch);
		this._touchPointFromId.remove(touch.id);
		this._numTouchPoints--;
		flash._Vector.Vector_Impl_.splice(this._touchPoints,flash._Vector.Vector_Impl_.indexOf(this._touchPoints,touch),1);
		this._updateDirty = true;
	}
	,onTouchMove: function(event) {
		var touch = this._touchPointFromId.get(event.touchPointID);
		touch.x = event.stageX;
		touch.y = event.stageY;
		this._collidingObject = away3d.core.managers.Touch3DManager._collidingObjectFromTouchId.get(touch.id);
		if(this._collidingObject != null) this.queueDispatch(away3d.events.TouchEvent3D.TOUCH_MOVE,this._touchMoveEvent = event,this._collidingObject,touch);
		this._updateDirty = true;
	}
	,onTouchBegin: function(event) {
		var touch = new away3d.core.managers.TouchPoint();
		touch.id = event.touchPointID;
		touch.x = event.stageX;
		touch.y = event.stageY;
		this._numTouchPoints++;
		flash._Vector.Vector_Impl_.push(this._touchPoints,touch);
		this._touchPointFromId.set(touch.id,touch);
		this.updateCollider();
		this._collidingObject = away3d.core.managers.Touch3DManager._collidingObjectFromTouchId.get(touch.id);
		if(this._collidingObject != null) this.queueDispatch(away3d.events.TouchEvent3D.TOUCH_BEGIN,event,this._collidingObject,touch);
		this._updateDirty = true;
	}
	,queueDispatch: function(emitType,sourceEvent,collider,touch) {
		var event = new away3d.events.TouchEvent3D(emitType);
		event.ctrlKey = sourceEvent.ctrlKey;
		event.altKey = sourceEvent.altKey;
		event.shiftKey = sourceEvent.shiftKey;
		event.screenX = touch.x;
		event.screenY = touch.y;
		event.touchPointID = touch.id;
		if(collider != null) {
			event.object = collider.entity;
			event.renderable = collider.renderable;
			event.uv = collider.uv;
			event.localPosition = collider.localPosition != null?collider.localPosition.clone():null;
			event.localNormal = collider.localNormal != null?collider.localNormal.clone():null;
			event.index = collider.index;
			event.subGeometryIndex = collider.subGeometryIndex;
		} else {
			event.uv = null;
			event.object = null;
			event.localPosition = this._nullVector;
			event.localNormal = this._nullVector;
			event.index = 0;
			event.subGeometryIndex = 0;
		}
		flash._Vector.Vector_Impl_.push(away3d.core.managers.Touch3DManager._queuedEvents,event);
	}
	,dispose: function() {
		this._touchPicker.dispose();
		this._touchPoints = null;
		this._touchPointFromId = null;
		away3d.core.managers.Touch3DManager._collidingObjectFromTouchId = null;
		away3d.core.managers.Touch3DManager._previousCollidingObjectFromTouchId = null;
	}
	,disableTouchListeners: function(view) {
		view.removeEventListener("touchBegin",$bind(this,this.onTouchBegin));
		view.removeEventListener("touchMove",$bind(this,this.onTouchMove));
		view.removeEventListener("touchEnd",$bind(this,this.onTouchEnd));
	}
	,enableTouchListeners: function(view) {
		view.addEventListener("touchBegin",$bind(this,this.onTouchBegin));
		view.addEventListener("touchMove",$bind(this,this.onTouchMove));
		view.addEventListener("touchEnd",$bind(this,this.onTouchEnd));
	}
	,fireTouchEvents: function() {
		var i;
		var len;
		var event;
		var dispatcher;
		var _g1 = 0, _g = this._numTouchPoints;
		while(_g1 < _g) {
			var i1 = _g1++;
			this._touchPoint = this._touchPoints[i1];
			this._collidingObject = away3d.core.managers.Touch3DManager._collidingObjectFromTouchId.get(this._touchPoint.id);
			this._previousCollidingObject = away3d.core.managers.Touch3DManager._previousCollidingObjectFromTouchId.get(this._touchPoint.id);
			if(this._collidingObject != this._previousCollidingObject) {
				if(this._previousCollidingObject != null) this.queueDispatch(away3d.events.TouchEvent3D.TOUCH_OUT,this._touchMoveEvent,this._previousCollidingObject,this._touchPoint);
				if(this._collidingObject != null) this.queueDispatch(away3d.events.TouchEvent3D.TOUCH_OVER,this._touchMoveEvent,this._collidingObject,this._touchPoint);
			}
			if(this._forceTouchMove && this._collidingObject != null) this.queueDispatch(away3d.events.TouchEvent3D.TOUCH_MOVE,this._touchMoveEvent,this._collidingObject,this._touchPoint);
		}
		len = flash._Vector.Vector_Impl_.get_length(away3d.core.managers.Touch3DManager._queuedEvents);
		var _g = 0;
		while(_g < len) {
			var i1 = _g++;
			event = away3d.core.managers.Touch3DManager._queuedEvents[i1];
			dispatcher = event.object;
			while(dispatcher != null && !dispatcher._ancestorsAllowMouseEnabled) dispatcher = dispatcher.get_parent();
			if(dispatcher != null) dispatcher.dispatchEvent(event);
		}
		if(0 < away3d.core.managers.Touch3DManager._queuedEvents.length) away3d.core.managers.Touch3DManager._queuedEvents = away3d.core.managers.Touch3DManager._queuedEvents.slice(0,0);
		while(0 > away3d.core.managers.Touch3DManager._queuedEvents.length) away3d.core.managers.Touch3DManager._queuedEvents.push(null);
		0;
		this._updateDirty = false;
		var _g1 = 0, _g = this._numTouchPoints;
		while(_g1 < _g) {
			var i1 = _g1++;
			this._touchPoint = this._touchPoints[i1];
			away3d.core.managers.Touch3DManager._previousCollidingObjectFromTouchId.set(this._touchPoint.id,away3d.core.managers.Touch3DManager._collidingObjectFromTouchId.get(this._touchPoint.id));
		}
	}
	,updateCollider: function() {
		if(this._forceTouchMove || this._updateDirty) {
			var _g1 = 0, _g = this._numTouchPoints;
			while(_g1 < _g) {
				var i = _g1++;
				this._touchPoint = this._touchPoints[i];
				this._collidingObject = this._touchPicker.getViewCollision(this._touchPoint.x,this._touchPoint.y,this._view);
				away3d.core.managers.Touch3DManager._collidingObjectFromTouchId.set(this._touchPoint.id,this._collidingObject);
			}
		}
	}
	,__class__: away3d.core.managers.Touch3DManager
	,__properties__: {set_forceTouchMove:"set_forceTouchMove",get_forceTouchMove:"get_forceTouchMove",set_touchPicker:"set_touchPicker",get_touchPicker:"get_touchPicker",set_view:"set_view"}
}
away3d.core.managers.TouchPoint = function() {
};
$hxClasses["away3d.core.managers.TouchPoint"] = away3d.core.managers.TouchPoint;
away3d.core.managers.TouchPoint.__name__ = ["away3d","core","managers","TouchPoint"];
away3d.core.managers.TouchPoint.prototype = {
	__class__: away3d.core.managers.TouchPoint
}
away3d.core.math = {}
away3d.core.math.MathConsts = function() { }
$hxClasses["away3d.core.math.MathConsts"] = away3d.core.math.MathConsts;
away3d.core.math.MathConsts.__name__ = ["away3d","core","math","MathConsts"];
flash.geom = {}
flash.geom.Matrix3D = function(v) {
	if(v != null && flash._Vector.Vector_Impl_.get_length(v) == 16) this.rawData = v; else this.rawData = [1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0];
};
$hxClasses["flash.geom.Matrix3D"] = flash.geom.Matrix3D;
flash.geom.Matrix3D.__name__ = ["flash","geom","Matrix3D"];
flash.geom.Matrix3D.create2D = function(x,y,scale,rotation) {
	if(rotation == null) rotation = 0;
	if(scale == null) scale = 1;
	var theta = rotation * Math.PI / 180.0;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	return new flash.geom.Matrix3D([c * scale,-s * scale,0,0,s * scale,c * scale,0,0,0,0,1,0,x,y,0,1]);
}
flash.geom.Matrix3D.createABCD = function(a,b,c,d,tx,ty) {
	return new flash.geom.Matrix3D([a,b,0,0,c,d,0,0,0,0,1,0,tx,ty,0,1]);
}
flash.geom.Matrix3D.createOrtho = function(x0,x1,y0,y1,zNear,zFar) {
	var sx = 1.0 / (x1 - x0);
	var sy = 1.0 / (y1 - y0);
	var sz = 1.0 / (zFar - zNear);
	return new flash.geom.Matrix3D([2.0 * sx,0,0,0,0,2.0 * sy,0,0,0,0,-2. * sz,0,-(x0 + x1) * sx,-(y0 + y1) * sy,-(zNear + zFar) * sz,1]);
}
flash.geom.Matrix3D.getAxisRotation = function(x,y,z,degrees) {
	var m = new flash.geom.Matrix3D();
	var a1 = new flash.geom.Vector3D(x,y,z);
	var rad = -degrees * (Math.PI / 180);
	var c = Math.cos(rad);
	var s = Math.sin(rad);
	var t = 1.0 - c;
	m.rawData[0] = c + a1.x * a1.x * t;
	m.rawData[5] = c + a1.y * a1.y * t;
	m.rawData[10] = c + a1.z * a1.z * t;
	var tmp1 = a1.x * a1.y * t;
	var tmp2 = a1.z * s;
	m.rawData[4] = tmp1 + tmp2;
	m.rawData[1] = tmp1 - tmp2;
	tmp1 = a1.x * a1.z * t;
	tmp2 = a1.y * s;
	m.rawData[8] = tmp1 - tmp2;
	m.rawData[2] = tmp1 + tmp2;
	tmp1 = a1.y * a1.z * t;
	tmp2 = a1.x * s;
	m.rawData[9] = tmp1 + tmp2;
	m.rawData[6] = tmp1 - tmp2;
	return m;
}
flash.geom.Matrix3D.interpolate = function(thisMat,toMat,percent) {
	var m = new flash.geom.Matrix3D();
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		m.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i]) * percent;
	}
	return m;
}
flash.geom.Matrix3D.prototype = {
	set_position: function(val) {
		this.rawData[12] = val.x;
		this.rawData[13] = val.y;
		this.rawData[14] = val.z;
		return val;
	}
	,get_position: function() {
		return new flash.geom.Vector3D(this.rawData[12],this.rawData[13],this.rawData[14]);
	}
	,get_determinant: function() {
		return -1 * ((this.rawData[0] * this.rawData[5] - this.rawData[4] * this.rawData[1]) * (this.rawData[10] * this.rawData[15] - this.rawData[14] * this.rawData[11]) - (this.rawData[0] * this.rawData[9] - this.rawData[8] * this.rawData[1]) * (this.rawData[6] * this.rawData[15] - this.rawData[14] * this.rawData[7]) + (this.rawData[0] * this.rawData[13] - this.rawData[12] * this.rawData[1]) * (this.rawData[6] * this.rawData[11] - this.rawData[10] * this.rawData[7]) + (this.rawData[4] * this.rawData[9] - this.rawData[8] * this.rawData[5]) * (this.rawData[2] * this.rawData[15] - this.rawData[14] * this.rawData[3]) - (this.rawData[4] * this.rawData[13] - this.rawData[12] * this.rawData[5]) * (this.rawData[2] * this.rawData[11] - this.rawData[10] * this.rawData[3]) + (this.rawData[8] * this.rawData[13] - this.rawData[12] * this.rawData[9]) * (this.rawData[2] * this.rawData[7] - this.rawData[6] * this.rawData[3]));
	}
	,transpose: function() {
		var oRawData = flash._Vector.Vector_Impl_.copy(this.rawData);
		this.rawData[1] = oRawData[4];
		this.rawData[2] = oRawData[8];
		this.rawData[3] = oRawData[12];
		this.rawData[4] = oRawData[1];
		this.rawData[6] = oRawData[9];
		this.rawData[7] = oRawData[13];
		this.rawData[8] = oRawData[2];
		this.rawData[9] = oRawData[6];
		this.rawData[11] = oRawData[14];
		this.rawData[12] = oRawData[3];
		this.rawData[13] = oRawData[7];
		this.rawData[14] = oRawData[11];
	}
	,transformVectors: function(vin,vout) {
		var i = 0;
		while(i + 3 <= flash._Vector.Vector_Impl_.get_length(vin)) {
			var x = vin[i], y = vin[i + 1], z = vin[i + 2];
			vout[i] = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8] + this.rawData[12];
			vout[i + 1] = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9] + this.rawData[13];
			vout[i + 2] = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10] + this.rawData[14];
			i += 3;
		}
	}
	,transformVector: function(v) {
		var x = v.x, y = v.y, z = v.z;
		return new flash.geom.Vector3D(x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8] + this.rawData[12],x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9] + this.rawData[13],x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10] + this.rawData[14],1);
	}
	,recompose: function(components) {
		if(flash._Vector.Vector_Impl_.get_length(components) < 3 || components[2].x == 0 || components[2].y == 0 || components[2].z == 0) return false;
		this.rawData[0] = 1;
		this.rawData[1] = 0;
		this.rawData[2] = 0;
		this.rawData[3] = 0;
		this.rawData[4] = 0;
		this.rawData[5] = 1;
		this.rawData[6] = 0;
		this.rawData[7] = 0;
		this.rawData[8] = 0;
		this.rawData[9] = 0;
		this.rawData[10] = 1;
		this.rawData[11] = 0;
		this.rawData[12] = 0;
		this.rawData[13] = 0;
		this.rawData[14] = 0;
		this.rawData[15] = 1;
		this.append(new flash.geom.Matrix3D([components[2].x,0.0,0.0,0.0,0.0,components[2].y,0.0,0.0,0.0,0.0,components[2].z,0.0,0.0,0.0,0.0,1.0]));
		var angle;
		angle = -components[1].x;
		this.append(new flash.geom.Matrix3D([1,0,0,0,0,Math.cos(angle),-Math.sin(angle),0,0,Math.sin(angle),Math.cos(angle),0,0,0,0,0]));
		angle = -components[1].y;
		this.append(new flash.geom.Matrix3D([Math.cos(angle),0,Math.sin(angle),0,0,1,0,0,-Math.sin(angle),0,Math.cos(angle),0,0,0,0,0]));
		angle = -components[1].z;
		this.append(new flash.geom.Matrix3D([Math.cos(angle),-Math.sin(angle),0,0,Math.sin(angle),Math.cos(angle),0,0,0,0,1,0,0,0,0,0]));
		this.set_position(components[0]);
		this.rawData[15] = 1;
		return true;
	}
	,prependTranslation: function(x,y,z) {
		var m = new flash.geom.Matrix3D();
		m.set_position(new flash.geom.Vector3D(x,y,z));
		this.prepend(m);
	}
	,prependScale: function(xScale,yScale,zScale) {
		this.prepend(new flash.geom.Matrix3D([xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0]));
	}
	,prependRotation: function(degrees,axis,pivotPoint) {
		var m = flash.geom.Matrix3D.getAxisRotation(axis.x,axis.y,axis.z,degrees);
		if(pivotPoint != null) {
			var p = pivotPoint;
			m.rawData[12] += p.x;
			m.rawData[13] += p.y;
			m.rawData[14] += p.z;
		}
		this.prepend(m);
	}
	,prepend: function(rhs) {
		var m111 = rhs.rawData[0], m121 = rhs.rawData[4], m131 = rhs.rawData[8], m141 = rhs.rawData[12], m112 = rhs.rawData[1], m122 = rhs.rawData[5], m132 = rhs.rawData[9], m142 = rhs.rawData[13], m113 = rhs.rawData[2], m123 = rhs.rawData[6], m133 = rhs.rawData[10], m143 = rhs.rawData[14], m114 = rhs.rawData[3], m124 = rhs.rawData[7], m134 = rhs.rawData[11], m144 = rhs.rawData[15], m211 = this.rawData[0], m221 = this.rawData[4], m231 = this.rawData[8], m241 = this.rawData[12], m212 = this.rawData[1], m222 = this.rawData[5], m232 = this.rawData[9], m242 = this.rawData[13], m213 = this.rawData[2], m223 = this.rawData[6], m233 = this.rawData[10], m243 = this.rawData[14], m214 = this.rawData[3], m224 = this.rawData[7], m234 = this.rawData[11], m244 = this.rawData[15];
		this.rawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
		this.rawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
		this.rawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
		this.rawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
		this.rawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
		this.rawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
		this.rawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
		this.rawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
		this.rawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
		this.rawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
		this.rawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
		this.rawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
		this.rawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
		this.rawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
		this.rawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
		this.rawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
	}
	,invert: function() {
		var d = -1 * ((this.rawData[0] * this.rawData[5] - this.rawData[4] * this.rawData[1]) * (this.rawData[10] * this.rawData[15] - this.rawData[14] * this.rawData[11]) - (this.rawData[0] * this.rawData[9] - this.rawData[8] * this.rawData[1]) * (this.rawData[6] * this.rawData[15] - this.rawData[14] * this.rawData[7]) + (this.rawData[0] * this.rawData[13] - this.rawData[12] * this.rawData[1]) * (this.rawData[6] * this.rawData[11] - this.rawData[10] * this.rawData[7]) + (this.rawData[4] * this.rawData[9] - this.rawData[8] * this.rawData[5]) * (this.rawData[2] * this.rawData[15] - this.rawData[14] * this.rawData[3]) - (this.rawData[4] * this.rawData[13] - this.rawData[12] * this.rawData[5]) * (this.rawData[2] * this.rawData[11] - this.rawData[10] * this.rawData[3]) + (this.rawData[8] * this.rawData[13] - this.rawData[12] * this.rawData[9]) * (this.rawData[2] * this.rawData[7] - this.rawData[6] * this.rawData[3]));
		var invertable = Math.abs(d) > 0.00000000001;
		if(invertable) {
			d = -1 / d;
			var m11 = this.rawData[0];
			var m21 = this.rawData[4];
			var m31 = this.rawData[8];
			var m41 = this.rawData[12];
			var m12 = this.rawData[1];
			var m22 = this.rawData[5];
			var m32 = this.rawData[9];
			var m42 = this.rawData[13];
			var m13 = this.rawData[2];
			var m23 = this.rawData[6];
			var m33 = this.rawData[10];
			var m43 = this.rawData[14];
			var m14 = this.rawData[3];
			var m24 = this.rawData[7];
			var m34 = this.rawData[11];
			var m44 = this.rawData[15];
			this.rawData[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));
			this.rawData[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));
			this.rawData[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));
			this.rawData[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));
			this.rawData[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));
			this.rawData[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));
			this.rawData[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));
			this.rawData[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));
			this.rawData[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));
			this.rawData[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));
			this.rawData[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));
			this.rawData[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));
			this.rawData[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));
			this.rawData[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));
			this.rawData[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));
			this.rawData[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));
		}
		return invertable;
	}
	,interpolateTo: function(toMat,percent) {
		var _g = 0;
		while(_g < 16) {
			var i = _g++;
			this.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i]) * percent;
		}
	}
	,identity: function() {
		this.rawData[0] = 1;
		this.rawData[1] = 0;
		this.rawData[2] = 0;
		this.rawData[3] = 0;
		this.rawData[4] = 0;
		this.rawData[5] = 1;
		this.rawData[6] = 0;
		this.rawData[7] = 0;
		this.rawData[8] = 0;
		this.rawData[9] = 0;
		this.rawData[10] = 1;
		this.rawData[11] = 0;
		this.rawData[12] = 0;
		this.rawData[13] = 0;
		this.rawData[14] = 0;
		this.rawData[15] = 1;
	}
	,deltaTransformVector: function(v) {
		var x = v.x;
		var y = v.y;
		var z = v.z;
		return new flash.geom.Vector3D(x * this.rawData[0] + y * this.rawData[1] + z * this.rawData[2] + this.rawData[3],x * this.rawData[4] + y * this.rawData[5] + z * this.rawData[6] + this.rawData[7],x * this.rawData[8] + y * this.rawData[9] + z * this.rawData[10] + this.rawData[11],0);
	}
	,decompose: function() {
		var vec = flash._Vector.Vector_Impl_._new();
		var m = new flash.geom.Matrix3D(flash._Vector.Vector_Impl_.copy(this.rawData));
		var mr = m.rawData;
		var pos = new flash.geom.Vector3D(mr[12],mr[13],mr[14]);
		mr[12] = 0;
		mr[13] = 0;
		mr[14] = 0;
		var scale = new flash.geom.Vector3D();
		scale.x = Math.sqrt(mr[0] * mr[0] + mr[1] * mr[1] + mr[2] * mr[2]);
		scale.y = Math.sqrt(mr[4] * mr[4] + mr[5] * mr[5] + mr[6] * mr[6]);
		scale.z = Math.sqrt(mr[8] * mr[8] + mr[9] * mr[9] + mr[10] * mr[10]);
		if(mr[0] * (mr[5] * mr[10] - mr[6] * mr[9]) - mr[1] * (mr[4] * mr[10] - mr[6] * mr[8]) + mr[2] * (mr[4] * mr[9] - mr[5] * mr[8]) < 0) scale.z = -scale.z;
		mr[0] /= scale.x;
		mr[1] /= scale.x;
		mr[2] /= scale.x;
		mr[4] /= scale.y;
		mr[5] /= scale.y;
		mr[6] /= scale.y;
		mr[8] /= scale.z;
		mr[9] /= scale.z;
		mr[10] /= scale.z;
		var rot = new flash.geom.Vector3D();
		rot.y = Math.asin(-mr[2]);
		var C = Math.cos(rot.y);
		if(C > 0) {
			rot.x = Math.atan2(mr[6],mr[10]);
			rot.z = Math.atan2(mr[1],mr[0]);
		} else {
			rot.z = 0;
			rot.x = Math.atan2(mr[4],mr[5]);
		}
		flash._Vector.Vector_Impl_.push(vec,pos);
		flash._Vector.Vector_Impl_.push(vec,rot);
		flash._Vector.Vector_Impl_.push(vec,scale);
		return vec;
	}
	,copyFrom: function(other) {
		var _g = 0;
		while(_g < 16) {
			var i = _g++;
			this.rawData[i] = other.rawData[i];
		}
	}
	,clone: function() {
		return new flash.geom.Matrix3D(flash._Vector.Vector_Impl_.copy(this.rawData));
	}
	,appendTranslation: function(x,y,z) {
		this.rawData[12] += x;
		this.rawData[13] += y;
		this.rawData[14] += z;
	}
	,appendScale: function(xScale,yScale,zScale) {
		this.append(new flash.geom.Matrix3D([xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0]));
	}
	,appendRotation: function(degrees,axis,pivotPoint) {
		var m = flash.geom.Matrix3D.getAxisRotation(axis.x,axis.y,axis.z,degrees);
		if(pivotPoint != null) {
			var p = pivotPoint;
			m.rawData[12] += p.x;
			m.rawData[13] += p.y;
			m.rawData[14] += p.z;
		}
		this.append(m);
	}
	,append: function(lhs) {
		var m111 = this.rawData[0], m121 = this.rawData[4], m131 = this.rawData[8], m141 = this.rawData[12], m112 = this.rawData[1], m122 = this.rawData[5], m132 = this.rawData[9], m142 = this.rawData[13], m113 = this.rawData[2], m123 = this.rawData[6], m133 = this.rawData[10], m143 = this.rawData[14], m114 = this.rawData[3], m124 = this.rawData[7], m134 = this.rawData[11], m144 = this.rawData[15], m211 = lhs.rawData[0], m221 = lhs.rawData[4], m231 = lhs.rawData[8], m241 = lhs.rawData[12], m212 = lhs.rawData[1], m222 = lhs.rawData[5], m232 = lhs.rawData[9], m242 = lhs.rawData[13], m213 = lhs.rawData[2], m223 = lhs.rawData[6], m233 = lhs.rawData[10], m243 = lhs.rawData[14], m214 = lhs.rawData[3], m224 = lhs.rawData[7], m234 = lhs.rawData[11], m244 = lhs.rawData[15];
		this.rawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
		this.rawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
		this.rawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
		this.rawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
		this.rawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
		this.rawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
		this.rawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
		this.rawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
		this.rawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
		this.rawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
		this.rawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
		this.rawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
		this.rawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
		this.rawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
		this.rawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
		this.rawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
	}
	,__class__: flash.geom.Matrix3D
	,__properties__: {get_determinant:"get_determinant",set_position:"set_position",get_position:"get_position"}
}
away3d.core.math.Matrix3DUtils = function() { }
$hxClasses["away3d.core.math.Matrix3DUtils"] = away3d.core.math.Matrix3DUtils;
away3d.core.math.Matrix3DUtils.__name__ = ["away3d","core","math","Matrix3DUtils"];
away3d.core.math.Matrix3DUtils.quaternion2matrix = function(quarternion,m) {
	var x = quarternion.x;
	var y = quarternion.y;
	var z = quarternion.z;
	var w = quarternion.w;
	var xx = x * x;
	var xy = x * y;
	var xz = x * z;
	var xw = x * w;
	var yy = y * y;
	var yz = y * z;
	var yw = y * w;
	var zz = z * z;
	var zw = z * w;
	var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
	raw[0] = 1 - 2 * (yy + zz);
	raw[1] = 2 * (xy + zw);
	raw[2] = 2 * (xz - yw);
	raw[4] = 2 * (xy - zw);
	raw[5] = 1 - 2 * (xx + zz);
	raw[6] = 2 * (yz + xw);
	raw[8] = 2 * (xz + yw);
	raw[9] = 2 * (yz - xw);
	raw[10] = 1 - 2 * (xx + yy);
	raw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;
	raw[15] = 1;
	if(m != null) {
		away3d.Stage3DUtils.copyRawDataFrom(m,raw);
		return m;
	} else return new flash.geom.Matrix3D(raw);
}
away3d.core.math.Matrix3DUtils.getForward = function(m,v) {
	if(v == null) v = new flash.geom.Vector3D(0.0,0.0,0.0);
	away3d.Stage3DUtils.copyColumnTo(m,2,v);
	v.normalize();
	return v;
}
away3d.core.math.Matrix3DUtils.getUp = function(m,v) {
	if(v == null) v = new flash.geom.Vector3D(0.0,0.0,0.0);
	away3d.Stage3DUtils.copyColumnTo(m,1,v);
	v.normalize();
	return v;
}
away3d.core.math.Matrix3DUtils.getRight = function(m,v) {
	if(v == null) v = new flash.geom.Vector3D(0.0,0.0,0.0);
	away3d.Stage3DUtils.copyColumnTo(m,0,v);
	v.normalize();
	return v;
}
away3d.core.math.Matrix3DUtils.compare = function(m1,m2) {
	var r1 = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
	var r2 = m2.rawData;
	away3d.Stage3DUtils.copyRawDataTo(m1,r1);
	var i = 0;
	while(i < 16) {
		if(r1[i] != r2[i]) return false;
		++i;
	}
	return true;
}
away3d.core.math.Matrix3DUtils.lookAt = function(matrix,pos,dir,up) {
	var dirN;
	var upN;
	var lftN;
	var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
	lftN = new flash.geom.Vector3D(dir.y * up.z - dir.z * up.y,dir.z * up.x - dir.x * up.z,dir.x * up.y - dir.y * up.x,1);
	lftN.normalize();
	upN = new flash.geom.Vector3D(lftN.y * dir.z - lftN.z * dir.y,lftN.z * dir.x - lftN.x * dir.z,lftN.x * dir.y - lftN.y * dir.x,1);
	upN.normalize();
	dirN = new flash.geom.Vector3D(dir.x,dir.y,dir.z,dir.w);
	dirN.normalize();
	raw[0] = lftN.x;
	raw[1] = upN.x;
	raw[2] = -dirN.x;
	raw[3] = 0.0;
	raw[4] = lftN.y;
	raw[5] = upN.y;
	raw[6] = -dirN.y;
	raw[7] = 0.0;
	raw[8] = lftN.z;
	raw[9] = upN.z;
	raw[10] = -dirN.z;
	raw[11] = 0.0;
	raw[12] = -(lftN.x * pos.x + lftN.y * pos.y + lftN.z * pos.z);
	raw[13] = -(upN.x * pos.x + upN.y * pos.y + upN.z * pos.z);
	raw[14] = dirN.x * pos.x + dirN.y * pos.y + dirN.z * pos.z;
	raw[15] = 1.0;
	away3d.Stage3DUtils.copyRawDataFrom(matrix,raw);
}
away3d.core.math.Matrix3DUtils.reflection = function(plane,target) {
	if(target == null) target = new flash.geom.Matrix3D();
	var a = plane.a;
	var b = plane.b;
	var c = plane.c;
	var d = plane.d;
	var rawData = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
	var ab2 = -2 * a * b;
	var ac2 = -2 * a * c;
	var bc2 = -2 * b * c;
	rawData[0] = 1 - 2 * a * a;
	rawData[4] = ab2;
	rawData[8] = ac2;
	rawData[12] = -2 * a * d;
	rawData[1] = ab2;
	rawData[5] = 1 - 2 * b * b;
	rawData[9] = bc2;
	rawData[13] = -2 * b * d;
	rawData[2] = ac2;
	rawData[6] = bc2;
	rawData[10] = 1 - 2 * c * c;
	rawData[14] = -2 * c * d;
	rawData[3] = 0;
	rawData[7] = 0;
	rawData[11] = 0;
	rawData[15] = 1;
	away3d.Stage3DUtils.copyRawDataFrom(target,rawData);
	return target;
}
away3d.core.math.Plane3D = function(a,b,c,d) {
	if(d == null) d = 0;
	if(c == null) c = 0;
	if(b == null) b = 0;
	if(a == null) a = 0;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	if(a == 0 && b == 0) this._alignment = away3d.core.math.Plane3D.ALIGN_XY_AXIS; else if(b == 0 && c == 0) this._alignment = away3d.core.math.Plane3D.ALIGN_YZ_AXIS; else if(a == 0 && c == 0) this._alignment = away3d.core.math.Plane3D.ALIGN_XZ_AXIS; else this._alignment = away3d.core.math.Plane3D.ALIGN_ANY;
};
$hxClasses["away3d.core.math.Plane3D"] = away3d.core.math.Plane3D;
away3d.core.math.Plane3D.__name__ = ["away3d","core","math","Plane3D"];
away3d.core.math.Plane3D.prototype = {
	toString: function() {
		return "Plane3D [a:" + this.a + ", b:" + this.b + ", c:" + this.c + ", d:" + this.d + "].";
	}
	,classifyPoint: function(p,epsilon) {
		if(epsilon == null) epsilon = 0.01;
		if(this.d != this.d) return away3d.core.math.PlaneClassification.FRONT;
		var len;
		if(this._alignment == away3d.core.math.Plane3D.ALIGN_YZ_AXIS) len = this.a * p.x - this.d; else if(this._alignment == away3d.core.math.Plane3D.ALIGN_XZ_AXIS) len = this.b * p.y - this.d; else if(this._alignment == away3d.core.math.Plane3D.ALIGN_XY_AXIS) len = this.c * p.z - this.d; else len = this.a * p.x + this.b * p.y + this.c * p.z - this.d;
		if(len < -epsilon) return away3d.core.math.PlaneClassification.BACK; else if(len > epsilon) return away3d.core.math.PlaneClassification.FRONT; else return away3d.core.math.PlaneClassification.INTERSECT;
	}
	,distance: function(p) {
		if(this._alignment == away3d.core.math.Plane3D.ALIGN_YZ_AXIS) return this.a * p.x - this.d; else if(this._alignment == away3d.core.math.Plane3D.ALIGN_XZ_AXIS) return this.b * p.y - this.d; else if(this._alignment == away3d.core.math.Plane3D.ALIGN_XY_AXIS) return this.c * p.z - this.d; else return this.a * p.x + this.b * p.y + this.c * p.z - this.d;
	}
	,normalize: function() {
		var len = 1 / Math.sqrt(this.a * this.a + this.b * this.b + this.c * this.c);
		this.a *= len;
		this.b *= len;
		this.c *= len;
		this.d *= len;
		return this;
	}
	,fromNormalAndPoint: function(normal,point) {
		this.a = normal.x;
		this.b = normal.y;
		this.c = normal.z;
		this.d = this.a * point.x + this.b * point.y + this.c * point.z;
		if(this.a == 0 && this.b == 0) this._alignment = away3d.core.math.Plane3D.ALIGN_XY_AXIS; else if(this.b == 0 && this.c == 0) this._alignment = away3d.core.math.Plane3D.ALIGN_YZ_AXIS; else if(this.a == 0 && this.c == 0) this._alignment = away3d.core.math.Plane3D.ALIGN_XZ_AXIS; else this._alignment = away3d.core.math.Plane3D.ALIGN_ANY;
	}
	,fromPoints: function(p0,p1,p2) {
		var d1x = p1.x - p0.x;
		var d1y = p1.y - p0.y;
		var d1z = p1.z - p0.z;
		var d2x = p2.x - p0.x;
		var d2y = p2.y - p0.y;
		var d2z = p2.z - p0.z;
		this.a = d1y * d2z - d1z * d2y;
		this.b = d1z * d2x - d1x * d2z;
		this.c = d1x * d2y - d1y * d2x;
		this.d = this.a * p0.x + this.b * p0.y + this.c * p0.z;
		if(this.a == 0 && this.b == 0) this._alignment = away3d.core.math.Plane3D.ALIGN_XY_AXIS; else if(this.b == 0 && this.c == 0) this._alignment = away3d.core.math.Plane3D.ALIGN_YZ_AXIS; else if(this.a == 0 && this.c == 0) this._alignment = away3d.core.math.Plane3D.ALIGN_XZ_AXIS; else this._alignment = away3d.core.math.Plane3D.ALIGN_ANY;
	}
	,__class__: away3d.core.math.Plane3D
}
away3d.core.math.PlaneClassification = function() { }
$hxClasses["away3d.core.math.PlaneClassification"] = away3d.core.math.PlaneClassification;
away3d.core.math.PlaneClassification.__name__ = ["away3d","core","math","PlaneClassification"];
away3d.core.math.Quaternion = function(x,y,z,w) {
	if(w == null) w = 1;
	if(z == null) z = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	x = 0;
	y = 0;
	z = 0;
	w = 1;
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["away3d.core.math.Quaternion"] = away3d.core.math.Quaternion;
away3d.core.math.Quaternion.__name__ = ["away3d","core","math","Quaternion"];
away3d.core.math.Quaternion.prototype = {
	copyFrom: function(q) {
		this.x = q.x;
		this.y = q.y;
		this.z = q.z;
		this.w = q.w;
	}
	,rotatePoint: function(vector,target) {
		var x1;
		var y1;
		var z1;
		var w1;
		var x2 = vector.x;
		var y2 = vector.y;
		var z2 = vector.z;
		if(target == null) target = new flash.geom.Vector3D();
		w1 = -this.x * x2 - this.y * y2 - this.z * z2;
		x1 = this.w * x2 + this.y * z2 - this.z * y2;
		y1 = this.w * y2 - this.x * z2 + this.z * x2;
		z1 = this.w * z2 + this.x * y2 - this.y * x2;
		target.x = -w1 * this.x + x1 * this.w - y1 * this.z + z1 * this.y;
		target.y = -w1 * this.y + x1 * this.z + y1 * this.w - z1 * this.x;
		target.z = -w1 * this.z - x1 * this.y + y1 * this.x + z1 * this.w;
		return target;
	}
	,clone: function() {
		return new away3d.core.math.Quaternion(this.x,this.y,this.z,this.w);
	}
	,toRawData: function(target,exclude4thRow) {
		if(exclude4thRow == null) exclude4thRow = false;
		var xy2 = 2.0 * this.x * this.y;
		var xz2 = 2.0 * this.x * this.z;
		var xw2 = 2.0 * this.x * this.w;
		var yz2 = 2.0 * this.y * this.z;
		var yw2 = 2.0 * this.y * this.w;
		var zw2 = 2.0 * this.z * this.w;
		var xx = this.x * this.x;
		var yy = this.y * this.y;
		var zz = this.z * this.z;
		var ww = this.w * this.w;
		target[0] = xx - yy - zz + ww;
		target[1] = xy2 - zw2;
		target[2] = xz2 + yw2;
		target[4] = xy2 + zw2;
		target[5] = -xx + yy - zz + ww;
		target[6] = yz2 - xw2;
		target[8] = xz2 - yw2;
		target[9] = yz2 + xw2;
		target[10] = -xx - yy + zz + ww;
		target[3] = target[7] = target[11] = 0;
		if(!exclude4thRow) {
			target[12] = target[13] = target[14] = 0;
			target[15] = 1;
		}
	}
	,fromMatrix: function(matrix) {
		var tmp;
		tmp = matrix.decompose();
		var v = tmp[1];
		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		this.w = v.w;
	}
	,toMatrix3D: function(target) {
		var rawData = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		var xy2 = 2.0 * this.x * this.y;
		var xz2 = 2.0 * this.x * this.z;
		var xw2 = 2.0 * this.x * this.w;
		var yz2 = 2.0 * this.y * this.z;
		var yw2 = 2.0 * this.y * this.w;
		var zw2 = 2.0 * this.z * this.w;
		var xx = this.x * this.x;
		var yy = this.y * this.y;
		var zz = this.z * this.z;
		var ww = this.w * this.w;
		rawData[0] = xx - yy - zz + ww;
		rawData[4] = xy2 - zw2;
		rawData[8] = xz2 + yw2;
		rawData[12] = 0;
		rawData[1] = xy2 + zw2;
		rawData[5] = -xx + yy - zz + ww;
		rawData[9] = yz2 - xw2;
		rawData[13] = 0;
		rawData[2] = xz2 - yw2;
		rawData[6] = yz2 + xw2;
		rawData[10] = -xx - yy + zz + ww;
		rawData[14] = 0;
		rawData[3] = 0.0;
		rawData[7] = 0.0;
		rawData[11] = 0;
		rawData[15] = 1;
		if(target == null) return new flash.geom.Matrix3D(rawData);
		away3d.Stage3DUtils.copyRawDataFrom(target,rawData);
		return target;
	}
	,toString: function() {
		return "{x:" + this.x + " y:" + this.y + " z:" + this.z + " w:" + this.w + "}";
	}
	,normalize: function(val) {
		if(val == null) val = 1;
		var mag = val / Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		this.x *= mag;
		this.y *= mag;
		this.z *= mag;
		this.w *= mag;
	}
	,toEulerAngles: function(target) {
		if(target == null) target = new flash.geom.Vector3D();
		target.x = Math.atan2(2 * (this.w * this.x + this.y * this.z),1 - 2 * (this.x * this.x + this.y * this.y));
		target.y = Math.asin(2 * (this.w * this.y - this.z * this.x));
		target.z = Math.atan2(2 * (this.w * this.z + this.x * this.y),1 - 2 * (this.y * this.y + this.z * this.z));
		return target;
	}
	,fromEulerAngles: function(ax,ay,az) {
		var halfX = ax * .5;
		var halfY = ay * .5;
		var halfZ = az * .5;
		var cosX = Math.cos(halfX);
		var sinX = Math.sin(halfX);
		var cosY = Math.cos(halfY);
		var sinY = Math.sin(halfY);
		var cosZ = Math.cos(halfZ);
		var sinZ = Math.sin(halfZ);
		this.w = cosX * cosY * cosZ + sinX * sinY * sinZ;
		this.x = sinX * cosY * cosZ - cosX * sinY * sinZ;
		this.y = cosX * sinY * cosZ + sinX * cosY * sinZ;
		this.z = cosX * cosY * sinZ - sinX * sinY * cosZ;
	}
	,lerp: function(qa,qb,t) {
		var w1 = qa.w;
		var x1 = qa.x;
		var y1 = qa.y;
		var z1 = qa.z;
		var w2 = qb.w;
		var x2 = qb.x;
		var y2 = qb.y;
		var z2 = qb.z;
		var len;
		if(w1 * w2 + x1 * x2 + y1 * y2 + z1 * z2 < 0) {
			w2 = -w2;
			x2 = -x2;
			y2 = -y2;
			z2 = -z2;
		}
		this.w = w1 + t * (w2 - w1);
		this.x = x1 + t * (x2 - x1);
		this.y = y1 + t * (y2 - y1);
		this.z = z1 + t * (z2 - z1);
		len = 1.0 / Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);
		this.w *= len;
		this.x *= len;
		this.y *= len;
		this.z *= len;
	}
	,slerp: function(qa,qb,t) {
		var w1 = qa.w;
		var x1 = qa.x;
		var y1 = qa.y;
		var z1 = qa.z;
		var w2 = qb.w;
		var x2 = qb.x;
		var y2 = qb.y;
		var z2 = qb.z;
		var dot = w1 * w2 + x1 * x2 + y1 * y2 + z1 * z2;
		if(dot < 0) {
			dot = -dot;
			w2 = -w2;
			x2 = -x2;
			y2 = -y2;
			z2 = -z2;
		}
		if(dot < 0.95) {
			var angle = Math.acos(dot);
			var s = 1 / Math.sin(angle);
			var s1 = Math.sin(angle * (1 - t)) * s;
			var s2 = Math.sin(angle * t) * s;
			this.w = w1 * s1 + w2 * s2;
			this.x = x1 * s1 + x2 * s2;
			this.y = y1 * s1 + y2 * s2;
			this.z = z1 * s1 + z2 * s2;
		} else {
			this.w = w1 + t * (w2 - w1);
			this.x = x1 + t * (x2 - x1);
			this.y = y1 + t * (y2 - y1);
			this.z = z1 + t * (z2 - z1);
			var len = 1.0 / Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);
			this.w *= len;
			this.x *= len;
			this.y *= len;
			this.z *= len;
		}
	}
	,fromAxisAngle: function(axis,angle) {
		var sin_a = Math.sin(angle / 2);
		var cos_a = Math.cos(angle / 2);
		this.x = axis.x * sin_a;
		this.y = axis.y * sin_a;
		this.z = axis.z * sin_a;
		this.w = cos_a;
		this.normalize();
	}
	,multiplyVector: function(vector,target) {
		if(target == null) target = new away3d.core.math.Quaternion();
		var x2 = vector.x;
		var y2 = vector.y;
		var z2 = vector.z;
		target.w = -this.x * x2 - this.y * y2 - this.z * z2;
		target.x = this.w * x2 + this.y * z2 - this.z * y2;
		target.y = this.w * y2 - this.x * z2 + this.z * x2;
		target.z = this.w * z2 + this.x * y2 - this.y * x2;
		return target;
	}
	,multiply: function(qa,qb) {
		var w1 = qa.w;
		var x1 = qa.x;
		var y1 = qa.y;
		var z1 = qa.z;
		var w2 = qb.w;
		var x2 = qb.x;
		var y2 = qb.y;
		var z2 = qb.z;
		this.w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;
		this.x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;
		this.y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;
		this.z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;
	}
	,get_magnitude: function() {
		return Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,__class__: away3d.core.math.Quaternion
	,__properties__: {get_magnitude:"get_magnitude"}
}
away3d.core.partition = {}
away3d.core.partition.NodeBase = function() {
	this._childNodes = flash._Vector.Vector_Impl_._new();
	this._numEntities = 0;
	this._collectionMark = 0;
	this._numChildNodes = 0;
};
$hxClasses["away3d.core.partition.NodeBase"] = away3d.core.partition.NodeBase;
away3d.core.partition.NodeBase.__name__ = ["away3d","core","partition","NodeBase"];
away3d.core.partition.NodeBase.prototype = {
	updateNumEntities: function(value) {
		var diff = value - this._numEntities;
		var node = this;
		do node._numEntities += diff; while((node = node._parent) != null);
	}
	,get_numEntities: function() {
		return this._numEntities;
	}
	,createDebugBounds: function() {
		return null;
	}
	,acceptTraverser: function(traverser) {
		if(this._numEntities == 0 && this._debugPrimitive == null) return;
		if(traverser.enterNode(this)) {
			var i = 0;
			while(i < this._numChildNodes) this._childNodes[i++].acceptTraverser(traverser);
			if(this._debugPrimitive != null) traverser.applyRenderable(this._debugPrimitive);
		}
	}
	,findPartitionForEntity: function(entity) {
		return this;
	}
	,isIntersectingRay: function(rayPosition,rayDirection) {
		return true;
	}
	,isInFrustum: function(planes,numPlanes) {
		return true;
	}
	,removeNode: function(node) {
		var index = flash._Vector.Vector_Impl_.indexOf(this._childNodes,node);
		this._childNodes[index] = this._childNodes[--this._numChildNodes];
		flash._Vector.Vector_Impl_.pop(this._childNodes);
		var numEntities = node._numEntities;
		node = this;
		do node._numEntities -= numEntities; while((node = node._parent) != null);
	}
	,addNode: function(node) {
		node._parent = this;
		this._numEntities += node._numEntities;
		this._childNodes[this._numChildNodes++] = node;
		node.set_showDebugBounds(this._debugPrimitive != null);
		var numEntities = node._numEntities;
		node = this;
		do node._numEntities += numEntities; while((node = node._parent) != null);
	}
	,get_parent: function() {
		return this._parent;
	}
	,set_showDebugBounds: function(value) {
		if(js.Boot.__cast(this._debugPrimitive != null , Bool) == value) return value;
		if(value) this._debugPrimitive = this.createDebugBounds(); else {
			this._debugPrimitive.dispose();
			this._debugPrimitive = null;
		}
		var i = 0;
		while(i < this._numChildNodes) {
			this._childNodes[i].set_showDebugBounds(value);
			++i;
		}
		return value;
	}
	,get_showDebugBounds: function() {
		return this._debugPrimitive != null;
	}
	,__class__: away3d.core.partition.NodeBase
	,__properties__: {set_showDebugBounds:"set_showDebugBounds",get_showDebugBounds:"get_showDebugBounds",get_parent:"get_parent",get_numEntities:"get_numEntities"}
}
away3d.core.partition.EntityNode = function(entity) {
	away3d.core.partition.NodeBase.call(this);
	this._entity = entity;
	this._numEntities = 1;
};
$hxClasses["away3d.core.partition.EntityNode"] = away3d.core.partition.EntityNode;
away3d.core.partition.EntityNode.__name__ = ["away3d","core","partition","EntityNode"];
away3d.core.partition.EntityNode.__super__ = away3d.core.partition.NodeBase;
away3d.core.partition.EntityNode.prototype = $extend(away3d.core.partition.NodeBase.prototype,{
	isIntersectingRay: function(rayPosition,rayDirection) {
		if(!this._entity.get_isVisible()) return false;
		return this._entity.isIntersectingRay(rayPosition,rayDirection);
	}
	,isInFrustum: function(planes,numPlanes) {
		if(!this._entity.get_isVisible()) return false;
		return this._entity.get_worldBounds().isInFrustum(planes,numPlanes);
	}
	,removeFromParent: function() {
		if(this._parent != null) this._parent.removeNode(this);
		this._parent = null;
	}
	,acceptTraverser: function(traverser) {
		traverser.applyEntity(this._entity);
	}
	,get_entity: function() {
		return this._entity;
	}
	,__class__: away3d.core.partition.EntityNode
	,__properties__: $extend(away3d.core.partition.NodeBase.prototype.__properties__,{get_entity:"get_entity"})
});
away3d.core.partition.CameraNode = function(camera) {
	away3d.core.partition.EntityNode.call(this,camera);
};
$hxClasses["away3d.core.partition.CameraNode"] = away3d.core.partition.CameraNode;
away3d.core.partition.CameraNode.__name__ = ["away3d","core","partition","CameraNode"];
away3d.core.partition.CameraNode.__super__ = away3d.core.partition.EntityNode;
away3d.core.partition.CameraNode.prototype = $extend(away3d.core.partition.EntityNode.prototype,{
	acceptTraverser: function(traverser) {
	}
	,__class__: away3d.core.partition.CameraNode
});
away3d.core.partition.DirectionalLightNode = function(light) {
	away3d.core.partition.EntityNode.call(this,light);
	this._light = light;
};
$hxClasses["away3d.core.partition.DirectionalLightNode"] = away3d.core.partition.DirectionalLightNode;
away3d.core.partition.DirectionalLightNode.__name__ = ["away3d","core","partition","DirectionalLightNode"];
away3d.core.partition.DirectionalLightNode.__super__ = away3d.core.partition.EntityNode;
away3d.core.partition.DirectionalLightNode.prototype = $extend(away3d.core.partition.EntityNode.prototype,{
	acceptTraverser: function(traverser) {
		if(traverser.enterNode(this)) {
			away3d.core.partition.EntityNode.prototype.acceptTraverser.call(this,traverser);
			traverser.applyDirectionalLight(this._light);
		}
	}
	,get_light: function() {
		return this._light;
	}
	,__class__: away3d.core.partition.DirectionalLightNode
	,__properties__: $extend(away3d.core.partition.EntityNode.prototype.__properties__,{get_light:"get_light"})
});
away3d.core.partition.LightNode = function(light) {
	away3d.core.partition.EntityNode.call(this,light);
	this._light = light;
};
$hxClasses["away3d.core.partition.LightNode"] = away3d.core.partition.LightNode;
away3d.core.partition.LightNode.__name__ = ["away3d","core","partition","LightNode"];
away3d.core.partition.LightNode.__super__ = away3d.core.partition.EntityNode;
away3d.core.partition.LightNode.prototype = $extend(away3d.core.partition.EntityNode.prototype,{
	acceptTraverser: function(traverser) {
		if(traverser.enterNode(this)) {
			away3d.core.partition.EntityNode.prototype.acceptTraverser.call(this,traverser);
			traverser.applyUnknownLight(this._light);
		}
	}
	,get_light: function() {
		return this._light;
	}
	,__class__: away3d.core.partition.LightNode
	,__properties__: $extend(away3d.core.partition.EntityNode.prototype.__properties__,{get_light:"get_light"})
});
away3d.core.partition.LightProbeNode = function(light) {
	away3d.core.partition.EntityNode.call(this,light);
	this._light = light;
};
$hxClasses["away3d.core.partition.LightProbeNode"] = away3d.core.partition.LightProbeNode;
away3d.core.partition.LightProbeNode.__name__ = ["away3d","core","partition","LightProbeNode"];
away3d.core.partition.LightProbeNode.__super__ = away3d.core.partition.EntityNode;
away3d.core.partition.LightProbeNode.prototype = $extend(away3d.core.partition.EntityNode.prototype,{
	acceptTraverser: function(traverser) {
		if(traverser.enterNode(this)) {
			away3d.core.partition.EntityNode.prototype.acceptTraverser.call(this,traverser);
			traverser.applyLightProbe(this._light);
		}
	}
	,get_light: function() {
		return this._light;
	}
	,__class__: away3d.core.partition.LightProbeNode
	,__properties__: $extend(away3d.core.partition.EntityNode.prototype.__properties__,{get_light:"get_light"})
});
away3d.core.partition.MeshNode = function(mesh) {
	away3d.core.partition.EntityNode.call(this,mesh);
	this._mesh = mesh;
};
$hxClasses["away3d.core.partition.MeshNode"] = away3d.core.partition.MeshNode;
away3d.core.partition.MeshNode.__name__ = ["away3d","core","partition","MeshNode"];
away3d.core.partition.MeshNode.__super__ = away3d.core.partition.EntityNode;
away3d.core.partition.MeshNode.prototype = $extend(away3d.core.partition.EntityNode.prototype,{
	acceptTraverser: function(traverser) {
		if(traverser.enterNode(this)) {
			away3d.core.partition.EntityNode.prototype.acceptTraverser.call(this,traverser);
			var subs = this._mesh.get_subMeshes();
			var i = 0;
			var len = flash._Vector.Vector_Impl_.get_length(subs);
			while(i < len) traverser.applyRenderable(subs[i++]);
		}
	}
	,get_mesh: function() {
		return this._mesh;
	}
	,__class__: away3d.core.partition.MeshNode
	,__properties__: $extend(away3d.core.partition.EntityNode.prototype.__properties__,{get_mesh:"get_mesh"})
});
away3d.core.partition.NullNode = function() {
	away3d.core.partition.NodeBase.call(this);
};
$hxClasses["away3d.core.partition.NullNode"] = away3d.core.partition.NullNode;
away3d.core.partition.NullNode.__name__ = ["away3d","core","partition","NullNode"];
away3d.core.partition.NullNode.__super__ = away3d.core.partition.NodeBase;
away3d.core.partition.NullNode.prototype = $extend(away3d.core.partition.NodeBase.prototype,{
	__class__: away3d.core.partition.NullNode
});
away3d.core.partition.Partition3D = function(rootNode) {
	this._rootNode = rootNode;
	if(rootNode == null) this._rootNode = new away3d.core.partition.NullNode();
};
$hxClasses["away3d.core.partition.Partition3D"] = away3d.core.partition.Partition3D;
away3d.core.partition.Partition3D.__name__ = ["away3d","core","partition","Partition3D"];
away3d.core.partition.Partition3D.prototype = {
	updateEntities: function() {
		var node = this._updateQueue;
		var targetNode;
		var t;
		this._updateQueue = null;
		this._updatesMade = false;
		do {
			targetNode = this._rootNode.findPartitionForEntity(node.get_entity());
			if(node.get_parent() != targetNode) {
				if(node != null) node.removeFromParent();
				targetNode.addNode(node);
			}
			t = node._updateQueueNext;
			node._updateQueueNext = null;
			node.get_entity().internalUpdate();
		} while((node = t) != null);
	}
	,removeEntity: function(entity) {
		var node = entity.getEntityPartitionNode();
		var t;
		node.removeFromParent();
		if(node == this._updateQueue) this._updateQueue = node._updateQueueNext; else {
			t = this._updateQueue;
			while(t != null && t._updateQueueNext != node) t = t._updateQueueNext;
			if(t != null) t._updateQueueNext = node._updateQueueNext;
		}
		node._updateQueueNext = null;
		if(this._updateQueue == null) this._updatesMade = false;
	}
	,markForUpdate: function(entity) {
		var node = entity.getEntityPartitionNode();
		var t = this._updateQueue;
		while(t != null) {
			if(node == t) return;
			t = t._updateQueueNext;
		}
		node._updateQueueNext = this._updateQueue;
		this._updateQueue = node;
		this._updatesMade = true;
	}
	,traverse: function(traverser) {
		if(this._updatesMade) this.updateEntities();
		++away3d.core.traverse.PartitionTraverser._collectionMark;
		this._rootNode.acceptTraverser(traverser);
	}
	,set_showDebugBounds: function(value) {
		this._rootNode.set_showDebugBounds(value);
		return value;
	}
	,get_showDebugBounds: function() {
		return this._rootNode.get_showDebugBounds();
	}
	,__class__: away3d.core.partition.Partition3D
	,__properties__: {set_showDebugBounds:"set_showDebugBounds",get_showDebugBounds:"get_showDebugBounds"}
}
away3d.core.partition.PointLightNode = function(light) {
	away3d.core.partition.EntityNode.call(this,light);
	this._light = light;
};
$hxClasses["away3d.core.partition.PointLightNode"] = away3d.core.partition.PointLightNode;
away3d.core.partition.PointLightNode.__name__ = ["away3d","core","partition","PointLightNode"];
away3d.core.partition.PointLightNode.__super__ = away3d.core.partition.EntityNode;
away3d.core.partition.PointLightNode.prototype = $extend(away3d.core.partition.EntityNode.prototype,{
	acceptTraverser: function(traverser) {
		if(traverser.enterNode(this)) {
			away3d.core.partition.EntityNode.prototype.acceptTraverser.call(this,traverser);
			traverser.applyPointLight(this._light);
		}
	}
	,get_light: function() {
		return this._light;
	}
	,__class__: away3d.core.partition.PointLightNode
	,__properties__: $extend(away3d.core.partition.EntityNode.prototype.__properties__,{get_light:"get_light"})
});
away3d.core.partition.RenderableNode = function(renderable) {
	away3d.core.partition.EntityNode.call(this,js.Boot.__cast(renderable , away3d.entities.Entity));
	this._renderable = renderable;
};
$hxClasses["away3d.core.partition.RenderableNode"] = away3d.core.partition.RenderableNode;
away3d.core.partition.RenderableNode.__name__ = ["away3d","core","partition","RenderableNode"];
away3d.core.partition.RenderableNode.__super__ = away3d.core.partition.EntityNode;
away3d.core.partition.RenderableNode.prototype = $extend(away3d.core.partition.EntityNode.prototype,{
	acceptTraverser: function(traverser) {
		if(traverser.enterNode(this)) {
			away3d.core.partition.EntityNode.prototype.acceptTraverser.call(this,traverser);
			traverser.applyRenderable(this._renderable);
		}
	}
	,__class__: away3d.core.partition.RenderableNode
});
away3d.core.pick = {}
away3d.core.pick.IPicker = function() { }
$hxClasses["away3d.core.pick.IPicker"] = away3d.core.pick.IPicker;
away3d.core.pick.IPicker.__name__ = ["away3d","core","pick","IPicker"];
away3d.core.pick.IPicker.prototype = {
	__class__: away3d.core.pick.IPicker
	,__properties__: {set_onlyMouseEnabled:"set_onlyMouseEnabled",get_onlyMouseEnabled:"get_onlyMouseEnabled"}
}
away3d.core.pick.IPickingCollider = function() { }
$hxClasses["away3d.core.pick.IPickingCollider"] = away3d.core.pick.IPickingCollider;
away3d.core.pick.IPickingCollider.__name__ = ["away3d","core","pick","IPickingCollider"];
away3d.core.pick.IPickingCollider.prototype = {
	__class__: away3d.core.pick.IPickingCollider
}
away3d.core.pick.PickingCollisionVO = function(entity) {
	this.entity = entity;
};
$hxClasses["away3d.core.pick.PickingCollisionVO"] = away3d.core.pick.PickingCollisionVO;
away3d.core.pick.PickingCollisionVO.__name__ = ["away3d","core","pick","PickingCollisionVO"];
away3d.core.pick.PickingCollisionVO.prototype = {
	__class__: away3d.core.pick.PickingCollisionVO
}
away3d.core.pick.RaycastPicker = function(findClosestCollision) {
	this._raycastCollector = new away3d.core.traverse.RaycastCollector();
	this._ignoredEntities = new Array();
	this._onlyMouseEnabled = true;
	this._findClosestCollision = findClosestCollision;
	this._entities = flash._Vector.Vector_Impl_._new();
};
$hxClasses["away3d.core.pick.RaycastPicker"] = away3d.core.pick.RaycastPicker;
away3d.core.pick.RaycastPicker.__name__ = ["away3d","core","pick","RaycastPicker"];
away3d.core.pick.RaycastPicker.__interfaces__ = [away3d.core.pick.IPicker];
away3d.core.pick.RaycastPicker.prototype = {
	dispose: function() {
	}
	,updateLocalPosition: function(pickingCollisionVO) {
		if(pickingCollisionVO.localPosition == null) pickingCollisionVO.localPosition = new flash.geom.Vector3D();
		var collisionPos = pickingCollisionVO.localPosition;
		var rayDir = pickingCollisionVO.localRayDirection;
		var rayPos = pickingCollisionVO.localRayPosition;
		var t = pickingCollisionVO.rayEntryDistance;
		collisionPos.x = rayPos.x + t * rayDir.x;
		collisionPos.y = rayPos.y + t * rayDir.y;
		collisionPos.z = rayPos.z + t * rayDir.z;
	}
	,getPickingCollisionVO: function() {
		var value = this._numEntities;
		if(value < this._entities.length) this._entities = this._entities.slice(0,value);
		while(value > this._entities.length) this._entities.push(null);
		value;
		flash._Vector.Vector_Impl_.sort(this._entities,$bind(this,this.sortOnNearT));
		var shortestCollisionDistance = 100000;
		var bestCollisionVO = null;
		var pickingCollisionVO;
		var entity;
		var i;
		i = 0;
		while(i < this._numEntities) {
			entity = this._entities[i];
			pickingCollisionVO = entity._pickingCollisionVO;
			if(entity.get_pickingCollider() != null) {
				if((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity.collidesBefore(shortestCollisionDistance,this._findClosestCollision)) {
					shortestCollisionDistance = pickingCollisionVO.rayEntryDistance;
					bestCollisionVO = pickingCollisionVO;
					if(!this._findClosestCollision) {
						this.updateLocalPosition(pickingCollisionVO);
						return pickingCollisionVO;
					}
				}
			} else if(bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) {
				if(!pickingCollisionVO.rayOriginIsInsideBounds) {
					this.updateLocalPosition(pickingCollisionVO);
					return pickingCollisionVO;
				}
			}
			++i;
		}
		return bestCollisionVO;
	}
	,sortOnNearT: function(entity1,entity2) {
		return entity1.get_pickingCollisionVO().rayEntryDistance > entity2.get_pickingCollisionVO().rayEntryDistance?1:-1;
	}
	,isIgnored: function(entity) {
		if(this._onlyMouseEnabled && (!entity._ancestorsAllowMouseEnabled || !entity.get_mouseEnabled())) return true;
		var ignoredEntity;
		var _g = 0, _g1 = this._ignoredEntities;
		while(_g < _g1.length) {
			var ignoredEntity1 = _g1[_g];
			++_g;
			if(ignoredEntity1 == entity) return true;
		}
		return false;
	}
	,setIgnoreList: function(entities) {
		this._ignoredEntities = entities;
	}
	,getEntityCollision: function(position,direction,entities) {
		this._numEntities = 0;
		var entity;
		var $it0 = ((function(_e) {
			return function() {
				return $iterator(flash._Vector.Vector_Impl_)(_e);
			};
		})(entities))();
		while( $it0.hasNext() ) {
			var entity1 = $it0.next();
			if(entity1.isIntersectingRay(position,direction)) this._entities[this._numEntities++] = entity1;
		}
		return this.getPickingCollisionVO();
	}
	,getSceneCollision: function(position,direction,scene) {
		this._raycastCollector.clear();
		this._raycastCollector.set_rayPosition(position);
		this._raycastCollector.set_rayDirection(direction);
		scene.traversePartitions(this._raycastCollector);
		this._numEntities = 0;
		var node = this._raycastCollector.get_entityHead();
		var entity;
		while(node != null) {
			entity = node.entity;
			if(this.isIgnored(entity)) {
				node = node.next;
				continue;
			}
			this._entities[this._numEntities++] = entity;
			node = node.next;
		}
		if(this._numEntities == 0) return null;
		return this.getPickingCollisionVO();
	}
	,getViewCollision: function(x,y,view) {
		var collector = view.get_entityCollector();
		if(collector.get_numMouseEnableds() == 0) return null;
		var rayPosition = view.unproject(x,y,0);
		var rayDirection = view.unproject(x,y,1);
		rayDirection = new flash.geom.Vector3D(rayDirection.x - rayPosition.x,rayDirection.y - rayPosition.y,rayDirection.z - rayPosition.z);
		this._numEntities = 0;
		var node = collector.get_entityHead();
		var entity;
		while(node != null) {
			entity = node.entity;
			if(this.isIgnored(entity)) {
				node = node.next;
				continue;
			}
			if(entity.get_isVisible() && entity.isIntersectingRay(rayPosition,rayDirection)) this._entities[this._numEntities++] = entity;
			node = node.next;
		}
		if(this._numEntities == 0) return null;
		return this.getPickingCollisionVO();
	}
	,set_onlyMouseEnabled: function(value) {
		this._onlyMouseEnabled = value;
		return value;
	}
	,get_onlyMouseEnabled: function() {
		return this._onlyMouseEnabled;
	}
	,__class__: away3d.core.pick.RaycastPicker
	,__properties__: {set_onlyMouseEnabled:"set_onlyMouseEnabled",get_onlyMouseEnabled:"get_onlyMouseEnabled"}
}
away3d.core.traverse = {}
away3d.core.traverse.PartitionTraverser = function() {
};
$hxClasses["away3d.core.traverse.PartitionTraverser"] = away3d.core.traverse.PartitionTraverser;
away3d.core.traverse.PartitionTraverser.__name__ = ["away3d","core","traverse","PartitionTraverser"];
away3d.core.traverse.PartitionTraverser.prototype = {
	get_entryPoint: function() {
		return this._entryPoint;
	}
	,applyEntity: function(entity) {
		throw new away3d.errors.AbstractMethodError();
	}
	,applyLightProbe: function(light) {
		throw new away3d.errors.AbstractMethodError();
	}
	,applyPointLight: function(light) {
		throw new away3d.errors.AbstractMethodError();
	}
	,applyDirectionalLight: function(light) {
		throw new away3d.errors.AbstractMethodError();
	}
	,applyUnknownLight: function(light) {
		throw new away3d.errors.AbstractMethodError();
	}
	,applyRenderable: function(renderable) {
		throw new away3d.errors.AbstractMethodError();
	}
	,applySkyBox: function(renderable) {
		throw new away3d.errors.AbstractMethodError();
	}
	,enterNode: function(node) {
		return true;
	}
	,__class__: away3d.core.traverse.PartitionTraverser
	,__properties__: {get_entryPoint:"get_entryPoint"}
}
away3d.core.traverse.EntityCollector = function() {
	away3d.core.traverse.PartitionTraverser.call(this);
	this.init();
};
$hxClasses["away3d.core.traverse.EntityCollector"] = away3d.core.traverse.EntityCollector;
away3d.core.traverse.EntityCollector.__name__ = ["away3d","core","traverse","EntityCollector"];
away3d.core.traverse.EntityCollector.__super__ = away3d.core.traverse.PartitionTraverser;
away3d.core.traverse.EntityCollector.prototype = $extend(away3d.core.traverse.PartitionTraverser.prototype,{
	cleanUp: function() {
	}
	,get_numTriangles: function() {
		return this._numTriangles;
	}
	,applyLightProbe: function(light) {
		this._lights[this._numLights++] = light;
		this._lightProbes[this._numLightProbes++] = light;
	}
	,applyPointLight: function(light) {
		this._lights[this._numLights++] = light;
		this._pointLights[this._numPointLights++] = light;
	}
	,applyDirectionalLight: function(light) {
		this._lights[this._numLights++] = light;
		this._directionalLights[this._numDirectionalLights++] = light;
	}
	,applyUnknownLight: function(light) {
		this._lights[this._numLights++] = light;
	}
	,applyEntity: function(entity) {
		++this._numEntities;
		var item = this._entityListItemPool.getItem();
		item.entity = entity;
		item.next = this._entityHead;
		this._entityHead = item;
	}
	,applyRenderable: function(renderable) {
		var material;
		var entity = renderable.get_sourceEntity();
		if(renderable.get_mouseEnabled()) ++this._numMouseEnableds;
		this._numTriangles += renderable.get_numTriangles();
		material = renderable.get_material();
		if(material != null) {
			var item = this._renderableListItemPool.getItem();
			item.renderable = renderable;
			item.materialId = material._uniqueId;
			item.renderOrderId = material._renderOrderId;
			item.cascaded = false;
			var dx = this._entryPoint.x - entity.get_x();
			var dy = this._entryPoint.y - entity.get_y();
			var dz = this._entryPoint.z - entity.get_z();
			item.zIndex = dx * this._cameraForward.x + dy * this._cameraForward.y + dz * this._cameraForward.z + entity.get_zOffset();
			item.renderSceneTransform = renderable.getRenderSceneTransform(this._camera);
			if(material.get_requiresBlending()) {
				item.next = this._blendedRenderableHead;
				this._blendedRenderableHead = item;
			} else {
				item.next = this._opaqueRenderableHead;
				this._opaqueRenderableHead = item;
			}
		}
	}
	,applySkyBox: function(renderable) {
		this._skyBox = renderable;
	}
	,enterNode: function(node) {
		var enter = away3d.core.traverse.PartitionTraverser._collectionMark != node._collectionMark && node.isInFrustum(this._cullPlanes,this._numCullPlanes);
		node._collectionMark = away3d.core.traverse.PartitionTraverser._collectionMark;
		return enter;
	}
	,clear: function() {
		if(this._camera != null) {
			this._entryPoint = this._camera.get_scenePosition();
			this._cameraForward = this._camera.get_forwardVector();
		}
		this._cullPlanes = this._customCullPlanes != null?this._customCullPlanes:this._camera != null?this._camera.get_frustumPlanes():null;
		this._numCullPlanes = this._cullPlanes != null?flash._Vector.Vector_Impl_.get_length(this._cullPlanes):0;
		this._numTriangles = this._numMouseEnableds = 0;
		this._blendedRenderableHead = null;
		this._opaqueRenderableHead = null;
		this._entityHead = null;
		this._renderableListItemPool.freeAll();
		this._entityListItemPool.freeAll();
		this._skyBox = null;
		if(this._numLights > 0) {
			var value = this._numLights = 0;
			if(value < this._lights.length) this._lights = this._lights.slice(0,value);
			while(value > this._lights.length) this._lights.push(null);
			value;
		}
		if(this._numDirectionalLights > 0) {
			var value = this._numDirectionalLights = 0;
			if(value < this._directionalLights.length) this._directionalLights = this._directionalLights.slice(0,value);
			while(value > this._directionalLights.length) this._directionalLights.push(null);
			value;
		}
		if(this._numPointLights > 0) {
			var value = this._numPointLights = 0;
			if(value < this._pointLights.length) this._pointLights = this._pointLights.slice(0,value);
			while(value > this._pointLights.length) this._pointLights.push(null);
			value;
		}
		if(this._numLightProbes > 0) {
			var value = this._numLightProbes = 0;
			if(value < this._lightProbes.length) this._lightProbes = this._lightProbes.slice(0,value);
			while(value > this._lightProbes.length) this._lightProbes.push(null);
			value;
		}
	}
	,get_lightProbes: function() {
		return this._lightProbes;
	}
	,get_pointLights: function() {
		return this._pointLights;
	}
	,get_directionalLights: function() {
		return this._directionalLights;
	}
	,get_lights: function() {
		return this._lights;
	}
	,get_entityHead: function() {
		return this._entityHead;
	}
	,set_blendedRenderableHead: function(value) {
		this._blendedRenderableHead = value;
		return value;
	}
	,get_blendedRenderableHead: function() {
		return this._blendedRenderableHead;
	}
	,set_opaqueRenderableHead: function(value) {
		this._opaqueRenderableHead = value;
		return value;
	}
	,get_opaqueRenderableHead: function() {
		return this._opaqueRenderableHead;
	}
	,get_skyBox: function() {
		return this._skyBox;
	}
	,get_numMouseEnableds: function() {
		return this._numMouseEnableds;
	}
	,set_cullPlanes: function(value) {
		this._customCullPlanes = value;
		return value;
	}
	,get_cullPlanes: function() {
		return this._customCullPlanes;
	}
	,set_camera: function(value) {
		this._camera = value;
		this._entryPoint = this._camera.get_scenePosition();
		this._cameraForward = this._camera.get_forwardVector();
		this._cullPlanes = this._camera.get_frustumPlanes();
		return value;
	}
	,get_camera: function() {
		return this._camera;
	}
	,init: function() {
		this._lights = flash._Vector.Vector_Impl_._new();
		this._directionalLights = flash._Vector.Vector_Impl_._new();
		this._pointLights = flash._Vector.Vector_Impl_._new();
		this._lightProbes = flash._Vector.Vector_Impl_._new();
		this._renderableListItemPool = new away3d.core.data.RenderableListItemPool();
		this._entityListItemPool = new away3d.core.data.EntityListItemPool();
	}
	,__class__: away3d.core.traverse.EntityCollector
	,__properties__: $extend(away3d.core.traverse.PartitionTraverser.prototype.__properties__,{set_camera:"set_camera",get_camera:"get_camera",set_cullPlanes:"set_cullPlanes",get_cullPlanes:"get_cullPlanes",get_numMouseEnableds:"get_numMouseEnableds",get_skyBox:"get_skyBox",set_opaqueRenderableHead:"set_opaqueRenderableHead",get_opaqueRenderableHead:"get_opaqueRenderableHead",set_blendedRenderableHead:"set_blendedRenderableHead",get_blendedRenderableHead:"get_blendedRenderableHead",get_entityHead:"get_entityHead",get_lights:"get_lights",get_directionalLights:"get_directionalLights",get_pointLights:"get_pointLights",get_lightProbes:"get_lightProbes",get_numTriangles:"get_numTriangles"})
});
away3d.core.traverse.RaycastCollector = function() {
	this._rayPosition = new flash.geom.Vector3D();
	this._rayDirection = new flash.geom.Vector3D();
	away3d.core.traverse.EntityCollector.call(this);
};
$hxClasses["away3d.core.traverse.RaycastCollector"] = away3d.core.traverse.RaycastCollector;
away3d.core.traverse.RaycastCollector.__name__ = ["away3d","core","traverse","RaycastCollector"];
away3d.core.traverse.RaycastCollector.__super__ = away3d.core.traverse.EntityCollector;
away3d.core.traverse.RaycastCollector.prototype = $extend(away3d.core.traverse.EntityCollector.prototype,{
	applyUnknownLight: function(light) {
	}
	,applyRenderable: function(renderable) {
	}
	,applySkyBox: function(renderable) {
	}
	,enterNode: function(node) {
		return node.isIntersectingRay(this._rayPosition,this._rayDirection);
	}
	,set_rayDirection: function(value) {
		this._rayDirection = value;
		return value;
	}
	,get_rayDirection: function() {
		return this._rayDirection;
	}
	,set_rayPosition: function(value) {
		this._rayPosition = value;
		return value;
	}
	,get_rayPosition: function() {
		return this._rayPosition;
	}
	,__class__: away3d.core.traverse.RaycastCollector
	,__properties__: $extend(away3d.core.traverse.EntityCollector.prototype.__properties__,{set_rayPosition:"set_rayPosition",get_rayPosition:"get_rayPosition",set_rayDirection:"set_rayDirection",get_rayDirection:"get_rayDirection"})
});
flash.geom.Vector3D = function(x,y,z,w) {
	if(w == null) w = 0.;
	if(z == null) z = 0.;
	if(y == null) y = 0.;
	if(x == null) x = 0.;
	this.w = w;
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["flash.geom.Vector3D"] = flash.geom.Vector3D;
flash.geom.Vector3D.__name__ = ["flash","geom","Vector3D"];
flash.geom.Vector3D.__properties__ = {get_Z_AXIS:"get_Z_AXIS",get_Y_AXIS:"get_Y_AXIS",get_X_AXIS:"get_X_AXIS"}
flash.geom.Vector3D.angleBetween = function(a,b) {
	var a0 = new flash.geom.Vector3D(a.x,a.y,a.z,a.w);
	a0.normalize();
	var b0 = new flash.geom.Vector3D(b.x,b.y,b.z,b.w);
	b0.normalize();
	return Math.acos(a0.x * b0.x + a0.y * b0.y + a0.z * b0.z);
}
flash.geom.Vector3D.distance = function(pt1,pt2) {
	var x = pt2.x - pt1.x;
	var y = pt2.y - pt1.y;
	var z = pt2.z - pt1.z;
	return Math.sqrt(x * x + y * y + z * z);
}
flash.geom.Vector3D.get_X_AXIS = function() {
	return new flash.geom.Vector3D(1,0,0);
}
flash.geom.Vector3D.get_Y_AXIS = function() {
	return new flash.geom.Vector3D(0,1,0);
}
flash.geom.Vector3D.get_Z_AXIS = function() {
	return new flash.geom.Vector3D(0,0,1);
}
flash.geom.Vector3D.prototype = {
	get_lengthSquared: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z;
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,toString: function() {
		return "Vector3D(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	,subtract: function(a) {
		return new flash.geom.Vector3D(this.x - a.x,this.y - a.y,this.z - a.z);
	}
	,scaleBy: function(s) {
		this.x *= s;
		this.y *= s;
		this.z *= s;
	}
	,project: function() {
		this.x /= this.w;
		this.y /= this.w;
		this.z /= this.w;
	}
	,normalize: function() {
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(l != 0) {
			this.x /= l;
			this.y /= l;
			this.z /= l;
		}
		return l;
	}
	,negate: function() {
		this.x *= -1;
		this.y *= -1;
		this.z *= -1;
	}
	,nearEquals: function(toCompare,tolerance,allFour) {
		if(allFour == null) allFour = false;
		return Math.abs(this.x - toCompare.x) < tolerance && Math.abs(this.y - toCompare.y) < tolerance && Math.abs(this.z - toCompare.z) < tolerance && (!allFour || Math.abs(this.w - toCompare.w) < tolerance);
	}
	,incrementBy: function(a) {
		this.x += a.x;
		this.y += a.y;
		this.z += a.z;
	}
	,equals: function(toCompare,allFour) {
		if(allFour == null) allFour = false;
		return this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w);
	}
	,dotProduct: function(a) {
		return this.x * a.x + this.y * a.y + this.z * a.z;
	}
	,decrementBy: function(a) {
		this.x -= a.x;
		this.y -= a.y;
		this.z -= a.z;
	}
	,crossProduct: function(a) {
		return new flash.geom.Vector3D(this.y * a.z - this.z * a.y,this.z * a.x - this.x * a.z,this.x * a.y - this.y * a.x,1);
	}
	,clone: function() {
		return new flash.geom.Vector3D(this.x,this.y,this.z,this.w);
	}
	,add: function(a) {
		return new flash.geom.Vector3D(this.x + a.x,this.y + a.y,this.z + a.z);
	}
	,__class__: flash.geom.Vector3D
	,__properties__: {get_length:"get_length",get_lengthSquared:"get_lengthSquared"}
}
flash.geom.Rectangle = function(inX,inY,inWidth,inHeight) {
	if(inHeight == null) inHeight = 0;
	if(inWidth == null) inWidth = 0;
	if(inY == null) inY = 0;
	if(inX == null) inX = 0;
	this.x = inX;
	this.y = inY;
	this.width = inWidth;
	this.height = inHeight;
};
$hxClasses["flash.geom.Rectangle"] = flash.geom.Rectangle;
flash.geom.Rectangle.__name__ = ["flash","geom","Rectangle"];
flash.geom.Rectangle.prototype = {
	set_topLeft: function(p) {
		this.x = p.x;
		this.y = p.y;
		return p.clone();
	}
	,get_topLeft: function() {
		return new flash.geom.Point(this.x,this.y);
	}
	,set_top: function(t) {
		this.height -= t - this.y;
		this.y = t;
		return t;
	}
	,get_top: function() {
		return this.y;
	}
	,set_size: function(p) {
		this.width = p.x;
		this.height = p.y;
		return p.clone();
	}
	,get_size: function() {
		return new flash.geom.Point(this.width,this.height);
	}
	,set_right: function(r) {
		this.width = r - this.x;
		return r;
	}
	,get_right: function() {
		return this.x + this.width;
	}
	,set_left: function(l) {
		this.width -= l - this.x;
		this.x = l;
		return l;
	}
	,get_left: function() {
		return this.x;
	}
	,set_bottomRight: function(p) {
		this.width = p.x - this.x;
		this.height = p.y - this.y;
		return p.clone();
	}
	,get_bottomRight: function() {
		return new flash.geom.Point(this.x + this.width,this.y + this.height);
	}
	,set_bottom: function(b) {
		this.height = b - this.y;
		return b;
	}
	,get_bottom: function() {
		return this.y + this.height;
	}
	,union: function(toUnion) {
		var x0 = this.x > toUnion.x?toUnion.x:this.x;
		var x1 = this.get_right() < toUnion.get_right()?toUnion.get_right():this.get_right();
		var y0 = this.y > toUnion.y?toUnion.y:this.y;
		var y1 = this.get_bottom() < toUnion.get_bottom()?toUnion.get_bottom():this.get_bottom();
		return new flash.geom.Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,transform: function(m) {
		var tx0 = m.a * this.x + m.c * this.y;
		var tx1 = tx0;
		var ty0 = m.b * this.x + m.d * this.y;
		var ty1 = tx0;
		var tx = m.a * (this.x + this.width) + m.c * this.y;
		var ty = m.b * (this.x + this.width) + m.d * this.y;
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * (this.x + this.width) + m.c * (this.y + this.height);
		ty = m.b * (this.x + this.width) + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * this.x + m.c * (this.y + this.height);
		ty = m.b * this.x + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		return new flash.geom.Rectangle(tx0 + m.tx,ty0 + m.ty,tx1 - tx0,ty1 - ty0);
	}
	,setEmpty: function() {
		this.x = this.y = this.width = this.height = 0;
	}
	,offsetPoint: function(point) {
		this.x += point.x;
		this.y += point.y;
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,isEmpty: function() {
		return this.width <= 0 || this.height <= 0;
	}
	,intersects: function(toIntersect) {
		var x0 = this.x < toIntersect.x?toIntersect.x:this.x;
		var x1 = this.get_right() > toIntersect.get_right()?toIntersect.get_right():this.get_right();
		if(x1 <= x0) return false;
		var y0 = this.y < toIntersect.y?toIntersect.y:this.y;
		var y1 = this.get_bottom() > toIntersect.get_bottom()?toIntersect.get_bottom():this.get_bottom();
		return y1 > y0;
	}
	,intersection: function(toIntersect) {
		var x0 = this.x < toIntersect.x?toIntersect.x:this.x;
		var x1 = this.get_right() > toIntersect.get_right()?toIntersect.get_right():this.get_right();
		if(x1 <= x0) return new flash.geom.Rectangle();
		var y0 = this.y < toIntersect.y?toIntersect.y:this.y;
		var y1 = this.get_bottom() > toIntersect.get_bottom()?toIntersect.get_bottom():this.get_bottom();
		if(y1 <= y0) return new flash.geom.Rectangle();
		return new flash.geom.Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,inflatePoint: function(point) {
		this.inflate(point.x,point.y);
	}
	,inflate: function(dx,dy) {
		this.x -= dx;
		this.width += dx * 2;
		this.y -= dy;
		this.height += dy * 2;
	}
	,extendBounds: function(r) {
		var dx = this.x - r.x;
		if(dx > 0) {
			this.x -= dx;
			this.width += dx;
		}
		var dy = this.y - r.y;
		if(dy > 0) {
			this.y -= dy;
			this.height += dy;
		}
		if(r.get_right() > this.get_right()) this.set_right(r.get_right());
		if(r.get_bottom() > this.get_bottom()) this.set_bottom(r.get_bottom());
	}
	,equals: function(toCompare) {
		return this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height;
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) return rect.x > this.x && rect.y > this.y && rect.get_right() < this.get_right() && rect.get_bottom() < this.get_bottom(); else return rect.x >= this.x && rect.y >= this.y && rect.get_right() <= this.get_right() && rect.get_bottom() <= this.get_bottom();
	}
	,containsPoint: function(point) {
		return this.contains(point.x,point.y);
	}
	,contains: function(inX,inY) {
		return inX >= this.x && inY >= this.y && inX < this.get_right() && inY < this.get_bottom();
	}
	,clone: function() {
		return new flash.geom.Rectangle(this.x,this.y,this.width,this.height);
	}
	,__class__: flash.geom.Rectangle
	,__properties__: {set_bottom:"set_bottom",get_bottom:"get_bottom",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_left:"set_left",get_left:"get_left",set_right:"set_right",get_right:"get_right",set_size:"set_size",get_size:"get_size",set_top:"set_top",get_top:"get_top",set_topLeft:"set_topLeft",get_topLeft:"get_topLeft"}
}
away3d.core.pick.ShaderPicker = function() {
	this._onlyMouseEnabled = true;
	this._interactives = flash._Vector.Vector_Impl_._new();
	this._localHitPosition = new flash.geom.Vector3D();
	this._hitUV = new flash.geom.Point();
	this._localHitNormal = new flash.geom.Vector3D();
	this._rayPos = new flash.geom.Vector3D();
	this._rayDir = new flash.geom.Vector3D();
	this._id = flash._Vector.Vector_Impl_._new(4,true);
	this._viewportData = flash._Vector.Vector_Impl_._new(4,true);
	this._boundOffsetScale = flash._Vector.Vector_Impl_._new(8,true);
	this._boundOffsetScale[3] = 0;
	this._boundOffsetScale[7] = 1;
};
$hxClasses["away3d.core.pick.ShaderPicker"] = away3d.core.pick.ShaderPicker;
away3d.core.pick.ShaderPicker.__name__ = ["away3d","core","pick","ShaderPicker"];
away3d.core.pick.ShaderPicker.__interfaces__ = [away3d.core.pick.IPicker];
away3d.core.pick.ShaderPicker.prototype = {
	dispose: function() {
		this._bitmapData.dispose();
		if(this._triangleProgram3D != null) this._triangleProgram3D.dispose();
		if(this._objectProgram3D != null) this._objectProgram3D.dispose();
		this._triangleProgram3D = null;
		this._objectProgram3D = null;
		this._bitmapData = null;
		this._hitRenderable = null;
		this._hitEntity = null;
	}
	,getPrecisePosition: function(invSceneTransform,nx,ny,nz,px,py,pz) {
		var rx;
		var ry;
		var rz;
		var ox;
		var oy;
		var oz;
		var t;
		var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		var cx = this._rayPos.x;
		var cy = this._rayPos.y;
		var cz = this._rayPos.z;
		ox = this._rayDir.x;
		oy = this._rayDir.y;
		oz = this._rayDir.z;
		away3d.Stage3DUtils.copyRawDataTo(invSceneTransform,raw);
		rx = raw[0] * ox + raw[4] * oy + raw[8] * oz;
		ry = raw[1] * ox + raw[5] * oy + raw[9] * oz;
		rz = raw[2] * ox + raw[6] * oy + raw[10] * oz;
		ox = raw[0] * cx + raw[4] * cy + raw[8] * cz + raw[12];
		oy = raw[1] * cx + raw[5] * cy + raw[9] * cz + raw[13];
		oz = raw[2] * cx + raw[6] * cy + raw[10] * cz + raw[14];
		t = ((px - ox) * nx + (py - oy) * ny + (pz - oz) * nz) / (rx * nx + ry * ny + rz * nz);
		this._localHitPosition.x = ox + rx * t;
		this._localHitPosition.y = oy + ry * t;
		this._localHitPosition.z = oz + rz * t;
	}
	,getPreciseDetails: function(camera) {
		var subGeom = (js.Boot.__cast(this._hitRenderable , away3d.core.base.SubMesh)).get_subGeometry();
		var indices = subGeom.get_indexData();
		var vertices = subGeom.get_vertexData();
		var len = flash._Vector.Vector_Impl_.get_length(indices);
		var x1;
		var y1;
		var z1;
		var x2;
		var y2;
		var z2;
		var x3;
		var y3;
		var z3;
		var i = 0;
		var j = 1;
		var k = 2;
		var t1;
		var t2;
		var t3;
		var v0x;
		var v0y;
		var v0z;
		var v1x;
		var v1y;
		var v1z;
		var v2x;
		var v2y;
		var v2z;
		var dot00;
		var dot01;
		var dot02;
		var dot11;
		var dot12;
		var s;
		var t;
		var invDenom;
		var uvs = subGeom.get_UVData();
		var normals = subGeom.get_faceNormals();
		var x = this._localHitPosition.x;
		var y = this._localHitPosition.y;
		var z = this._localHitPosition.z;
		var u;
		var v;
		var ui1;
		var ui2;
		var ui3;
		var s0x;
		var s0y;
		var s0z;
		var s1x;
		var s1y;
		var s1z;
		var nl;
		var stride = subGeom.get_vertexStride();
		var vertexOffset = subGeom.get_vertexOffset();
		this.updateRay(camera);
		while(i < len) {
			t1 = vertexOffset + indices[i] * stride;
			t2 = vertexOffset + indices[j] * stride;
			t3 = vertexOffset + indices[k] * stride;
			x1 = vertices[t1];
			y1 = vertices[t1 + 1];
			z1 = vertices[t1 + 2];
			x2 = vertices[t2];
			y2 = vertices[t2 + 1];
			z2 = vertices[t2 + 2];
			x3 = vertices[t3];
			y3 = vertices[t3 + 1];
			z3 = vertices[t3 + 2];
			if(!(x < x1 && x < x2 && x < x3 || y < y1 && y < y2 && y < y3 || z < z1 && z < z2 && z < z3 || x > x1 && x > x2 && x > x3 || y > y1 && y > y2 && y > y3 || z > z1 && z > z2 && z > z3)) {
				v0x = x3 - x1;
				v0y = y3 - y1;
				v0z = z3 - z1;
				v1x = x2 - x1;
				v1y = y2 - y1;
				v1z = z2 - z1;
				v2x = x - x1;
				v2y = y - y1;
				v2z = z - z1;
				dot00 = v0x * v0x + v0y * v0y + v0z * v0z;
				dot01 = v0x * v1x + v0y * v1y + v0z * v1z;
				dot02 = v0x * v2x + v0y * v2y + v0z * v2z;
				dot11 = v1x * v1x + v1y * v1y + v1z * v1z;
				dot12 = v1x * v2x + v1y * v2y + v1z * v2z;
				invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
				s = (dot11 * dot02 - dot01 * dot12) * invDenom;
				t = (dot00 * dot12 - dot01 * dot02) * invDenom;
				if(s >= 0 && t >= 0 && s + t <= 1) {
					this.getPrecisePosition(this._hitRenderable.get_inverseSceneTransform(),normals[i],normals[i + 1],normals[i + 2],x1,y1,z1);
					v2x = this._localHitPosition.x - x1;
					v2y = this._localHitPosition.y - y1;
					v2z = this._localHitPosition.z - z1;
					s0x = x2 - x1;
					s0y = y2 - y1;
					s0z = z2 - z1;
					s1x = x3 - x1;
					s1y = y3 - y1;
					s1z = z3 - z1;
					this._localHitNormal.x = s0y * s1z - s0z * s1y;
					this._localHitNormal.y = s0z * s1x - s0x * s1z;
					this._localHitNormal.z = s0x * s1y - s0y * s1x;
					nl = 1 / Math.sqrt(this._localHitNormal.x * this._localHitNormal.x + this._localHitNormal.y * this._localHitNormal.y + this._localHitNormal.z * this._localHitNormal.z);
					this._localHitNormal.x *= nl;
					this._localHitNormal.y *= nl;
					this._localHitNormal.z *= nl;
					dot02 = v0x * v2x + v0y * v2y + v0z * v2z;
					dot12 = v1x * v2x + v1y * v2y + v1z * v2z;
					s = (dot11 * dot02 - dot01 * dot12) * invDenom;
					t = (dot00 * dot12 - dot01 * dot02) * invDenom;
					ui1 = indices[i] << 1;
					ui2 = indices[j] << 1;
					ui3 = indices[k] << 1;
					u = uvs[ui1];
					v = uvs[ui1 + 1];
					this._hitUV.x = u + t * (uvs[ui2] - u) + s * (uvs[ui3] - u);
					this._hitUV.y = v + t * (uvs[ui2 + 1] - v) + s * (uvs[ui3 + 1] - v);
					this._faceIndex = i;
					this._subGeometryIndex = away3d.tools.utils.GeomUtil.getMeshSubMeshIndex(js.Boot.__cast(this._hitRenderable , away3d.core.base.SubMesh));
					return;
				}
			}
			i += 3;
			j += 3;
			k += 3;
		}
	}
	,getApproximatePosition: function(camera) {
		var entity = this._hitRenderable.get_sourceEntity();
		var col;
		var scX;
		var scY;
		var scZ;
		var offsX;
		var offsY;
		var offsZ;
		var localViewProjection = away3d.core.math.Matrix3DUtils.CALCULATION_MATRIX;
		localViewProjection.copyFrom(this._hitRenderable.getRenderSceneTransform(camera));
		localViewProjection.append(camera.get_viewProjection());
		if(this._triangleProgram3D == null) this.initTriangleProgram3D();
		this._boundOffsetScale[4] = 1 / (scX = entity.get_maxX() - entity.get_minX());
		this._boundOffsetScale[5] = 1 / (scY = entity.get_maxY() - entity.get_minY());
		this._boundOffsetScale[6] = 1 / (scZ = entity.get_maxZ() - entity.get_minZ());
		this._boundOffsetScale[0] = offsX = -entity.get_minX();
		this._boundOffsetScale[1] = offsY = -entity.get_minY();
		this._boundOffsetScale[2] = offsZ = -entity.get_minZ();
		this._context.setProgram(this._triangleProgram3D);
		this._context.clear(0,0,0,0,1,0,256);
		this._context.setScissorRectangle(away3d.core.pick.ShaderPicker.MOUSE_SCISSOR_RECT);
		this._context.setProgramConstantsFromMatrix(flash.display3D.Context3DProgramType.VERTEX,0,localViewProjection,true);
		this._context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.VERTEX,5,this._boundOffsetScale,2);
		this._hitRenderable.activateVertexBuffer(0,this._stage3DProxy);
		this._context.drawTriangles(this._hitRenderable.getIndexBuffer(this._stage3DProxy),0,this._hitRenderable.get_numTriangles());
		this._context.drawToBitmapData(this._bitmapData);
		col = this._bitmapData.getPixel(0,0);
		this._localHitPosition.x = (col >> 16 & 255) * scX / 255 - offsX;
		this._localHitPosition.y = (col >> 8 & 255) * scY / 255 - offsY;
		this._localHitPosition.z = (col & 255) * scZ / 255 - offsZ;
	}
	,getHitDetails: function(camera) {
		this.getApproximatePosition(camera);
		this.getPreciseDetails(camera);
	}
	,initTriangleProgram3D: function() {
		var vertexCode;
		var fragmentCode;
		this._triangleProgram3D = this._context.createProgram();
		vertexCode = "add vt0, va0, vc5 \t\t\t\n" + "mul vt0, vt0, vc6 \t\t\t\n" + "mov v0, vt0\t\t\t\t\n" + "m44 vt0, va0, vc0\t\t\t\n" + "mul vt1.xy, vt0.w, vc4.zw\t\n" + "add vt0.xy, vt0.xy, vt1.xy\t\n" + "mul vt0.xy, vt0.xy, vc4.xy\t\n" + "mov op, vt0\t\n";
		fragmentCode = "mov oc, v0";
		this._triangleProgram3D.upload(flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.VERTEX,vertexCode),flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.FRAGMENT,fragmentCode));
	}
	,initObjectProgram3D: function() {
		var vertexCode;
		var fragmentCode;
		this._objectProgram3D = this._context.createProgram();
		vertexCode = "m44 vt0, va0, vc0\t\t\t\n" + "mul vt1.xy, vt0.w, vc4.zw\t\n" + "add vt0.xy, vt0.xy, vt1.xy\t\n" + "mul vt0.xy, vt0.xy, vc4.xy\t\n" + "mov op, vt0\t\n";
		fragmentCode = "mov oc, fc0";
		this._objectProgram3D.upload(flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.VERTEX,vertexCode),flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.FRAGMENT,fragmentCode));
	}
	,updateRay: function(camera) {
		this._rayPos = camera.get_scenePosition();
		this._rayDir = camera.getRay(this._projX,this._projY,1);
		this._rayDir.normalize();
	}
	,drawRenderables: function(item,camera) {
		var matrix = away3d.core.math.Matrix3DUtils.CALCULATION_MATRIX;
		var renderable;
		var viewProjection = camera.get_viewProjection();
		while(item != null) {
			renderable = item.renderable;
			if(renderable.get_sourceEntity().get_scene() == null || !renderable.get_mouseEnabled() && this._onlyMouseEnabled) {
				item = item.next;
				continue;
			}
			this._potentialFound = true;
			this._context.setCulling(renderable.get_material() != null && renderable.get_material().get_bothSides()?0:1028);
			this._interactives[this._interactiveId++] = renderable;
			this._id[1] = (this._interactiveId >> 8) / 255;
			this._id[2] = (this._interactiveId & 255) / 255;
			matrix.copyFrom(renderable.getRenderSceneTransform(camera));
			matrix.append(viewProjection);
			this._context.setProgramConstantsFromMatrix(flash.display3D.Context3DProgramType.VERTEX,0,matrix,true);
			this._context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.FRAGMENT,0,this._id,1);
			renderable.activateVertexBuffer(0,this._stage3DProxy);
			this._context.drawTriangles(renderable.getIndexBuffer(this._stage3DProxy),0,renderable.get_numTriangles());
			item = item.next;
		}
	}
	,draw: function(entityCollector,target) {
		var camera = entityCollector.get_camera();
		this._context.clear(0,0,0,1);
		this._stage3DProxy.set_scissorRect(away3d.core.pick.ShaderPicker.MOUSE_SCISSOR_RECT);
		var value = this._interactiveId = 0;
		if(value < this._interactives.length) this._interactives = this._interactives.slice(0,value);
		while(value > this._interactives.length) this._interactives.push(null);
		value;
		if(this._objectProgram3D == null) this.initObjectProgram3D();
		this._context.setBlendFactors(1,0);
		this._context.setDepthTest(true,513);
		this._context.setProgram(this._objectProgram3D);
		this._context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.VERTEX,4,this._viewportData,1);
		this.drawRenderables(entityCollector.get_opaqueRenderableHead(),camera);
		this.drawRenderables(entityCollector.get_blendedRenderableHead(),camera);
	}
	,getSceneCollision: function(position,direction,scene) {
		return null;
	}
	,getViewCollision: function(x,y,view) {
		var collector = view.get_entityCollector();
		this._stage3DProxy = view.get_stage3DProxy();
		if(this._stage3DProxy == null) return null;
		this._context = this._stage3DProxy._context3D;
		this._viewportData[0] = view.get_width();
		this._viewportData[1] = view.get_height();
		this._viewportData[2] = -(this._projX = 2 * x / view.get_width() - 1);
		this._viewportData[3] = this._projY = 2 * y / view.get_height() - 1;
		this._potentialFound = false;
		this.draw(collector,null);
		this._context.setVertexBufferAt(0,null);
		if(this._context == null || !this._potentialFound) return null;
		if(this._bitmapData == null) this._bitmapData = new flash.display.BitmapData(1,1,false,0);
		this._context.drawToBitmapData(this._bitmapData);
		this._hitColor = this._bitmapData.getPixel(0,0);
		if(this._hitColor == 0) {
			this._context.present();
			return null;
		}
		this._hitRenderable = this._interactives[this._hitColor - 1];
		this._hitEntity = this._hitRenderable.get_sourceEntity();
		if(this._onlyMouseEnabled && (!this._hitEntity._ancestorsAllowMouseEnabled || !this._hitEntity.get_mouseEnabled())) return null;
		var _collisionVO = this._hitEntity.get_pickingCollisionVO();
		if(this._hitRenderable.get_shaderPickingDetails()) {
			this.getHitDetails(view.get_camera());
			_collisionVO.localPosition = this._localHitPosition;
			_collisionVO.localNormal = this._localHitNormal;
			_collisionVO.uv = this._hitUV;
			_collisionVO.index = this._faceIndex;
			_collisionVO.subGeometryIndex = this._subGeometryIndex;
		} else {
			_collisionVO.localPosition = null;
			_collisionVO.localNormal = null;
			_collisionVO.uv = null;
			_collisionVO.index = 0;
			_collisionVO.subGeometryIndex = 0;
		}
		return _collisionVO;
	}
	,set_onlyMouseEnabled: function(value) {
		this._onlyMouseEnabled = value;
		return value;
	}
	,get_onlyMouseEnabled: function() {
		return this._onlyMouseEnabled;
	}
	,__class__: away3d.core.pick.ShaderPicker
	,__properties__: {set_onlyMouseEnabled:"set_onlyMouseEnabled",get_onlyMouseEnabled:"get_onlyMouseEnabled"}
}
flash.geom.Point = function(inX,inY) {
	if(inY == null) inY = 0;
	if(inX == null) inX = 0;
	this.x = inX;
	this.y = inY;
};
$hxClasses["flash.geom.Point"] = flash.geom.Point;
flash.geom.Point.__name__ = ["flash","geom","Point"];
flash.geom.Point.distance = function(pt1,pt2) {
	var dx = pt1.x - pt2.x;
	var dy = pt1.y - pt2.y;
	return Math.sqrt(dx * dx + dy * dy);
}
flash.geom.Point.interpolate = function(pt1,pt2,f) {
	return new flash.geom.Point(pt2.x + f * (pt1.x - pt2.x),pt2.y + f * (pt1.y - pt2.y));
}
flash.geom.Point.polar = function(len,angle) {
	return new flash.geom.Point(len * Math.cos(angle),len * Math.sin(angle));
}
flash.geom.Point.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,subtract: function(v) {
		return new flash.geom.Point(this.x - v.x,this.y - v.y);
	}
	,setTo: function(xa,ya) {
		this.x = xa;
		this.y = ya;
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,normalize: function(thickness) {
		if(this.x == 0 && this.y == 0) return; else {
			var norm = thickness / Math.sqrt(this.x * this.x + this.y * this.y);
			this.x *= norm;
			this.y *= norm;
		}
	}
	,equals: function(toCompare) {
		return toCompare.x == this.x && toCompare.y == this.y;
	}
	,clone: function() {
		return new flash.geom.Point(this.x,this.y);
	}
	,add: function(v) {
		return new flash.geom.Point(v.x + this.x,v.y + this.y);
	}
	,__class__: flash.geom.Point
	,__properties__: {get_length:"get_length"}
}
away3d.core.pick.PickingType = function() { }
$hxClasses["away3d.core.pick.PickingType"] = away3d.core.pick.PickingType;
away3d.core.pick.PickingType.__name__ = ["away3d","core","pick","PickingType"];
away3d.core.render = {}
away3d.core.render.BackgroundImageRenderer = function(stage3DProxy) {
	this.set_stage3DProxy(stage3DProxy);
};
$hxClasses["away3d.core.render.BackgroundImageRenderer"] = away3d.core.render.BackgroundImageRenderer;
away3d.core.render.BackgroundImageRenderer.__name__ = ["away3d","core","render","BackgroundImageRenderer"];
away3d.core.render.BackgroundImageRenderer.prototype = {
	set_texture: function(value) {
		this._texture = value;
		return value;
	}
	,get_texture: function() {
		return this._texture;
	}
	,initBuffers: function(context) {
		this._vertexBuffer = context.createVertexBuffer(4,4);
		this._program3d = context.createProgram();
		this._indexBuffer = context.createIndexBuffer(6);
		this._indexBuffer.uploadFromVector(flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[2,1,0,3,2,0]),0,6);
		this._program3d.upload(flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.VERTEX,this.getVertexCode()),flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.FRAGMENT,this.getFragmentCode()));
		var w = 2;
		var h = 2;
		var x = -1;
		var y = 1;
		if(this._stage3DProxy.get_scissorRect() != null) {
			x = (this._stage3DProxy.get_scissorRect().x * 2 - this._stage3DProxy.get_viewPort().width) / this._stage3DProxy.get_viewPort().width;
			y = (this._stage3DProxy.get_scissorRect().y * 2 - this._stage3DProxy.get_viewPort().height) / this._stage3DProxy.get_viewPort().height * -1;
			w = 2 / (this._stage3DProxy.get_viewPort().width / this._stage3DProxy.get_scissorRect().width);
			h = 2 / (this._stage3DProxy.get_viewPort().height / this._stage3DProxy.get_scissorRect().height);
		}
		this._vertexBuffer.uploadFromVector(flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[x,y - h,0,1,x + w,y - h,1,1,x + w,y,1,0,x,y,0,0]),0,4);
	}
	,render: function() {
		var context = this._stage3DProxy.get_context3D();
		if(context != this._context) {
			this.removeBuffers();
			this._context = context;
		}
		if(context == null) return;
		if(this._vertexBuffer == null) this.initBuffers(context);
		context.setProgram(this._program3d);
		context.setTextureAt(0,this._texture.getTextureForStage3D(this._stage3DProxy));
		context.setVertexBufferAt(0,this._vertexBuffer,0,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
		context.setVertexBufferAt(1,this._vertexBuffer,2,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
		context.drawTriangles(this._indexBuffer,0,2);
		context.setVertexBufferAt(0,null);
		context.setVertexBufferAt(1,null);
		context.setTextureAt(0,null);
	}
	,dispose: function() {
		this.removeBuffers();
	}
	,getFragmentCode: function() {
		var format;
		var _sw0_ = this._texture.get_format();
		switch( (_sw0_)[1] ) {
		case 1:
			format = "dxt1,";
			break;
		case 2:
			format = "dxt5,";
			break;
		default:
			format = "";
		}
		return "tex ft0, v0, fs0 <2d, " + format + "linear>\t\n" + "mov oc, ft0";
	}
	,getVertexCode: function() {
		return "mov op, va0\n" + "mov v0, va1";
	}
	,removeBuffers: function() {
		if(this._vertexBuffer != null) {
			this._vertexBuffer.dispose();
			this._vertexBuffer = null;
			this._program3d.dispose();
			this._program3d = null;
			this._indexBuffer.dispose();
			this._indexBuffer = null;
		}
	}
	,set_stage3DProxy: function(value) {
		if(value == this._stage3DProxy) return value;
		this._stage3DProxy = value;
		this.removeBuffers();
		return value;
	}
	,get_stage3DProxy: function() {
		return this._stage3DProxy;
	}
	,__class__: away3d.core.render.BackgroundImageRenderer
	,__properties__: {set_stage3DProxy:"set_stage3DProxy",get_stage3DProxy:"get_stage3DProxy",set_texture:"set_texture",get_texture:"get_texture"}
}
away3d.core.render.RendererBase = function(renderToTexture) {
	if(renderToTexture == null) renderToTexture = false;
	this._backgroundR = 0;
	this._backgroundG = 0;
	this._backgroundB = 0;
	this._backgroundAlpha = 1;
	this._shareContext = false;
	this._textureRatioX = 1;
	this._textureRatioY = 1;
	this._clearOnRender = true;
	this._rttViewProjectionMatrix = new flash.geom.Matrix3D();
	this._renderableSorter = new away3d.core.sort.RenderableMergeSort();
	this._renderToTexture = renderToTexture;
};
$hxClasses["away3d.core.render.RendererBase"] = away3d.core.render.RendererBase;
away3d.core.render.RendererBase.__name__ = ["away3d","core","render","RendererBase"];
away3d.core.render.RendererBase.prototype = {
	set_textureRatioY: function(value) {
		this._textureRatioY = value;
		return value;
	}
	,get_textureRatioY: function() {
		return this._textureRatioY;
	}
	,set_textureRatioX: function(value) {
		this._textureRatioX = value;
		return value;
	}
	,get_textureRatioX: function() {
		return this._textureRatioX;
	}
	,set_antiAlias: function(antiAlias) {
		this._antiAlias = antiAlias;
		return antiAlias;
	}
	,get_antiAlias: function() {
		return this._antiAlias;
	}
	,get_backgroundImageRenderer: function() {
		return this._backgroundImageRenderer;
	}
	,set_background: function(value) {
		if(this._backgroundImageRenderer != null && value == null) {
			this._backgroundImageRenderer.dispose();
			this._backgroundImageRenderer = null;
		}
		if(this._backgroundImageRenderer == null && value != null) this._backgroundImageRenderer = new away3d.core.render.BackgroundImageRenderer(this._stage3DProxy);
		this._background = value;
		if(this._backgroundImageRenderer != null) this._backgroundImageRenderer.set_texture(value);
		return value;
	}
	,get_background: function() {
		return this._background;
	}
	,set_backgroundAlpha: function(value) {
		this._backgroundAlpha = value;
		return value;
	}
	,get_backgroundAlpha: function() {
		return this._backgroundAlpha;
	}
	,onContextUpdate: function(event) {
		this._context = this._stage3DProxy.get_context3D();
	}
	,draw: function(entityCollector,target) {
		throw new away3d.errors.AbstractMethodError();
	}
	,executeRenderToTexturePass: function(entityCollector) {
		throw new away3d.errors.AbstractMethodError();
	}
	,queueSnapshot: function(bmd) {
		this._snapshotRequired = true;
		this._snapshotBitmapData = bmd;
	}
	,executeRender: function(entityCollector,target,scissorRect,surfaceSelector) {
		if(surfaceSelector == null) surfaceSelector = 0;
		this._renderTarget = target;
		this._renderTargetSurface = surfaceSelector;
		if(this._renderableSorter != null) this._renderableSorter.sort(entityCollector);
		if(this._renderToTexture) this.executeRenderToTexturePass(entityCollector);
		this._stage3DProxy.setRenderTarget(target,true,surfaceSelector);
		if((target != null || !this._shareContext) && this._clearOnRender) this._context.clear(this._backgroundR,this._backgroundG,this._backgroundB,this._backgroundAlpha,1,0);
		this._context.setDepthTest(false,519);
		this._stage3DProxy.set_scissorRect(scissorRect);
		if(this._backgroundImageRenderer != null) this._backgroundImageRenderer.render();
		this.draw(entityCollector,target);
		this._context.setDepthTest(false,515);
		if(!this._shareContext) {
			if(this._snapshotRequired && this._snapshotBitmapData != null) {
				this._context.drawToBitmapData(this._snapshotBitmapData);
				this._snapshotRequired = false;
			}
		}
		this._stage3DProxy.set_scissorRect(null);
	}
	,render: function(entityCollector,target,scissorRect,surfaceSelector) {
		if(surfaceSelector == null) surfaceSelector = 0;
		if(this._stage3DProxy == null || this._context == null) return;
		this._rttViewProjectionMatrix.copyFrom(entityCollector.get_camera().get_viewProjection());
		this._rttViewProjectionMatrix.append(new flash.geom.Matrix3D([this._textureRatioX,0.0,0.0,0.0,0.0,this._textureRatioY,0.0,0.0,0.0,0.0,1,0.0,0.0,0.0,0.0,1.0]));
		this.executeRender(entityCollector,target,scissorRect,surfaceSelector);
		var i = 0;
		while(i < 8) {
			this._context.setVertexBufferAt(i,null);
			this._context.setTextureAt(i,null);
			++i;
		}
	}
	,dispose: function() {
		this.set_stage3DProxy(null);
		if(this._backgroundImageRenderer != null) {
			this._backgroundImageRenderer.dispose();
			this._backgroundImageRenderer = null;
		}
	}
	,set_shareContext: function(value) {
		this._shareContext = value;
		return value;
	}
	,get_shareContext: function() {
		return this._shareContext;
	}
	,set_stage3DProxy: function(value) {
		if(value == this._stage3DProxy) return value;
		if(value == null) {
			if(this._stage3DProxy != null) {
				this._stage3DProxy.removeEventListener(away3d.events.Stage3DEvent.CONTEXT3D_CREATED,$bind(this,this.onContextUpdate));
				this._stage3DProxy.removeEventListener(away3d.events.Stage3DEvent.CONTEXT3D_RECREATED,$bind(this,this.onContextUpdate));
			}
			this._stage3DProxy = null;
			this._context = null;
			return null;
		}
		this._stage3DProxy = value;
		this._stage3DProxy.addEventListener(away3d.events.Stage3DEvent.CONTEXT3D_CREATED,$bind(this,this.onContextUpdate));
		this._stage3DProxy.addEventListener(away3d.events.Stage3DEvent.CONTEXT3D_RECREATED,$bind(this,this.onContextUpdate));
		if(this._backgroundImageRenderer != null) this._backgroundImageRenderer.set_stage3DProxy(value);
		if(value.get_context3D() != null) this._context = value.get_context3D();
		return value;
	}
	,get_stage3DProxy: function() {
		return this._stage3DProxy;
	}
	,set_backgroundB: function(value) {
		this._backgroundB = value;
		return value;
	}
	,get_backgroundB: function() {
		return this._backgroundB;
	}
	,set_backgroundG: function(value) {
		this._backgroundG = value;
		return value;
	}
	,get_backgroundG: function() {
		return this._backgroundG;
	}
	,set_backgroundR: function(value) {
		this._backgroundR = value;
		return value;
	}
	,get_backgroundR: function() {
		return this._backgroundR;
	}
	,set_clearOnRender: function(value) {
		this._clearOnRender = value;
		return value;
	}
	,get_clearOnRender: function() {
		return this._clearOnRender;
	}
	,set_renderableSorter: function(value) {
		this._renderableSorter = value;
		return value;
	}
	,get_renderableSorter: function() {
		return this._renderableSorter;
	}
	,get_renderToTexture: function() {
		return this._renderToTexture;
	}
	,set_viewHeight: function(value) {
		this._viewHeight = value;
		return value;
	}
	,get_viewHeight: function() {
		return this._viewHeight;
	}
	,set_viewWidth: function(value) {
		this._viewWidth = value;
		return value;
	}
	,get_viewWidth: function() {
		return this._viewWidth;
	}
	,createEntityCollector: function() {
		return new away3d.core.traverse.EntityCollector();
	}
	,__class__: away3d.core.render.RendererBase
	,__properties__: {set_viewWidth:"set_viewWidth",get_viewWidth:"get_viewWidth",set_viewHeight:"set_viewHeight",get_viewHeight:"get_viewHeight",get_renderToTexture:"get_renderToTexture",set_renderableSorter:"set_renderableSorter",get_renderableSorter:"get_renderableSorter",set_clearOnRender:"set_clearOnRender",get_clearOnRender:"get_clearOnRender",set_backgroundR:"set_backgroundR",get_backgroundR:"get_backgroundR",set_backgroundG:"set_backgroundG",get_backgroundG:"get_backgroundG",set_backgroundB:"set_backgroundB",get_backgroundB:"get_backgroundB",set_stage3DProxy:"set_stage3DProxy",get_stage3DProxy:"get_stage3DProxy",set_shareContext:"set_shareContext",get_shareContext:"get_shareContext",set_backgroundAlpha:"set_backgroundAlpha",get_backgroundAlpha:"get_backgroundAlpha",set_background:"set_background",get_background:"get_background",get_backgroundImageRenderer:"get_backgroundImageRenderer",set_antiAlias:"set_antiAlias",get_antiAlias:"get_antiAlias",set_textureRatioX:"set_textureRatioX",get_textureRatioX:"get_textureRatioX",set_textureRatioY:"set_textureRatioY",get_textureRatioY:"get_textureRatioY"}
}
away3d.core.render.DefaultRenderer = function() {
	this._skyboxProjection = new flash.geom.Matrix3D();
	away3d.core.render.RendererBase.call(this);
	this._depthRenderer = new away3d.core.render.DepthRenderer();
	this._distanceRenderer = new away3d.core.render.DepthRenderer(false,true);
};
$hxClasses["away3d.core.render.DefaultRenderer"] = away3d.core.render.DefaultRenderer;
away3d.core.render.DefaultRenderer.__name__ = ["away3d","core","render","DefaultRenderer"];
away3d.core.render.DefaultRenderer.__super__ = away3d.core.render.RendererBase;
away3d.core.render.DefaultRenderer.prototype = $extend(away3d.core.render.RendererBase.prototype,{
	dispose: function() {
		away3d.core.render.RendererBase.prototype.dispose.call(this);
		this._depthRenderer.dispose();
		this._distanceRenderer.dispose();
		this._depthRenderer = null;
		this._distanceRenderer = null;
	}
	,drawRenderables: function(item,entityCollector,which) {
		var numPasses;
		var j;
		var camera = entityCollector.get_camera();
		var item2;
		while(item != null) {
			this._activeMaterial = item.renderable.get_material();
			this._activeMaterial.updateMaterial(this._context);
			numPasses = this._activeMaterial.get_numPasses();
			j = 0;
			do {
				item2 = item;
				var rttMask = this._activeMaterial.passRendersToTexture(j)?1:2;
				if((rttMask & which) != 0) {
					this._activeMaterial.activatePass(j,this._stage3DProxy,camera);
					do {
						this._activeMaterial.renderPass(j,item2.renderable,this._stage3DProxy,entityCollector,this._rttViewProjectionMatrix);
						item2 = item2.next;
					} while(item2 != null && item2.renderable.get_material() == this._activeMaterial);
					this._activeMaterial.deactivatePass(j,this._stage3DProxy);
				} else do item2 = item2.next; while(item2 != null && item2.renderable.get_material() == this._activeMaterial);
			} while(++j < numPasses);
			item = item2;
		}
	}
	,updateSkyBoxProjection: function(camera) {
		var near = new flash.geom.Vector3D();
		this._skyboxProjection.copyFrom(this._rttViewProjectionMatrix);
		away3d.Stage3DUtils.copyRowTo(this._skyboxProjection,2,near);
		var camPos = camera.get_scenePosition();
		var cx = near.x;
		var cy = near.y;
		var cz = near.z;
		var cw = -(near.x * camPos.x + near.y * camPos.y + near.z * camPos.z + Math.sqrt(cx * cx + cy * cy + cz * cz));
		var signX = cx >= 0?1:-1;
		var signY = cy >= 0?1:-1;
		var p = new flash.geom.Vector3D(signX,signY,1,1);
		var inverse = new flash.geom.Matrix3D(flash._Vector.Vector_Impl_.copy(this._skyboxProjection.rawData));
		inverse.invert();
		var q = inverse.transformVector(p);
		away3d.Stage3DUtils.copyRowTo(this._skyboxProjection,3,p);
		var a = (q.x * p.x + q.y * p.y + q.z * p.z + q.w * p.w) / (cx * q.x + cy * q.y + cz * q.z + cw * q.w);
		away3d.Stage3DUtils.copyRowFrom(this._skyboxProjection,2,new flash.geom.Vector3D(cx * a,cy * a,cz * a,cw * a));
	}
	,drawSkyBox: function(entityCollector) {
		var skyBox = entityCollector.get_skyBox();
		var material = skyBox.get_material();
		var camera = entityCollector.get_camera();
		this.updateSkyBoxProjection(camera);
		material.activatePass(0,this._stage3DProxy,camera);
		material.renderPass(0,skyBox,this._stage3DProxy,entityCollector,this._skyboxProjection);
		material.deactivatePass(0,this._stage3DProxy);
	}
	,draw: function(entityCollector,target) {
		this._context.setBlendFactors(1,0);
		if(entityCollector.get_skyBox() != null) {
			if(this._activeMaterial != null) this._activeMaterial.deactivate(this._stage3DProxy);
			this._activeMaterial = null;
			this._context.setDepthTest(false,519);
			this.drawSkyBox(entityCollector);
		}
		this._context.setDepthTest(true,515);
		var which = target != null?away3d.core.render.DefaultRenderer.SCREEN_PASSES:away3d.core.render.DefaultRenderer.ALL_PASSES;
		this.drawRenderables(entityCollector.get_opaqueRenderableHead(),entityCollector,which);
		this.drawRenderables(entityCollector.get_blendedRenderableHead(),entityCollector,which);
		this._context.setDepthTest(false,515);
		if(this._activeMaterial != null) this._activeMaterial.deactivate(this._stage3DProxy);
		this._activeMaterial = null;
	}
	,updateLights: function(entityCollector) {
		var dirLights = entityCollector.get_directionalLights();
		var pointLights = entityCollector.get_pointLights();
		var len;
		var i;
		var light;
		var shadowMapper;
		len = flash._Vector.Vector_Impl_.get_length(dirLights);
		i = 0;
		while(i < len) {
			light = dirLights[i];
			shadowMapper = light.get_shadowMapper();
			if(light.get_castsShadows() && (shadowMapper.get_autoUpdateShadows() || shadowMapper._shadowsInvalid)) shadowMapper.renderDepthMap(this._stage3DProxy,entityCollector,this._depthRenderer);
			++i;
		}
		len = flash._Vector.Vector_Impl_.get_length(pointLights);
		i = 0;
		while(i < len) {
			light = pointLights[i];
			shadowMapper = light.get_shadowMapper();
			if(light.get_castsShadows() && (shadowMapper.get_autoUpdateShadows() || shadowMapper._shadowsInvalid)) shadowMapper.renderDepthMap(this._stage3DProxy,entityCollector,this._distanceRenderer);
			++i;
		}
	}
	,executeRender: function(entityCollector,target,scissorRect,surfaceSelector) {
		if(surfaceSelector == null) surfaceSelector = 0;
		this.updateLights(entityCollector);
		if(target != null) {
			this.drawRenderables(entityCollector.get_opaqueRenderableHead(),entityCollector,away3d.core.render.DefaultRenderer.RTT_PASSES);
			this.drawRenderables(entityCollector.get_blendedRenderableHead(),entityCollector,away3d.core.render.DefaultRenderer.RTT_PASSES);
		}
		away3d.core.render.RendererBase.prototype.executeRender.call(this,entityCollector,target,scissorRect,surfaceSelector);
	}
	,set_stage3DProxy: function(value) {
		away3d.core.render.RendererBase.prototype.set_stage3DProxy.call(this,value);
		this._distanceRenderer.set_stage3DProxy(this._depthRenderer.set_stage3DProxy(value));
		return value;
	}
	,__class__: away3d.core.render.DefaultRenderer
});
away3d.core.render.DepthRenderer = function(renderBlended,distanceBased) {
	if(distanceBased == null) distanceBased = false;
	if(renderBlended == null) renderBlended = false;
	away3d.core.render.RendererBase.call(this);
	this._renderBlended = renderBlended;
	this._distanceBased = distanceBased;
	this._backgroundR = 1;
	this._backgroundG = 1;
	this._backgroundB = 1;
};
$hxClasses["away3d.core.render.DepthRenderer"] = away3d.core.render.DepthRenderer;
away3d.core.render.DepthRenderer.__name__ = ["away3d","core","render","DepthRenderer"];
away3d.core.render.DepthRenderer.__super__ = away3d.core.render.RendererBase;
away3d.core.render.DepthRenderer.prototype = $extend(away3d.core.render.RendererBase.prototype,{
	drawRenderables: function(item,entityCollector) {
		var camera = entityCollector.get_camera();
		var item2;
		while(item != null) {
			this._activeMaterial = item.renderable.get_material();
			if(this._disableColor && this._activeMaterial.hasDepthAlphaThreshold()) {
				item2 = item;
				do item2 = item2.next; while(item2 != null && item2.renderable.get_material() == this._activeMaterial);
			} else {
				this._activeMaterial.activateForDepth(this._stage3DProxy,camera,this._distanceBased);
				item2 = item;
				do {
					this._activeMaterial.renderDepth(item2.renderable,this._stage3DProxy,camera,this._rttViewProjectionMatrix);
					item2 = item2.next;
				} while(item2 != null && item2.renderable.get_material() == this._activeMaterial);
				this._activeMaterial.deactivateForDepth(this._stage3DProxy);
			}
			item = item2;
		}
	}
	,draw: function(entityCollector,target) {
		this._context.setBlendFactors(1,0);
		this._context.setDepthTest(true,513);
		this.drawRenderables(entityCollector.get_opaqueRenderableHead(),entityCollector);
		if(this._disableColor) this._context.setColorMask(false,false,false,false);
		if(this._renderBlended) this.drawRenderables(entityCollector.get_blendedRenderableHead(),entityCollector);
		if(this._activeMaterial != null) this._activeMaterial.deactivateForDepth(this._stage3DProxy);
		if(this._disableColor) this._context.setColorMask(true,true,true,true);
		this._activeMaterial = null;
	}
	,drawCascadeRenderables: function(item,camera,cullPlanes) {
		var material;
		while(item != null) {
			if(item.cascaded) {
				item = item.next;
				continue;
			}
			var renderable = item.renderable;
			var entity = renderable.get_sourceEntity();
			if(cullPlanes == null || entity.get_worldBounds().isInFrustum(cullPlanes,4)) {
				material = renderable.get_material();
				if(this._activeMaterial != material) {
					if(this._activeMaterial != null) this._activeMaterial.deactivateForDepth(this._stage3DProxy);
					this._activeMaterial = material;
					this._activeMaterial.activateForDepth(this._stage3DProxy,camera,false);
				}
				this._activeMaterial.renderDepth(renderable,this._stage3DProxy,camera,camera.get_viewProjection());
			} else item.cascaded = true;
			item = item.next;
		}
	}
	,renderCascades: function(entityCollector,target,numCascades,scissorRects,cameras) {
		this._renderTarget = target;
		this._renderTargetSurface = 0;
		this._renderableSorter.sort(entityCollector);
		this._stage3DProxy.setRenderTarget(target,true,0);
		this._context.clear(1,1,1,1,1,0);
		this._context.setBlendFactors(1,0);
		this._context.setDepthTest(true,513);
		var head = entityCollector.get_opaqueRenderableHead();
		var first = true;
		var i = numCascades - 1;
		while(i >= 0) {
			this._stage3DProxy.set_scissorRect(scissorRects[i]);
			this.drawCascadeRenderables(head,cameras[i],first?null:cameras[i].get_frustumPlanes());
			first = false;
			--i;
		}
		if(this._activeMaterial != null) this._activeMaterial.deactivateForDepth(this._stage3DProxy);
		this._activeMaterial = null;
		this._context.setDepthTest(false,515);
		this._stage3DProxy.set_scissorRect(null);
	}
	,set_backgroundB: function(value) {
		return value;
	}
	,set_backgroundG: function(value) {
		return value;
	}
	,set_backgroundR: function(value) {
		return value;
	}
	,set_disableColor: function(value) {
		this._disableColor = value;
		return value;
	}
	,get_disableColor: function() {
		return this._disableColor;
	}
	,__class__: away3d.core.render.DepthRenderer
	,__properties__: $extend(away3d.core.render.RendererBase.prototype.__properties__,{set_disableColor:"set_disableColor",get_disableColor:"get_disableColor"})
});
away3d.core.render.Filter3DRenderer = function(stage3DProxy) {
	this._filterSizesInvalid = true;
	this._stage3DProxy = stage3DProxy;
	this._rttManager = away3d.core.managers.RTTBufferManager.getInstance(stage3DProxy);
	this._rttManager.addEventListener(flash.events.Event.RESIZE,$bind(this,this.onRTTResize));
};
$hxClasses["away3d.core.render.Filter3DRenderer"] = away3d.core.render.Filter3DRenderer;
away3d.core.render.Filter3DRenderer.__name__ = ["away3d","core","render","Filter3DRenderer"];
away3d.core.render.Filter3DRenderer.prototype = {
	dispose: function() {
		this._rttManager.removeEventListener(flash.events.Event.RESIZE,$bind(this,this.onRTTResize));
		this._rttManager = null;
		this._stage3DProxy = null;
	}
	,updateFilterSizes: function() {
		var i = 0;
		while(i < this._filters.length) {
			this._filters[i].textureWidth = this._rttManager.get_textureWidth();
			this._filters[i].textureHeight = this._rttManager.get_textureHeight();
			++i;
		}
		this._filterSizesInvalid = true;
	}
	,render: function(stage3DProxy,camera3D,depthTexture) {
		var len;
		var i;
		var task;
		var context = stage3DProxy.get_context3D();
		var indexBuffer = this._rttManager.get_indexBuffer();
		var vertexBuffer = this._rttManager.get_renderToTextureVertexBuffer();
		if(this._filters == null) return;
		if(this._filterSizesInvalid) this.updateFilterSizes();
		if(this._filterTasksInvalid) this.updateFilterTasks(stage3DProxy);
		len = this._filters.length;
		i = 0;
		while(i < len) {
			this._filters[i].update(stage3DProxy,camera3D);
			++i;
		}
		len = flash._Vector.Vector_Impl_.get_length(this._tasks);
		if(len > 1) {
			context.setVertexBufferAt(0,vertexBuffer,0,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
			context.setVertexBufferAt(1,vertexBuffer,2,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
		}
		i = 0;
		while(i < len) {
			task = this._tasks[i];
			stage3DProxy.setRenderTarget(task.get_target());
			context.setProgram(task.getProgram3D(stage3DProxy));
			if(task.get_target() == null) {
				stage3DProxy.set_scissorRect(null);
				vertexBuffer = this._rttManager.get_renderToScreenVertexBuffer();
				context.setVertexBufferAt(0,vertexBuffer,0,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
				context.setVertexBufferAt(1,vertexBuffer,2,flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
			}
			context.setTextureAt(0,task.getMainInputTexture(stage3DProxy));
			context.clear(0.0,0.0,0.0,0.0);
			task.activate(stage3DProxy,camera3D,depthTexture);
			context.setBlendFactors(1,0);
			context.drawTriangles(indexBuffer,0,2);
			task.deactivate(stage3DProxy);
			++i;
		}
		context.setTextureAt(0,null);
		context.setVertexBufferAt(0,null);
		context.setVertexBufferAt(1,null);
	}
	,updateFilterTasks: function(stage3DProxy) {
		var len;
		if(this._filterSizesInvalid) this.updateFilterSizes();
		if(this._filters == null) {
			this._tasks = null;
			return;
		}
		this._tasks = flash._Vector.Vector_Impl_._new();
		len = this._filters.length - 1;
		var filter;
		var i = 0;
		while(i <= len) {
			filter = this._filters[i];
			filter.setRenderTargets(i == len?null:(js.Boot.__cast(this._filters[i + 1] , away3d.filters.Filter3DBase)).getMainInputTexture(stage3DProxy),stage3DProxy);
			this._tasks = flash._Vector.Vector_Impl_.concat(this._tasks,filter.get_tasks());
			++i;
		}
		this._mainInputTexture = this._filters[0].getMainInputTexture(stage3DProxy);
	}
	,set_filters: function(value) {
		this._filters = value;
		this._filterTasksInvalid = true;
		this._requireDepthRender = false;
		if(this._filters == null) return null;
		var i = 0;
		while(i < this._filters.length) {
			if(!this._requireDepthRender) this._requireDepthRender = js.Boot.__cast(this._filters[i].requireDepthRender != null , Bool);
			++i;
		}
		this._filterSizesInvalid = true;
		return value;
	}
	,get_filters: function() {
		return this._filters;
	}
	,getMainInputTexture: function(stage3DProxy) {
		if(this._filterTasksInvalid) this.updateFilterTasks(stage3DProxy);
		return this._mainInputTexture;
	}
	,get_requireDepthRender: function() {
		return this._requireDepthRender;
	}
	,onRTTResize: function(event) {
		this._filterSizesInvalid = true;
	}
	,__class__: away3d.core.render.Filter3DRenderer
	,__properties__: {get_requireDepthRender:"get_requireDepthRender",set_filters:"set_filters",get_filters:"get_filters"}
}
away3d.core.sort = {}
away3d.core.sort.IEntitySorter = function() { }
$hxClasses["away3d.core.sort.IEntitySorter"] = away3d.core.sort.IEntitySorter;
away3d.core.sort.IEntitySorter.__name__ = ["away3d","core","sort","IEntitySorter"];
away3d.core.sort.IEntitySorter.prototype = {
	__class__: away3d.core.sort.IEntitySorter
}
away3d.core.sort.RenderableMergeSort = function() {
};
$hxClasses["away3d.core.sort.RenderableMergeSort"] = away3d.core.sort.RenderableMergeSort;
away3d.core.sort.RenderableMergeSort.__name__ = ["away3d","core","sort","RenderableMergeSort"];
away3d.core.sort.RenderableMergeSort.__interfaces__ = [away3d.core.sort.IEntitySorter];
away3d.core.sort.RenderableMergeSort.prototype = {
	mergeSortByMaterial: function(head) {
		var headB;
		var fast;
		var slow;
		if(head == null || head.next == null) return head;
		slow = head;
		fast = head.next;
		while(fast != null) {
			fast = fast.next;
			if(fast != null) {
				slow = slow.next;
				fast = fast.next;
			}
		}
		headB = slow.next;
		slow.next = null;
		head = this.mergeSortByMaterial(head);
		headB = this.mergeSortByMaterial(headB);
		var result = null;
		var curr = null;
		var l = null;
		var cmp;
		if(head == null) return headB;
		if(headB == null) return head;
		while(head != null && headB != null && head != null && headB != null) {
			var aid = head.renderOrderId;
			var bid = headB.renderOrderId;
			if(aid == bid) {
				var ma = head.materialId;
				var mb = headB.materialId;
				if(ma == mb) {
					if(head.zIndex < headB.zIndex) cmp = 1; else cmp = -1;
				} else if(ma > mb) cmp = 1; else cmp = -1;
			} else if(aid > bid) cmp = 1; else cmp = -1;
			if(cmp < 0) {
				l = head;
				head = head.next;
			} else {
				l = headB;
				headB = headB.next;
			}
			if(result == null) {
				result = l;
				curr = l;
			} else {
				curr.next = l;
				curr = l;
			}
		}
		if(head != null) curr.next = head; else if(headB != null) curr.next = headB;
		return result;
	}
	,mergeSortByDepth: function(head) {
		var headB;
		var fast;
		var slow;
		if(head == null || head.next == null) return head;
		slow = head;
		fast = head.next;
		while(fast != null) {
			fast = fast.next;
			if(fast != null) {
				slow = slow.next;
				fast = fast.next;
			}
		}
		headB = slow.next;
		slow.next = null;
		head = this.mergeSortByDepth(head);
		headB = this.mergeSortByDepth(headB);
		var result = null;
		var curr = null;
		var l = null;
		if(head == null) return headB;
		if(headB == null) return head;
		while(head != null && headB != null) {
			if(head.zIndex < headB.zIndex) {
				l = head;
				head = head.next;
			} else {
				l = headB;
				headB = headB.next;
			}
			if(result == null) result = l; else curr.next = l;
			curr = l;
		}
		if(head != null) curr.next = head; else if(headB != null) curr.next = headB;
		return result;
	}
	,sort: function(collector) {
		collector.set_opaqueRenderableHead(this.mergeSortByMaterial(collector.get_opaqueRenderableHead()));
		collector.set_blendedRenderableHead(this.mergeSortByDepth(collector.get_blendedRenderableHead()));
	}
	,__class__: away3d.core.sort.RenderableMergeSort
}
away3d.core.traverse.ShadowCasterCollector = function() {
	away3d.core.traverse.EntityCollector.call(this);
};
$hxClasses["away3d.core.traverse.ShadowCasterCollector"] = away3d.core.traverse.ShadowCasterCollector;
away3d.core.traverse.ShadowCasterCollector.__name__ = ["away3d","core","traverse","ShadowCasterCollector"];
away3d.core.traverse.ShadowCasterCollector.__super__ = away3d.core.traverse.EntityCollector;
away3d.core.traverse.ShadowCasterCollector.prototype = $extend(away3d.core.traverse.EntityCollector.prototype,{
	applySkyBox: function(renderable) {
	}
	,applyLightProbe: function(light) {
	}
	,applyPointLight: function(light) {
	}
	,applyDirectionalLight: function(light) {
	}
	,applyUnknownLight: function(light) {
	}
	,applyRenderable: function(renderable) {
		var material = renderable.get_material();
		var entity = renderable.get_sourceEntity();
		if(renderable.get_castsShadows() && material != null) {
			var item = this._renderableListItemPool.getItem();
			item.renderable = renderable;
			item.next = this._opaqueRenderableHead;
			item.cascaded = false;
			var dx = this._entryPoint.x - entity.get_x();
			var dy = this._entryPoint.y - entity.get_y();
			var dz = this._entryPoint.z - entity.get_z();
			item.zIndex = dx * this._cameraForward.x + dy * this._cameraForward.y + dz * this._cameraForward.z;
			item.renderSceneTransform = renderable.getRenderSceneTransform(this._camera);
			item.renderOrderId = material._depthPassId;
			this._opaqueRenderableHead = item;
		}
	}
	,__class__: away3d.core.traverse.ShadowCasterCollector
});
away3d.debug = {}
away3d.debug.AwayStats = function(view3d,minimized,transparent,meanDataLength,enableClickToReset,enableModifyFrameRate) {
	if(enableModifyFrameRate == null) enableModifyFrameRate = true;
	if(enableClickToReset == null) enableClickToReset = true;
	if(meanDataLength == null) meanDataLength = 0;
	if(transparent == null) transparent = false;
	if(minimized == null) minimized = false;
	flash.display.Sprite.call(this);
	this._minimized = minimized;
	this._transparent = transparent;
	this._enable_reset = enableClickToReset;
	this._enable_mod_fr = enableModifyFrameRate;
	this._mean_data_length = meanDataLength;
	this._views = flash._Vector.Vector_Impl_._new();
	if(view3d != null) flash._Vector.Vector_Impl_.push(this._views,view3d);
	if(away3d.debug.AwayStats._INSTANCE != null) console.log("Creating several statistics windows in one project. Is this intentional?");
	away3d.debug.AwayStats._INSTANCE = this;
	this._fps = 0;
	this._num_frames = 0;
	this._avg_fps = 0;
	this._ram = 0;
	this._max_ram = 0;
	this._tfaces = 0;
	this._rfaces = 0;
	this._last_frame_timestamp = 0;
	this._init();
};
$hxClasses["away3d.debug.AwayStats"] = away3d.debug.AwayStats;
away3d.debug.AwayStats.__name__ = ["away3d","debug","AwayStats"];
away3d.debug.AwayStats.__properties__ = {get_instance:"get_instance"}
away3d.debug.AwayStats.get_instance = function() {
	return away3d.debug.AwayStats._INSTANCE != null?away3d.debug.AwayStats._INSTANCE:away3d.debug.AwayStats._INSTANCE = new away3d.debug.AwayStats();
}
away3d.debug.AwayStats.__super__ = flash.display.Sprite;
away3d.debug.AwayStats.prototype = $extend(flash.display.Sprite.prototype,{
	_onMouseUpOrLeave: function(ev) {
		this._endDrag();
	}
	,_onMouseMove: function(ev) {
		this._dragging = true;
		this.set_x(this.get_stage().get_mouseX() - this._drag_dx);
		this.set_y(this.get_stage().get_mouseY() - this._drag_dy);
	}
	,_onTopBarMouseDown: function(ev) {
		this._drag_dx = this.get_mouseX();
		this._drag_dy = this.get_mouseY();
		this.get_stage().addEventListener(flash.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onMouseMove));
		this.get_stage().addEventListener(flash.events.MouseEvent.MOUSE_UP,$bind(this,this._onMouseUpOrLeave));
		this.get_stage().addEventListener(flash.events.Event.MOUSE_LEAVE,$bind(this,this._onMouseUpOrLeave));
	}
	,_onMinMaxBtnClick: function(ev) {
		this._minimized = !this._minimized;
		this._redrawWindow();
	}
	,_onCountersClick_reset: function(ev) {
		this.reset();
	}
	,_onAverageFpsClick_reset: function(ev) {
		if(!this._dragging) {
			var i;
			this._num_frames = 0;
			this._fps_sum = 0;
			if(this._mean_data != null) {
				i = 0;
				while(i < this._mean_data.length) {
					this._mean_data[i] = 0.0;
					i++;
				}
			}
		}
	}
	,_onDiagramClick: function(ev) {
		var _g = this.get_stage();
		_g.set_frameRate(_g.get_frameRate() - Math.floor((this._diagram.get_mouseY() - this._dia_bmp.get_height() / 2) / 5));
	}
	,_onEnterFrame: function(ev) {
		var time = flash.Lib.getTimer() - this._last_frame_timestamp;
		this._fps = Math.floor(1000 / time);
		this._fps_sum += this._fps;
		if(this._fps > this._max_fps) this._max_fps = this._fps; else if(this._fps != 0 && this._fps < this._min_fps) this._min_fps = this._fps;
		if(this._mean_data != null) {
			this._mean_data.push(this._fps);
			this._fps_sum -= Std.parseInt(this._mean_data.shift());
			this._avg_fps = this._fps_sum / this._mean_data_length;
		} else {
			this._num_frames++;
			this._avg_fps = this._fps_sum / this._num_frames;
		}
		this._last_frame_timestamp = flash.Lib.getTimer();
	}
	,_onTimer: function(ev) {
		this._ram = flash.system.System.get_totalMemory();
		if(this._ram > this._max_ram) this._max_ram = this._ram;
		if(this._updates % 5 == 0) {
			this._mem_points.unshift(this._ram / 1024);
			this._mem_points.pop();
		}
		this._tfaces = this._rfaces = 0;
		if(flash._Vector.Vector_Impl_.get_length(this._views) > 0) {
			var i;
			i = 0;
			while(i < flash._Vector.Vector_Impl_.get_length(this._views)) {
				this._rfaces += this._views[i].get_renderedFacesCount();
				i++;
			}
		}
		this._redrawStats();
	}
	,_onRemovedFromStage: function(ev) {
		this._timer.stop();
		this.removeEventListener(flash.events.Event.ENTER_FRAME,$bind(this,this._onTimer));
	}
	,_onAddedToStage: function(ev) {
		this._timer.start();
		this.addEventListener(flash.events.Event.ENTER_FRAME,$bind(this,this._onEnterFrame));
	}
	,_endDrag: function() {
		if(this.get_x() < -away3d.debug.AwayStats._WIDTH) this.set_x(-(away3d.debug.AwayStats._WIDTH - 20)); else if(this.get_x() > this.get_stage().get_stageWidth()) this.set_x(this.get_stage().get_stageWidth() - 20);
		if(this.get_y() < 0) this.set_y(0); else if(this.get_y() > this.get_stage().get_stageHeight()) this.set_y(this.get_stage().get_stageHeight() - 15);
		this.set_x(Math.round(this.get_x()));
		this.set_y(Math.round(this.get_y()));
		this._dragging = false;
		this.get_stage().removeEventListener(flash.events.Event.MOUSE_LEAVE,$bind(this,this._onMouseUpOrLeave));
		this.get_stage().removeEventListener(flash.events.MouseEvent.MOUSE_UP,$bind(this,this._onMouseUpOrLeave));
		this.get_stage().removeEventListener(flash.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onMouseMove));
	}
	,reset: function() {
		var i;
		this._updates = 0;
		this._num_frames = 0;
		this._min_fps = 100000;
		this._max_fps = 0;
		this._avg_fps = 0;
		this._fps_sum = 0;
		this._max_ram = 0;
		i = 0;
		while(i < away3d.debug.AwayStats._WIDTH / 5) {
			this._mem_points[i] = 0;
			i++;
		}
		if(this._mean_data != null) {
			i = 0;
			while(i < this._mean_data.length) {
				this._mean_data[i] = 0.0;
				i++;
			}
		}
		this._mem_graph.get_graphics().clear();
		this._dia_bmp.fillRect(this._dia_bmp.rect,0);
	}
	,_getRamString: function(ram) {
		var ram_unit = "B";
		if(ram > 1048576) {
			ram /= 1048576;
			ram_unit = "M";
		} else if(ram > 1024) {
			ram /= 1024;
			ram_unit = "K";
		}
		return ram + ram_unit;
	}
	,_redrawMemGraph: function() {
		var i;
		var g;
		var max_val = 0;
		this._mem_graph.set_scaleY(1);
		g = this._mem_graph.get_graphics();
		g.clear();
		g.lineStyle(.5,away3d.debug.AwayStats._MEM_COL,1,true,flash.display.LineScaleMode.NONE);
		g.moveTo(5 * (this._mem_points.length - 1),-this._mem_points[this._mem_points.length - 1]);
		i = this._mem_points.length - 1;
		while(i >= 0) {
			if(this._mem_points[i + 1] == 0 || this._mem_points[i] == 0) {
				g.moveTo(i * 5,-this._mem_points[i]);
				--i;
				continue;
			}
			g.lineTo(i * 5,-this._mem_points[i]);
			if(this._mem_points[i] > max_val) max_val = this._mem_points[i];
			--i;
		}
		this._mem_graph.set_scaleY(this._dia_bmp.get_height() / max_val);
	}
	,_redrawStats: function() {
	}
	,_redrawWindow: function() {
		var plate_height;
		plate_height = this._minimized?away3d.debug.AwayStats._MIN_HEIGHT:away3d.debug.AwayStats._MAX_HEIGHT;
		if(!this._transparent) {
			this.get_graphics().clear();
			this.get_graphics().beginFill(0,0.6);
			this.get_graphics().drawRect(0,0,away3d.debug.AwayStats._WIDTH,plate_height);
		}
		this._min_max_btn.set_rotation(this._minimized?180:0);
		this._btm_bar.set_y(plate_height - away3d.debug.AwayStats._BOTTOM_BAR_HEIGHT);
		this._btm_bar_hit.set_y(this._btm_bar.get_y());
		this._diagram.set_visible(!this._minimized);
		this._mem_graph.set_visible(!this._minimized);
		this._fps_bar.set_visible(this._minimized);
		this._afps_bar.set_visible(this._minimized);
		this._lfps_bar.set_visible(this._minimized);
		this._hfps_bar.set_visible(this._minimized);
		if(!this._minimized) this._redrawMemGraph();
	}
	,_initInteraction: function() {
		this._top_bar.addEventListener(flash.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onTopBarMouseDown));
		if(this._enable_reset) {
			this._btm_bar.mouseEnabled = false;
			this._btm_bar_hit.addEventListener(flash.events.MouseEvent.CLICK,$bind(this,this._onCountersClick_reset));
			this._afps_tf.addEventListener(flash.events.MouseEvent.MOUSE_UP,$bind(this,this._onAverageFpsClick_reset),false,1);
		}
		if(this._enable_mod_fr) this._diagram.addEventListener(flash.events.MouseEvent.CLICK,$bind(this,this._onDiagramClick));
	}
	,_initDiagrams: function() {
		this._dia_bmp = new flash.display.BitmapData(away3d.debug.AwayStats._WIDTH,away3d.debug.AwayStats._DIAG_HEIGHT,true,0);
		this._diagram = new flash.display.Sprite();
		this._diagram.get_graphics().beginBitmapFill(this._dia_bmp);
		this._diagram.get_graphics().drawRect(0,0,this._dia_bmp.get_width(),this._dia_bmp.get_height());
		this._diagram.get_graphics().endFill();
		this._diagram.set_y(17);
		this.addChild(this._diagram);
		this._diagram.get_graphics().lineStyle(1,16777215,0.03);
		this._diagram.get_graphics().moveTo(0,0);
		this._diagram.get_graphics().lineTo(away3d.debug.AwayStats._WIDTH,0);
		this._diagram.get_graphics().moveTo(0,Math.floor(this._dia_bmp.get_height() / 2));
		this._diagram.get_graphics().lineTo(away3d.debug.AwayStats._WIDTH,Math.floor(this._dia_bmp.get_height() / 2));
		this._fps_bar = new flash.display.Shape();
		this._fps_bar.get_graphics().beginFill(16777215);
		this._fps_bar.get_graphics().drawRect(0,0,away3d.debug.AwayStats._WIDTH,4);
		this._fps_bar.set_x(0);
		this._fps_bar.set_y(16);
		this.addChild(this._fps_bar);
		this._afps_bar = new flash.display.Shape();
		this._afps_bar.get_graphics().lineStyle(1,3377373,1,false,flash.display.LineScaleMode.NORMAL,flash.display.CapsStyle.SQUARE);
		this._afps_bar.get_graphics().lineTo(0,4);
		this._afps_bar.set_y(this._fps_bar.get_y());
		this.addChild(this._afps_bar);
		this._lfps_bar = new flash.display.Shape();
		this._lfps_bar.get_graphics().lineStyle(1,16711680,1,false,flash.display.LineScaleMode.NORMAL,flash.display.CapsStyle.SQUARE);
		this._lfps_bar.get_graphics().lineTo(0,4);
		this._lfps_bar.set_y(this._fps_bar.get_y());
		this.addChild(this._lfps_bar);
		this._hfps_bar = new flash.display.Shape();
		this._hfps_bar.get_graphics().lineStyle(1,65280,1,false,flash.display.LineScaleMode.NORMAL,flash.display.CapsStyle.SQUARE);
		this._hfps_bar.get_graphics().lineTo(0,4);
		this._hfps_bar.set_y(this._fps_bar.get_y());
		this.addChild(this._hfps_bar);
		this._mem_points = [];
		this._mem_graph = new flash.display.Shape();
		this._mem_graph.set_y(this._diagram.get_y() + this._diagram.get_height());
		this.addChildAt(this._mem_graph,0);
	}
	,_initBottomBar: function() {
		var markers;
		var ram_label_tf;
		var poly_label_tf;
		var swhw_label_tf;
		this._btm_bar = new flash.display.Sprite();
		this._btm_bar.get_graphics().beginFill(0,0.2);
		this._btm_bar.get_graphics().drawRect(0,0,away3d.debug.AwayStats._WIDTH,away3d.debug.AwayStats._BOTTOM_BAR_HEIGHT);
		this.addChild(this._btm_bar);
		this._btm_bar_hit = new flash.display.Sprite();
		this._btm_bar_hit.get_graphics().beginFill(16763904,0);
		this._btm_bar_hit.get_graphics().drawRect(0,1,away3d.debug.AwayStats._WIDTH,away3d.debug.AwayStats._BOTTOM_BAR_HEIGHT - 1);
		this.addChild(this._btm_bar_hit);
		markers = new flash.display.Shape();
		markers.get_graphics().beginFill(away3d.debug.AwayStats._MEM_COL);
		markers.get_graphics().drawRect(5,4,4,4);
		markers.get_graphics().beginFill(away3d.debug.AwayStats._POLY_COL);
		markers.get_graphics().drawRect(5,14,4,4);
		this._btm_bar.addChild(markers);
		ram_label_tf = new flash.text.TextField();
		ram_label_tf.set_defaultTextFormat(this._label_format);
		ram_label_tf.set_autoSize("LEFT");
		ram_label_tf.set_text("RAM:");
		ram_label_tf.set_x(10);
		ram_label_tf.set_y(away3d.debug.AwayStats._UPPER_Y);
		ram_label_tf.selectable = false;
		ram_label_tf.mouseEnabled = false;
		this._btm_bar.addChild(ram_label_tf);
		this._ram_tf = new flash.text.TextField();
		this._ram_tf.set_defaultTextFormat(this._data_format);
		this._ram_tf.set_autoSize("LEFT");
		this._ram_tf.set_x(ram_label_tf.get_x() + 31);
		this._ram_tf.set_y(ram_label_tf.get_y());
		this._ram_tf.selectable = false;
		this._ram_tf.mouseEnabled = false;
		this._btm_bar.addChild(this._ram_tf);
		poly_label_tf = new flash.text.TextField();
		poly_label_tf.set_defaultTextFormat(this._label_format);
		poly_label_tf.set_autoSize("LEFT");
		poly_label_tf.set_text("POLY:");
		poly_label_tf.set_x(10);
		poly_label_tf.set_y(away3d.debug.AwayStats._MID_Y);
		poly_label_tf.selectable = false;
		poly_label_tf.mouseEnabled = false;
		this._btm_bar.addChild(poly_label_tf);
		this._poly_tf = new flash.text.TextField();
		this._poly_tf.set_defaultTextFormat(this._data_format);
		this._poly_tf.set_autoSize("LEFT");
		this._poly_tf.set_x(poly_label_tf.get_x() + 31);
		this._poly_tf.set_y(poly_label_tf.get_y());
		this._poly_tf.selectable = false;
		this._poly_tf.mouseEnabled = false;
		this._btm_bar.addChild(this._poly_tf);
		swhw_label_tf = new flash.text.TextField();
		swhw_label_tf.set_defaultTextFormat(this._label_format);
		swhw_label_tf.set_autoSize("LEFT");
		swhw_label_tf.set_text("DRIV:");
		swhw_label_tf.set_x(10);
		swhw_label_tf.set_y(away3d.debug.AwayStats._LOWER_Y);
		swhw_label_tf.selectable = false;
		swhw_label_tf.mouseEnabled = false;
		this._btm_bar.addChild(swhw_label_tf);
		this._swhw_tf = new flash.text.TextField();
		this._swhw_tf.set_defaultTextFormat(this._data_format);
		this._swhw_tf.set_autoSize("LEFT");
		this._swhw_tf.set_x(swhw_label_tf.get_x() + 31);
		this._swhw_tf.set_y(swhw_label_tf.get_y());
		this._swhw_tf.selectable = false;
		this._swhw_tf.mouseEnabled = false;
		this._btm_bar.addChild(this._swhw_tf);
	}
	,_initTopBar: function() {
		var logo;
		var markers;
		var fps_label_tf;
		var afps_label_tf;
		this._top_bar = new flash.display.Sprite();
		this._top_bar.get_graphics().beginFill(0,0);
		this._top_bar.get_graphics().drawRect(0,0,away3d.debug.AwayStats._WIDTH,20);
		this.addChild(this._top_bar);
		logo = new flash.display.Shape();
		logo.set_x(9);
		logo.set_y(7.5);
		logo.set_scaleX(0.6);
		logo.set_scaleY(0.6);
		logo.get_graphics().beginFill(16777215,1);
		logo.get_graphics().moveTo(-0.5,-7);
		logo.get_graphics().curveTo(-0.5,-7.7,-1,-7);
		logo.get_graphics().lineTo(-9,5);
		logo.get_graphics().curveTo(-9.3,5.5,-8,5);
		logo.get_graphics().curveTo(-1,1,-0.5,-7);
		logo.get_graphics().moveTo(0.5,-7);
		logo.get_graphics().curveTo(0.5,-7.7,1,-7);
		logo.get_graphics().lineTo(9,5);
		logo.get_graphics().curveTo(9.3,5.5,8,5);
		logo.get_graphics().curveTo(1,1,0.5,-7);
		logo.get_graphics().moveTo(-8,7);
		logo.get_graphics().curveTo(-8.3,6.7,-7.5,6.3);
		logo.get_graphics().curveTo(0,2,7.5,6.3);
		logo.get_graphics().curveTo(8.3,6.7,8,7);
		logo.get_graphics().lineTo(-8,7);
		this._top_bar.addChild(logo);
		markers = new flash.display.Shape();
		markers.get_graphics().beginFill(16777215);
		markers.get_graphics().drawRect(20,7,4,4);
		markers.get_graphics().beginFill(3377373);
		markers.get_graphics().drawRect(77,7,4,4);
		this._top_bar.addChild(markers);
		fps_label_tf = new flash.text.TextField();
		fps_label_tf.set_defaultTextFormat(this._label_format);
		fps_label_tf.set_autoSize("LEFT");
		fps_label_tf.set_text("FR:");
		fps_label_tf.set_x(24);
		fps_label_tf.set_y(2);
		fps_label_tf.selectable = false;
		this._top_bar.addChild(fps_label_tf);
		this._fps_tf = new flash.text.TextField();
		this._fps_tf.set_defaultTextFormat(this._data_format);
		this._fps_tf.set_autoSize("LEFT");
		this._fps_tf.set_x(fps_label_tf.get_x() + 16);
		this._fps_tf.set_y(fps_label_tf.get_y());
		this._fps_tf.selectable = false;
		this._top_bar.addChild(this._fps_tf);
		afps_label_tf = new flash.text.TextField();
		afps_label_tf.set_defaultTextFormat(this._label_format);
		afps_label_tf.set_autoSize("LEFT");
		afps_label_tf.set_text("A:");
		afps_label_tf.set_x(81);
		afps_label_tf.set_y(2);
		afps_label_tf.selectable = false;
		this._top_bar.addChild(afps_label_tf);
		this._afps_tf = new flash.text.TextField();
		this._afps_tf.set_defaultTextFormat(this._data_format);
		this._afps_tf.set_autoSize("LEFT");
		this._afps_tf.set_x(afps_label_tf.get_x() + 12);
		this._afps_tf.set_y(afps_label_tf.get_y());
		this._afps_tf.selectable = false;
		this._top_bar.addChild(this._afps_tf);
		this._min_max_btn = new flash.display.Sprite();
		this._min_max_btn.set_x(away3d.debug.AwayStats._WIDTH - 8);
		this._min_max_btn.set_y(7);
		this._min_max_btn.get_graphics().beginFill(0,0);
		this._min_max_btn.get_graphics().lineStyle(1,15724527,1,true);
		this._min_max_btn.get_graphics().drawRect(-4,-4,8,8);
		this._min_max_btn.get_graphics().moveTo(-3,2);
		this._min_max_btn.get_graphics().lineTo(3,2);
		this._min_max_btn.buttonMode = true;
		this._min_max_btn.addEventListener(flash.events.MouseEvent.CLICK,$bind(this,this._onMinMaxBtnClick));
		this._top_bar.addChild(this._min_max_btn);
	}
	,_initMisc: function() {
		this._timer = new flash.utils.Timer(200,0);
		this._timer.addEventListener("timer",$bind(this,this._onTimer));
		this._label_format = new flash.text.TextFormat("_sans",9,16777215,true);
		this._data_format = new flash.text.TextFormat("_sans",9,16777215,false);
		if(this._mean_data_length > 0) {
			var i;
			this._mean_data = [];
			i = 0;
			while(i < this._mean_data_length) {
				this._mean_data[i] = 0.0;
				i++;
			}
		}
	}
	,unregisterView: function(view3d) {
		if(view3d != null) {
			var idx = flash._Vector.Vector_Impl_.indexOf(this._views,view3d);
			if(idx >= 0) flash._Vector.Vector_Impl_.splice(this._views,idx,1);
		}
	}
	,registerView: function(view3d) {
		if(view3d != null && flash._Vector.Vector_Impl_.indexOf(this._views,view3d) < 0) flash._Vector.Vector_Impl_.push(this._views,view3d);
	}
	,_init: function() {
		this._initMisc();
		this._initTopBar();
		this._initBottomBar();
		this._initDiagrams();
		this._initInteraction();
		this.reset();
		this._redrawWindow();
		this.addEventListener(flash.events.Event.ADDED_TO_STAGE,$bind(this,this._onAddedToStage));
		this.addEventListener(flash.events.Event.REMOVED_FROM_STAGE,$bind(this,this._onRemovedFromStage));
	}
	,get_fps: function() {
		return this._fps;
	}
	,get_max_fps: function() {
		return this._max_fps;
	}
	,get_avg_fps: function() {
		return this._avg_fps;
	}
	,get_ram: function() {
		return this._ram;
	}
	,get_max_ram: function() {
		return this._max_ram;
	}
	,__class__: away3d.debug.AwayStats
	,__properties__: $extend(flash.display.Sprite.prototype.__properties__,{get_max_ram:"get_max_ram",get_ram:"get_ram",get_avg_fps:"get_avg_fps",get_max_fps:"get_max_fps",get_fps:"get_fps"})
});
away3d.debug.Debug = function() { }
$hxClasses["away3d.debug.Debug"] = away3d.debug.Debug;
away3d.debug.Debug.__name__ = ["away3d","debug","Debug"];
away3d.debug.Debug.clear = function() {
}
away3d.debug.Debug.delimiter = function() {
}
away3d.debug.Debug.trace = function(message) {
	if(away3d.debug.Debug.active) console.log(message);
}
away3d.debug.Debug.warning = function(message) {
	if(away3d.debug.Debug.warningsAsErrors) {
		away3d.debug.Debug.error(message);
		return;
	}
	console.log("WARNING: " + Std.string(message));
}
away3d.debug.Debug.error = function(message) {
	console.log("ERROR: " + Std.string(message));
	throw new flash.errors.Error(message);
}
away3d.entities.Mesh = function(geometry,material) {
	this._castsShadows = true;
	this._shareAnimationGeometry = true;
	away3d.entities.Entity.call(this);
	this._subMeshes = flash._Vector.Vector_Impl_._new();
	this.set_geometry(geometry);
	if(this.get_geometry() == null) this.set_geometry(new away3d.core.base.Geometry());
	this.set_material(material);
	if(this.get_material() == null) this.set_material(away3d.materials.utils.DefaultMaterialManager.getDefaultMaterial(this));
};
$hxClasses["away3d.entities.Mesh"] = away3d.entities.Mesh;
away3d.entities.Mesh.__name__ = ["away3d","entities","Mesh"];
away3d.entities.Mesh.__interfaces__ = [away3d.library.assets.IAsset,away3d.core.base.IMaterialOwner];
away3d.entities.Mesh.__super__ = away3d.entities.Entity;
away3d.entities.Mesh.prototype = $extend(away3d.entities.Entity.prototype,{
	collidesBefore: function(shortestCollisionDistance,findClosest) {
		this._pickingCollider.setLocalRay(this._pickingCollisionVO.localRayPosition,this._pickingCollisionVO.localRayDirection);
		this._pickingCollisionVO.renderable = null;
		var len = flash._Vector.Vector_Impl_.get_length(this._subMeshes);
		var i = 0;
		while(i < len) {
			var subMesh = this._subMeshes[i];
			if(this._pickingCollider.testSubMeshCollision(subMesh,this._pickingCollisionVO,shortestCollisionDistance)) {
				shortestCollisionDistance = this._pickingCollisionVO.rayEntryDistance;
				this._pickingCollisionVO.renderable = subMesh;
				if(!findClosest) return true;
			}
			++i;
		}
		return this._pickingCollisionVO.renderable != null;
	}
	,getSubMeshForSubGeometry: function(subGeometry) {
		return this._subMeshes[flash._Vector.Vector_Impl_.indexOf(this._geometry.get_subGeometries(),subGeometry)];
	}
	,addSubMesh: function(subGeometry) {
		var subMesh = new away3d.core.base.SubMesh(subGeometry,this,null);
		var len = flash._Vector.Vector_Impl_.get_length(this._subMeshes);
		subMesh._index = len;
		this._subMeshes[len] = subMesh;
		this.invalidateBounds();
	}
	,onSubGeometryRemoved: function(event) {
		var subMesh;
		var subGeom = event.get_subGeometry();
		var len = flash._Vector.Vector_Impl_.get_length(this._subMeshes);
		var i;
		i = 0;
		while(i < len) {
			subMesh = this._subMeshes[i];
			if(subMesh.get_subGeometry() == subGeom) {
				subMesh.dispose();
				flash._Vector.Vector_Impl_.splice(this._subMeshes,i,1);
				break;
			}
			++i;
		}
		--len;
		while(i < len) {
			this._subMeshes[i]._index = i;
			++i;
		}
	}
	,onSubGeometryAdded: function(event) {
		this.addSubMesh(event.get_subGeometry());
	}
	,createEntityPartitionNode: function() {
		return new away3d.core.partition.MeshNode(this);
	}
	,updateBounds: function() {
		this._bounds.fromGeometry(this._geometry);
		this._boundsInvalid = false;
	}
	,clone: function() {
		var clone = new away3d.entities.Mesh(this._geometry,this._material);
		clone.set_transform(this.get_transform());
		clone.set_pivotPoint(this.get_pivotPoint());
		clone.set_partition(this.get_partition());
		clone.set_bounds(this._bounds.clone());
		clone.set_name(this.get_name());
		clone.set_castsShadows(this.get_castsShadows());
		clone.set_shareAnimationGeometry(this.get_shareAnimationGeometry());
		clone.set_mouseEnabled(this.get_mouseEnabled());
		clone.set_mouseChildren(this.get_mouseChildren());
		clone.extra = this.extra;
		var len = flash._Vector.Vector_Impl_.get_length(this._subMeshes);
		var i = 0;
		while(i < len) {
			clone._subMeshes[i]._material = this._subMeshes[i]._material;
			++i;
		}
		len = this.get_numChildren();
		i = 0;
		while(i < len) {
			clone.addChild(js.Boot.__cast(this.getChildAt(i).clone() , away3d.containers.ObjectContainer3D));
			++i;
		}
		if(this._animator != null) clone.set_animator(this._animator.clone());
		return clone;
	}
	,disposeWithAnimatorAndChildren: function() {
		this.disposeWithChildren();
		if(this._animator != null) this._animator.dispose();
	}
	,dispose: function() {
		away3d.entities.Entity.prototype.dispose.call(this);
		this.set_material(null);
		this.set_geometry(null);
	}
	,clearAnimationGeometry: function() {
		var len = flash._Vector.Vector_Impl_.get_length(this._subMeshes);
		var i = 0;
		while(i < len) {
			this._subMeshes[i].animationSubGeometry = null;
			++i;
		}
	}
	,set_shareAnimationGeometry: function(value) {
		this._shareAnimationGeometry = value;
		return value;
	}
	,get_shareAnimationGeometry: function() {
		return this._shareAnimationGeometry;
	}
	,get_subMeshes: function() {
		this._geometry.validate();
		return this._subMeshes;
	}
	,set_material: function(value) {
		if(value == this._material) return value;
		if(this._material != null) this._material.removeOwner(this);
		this._material = value;
		if(this._material != null) this._material.addOwner(this);
		return value;
	}
	,get_material: function() {
		return this._material;
	}
	,set_geometry: function(value) {
		var i;
		if(this._geometry != null) {
			this._geometry.removeEventListener(away3d.events.GeometryEvent.BOUNDS_INVALID,$bind(this,this.onGeometryBoundsInvalid));
			this._geometry.removeEventListener(away3d.events.GeometryEvent.SUB_GEOMETRY_ADDED,$bind(this,this.onSubGeometryAdded));
			this._geometry.removeEventListener(away3d.events.GeometryEvent.SUB_GEOMETRY_REMOVED,$bind(this,this.onSubGeometryRemoved));
			i = 0;
			while(i < flash._Vector.Vector_Impl_.get_length(this._subMeshes)) {
				this._subMeshes[i].dispose();
				++i;
			}
			if(0 < this._subMeshes.length) this._subMeshes = this._subMeshes.slice(0,0);
			while(0 > this._subMeshes.length) this._subMeshes.push(null);
			0;
		}
		this._geometry = value;
		if(this._geometry != null) {
			this._geometry.addEventListener(away3d.events.GeometryEvent.BOUNDS_INVALID,$bind(this,this.onGeometryBoundsInvalid));
			this._geometry.addEventListener(away3d.events.GeometryEvent.SUB_GEOMETRY_ADDED,$bind(this,this.onSubGeometryAdded));
			this._geometry.addEventListener(away3d.events.GeometryEvent.SUB_GEOMETRY_REMOVED,$bind(this,this.onSubGeometryRemoved));
			var subGeoms = this._geometry.get_subGeometries();
			i = 0;
			while(i < flash._Vector.Vector_Impl_.get_length(subGeoms)) {
				this.addSubMesh(subGeoms[i]);
				++i;
			}
		}
		if(this._material != null) {
			this._material.removeOwner(this);
			this._material.addOwner(this);
		}
		return value;
	}
	,get_geometry: function() {
		return this._geometry;
	}
	,set_animator: function(value) {
		if(this._animator != null) this._animator.removeOwner(this);
		this._animator = value;
		var oldMaterial = this.get_material();
		this.set_material(null);
		this.set_material(oldMaterial);
		var len = flash._Vector.Vector_Impl_.get_length(this._subMeshes);
		var subMesh;
		var i = 0;
		while(i < len) {
			subMesh = this._subMeshes[i];
			oldMaterial = subMesh._material;
			if(oldMaterial != null) {
				subMesh.set_material(null);
				subMesh.set_material(oldMaterial);
			}
			++i;
		}
		if(this._animator != null) this._animator.addOwner(this);
		return value;
	}
	,get_animator: function() {
		return this._animator;
	}
	,set_castsShadows: function(value) {
		this._castsShadows = value;
		return value;
	}
	,get_castsShadows: function() {
		return this._castsShadows;
	}
	,onGeometryBoundsInvalid: function(event) {
		this.invalidateBounds();
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.MESH;
	}
	,bakeTransformations: function() {
		this.get_geometry().applyTransformation(this.get_transform());
		this.get_transform().identity();
	}
	,__class__: away3d.entities.Mesh
	,__properties__: $extend(away3d.entities.Entity.prototype.__properties__,{set_castsShadows:"set_castsShadows",get_castsShadows:"get_castsShadows",set_animator:"set_animator",get_animator:"get_animator",set_geometry:"set_geometry",get_geometry:"get_geometry",set_material:"set_material",get_material:"get_material",get_subMeshes:"get_subMeshes",set_shareAnimationGeometry:"set_shareAnimationGeometry",get_shareAnimationGeometry:"get_shareAnimationGeometry"})
});
away3d.entities.SegmentSet = function() {
	this.LIMIT = 196605;
	away3d.entities.Entity.call(this);
	this._subSetCount = 0;
	this._subSets = flash._Vector.Vector_Impl_._new();
	this.addSubSet();
	this._segments = new haxe.ds.IntMap();
	this.set_material(new away3d.materials.SegmentMaterial());
};
$hxClasses["away3d.entities.SegmentSet"] = away3d.entities.SegmentSet;
away3d.entities.SegmentSet.__name__ = ["away3d","entities","SegmentSet"];
away3d.entities.SegmentSet.__interfaces__ = [away3d.core.base.IRenderable];
away3d.entities.SegmentSet.__super__ = away3d.entities.Entity;
away3d.entities.SegmentSet.prototype = $extend(away3d.entities.Entity.prototype,{
	getRenderSceneTransform: function(camera) {
		return this._sceneTransform;
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.SEGMENT_SET;
	}
	,get_vertexTangentOffset: function() {
		return 0;
	}
	,get_vertexNormalOffset: function() {
		return 0;
	}
	,get_vertexOffset: function() {
		return 0;
	}
	,get_vertexTangentData: function() {
		return null;
	}
	,get_vertexNormalData: function() {
		return null;
	}
	,get_vertexStride: function() {
		return 11;
	}
	,get_numVertices: function() {
		return 0;
	}
	,get_UVData: function() {
		return null;
	}
	,get_indexData: function() {
		return null;
	}
	,get_vertexData: function() {
		return null;
	}
	,get_uvTransform: function() {
		return null;
	}
	,set_material: function(value) {
		if(value == this._material) return value;
		if(this._material != null) this._material.removeOwner(this);
		this._material = value;
		if(this._material != null) this._material.addOwner(this);
		return value;
	}
	,get_animator: function() {
		return this._animator;
	}
	,get_material: function() {
		return this._material;
	}
	,get_castsShadows: function() {
		return false;
	}
	,get_sourceEntity: function() {
		return this;
	}
	,get_numTriangles: function() {
		return this._numIndices / 3 | 0;
	}
	,createEntityPartitionNode: function() {
		return new away3d.core.partition.RenderableNode(this);
	}
	,updateBounds: function() {
		var subSet;
		var len;
		var v;
		var index;
		var minX = 100000;
		var minY = 100000;
		var minZ = 100000;
		var maxX = -100000;
		var maxY = -100000;
		var maxZ = -100000;
		var vertices;
		var i = 0;
		while(i < this._subSetCount) {
			subSet = this._subSets[i];
			index = 0;
			vertices = subSet.vertices;
			len = flash._Vector.Vector_Impl_.get_length(vertices);
			if(len == 0) {
				++i;
				continue;
			}
			while(index < len) {
				v = vertices[index++];
				if(v < minX) minX = v; else if(v > maxX) maxX = v;
				v = vertices[index++];
				if(v < minY) minY = v; else if(v > maxY) maxY = v;
				v = vertices[index++];
				if(v < minZ) minZ = v; else if(v > maxZ) maxZ = v;
				index += 8;
			}
			++i;
		}
		if(minX != 100000) this._bounds.fromExtremes(minX,minY,minZ,maxX,maxY,maxZ); else {
			var min = .5;
			this._bounds.fromExtremes(-min,-min,-min,min,min,min);
		}
		this._boundsInvalid = false;
	}
	,getDefaultBoundingVolume: function() {
		return new away3d.bounds.BoundingSphere();
	}
	,get_mouseEnabled: function() {
		return false;
	}
	,dispose: function() {
		away3d.entities.Entity.prototype.dispose.call(this);
		this.removeAllSegments();
		this._segments = null;
		this._material = null;
		var subSet = this._subSets[0];
		subSet.vertices = null;
		subSet.indices = null;
		this._subSets = null;
	}
	,addSubSet: function() {
		var subSet = new away3d.entities.SubSet();
		flash._Vector.Vector_Impl_.push(this._subSets,subSet);
		subSet.vertices = flash._Vector.Vector_Impl_._new();
		subSet.numVertices = 0;
		subSet.indices = flash._Vector.Vector_Impl_._new();
		subSet.numIndices = 0;
		subSet.vertexBufferDirty = true;
		subSet.indexBufferDirty = true;
		subSet.lineCount = 0;
		this._subSetCount++;
		return subSet;
	}
	,reOrderIndices: function(subSetIndex,index) {
		var segRef;
		var _g1 = index, _g = this._indexSegments - 1;
		while(_g1 < _g) {
			var i = _g1++;
			segRef = this._segments.get(i + 1);
			segRef.index = i;
			if(segRef.subSetIndex == subSetIndex) {
				var _g2 = segRef.segment;
				_g2.set_index(_g2.get_index() - 44);
			}
			this._segments.set(i,segRef);
		}
	}
	,activateSecondaryUVBuffer: function(index,stage3DProxy) {
	}
	,activateVertexTangentBuffer: function(index,stage3DProxy) {
	}
	,activateVertexNormalBuffer: function(index,stage3DProxy) {
	}
	,activateUVBuffer: function(index,stage3DProxy) {
	}
	,activateVertexBuffer: function(index,stage3DProxy) {
		var subSet = this._subSets[index];
		this._activeSubSet = subSet;
		this._numIndices = subSet.numIndices;
		if(subSet.vertexContext3D != stage3DProxy.get_context3D() || subSet.vertexBufferDirty) {
			subSet.vertexBuffer = stage3DProxy._context3D.createVertexBuffer(subSet.numVertices,11);
			subSet.vertexBuffer.uploadFromVector(subSet.vertices,0,subSet.numVertices);
			subSet.vertexBufferDirty = false;
			subSet.vertexContext3D = stage3DProxy.get_context3D();
		}
		var vertexBuffer = subSet.vertexBuffer;
		var context3d = stage3DProxy._context3D;
		context3d.setVertexBufferAt(0,vertexBuffer,0,flash.display3D.Context3DVertexBufferFormat.FLOAT_3);
		context3d.setVertexBufferAt(1,vertexBuffer,3,flash.display3D.Context3DVertexBufferFormat.FLOAT_3);
		context3d.setVertexBufferAt(2,vertexBuffer,6,flash.display3D.Context3DVertexBufferFormat.FLOAT_1);
		context3d.setVertexBufferAt(3,vertexBuffer,7,flash.display3D.Context3DVertexBufferFormat.FLOAT_4);
	}
	,getIndexBuffer: function(stage3DProxy) {
		if(this._activeSubSet.indexContext3D != stage3DProxy.get_context3D() || this._activeSubSet.indexBufferDirty) {
			this._activeSubSet.indexBuffer = stage3DProxy._context3D.createIndexBuffer(this._activeSubSet.numIndices);
			this._activeSubSet.indexBuffer.uploadFromVector(this._activeSubSet.indices,0,this._activeSubSet.numIndices);
			this._activeSubSet.indexBufferDirty = false;
			this._activeSubSet.indexContext3D = stage3DProxy.get_context3D();
		}
		return this._activeSubSet.indexBuffer;
	}
	,get_hasData: function() {
		return this._hasData;
	}
	,updateSegment: function(segment) {
		var start = segment._start;
		var end = segment._end;
		var startX = start.x;
		var startY = start.y;
		var startZ = start.z;
		var endX = end.x;
		var endY = end.y;
		var endZ = end.z;
		var startR = segment._startR;
		var startG = segment._startG;
		var startB = segment._startB;
		var endR = segment._endR;
		var endG = segment._endG;
		var endB = segment._endB;
		var index = segment.get_index();
		var t = segment.get_thickness();
		var subSet = this._subSets[segment.get_subSetIndex()];
		var vertices = subSet.vertices;
		vertices[index++] = startX;
		vertices[index++] = startY;
		vertices[index++] = startZ;
		vertices[index++] = endX;
		vertices[index++] = endY;
		vertices[index++] = endZ;
		vertices[index++] = t;
		vertices[index++] = startR;
		vertices[index++] = startG;
		vertices[index++] = startB;
		vertices[index++] = 1;
		vertices[index++] = endX;
		vertices[index++] = endY;
		vertices[index++] = endZ;
		vertices[index++] = startX;
		vertices[index++] = startY;
		vertices[index++] = startZ;
		vertices[index++] = -t;
		vertices[index++] = endR;
		vertices[index++] = endG;
		vertices[index++] = endB;
		vertices[index++] = 1;
		vertices[index++] = startX;
		vertices[index++] = startY;
		vertices[index++] = startZ;
		vertices[index++] = endX;
		vertices[index++] = endY;
		vertices[index++] = endZ;
		vertices[index++] = -t;
		vertices[index++] = startR;
		vertices[index++] = startG;
		vertices[index++] = startB;
		vertices[index++] = 1;
		vertices[index++] = endX;
		vertices[index++] = endY;
		vertices[index++] = endZ;
		vertices[index++] = startX;
		vertices[index++] = startY;
		vertices[index++] = startZ;
		vertices[index++] = t;
		vertices[index++] = endR;
		vertices[index++] = endG;
		vertices[index++] = endB;
		vertices[index++] = 1;
		subSet.vertexBufferDirty = true;
		this.invalidateBounds();
	}
	,get_subSetCount: function() {
		return this._subSetCount;
	}
	,get_segmentCount: function() {
		return this._indexSegments;
	}
	,getSegment: function(index) {
		if(index > this._indexSegments - 1) return null;
		return this._segments.get(index).segment;
	}
	,removeAllSegments: function() {
		var subSet;
		var _g1 = 0, _g = this._subSetCount;
		while(_g1 < _g) {
			var i = _g1++;
			subSet = this._subSets[i];
			subSet.vertices = null;
			subSet.indices = null;
			if(subSet.vertexBuffer != null) subSet.vertexBuffer.dispose();
			if(subSet.indexBuffer != null) subSet.indexBuffer.dispose();
			subSet = null;
		}
		var iterator = this._segments.iterator();
		while( iterator.hasNext() ) {
			var segReg = iterator.next();
			segReg = null;
		}
		this._segments = null;
		this._subSetCount = 0;
		this._activeSubSet = null;
		this._indexSegments = 0;
		this._subSets = flash._Vector.Vector_Impl_._new();
		this._segments = new haxe.ds.IntMap();
		this.addSubSet();
		this._hasData = false;
	}
	,removeSegment: function(segment,dispose) {
		if(dispose == null) dispose = false;
		if(segment.get_index() == -1) return;
		this.removeSegmentByIndex(segment.get_index() / 44 | 0);
	}
	,removeSegmentByIndex: function(index,dispose) {
		if(dispose == null) dispose = false;
		var segRef;
		if(index >= this._indexSegments) return;
		if(this._segments.exists(index)) segRef = this._segments.get(index); else return;
		var subSet;
		if(this._subSets[segRef.subSetIndex] == null) return;
		var subSetIndex = segRef.subSetIndex;
		subSet = this._subSets[segRef.subSetIndex];
		var segment = segRef.segment;
		var indices = subSet.indices;
		var ind = index * 6;
		var _g1 = ind, _g = flash._Vector.Vector_Impl_.get_length(indices);
		while(_g1 < _g) {
			var i = _g1++;
			indices[i] -= 4;
		}
		flash._Vector.Vector_Impl_.splice(subSet.indices,index * 6,6);
		flash._Vector.Vector_Impl_.splice(subSet.vertices,index * 44,44);
		subSet.numVertices = flash._Vector.Vector_Impl_.get_length(subSet.vertices) / 11 | 0;
		subSet.numIndices = flash._Vector.Vector_Impl_.get_length(indices);
		subSet.vertexBufferDirty = true;
		subSet.indexBufferDirty = true;
		subSet.lineCount--;
		if(dispose) {
			segment.dispose();
			segment = null;
		} else {
			segment.set_index(-1);
			segment.set_segmentsBase(null);
		}
		if(subSet.lineCount == 0) {
			if(subSetIndex == 0) this._hasData = false; else {
				subSet.dispose();
				this._subSets[subSetIndex] = null;
				flash._Vector.Vector_Impl_.splice(this._subSets,subSetIndex,1);
			}
		}
		this.reOrderIndices(subSetIndex,index);
		segRef = null;
		this._segments.remove(this._indexSegments);
		this._indexSegments--;
	}
	,addSegment: function(segment) {
		segment.set_segmentsBase(this);
		this._hasData = true;
		var subSetIndex = flash._Vector.Vector_Impl_.get_length(this._subSets) - 1;
		var subSet = this._subSets[subSetIndex];
		if(flash._Vector.Vector_Impl_.get_length(subSet.vertices) + 44 > this.LIMIT) {
			subSet = this.addSubSet();
			subSetIndex++;
		}
		segment.set_index(flash._Vector.Vector_Impl_.get_length(subSet.vertices));
		segment.set_subSetIndex(subSetIndex);
		this.updateSegment(segment);
		var index = subSet.lineCount << 2;
		flash._Vector.Vector_Impl_.push(subSet.indices,index);
		flash._Vector.Vector_Impl_.push(subSet.indices,index + 1);
		flash._Vector.Vector_Impl_.push(subSet.indices,index + 2);
		flash._Vector.Vector_Impl_.push(subSet.indices,index + 3);
		flash._Vector.Vector_Impl_.push(subSet.indices,index + 2);
		flash._Vector.Vector_Impl_.push(subSet.indices,index + 1);
		subSet.numVertices = flash._Vector.Vector_Impl_.get_length(subSet.vertices) / 11 | 0;
		subSet.numIndices = flash._Vector.Vector_Impl_.get_length(subSet.indices);
		subSet.lineCount++;
		var segRef = new away3d.entities.SegRef();
		segRef.index = index;
		segRef.subSetIndex = subSetIndex;
		segRef.segment = segment;
		this._segments.set(this._indexSegments,segRef);
		this._indexSegments++;
	}
	,__class__: away3d.entities.SegmentSet
	,__properties__: $extend(away3d.entities.Entity.prototype.__properties__,{get_segmentCount:"get_segmentCount",get_subSetCount:"get_subSetCount",get_hasData:"get_hasData",get_numTriangles:"get_numTriangles",get_sourceEntity:"get_sourceEntity",get_castsShadows:"get_castsShadows",set_material:"set_material",get_material:"get_material",get_animator:"get_animator",get_uvTransform:"get_uvTransform",get_vertexData:"get_vertexData",get_indexData:"get_indexData",get_UVData:"get_UVData",get_numVertices:"get_numVertices",get_vertexStride:"get_vertexStride",get_vertexNormalData:"get_vertexNormalData",get_vertexTangentData:"get_vertexTangentData",get_vertexOffset:"get_vertexOffset",get_vertexNormalOffset:"get_vertexNormalOffset",get_vertexTangentOffset:"get_vertexTangentOffset"})
});
away3d.entities.SegRef = function() {
};
$hxClasses["away3d.entities.SegRef"] = away3d.entities.SegRef;
away3d.entities.SegRef.__name__ = ["away3d","entities","SegRef"];
away3d.entities.SegRef.prototype = {
	__class__: away3d.entities.SegRef
}
away3d.entities.SubSet = function() {
};
$hxClasses["away3d.entities.SubSet"] = away3d.entities.SubSet;
away3d.entities.SubSet.__name__ = ["away3d","entities","SubSet"];
away3d.entities.SubSet.prototype = {
	dispose: function() {
		this.vertices = null;
		if(this.vertexBuffer != null) this.vertexBuffer.dispose();
		if(this.indexBuffer != null) this.indexBuffer.dispose();
	}
	,__class__: away3d.entities.SubSet
}
flash.errors = {}
flash.errors.Error = function(message,id) {
	if(id == null) id = 0;
	if(message == null) message = "";
	this.message = message;
	this.errorID = id;
};
$hxClasses["flash.errors.Error"] = flash.errors.Error;
flash.errors.Error.__name__ = ["flash","errors","Error"];
flash.errors.Error.prototype = {
	toString: function() {
		if(this.message != null) return this.message; else return "Error";
	}
	,getStackTrace: function() {
		return haxe.CallStack.toString(haxe.CallStack.exceptionStack());
	}
	,__class__: flash.errors.Error
}
away3d.errors = {}
away3d.errors.AbstractMethodError = function(message,id) {
	if(id == null) id = 0;
	if(message == null) message = "An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.";
	flash.errors.Error.call(this,message,id);
};
$hxClasses["away3d.errors.AbstractMethodError"] = away3d.errors.AbstractMethodError;
away3d.errors.AbstractMethodError.__name__ = ["away3d","errors","AbstractMethodError"];
away3d.errors.AbstractMethodError.__super__ = flash.errors.Error;
away3d.errors.AbstractMethodError.prototype = $extend(flash.errors.Error.prototype,{
	__class__: away3d.errors.AbstractMethodError
});
away3d.events.AssetEvent = function(type,asset,prevName) {
	flash.events.Event.call(this,type);
	this._asset = asset;
	if(prevName != null) this._prevName = prevName; else this._prevName = this._asset != null?this._asset.get_name():null;
};
$hxClasses["away3d.events.AssetEvent"] = away3d.events.AssetEvent;
away3d.events.AssetEvent.__name__ = ["away3d","events","AssetEvent"];
away3d.events.AssetEvent.__super__ = flash.events.Event;
away3d.events.AssetEvent.prototype = $extend(flash.events.Event.prototype,{
	clone: function() {
		return new away3d.events.AssetEvent(this.type,this.get_asset(),this.get_assetPrevName());
	}
	,get_assetPrevName: function() {
		return this._prevName;
	}
	,get_asset: function() {
		return this._asset;
	}
	,__class__: away3d.events.AssetEvent
	,__properties__: {get_asset:"get_asset",get_assetPrevName:"get_assetPrevName"}
});
away3d.events.CameraEvent = function(type,camera,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this._camera = camera;
};
$hxClasses["away3d.events.CameraEvent"] = away3d.events.CameraEvent;
away3d.events.CameraEvent.__name__ = ["away3d","events","CameraEvent"];
away3d.events.CameraEvent.__super__ = flash.events.Event;
away3d.events.CameraEvent.prototype = $extend(flash.events.Event.prototype,{
	clone: function() {
		return new away3d.events.CameraEvent(this.type,this._camera,this.bubbles,this.cancelable);
	}
	,get_camera: function() {
		return this._camera;
	}
	,__class__: away3d.events.CameraEvent
	,__properties__: {get_camera:"get_camera"}
});
away3d.events.GeometryEvent = function(type,subGeometry) {
	flash.events.Event.call(this,type,false,false);
	this._subGeometry = subGeometry;
};
$hxClasses["away3d.events.GeometryEvent"] = away3d.events.GeometryEvent;
away3d.events.GeometryEvent.__name__ = ["away3d","events","GeometryEvent"];
away3d.events.GeometryEvent.__super__ = flash.events.Event;
away3d.events.GeometryEvent.prototype = $extend(flash.events.Event.prototype,{
	clone: function() {
		return new away3d.events.GeometryEvent(this.type,this._subGeometry);
	}
	,get_subGeometry: function() {
		return this._subGeometry;
	}
	,__class__: away3d.events.GeometryEvent
	,__properties__: {get_subGeometry:"get_subGeometry"}
});
away3d.events.LensEvent = function(type,lens,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this._lens = lens;
};
$hxClasses["away3d.events.LensEvent"] = away3d.events.LensEvent;
away3d.events.LensEvent.__name__ = ["away3d","events","LensEvent"];
away3d.events.LensEvent.__super__ = flash.events.Event;
away3d.events.LensEvent.prototype = $extend(flash.events.Event.prototype,{
	clone: function() {
		return new away3d.events.LensEvent(this.type,this._lens,this.bubbles,this.cancelable);
	}
	,get_lens: function() {
		return this._lens;
	}
	,__class__: away3d.events.LensEvent
	,__properties__: {get_lens:"get_lens"}
});
away3d.events.LightEvent = function(type) {
	flash.events.Event.call(this,type);
};
$hxClasses["away3d.events.LightEvent"] = away3d.events.LightEvent;
away3d.events.LightEvent.__name__ = ["away3d","events","LightEvent"];
away3d.events.LightEvent.__super__ = flash.events.Event;
away3d.events.LightEvent.prototype = $extend(flash.events.Event.prototype,{
	clone: function() {
		return new away3d.events.LightEvent(this.type);
	}
	,__class__: away3d.events.LightEvent
});
away3d.events.Object3DEvent = function(type,object) {
	flash.events.Event.call(this,type);
	this.object = object;
};
$hxClasses["away3d.events.Object3DEvent"] = away3d.events.Object3DEvent;
away3d.events.Object3DEvent.__name__ = ["away3d","events","Object3DEvent"];
away3d.events.Object3DEvent.__super__ = flash.events.Event;
away3d.events.Object3DEvent.prototype = $extend(flash.events.Event.prototype,{
	clone: function() {
		return new away3d.events.Object3DEvent(this.type,this.object);
	}
	,__class__: away3d.events.Object3DEvent
});
away3d.events.Scene3DEvent = function(type,objectContainer) {
	this.objectContainer3D = objectContainer;
	flash.events.Event.call(this,type);
};
$hxClasses["away3d.events.Scene3DEvent"] = away3d.events.Scene3DEvent;
away3d.events.Scene3DEvent.__name__ = ["away3d","events","Scene3DEvent"];
away3d.events.Scene3DEvent.__super__ = flash.events.Event;
away3d.events.Scene3DEvent.prototype = $extend(flash.events.Event.prototype,{
	clone: function() {
		return new away3d.events.Scene3DEvent(this.type,this.objectContainer3D);
	}
	,__class__: away3d.events.Scene3DEvent
});
away3d.events.ShadingMethodEvent = function(type,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
};
$hxClasses["away3d.events.ShadingMethodEvent"] = away3d.events.ShadingMethodEvent;
away3d.events.ShadingMethodEvent.__name__ = ["away3d","events","ShadingMethodEvent"];
away3d.events.ShadingMethodEvent.__super__ = flash.events.Event;
away3d.events.ShadingMethodEvent.prototype = $extend(flash.events.Event.prototype,{
	__class__: away3d.events.ShadingMethodEvent
});
away3d.events.Stage3DEvent = function(type,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
};
$hxClasses["away3d.events.Stage3DEvent"] = away3d.events.Stage3DEvent;
away3d.events.Stage3DEvent.__name__ = ["away3d","events","Stage3DEvent"];
away3d.events.Stage3DEvent.__super__ = flash.events.Event;
away3d.events.Stage3DEvent.prototype = $extend(flash.events.Event.prototype,{
	__class__: away3d.events.Stage3DEvent
});
away3d.events.TouchEvent3D = function(type) {
	this._allowedToPropagate = true;
	flash.events.Event.call(this,type,true,true);
};
$hxClasses["away3d.events.TouchEvent3D"] = away3d.events.TouchEvent3D;
away3d.events.TouchEvent3D.__name__ = ["away3d","events","TouchEvent3D"];
away3d.events.TouchEvent3D.__super__ = flash.events.Event;
away3d.events.TouchEvent3D.prototype = $extend(flash.events.Event.prototype,{
	get_sceneNormal: function() {
		if(js.Boot.__instanceof(this.object,away3d.containers.ObjectContainer3D)) {
			var sceneNormal = (js.Boot.__cast(this.object , away3d.containers.ObjectContainer3D)).get_sceneTransform().deltaTransformVector(this.localNormal);
			sceneNormal.normalize();
			return sceneNormal;
		} else return this.localNormal;
	}
	,get_scenePosition: function() {
		if(js.Boot.__instanceof(this.object,away3d.containers.ObjectContainer3D)) return (js.Boot.__cast(this.object , away3d.containers.ObjectContainer3D)).get_sceneTransform().transformVector(this.localPosition); else return this.localPosition;
	}
	,clone: function() {
		var result = new away3d.events.TouchEvent3D(this.type);
		result.screenX = this.screenX;
		result.screenY = this.screenY;
		result.view = this.view;
		result.object = this.object;
		result.renderable = this.renderable;
		result.material = this.material;
		result.uv = this.uv;
		result.localPosition = this.localPosition;
		result.localNormal = this.localNormal;
		result.index = this.index;
		result.subGeometryIndex = this.subGeometryIndex;
		result.ctrlKey = this.ctrlKey;
		result.shiftKey = this.shiftKey;
		result._parentEvent = this;
		return result;
	}
	,stopImmediatePropagation: function() {
		flash.events.Event.prototype.stopImmediatePropagation.call(this);
		this._allowedToPropagate = false;
		if(this._parentEvent != null) this._parentEvent._allowedToPropagate = false;
	}
	,stopPropagation: function() {
		flash.events.Event.prototype.stopPropagation.call(this);
		this._allowedToPropagate = false;
		if(this._parentEvent != null) this._parentEvent._allowedToPropagate = false;
	}
	,__class__: away3d.events.TouchEvent3D
	,__properties__: {get_scenePosition:"get_scenePosition",get_sceneNormal:"get_sceneNormal"}
});
away3d.filters = {}
away3d.filters.Filter3DBase = function() {
	this._tasks = flash._Vector.Vector_Impl_._new();
};
$hxClasses["away3d.filters.Filter3DBase"] = away3d.filters.Filter3DBase;
away3d.filters.Filter3DBase.__name__ = ["away3d","filters","Filter3DBase"];
away3d.filters.Filter3DBase.prototype = {
	update: function(stage,camera) {
	}
	,dispose: function() {
		var i = 0;
		while(i < flash._Vector.Vector_Impl_.get_length(this._tasks)) {
			this._tasks[i].dispose();
			++i;
		}
	}
	,setRenderTargets: function(mainTarget,stage3DProxy) {
		this._tasks[flash._Vector.Vector_Impl_.get_length(this._tasks) - 1].set_target(mainTarget);
	}
	,set_textureHeight: function(value) {
		this._textureHeight = value;
		var i = 0;
		while(i < flash._Vector.Vector_Impl_.get_length(this._tasks)) {
			this._tasks[i].set_textureHeight(value);
			++i;
		}
		return value;
	}
	,get_textureHeight: function() {
		return this._textureHeight;
	}
	,set_textureWidth: function(value) {
		this._textureWidth = value;
		var i = 0;
		while(i < flash._Vector.Vector_Impl_.get_length(this._tasks)) {
			this._tasks[i].set_textureWidth(value);
			++i;
		}
		return value;
	}
	,get_textureWidth: function() {
		return this._textureWidth;
	}
	,getMainInputTexture: function(stage3DProxy) {
		return this._tasks[0].getMainInputTexture(stage3DProxy);
	}
	,get_tasks: function() {
		return this._tasks;
	}
	,addTask: function(filter) {
		flash._Vector.Vector_Impl_.push(this._tasks,filter);
		if(!this._requireDepthRender) this._requireDepthRender = filter.get_requireDepthRender();
	}
	,get_requireDepthRender: function() {
		return this._requireDepthRender;
	}
	,__class__: away3d.filters.Filter3DBase
	,__properties__: {get_requireDepthRender:"get_requireDepthRender",get_tasks:"get_tasks",set_textureWidth:"set_textureWidth",get_textureWidth:"get_textureWidth",set_textureHeight:"set_textureHeight",get_textureHeight:"get_textureHeight"}
}
away3d.filters.tasks = {}
away3d.filters.tasks.Filter3DTaskBase = function(requireDepthRender) {
	if(requireDepthRender == null) requireDepthRender = false;
	this._scaledTextureWidth = -1;
	this._scaledTextureHeight = -1;
	this._textureWidth = -1;
	this._textureHeight = -1;
	this._textureDimensionsInvalid = true;
	this._program3DInvalid = true;
	this._textureScale = 0;
	this._requireDepthRender = requireDepthRender;
};
$hxClasses["away3d.filters.tasks.Filter3DTaskBase"] = away3d.filters.tasks.Filter3DTaskBase;
away3d.filters.tasks.Filter3DTaskBase.__name__ = ["away3d","filters","tasks","Filter3DTaskBase"];
away3d.filters.tasks.Filter3DTaskBase.prototype = {
	get_requireDepthRender: function() {
		return this._requireDepthRender;
	}
	,deactivate: function(stage3DProxy) {
	}
	,activate: function(stage3DProxy,camera,depthTexture) {
	}
	,getProgram3D: function(stage3DProxy) {
		if(this._program3DInvalid) this.updateProgram3D(stage3DProxy);
		return this._program3D;
	}
	,updateTextures: function(stage) {
		if(this._mainInputTexture != null) this._mainInputTexture.dispose();
		this._mainInputTexture = stage.get_context3D().createTexture(this._scaledTextureWidth,this._scaledTextureHeight,flash.display3D.Context3DTextureFormat.BGRA,true);
		this._textureDimensionsInvalid = false;
	}
	,getFragmentCode: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,getVertexCode: function() {
		return "mov op, va0\n" + "mov v0, va1\n";
	}
	,updateProgram3D: function(stage) {
		if(this._program3D != null) this._program3D.dispose();
		this._program3D = stage.get_context3D().createProgram();
		this._program3D.upload(flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.VERTEX,this.getVertexCode()),flash.display3D.shaders.AGLSLShaderUtils.createShader(flash.display3D.Context3DProgramType.FRAGMENT,this.getFragmentCode()));
		this._program3DInvalid = false;
	}
	,invalidateProgram3D: function() {
		this._program3DInvalid = true;
	}
	,dispose: function() {
		if(this._mainInputTexture != null) this._mainInputTexture.dispose();
		if(this._program3D != null) this._program3D.dispose();
	}
	,getMainInputTexture: function(stage) {
		if(this._textureDimensionsInvalid) this.updateTextures(stage);
		return this._mainInputTexture;
	}
	,set_textureHeight: function(value) {
		if(this._textureHeight == value) return value;
		this._textureHeight = value;
		this._scaledTextureHeight = this._textureHeight >> this._textureScale;
		this._textureDimensionsInvalid = true;
		return value;
	}
	,get_textureHeight: function() {
		return this._textureHeight;
	}
	,set_textureWidth: function(value) {
		if(this._textureWidth == value) return value;
		this._textureWidth = value;
		this._scaledTextureWidth = this._textureWidth >> this._textureScale;
		this._textureDimensionsInvalid = true;
		return value;
	}
	,get_textureWidth: function() {
		return this._textureWidth;
	}
	,set_target: function(value) {
		this._target = value;
		return value;
	}
	,get_target: function() {
		return this._target;
	}
	,set_textureScale: function(value) {
		if(this._textureScale == value) return value;
		this._textureScale = value;
		this._scaledTextureWidth = this._textureWidth >> this._textureScale;
		this._scaledTextureHeight = this._textureHeight >> this._textureScale;
		this._textureDimensionsInvalid = true;
		return value;
	}
	,get_textureScale: function() {
		return this._textureScale;
	}
	,__class__: away3d.filters.tasks.Filter3DTaskBase
	,__properties__: {set_textureScale:"set_textureScale",get_textureScale:"get_textureScale",set_target:"set_target",get_target:"get_target",set_textureWidth:"set_textureWidth",get_textureWidth:"get_textureWidth",set_textureHeight:"set_textureHeight",get_textureHeight:"get_textureHeight",get_requireDepthRender:"get_requireDepthRender"}
}
away3d.library.assets.AssetType = function() { }
$hxClasses["away3d.library.assets.AssetType"] = away3d.library.assets.AssetType;
away3d.library.assets.AssetType.__name__ = ["away3d","library","assets","AssetType"];
away3d.lights = {}
away3d.lights.LightBase = function() {
	this._color = 16777215;
	this._colorR = 1;
	this._colorG = 1;
	this._colorB = 1;
	this._ambientColor = 16777215;
	this._ambient = 0;
	this._ambientR = 0;
	this._ambientG = 0;
	this._ambientB = 0;
	this._specular = 1;
	this._specularR = 1;
	this._specularG = 1;
	this._specularB = 1;
	this._diffuse = 1;
	this._diffuseR = 1;
	this._diffuseG = 1;
	this._diffuseB = 1;
	away3d.entities.Entity.call(this);
};
$hxClasses["away3d.lights.LightBase"] = away3d.lights.LightBase;
away3d.lights.LightBase.__name__ = ["away3d","lights","LightBase"];
away3d.lights.LightBase.__super__ = away3d.entities.Entity;
away3d.lights.LightBase.prototype = $extend(away3d.entities.Entity.prototype,{
	set_shadowMapper: function(value) {
		this._shadowMapper = value;
		this._shadowMapper.set_light(this);
		return value;
	}
	,get_shadowMapper: function() {
		return this._shadowMapper;
	}
	,updateDiffuse: function() {
		this._diffuseR = this._colorR * this._diffuse;
		this._diffuseG = this._colorG * this._diffuse;
		this._diffuseB = this._colorB * this._diffuse;
	}
	,updateSpecular: function() {
		this._specularR = this._colorR * this._specular;
		this._specularG = this._colorG * this._specular;
		this._specularB = this._colorB * this._specular;
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.LIGHT;
	}
	,createEntityPartitionNode: function() {
		return new away3d.core.partition.LightNode(this);
	}
	,getObjectProjectionMatrix: function(renderable,target) {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,updateAmbient: function() {
		this._ambientR = (this._ambientColor >> 16 & 255) / 255 * this._ambient;
		this._ambientG = (this._ambientColor >> 8 & 255) / 255 * this._ambient;
		this._ambientB = (this._ambientColor & 255) / 255 * this._ambient;
	}
	,set_ambientColor: function(value) {
		this._ambientColor = value;
		this.updateAmbient();
		return value;
	}
	,get_ambientColor: function() {
		return this._ambientColor;
	}
	,set_ambient: function(value) {
		if(value < 0) value = 0; else if(value > 1) value = 1;
		this._ambient = value;
		this.updateAmbient();
		return value;
	}
	,get_ambient: function() {
		return this._ambient;
	}
	,set_color: function(value) {
		this._color = value;
		this._colorR = (this._color >> 16 & 255) / 255;
		this._colorG = (this._color >> 8 & 255) / 255;
		this._colorB = (this._color & 255) / 255;
		this.updateDiffuse();
		this.updateSpecular();
		return value;
	}
	,get_color: function() {
		return this._color;
	}
	,set_diffuse: function(value) {
		if(value < 0) value = 0;
		this._diffuse = value;
		this.updateDiffuse();
		return value;
	}
	,get_diffuse: function() {
		return this._diffuse;
	}
	,set_specular: function(value) {
		if(value < 0) value = 0;
		this._specular = value;
		this.updateSpecular();
		return value;
	}
	,get_specular: function() {
		return this._specular;
	}
	,createShadowMapper: function() {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,set_castsShadows: function(value) {
		if(this._castsShadows == value) return value;
		this._castsShadows = value;
		if(value) {
			if(this._shadowMapper == null) this._shadowMapper = this.createShadowMapper();
			this._shadowMapper.set_light(this);
		} else {
			this._shadowMapper.dispose();
			this._shadowMapper = null;
		}
		this.dispatchEvent(new away3d.events.LightEvent(away3d.events.LightEvent.CASTS_SHADOW_CHANGE));
		return value;
	}
	,get_castsShadows: function() {
		return this._castsShadows;
	}
	,__class__: away3d.lights.LightBase
	,__properties__: $extend(away3d.entities.Entity.prototype.__properties__,{set_castsShadows:"set_castsShadows",get_castsShadows:"get_castsShadows",set_specular:"set_specular",get_specular:"get_specular",set_diffuse:"set_diffuse",get_diffuse:"get_diffuse",set_color:"set_color",get_color:"get_color",set_ambient:"set_ambient",get_ambient:"get_ambient",set_ambientColor:"set_ambientColor",get_ambientColor:"get_ambientColor",set_shadowMapper:"set_shadowMapper",get_shadowMapper:"get_shadowMapper"})
});
away3d.lights.DirectionalLight = function(xDir,yDir,zDir) {
	if(zDir == null) zDir = 1;
	if(yDir == null) yDir = -1;
	if(xDir == null) xDir = 0;
	away3d.lights.LightBase.call(this);
	this.set_direction(new flash.geom.Vector3D(xDir,yDir,zDir));
	this._sceneDirection = new flash.geom.Vector3D();
};
$hxClasses["away3d.lights.DirectionalLight"] = away3d.lights.DirectionalLight;
away3d.lights.DirectionalLight.__name__ = ["away3d","lights","DirectionalLight"];
away3d.lights.DirectionalLight.__super__ = away3d.lights.LightBase;
away3d.lights.DirectionalLight.prototype = $extend(away3d.lights.LightBase.prototype,{
	getObjectProjectionMatrix: function(renderable,target) {
		var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		var bounds = renderable.get_sourceEntity().get_bounds();
		var m = new flash.geom.Matrix3D();
		m.copyFrom(renderable.get_sceneTransform());
		m.append(this.get_inverseSceneTransform());
		if(this._projAABBPoints == null) this._projAABBPoints = flash._Vector.Vector_Impl_._new();
		m.transformVectors(bounds.get_aabbPoints(),this._projAABBPoints);
		var xMin = 100000;
		var xMax = -100000;
		var yMin = 100000;
		var yMax = -100000;
		var zMin = 100000;
		var zMax = -100000;
		var d;
		var i = 0;
		while(i < 24) {
			d = this._projAABBPoints[i++];
			if(d < xMin) xMin = d;
			if(d > xMax) xMax = d;
			d = this._projAABBPoints[i++];
			if(d < yMin) yMin = d;
			if(d > yMax) yMax = d;
			d = this._projAABBPoints[i++];
			if(d < zMin) zMin = d;
			if(d > zMax) zMax = d;
		}
		var invXRange = 1 / (xMax - xMin);
		var invYRange = 1 / (yMax - yMin);
		var invZRange = 1 / (zMax - zMin);
		raw[0] = 2 * invXRange;
		raw[5] = 2 * invYRange;
		raw[10] = invZRange;
		raw[12] = -(xMax + xMin) * invXRange;
		raw[13] = -(yMax + yMin) * invYRange;
		raw[14] = -zMin * invZRange;
		raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;
		raw[15] = 1;
		if(target == null) target = new flash.geom.Matrix3D();
		away3d.Stage3DUtils.copyRawDataFrom(target,raw);
		target.prepend(m);
		return target;
	}
	,createShadowMapper: function() {
		return new away3d.lights.shadowmaps.DirectionalShadowMapper();
	}
	,updateSceneTransform: function() {
		away3d.lights.LightBase.prototype.updateSceneTransform.call(this);
		away3d.Stage3DUtils.copyColumnTo(this.get_sceneTransform(),2,this._sceneDirection);
		this._sceneDirection.normalize();
	}
	,updateBounds: function() {
	}
	,getDefaultBoundingVolume: function() {
		return new away3d.bounds.NullBounds();
	}
	,set_direction: function(value) {
		this._direction = value;
		if(this._tmpLookAt == null) this._tmpLookAt = new flash.geom.Vector3D();
		this._tmpLookAt.x = this.get_x() + this._direction.x;
		this._tmpLookAt.y = this.get_y() + this._direction.y;
		this._tmpLookAt.z = this.get_z() + this._direction.z;
		this.lookAt(this._tmpLookAt);
		return value;
	}
	,get_direction: function() {
		return this._direction;
	}
	,get_sceneDirection: function() {
		if(this._sceneTransformDirty) this.updateSceneTransform();
		return this._sceneDirection;
	}
	,createEntityPartitionNode: function() {
		return new away3d.core.partition.DirectionalLightNode(this);
	}
	,__class__: away3d.lights.DirectionalLight
	,__properties__: $extend(away3d.lights.LightBase.prototype.__properties__,{get_sceneDirection:"get_sceneDirection",set_direction:"set_direction",get_direction:"get_direction"})
});
away3d.lights.LightProbe = function(diffuseMap,specularMap) {
	away3d.lights.LightBase.call(this);
	this._diffuseMap = diffuseMap;
	this._specularMap = specularMap;
};
$hxClasses["away3d.lights.LightProbe"] = away3d.lights.LightProbe;
away3d.lights.LightProbe.__name__ = ["away3d","lights","LightProbe"];
away3d.lights.LightProbe.__super__ = away3d.lights.LightBase;
away3d.lights.LightProbe.prototype = $extend(away3d.lights.LightBase.prototype,{
	getObjectProjectionMatrix: function(renderable,target) {
		throw new flash.errors.Error("Object projection matrices are not supported for LightProbe objects!");
		return null;
	}
	,getDefaultBoundingVolume: function() {
		return new away3d.bounds.NullBounds();
	}
	,updateBounds: function() {
		this._boundsInvalid = false;
	}
	,set_specularMap: function(value) {
		this._specularMap = value;
		return value;
	}
	,get_specularMap: function() {
		return this._specularMap;
	}
	,set_diffuseMap: function(value) {
		this._diffuseMap = value;
		return value;
	}
	,get_diffuseMap: function() {
		return this._diffuseMap;
	}
	,createEntityPartitionNode: function() {
		return new away3d.core.partition.LightProbeNode(this);
	}
	,__class__: away3d.lights.LightProbe
	,__properties__: $extend(away3d.lights.LightBase.prototype.__properties__,{set_diffuseMap:"set_diffuseMap",get_diffuseMap:"get_diffuseMap",set_specularMap:"set_specularMap",get_specularMap:"get_specularMap"})
});
away3d.lights.PointLight = function() {
	this._radius = 90000;
	this._fallOff = 100000;
	away3d.lights.LightBase.call(this);
	this._fallOffFactor = 1 / (this._fallOff * this._fallOff - this._radius * this._radius);
};
$hxClasses["away3d.lights.PointLight"] = away3d.lights.PointLight;
away3d.lights.PointLight.__name__ = ["away3d","lights","PointLight"];
away3d.lights.PointLight.__super__ = away3d.lights.LightBase;
away3d.lights.PointLight.prototype = $extend(away3d.lights.LightBase.prototype,{
	getObjectProjectionMatrix: function(renderable,target) {
		var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		var bounds = renderable.get_sourceEntity().get_bounds();
		var m = new flash.geom.Matrix3D();
		m.copyFrom(renderable.get_sceneTransform());
		m.append(this._parent.get_inverseSceneTransform());
		this.lookAt(new flash.geom.Vector3D(m.rawData[12],m.rawData[13],m.rawData[14]));
		m.copyFrom(renderable.get_sceneTransform());
		m.append(this.get_inverseSceneTransform());
		away3d.Stage3DUtils.copyColumnTo(m,3,this._pos);
		var v1 = m.deltaTransformVector(bounds.get_min());
		var v2 = m.deltaTransformVector(bounds.get_max());
		var z = this._pos.z;
		var d1 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;
		var d2 = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;
		var d = Math.sqrt(d1 > d2?d1:d2);
		var zMin;
		var zMax;
		zMin = z - d;
		zMax = z + d;
		raw[5] = raw[0] = zMin / d;
		raw[10] = zMax / (zMax - zMin);
		raw[11] = 1;
		raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;
		raw[14] = -zMin * raw[10];
		if(target == null) target = new flash.geom.Matrix3D();
		away3d.Stage3DUtils.copyRawDataFrom(target,raw);
		target.prepend(m);
		return target;
	}
	,getDefaultBoundingVolume: function() {
		return new away3d.bounds.BoundingSphere();
	}
	,updateBounds: function() {
		this._bounds.fromSphere(new flash.geom.Vector3D(),this._fallOff);
		this._boundsInvalid = false;
	}
	,set_fallOff: function(value) {
		this._fallOff = value;
		if(this._fallOff < 0) this._fallOff = 0;
		if(this._fallOff < this._radius) this._radius = this._fallOff;
		this._fallOffFactor = 1 / (this._fallOff * this._fallOff - this._radius * this._radius);
		this.invalidateBounds();
		return value;
	}
	,get_fallOff: function() {
		return this._fallOff;
	}
	,fallOffFactor: function() {
		return this._fallOffFactor;
	}
	,set_radius: function(value) {
		this._radius = value;
		if(this._radius < 0) this._radius = 0; else if(this._radius > this._fallOff) {
			this._fallOff = this._radius;
			this.invalidateBounds();
		}
		this._fallOffFactor = 1 / (this._fallOff * this._fallOff - this._radius * this._radius);
		return value;
	}
	,get_radius: function() {
		return this._radius;
	}
	,createEntityPartitionNode: function() {
		return new away3d.core.partition.PointLightNode(this);
	}
	,createShadowMapper: function() {
		return new away3d.lights.shadowmaps.CubeMapShadowMapper();
	}
	,__class__: away3d.lights.PointLight
	,__properties__: $extend(away3d.lights.LightBase.prototype.__properties__,{set_radius:"set_radius",get_radius:"get_radius",set_fallOff:"set_fallOff",get_fallOff:"get_fallOff"})
});
away3d.lights.shadowmaps = {}
away3d.lights.shadowmaps.ShadowMapperBase = function() {
	this._depthMapSize = 2048;
	this._autoUpdateShadows = true;
	this._casterCollector = this.createCasterCollector();
};
$hxClasses["away3d.lights.shadowmaps.ShadowMapperBase"] = away3d.lights.shadowmaps.ShadowMapperBase;
away3d.lights.shadowmaps.ShadowMapperBase.__name__ = ["away3d","lights","shadowmaps","ShadowMapperBase"];
away3d.lights.shadowmaps.ShadowMapperBase.prototype = {
	drawDepthMap: function(target,scene,renderer) {
		throw new away3d.errors.AbstractMethodError();
	}
	,updateDepthProjection: function(viewCamera) {
		throw new away3d.errors.AbstractMethodError();
	}
	,renderDepthMap: function(stage3DProxy,entityCollector,renderer) {
		this._shadowsInvalid = false;
		this.updateDepthProjection(entityCollector.get_camera());
		if(this._depthMap == null) this._depthMap = this.createDepthTexture();
		this.drawDepthMap(this._depthMap.getTextureForStage3D(stage3DProxy),entityCollector.scene,renderer);
	}
	,createDepthTexture: function() {
		return new away3d.textures.RenderTexture(this._depthMapSize,this._depthMapSize);
	}
	,dispose: function() {
		this._casterCollector = null;
		if(this._depthMap != null && !this._explicitDepthMap) this._depthMap.dispose();
		this._depthMap = null;
	}
	,set_depthMapSize: function(value) {
		if(value == this._depthMapSize) return value;
		this._depthMapSize = value;
		if(this._explicitDepthMap) throw new flash.errors.Error("Cannot set depth map size for the current renderer."); else if(this._depthMap != null) {
			this._depthMap.dispose();
			this._depthMap = null;
		}
		return value;
	}
	,get_depthMapSize: function() {
		return this._depthMapSize;
	}
	,get_depthMap: function() {
		if(this._depthMap == null) this._depthMap = this.createDepthTexture();
		return this._depthMap;
	}
	,set_light: function(value) {
		this._light = value;
		return value;
	}
	,get_light: function() {
		return this._light;
	}
	,setDepthMap: function(depthMap) {
		if(this._depthMap == depthMap) return;
		if(this._depthMap != null && !this._explicitDepthMap) this._depthMap.dispose();
		this._depthMap = depthMap;
		if(this._depthMap != null) {
			this._explicitDepthMap = true;
			this._depthMapSize = this._depthMap.get_width();
		} else this._explicitDepthMap = false;
	}
	,updateShadows: function() {
		this._shadowsInvalid = true;
	}
	,set_autoUpdateShadows: function(value) {
		this._autoUpdateShadows = value;
		return value;
	}
	,get_autoUpdateShadows: function() {
		return this._autoUpdateShadows;
	}
	,createCasterCollector: function() {
		return new away3d.core.traverse.ShadowCasterCollector();
	}
	,__class__: away3d.lights.shadowmaps.ShadowMapperBase
	,__properties__: {set_autoUpdateShadows:"set_autoUpdateShadows",get_autoUpdateShadows:"get_autoUpdateShadows",set_light:"set_light",get_light:"get_light",get_depthMap:"get_depthMap",set_depthMapSize:"set_depthMapSize",get_depthMapSize:"get_depthMapSize"}
}
away3d.lights.shadowmaps.CubeMapShadowMapper = function() {
	away3d.lights.shadowmaps.ShadowMapperBase.call(this);
	this._depthMapSize = 512;
	this._needsRender = flash._Vector.Vector_Impl_._new(6,true);
	this.initCameras();
};
$hxClasses["away3d.lights.shadowmaps.CubeMapShadowMapper"] = away3d.lights.shadowmaps.CubeMapShadowMapper;
away3d.lights.shadowmaps.CubeMapShadowMapper.__name__ = ["away3d","lights","shadowmaps","CubeMapShadowMapper"];
away3d.lights.shadowmaps.CubeMapShadowMapper.__super__ = away3d.lights.shadowmaps.ShadowMapperBase;
away3d.lights.shadowmaps.CubeMapShadowMapper.prototype = $extend(away3d.lights.shadowmaps.ShadowMapperBase.prototype,{
	drawDepthMap: function(target,scene,renderer) {
		var i = 0;
		while(i < 6) {
			if(this._needsRender[i]) {
				this._casterCollector.set_camera(this._depthCameras[i]);
				this._casterCollector.clear();
				scene.traversePartitions(this._casterCollector);
				renderer.render(this._casterCollector,target,null,i);
				this._casterCollector.cleanUp();
			}
			++i;
		}
	}
	,updateDepthProjection: function(viewCamera) {
		var maxDistance = (js.Boot.__cast(this._light , away3d.lights.PointLight))._fallOff;
		var pos = this._light.get_scenePosition();
		var i = 0;
		while(i < 6) {
			this._lenses[i].set_far(maxDistance);
			this._depthCameras[i].set_position(pos);
			this._needsRender[i] = true;
			++i;
		}
	}
	,createDepthTexture: function() {
		return new away3d.textures.RenderCubeTexture(this._depthMapSize);
	}
	,addCamera: function(rotationX,rotationY,rotationZ) {
		var cam = new away3d.cameras.Camera3D();
		cam.set_rotationX(rotationX);
		cam.set_rotationY(rotationY);
		cam.set_rotationZ(rotationZ);
		cam.get_lens().set_near(.01);
		(js.Boot.__cast(cam.get_lens() , away3d.cameras.lenses.PerspectiveLens)).set_fieldOfView(90);
		flash._Vector.Vector_Impl_.push(this._lenses,js.Boot.__cast(cam.get_lens() , away3d.cameras.lenses.PerspectiveLens));
		cam.get_lens().set_aspectRatio(1);
		flash._Vector.Vector_Impl_.push(this._depthCameras,cam);
	}
	,initCameras: function() {
		this._depthCameras = flash._Vector.Vector_Impl_._new();
		this._lenses = flash._Vector.Vector_Impl_._new();
		this.addCamera(0,90,0);
		this.addCamera(0,-90,0);
		this.addCamera(-90,0,0);
		this.addCamera(90,0,0);
		this.addCamera(0,0,0);
		this.addCamera(0,180,0);
	}
	,__class__: away3d.lights.shadowmaps.CubeMapShadowMapper
});
away3d.lights.shadowmaps.DirectionalShadowMapper = function() {
	this._lightOffset = 10000;
	this._snap = 64;
	away3d.lights.shadowmaps.ShadowMapperBase.call(this);
	this._cullPlanes = flash._Vector.Vector_Impl_._new();
	this._overallDepthLens = new away3d.cameras.lenses.FreeMatrixLens();
	this._overallDepthCamera = new away3d.cameras.Camera3D(this._overallDepthLens);
	this._localFrustum = flash._Vector.Vector_Impl_._new(24);
	this._matrix = new flash.geom.Matrix3D();
};
$hxClasses["away3d.lights.shadowmaps.DirectionalShadowMapper"] = away3d.lights.shadowmaps.DirectionalShadowMapper;
away3d.lights.shadowmaps.DirectionalShadowMapper.__name__ = ["away3d","lights","shadowmaps","DirectionalShadowMapper"];
away3d.lights.shadowmaps.DirectionalShadowMapper.__super__ = away3d.lights.shadowmaps.ShadowMapperBase;
away3d.lights.shadowmaps.DirectionalShadowMapper.prototype = $extend(away3d.lights.shadowmaps.ShadowMapperBase.prototype,{
	updateProjectionFromFrustumCorners: function(viewCamera,corners,matrix) {
		var raw = away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER;
		var dir;
		var x;
		var y;
		var z;
		var minX;
		var minY;
		var maxX;
		var maxY;
		var i;
		dir = (js.Boot.__cast(this._light , away3d.lights.DirectionalLight)).get_sceneDirection();
		this._overallDepthCamera.set_transform(this._light.get_sceneTransform());
		x = (viewCamera.get_x() - dir.x * this._lightOffset) / this._snap * this._snap;
		y = (viewCamera.get_y() - dir.y * this._lightOffset) / this._snap * this._snap;
		z = (viewCamera.get_z() - dir.z * this._lightOffset) / this._snap * this._snap;
		this._overallDepthCamera.set_x(x);
		this._overallDepthCamera.set_y(y);
		this._overallDepthCamera.set_z(z);
		this._matrix.copyFrom(this._overallDepthCamera.get_inverseSceneTransform());
		this._matrix.prepend(viewCamera.get_sceneTransform());
		this._matrix.transformVectors(corners,this._localFrustum);
		minX = maxX = this._localFrustum[0];
		minY = maxY = this._localFrustum[1];
		this._maxZ = this._localFrustum[2];
		i = 3;
		while(i < 24) {
			x = this._localFrustum[i];
			y = this._localFrustum[i + 1];
			z = this._localFrustum[i + 2];
			if(x < minX) minX = x;
			if(x > maxX) maxX = x;
			if(y < minY) minY = y;
			if(y > maxY) maxY = y;
			if(z > this._maxZ) this._maxZ = z;
			i += 3;
		}
		this._minZ = 1;
		var w = maxX - minX;
		var h = maxY - minY;
		var d = 1 / (this._maxZ - this._minZ);
		if(minX < 0) minX -= this._snap;
		if(minY < 0) minY -= this._snap;
		minX = minX / this._snap * this._snap;
		minY = minY / this._snap * this._snap;
		var snap2 = 2 * this._snap;
		w = (w / snap2 + 2) * snap2;
		h = (h / snap2 + 2) * snap2;
		maxX = minX + w;
		maxY = minY + h;
		w = 1 / w;
		h = 1 / h;
		raw[0] = 2 * w;
		raw[5] = 2 * h;
		raw[10] = d;
		raw[12] = -(maxX + minX) * w;
		raw[13] = -(maxY + minY) * h;
		raw[14] = -this._minZ * d;
		raw[15] = 1;
		raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;
		away3d.Stage3DUtils.copyRawDataFrom(matrix,raw);
	}
	,updateDepthProjection: function(viewCamera) {
		this.updateProjectionFromFrustumCorners(viewCamera,viewCamera.get_lens().get_frustumCorners(),this._matrix);
		this._overallDepthLens.set_matrix(this._matrix);
		this.updateCullPlanes(viewCamera);
	}
	,updateCullPlanes: function(viewCamera) {
		var lightFrustumPlanes = this._overallDepthCamera.get_frustumPlanes();
		var viewFrustumPlanes = viewCamera.get_frustumPlanes();
		if(4 < this._cullPlanes.length) this._cullPlanes = this._cullPlanes.slice(0,4);
		while(4 > this._cullPlanes.length) this._cullPlanes.push(null);
		4;
		this._cullPlanes[0] = lightFrustumPlanes[0];
		this._cullPlanes[1] = lightFrustumPlanes[1];
		this._cullPlanes[2] = lightFrustumPlanes[2];
		this._cullPlanes[3] = lightFrustumPlanes[3];
		var dir = (js.Boot.__cast(this._light , away3d.lights.DirectionalLight)).get_sceneDirection();
		var dirX = dir.x;
		var dirY = dir.y;
		var dirZ = dir.z;
		var j = 4;
		var i = 0;
		while(i < 6) {
			var plane = viewFrustumPlanes[i];
			if(plane.a * dirX + plane.b * dirY + plane.c * dirZ < 0) this._cullPlanes[j++] = plane;
			++i;
		}
	}
	,drawDepthMap: function(target,scene,renderer) {
		this._casterCollector.set_camera(this._overallDepthCamera);
		this._casterCollector.set_cullPlanes(this._cullPlanes);
		this._casterCollector.clear();
		scene.traversePartitions(this._casterCollector);
		renderer.render(this._casterCollector,target);
		this._casterCollector.cleanUp();
	}
	,get_depth: function() {
		return this._maxZ - this._minZ;
	}
	,get_depthProjection: function() {
		return this._overallDepthCamera.get_viewProjection();
	}
	,set_lightOffset: function(value) {
		this._lightOffset = value;
		return value;
	}
	,get_lightOffset: function() {
		return this._lightOffset;
	}
	,set_snap: function(value) {
		this._snap = value;
		return value;
	}
	,get_snap: function() {
		return this._snap;
	}
	,__class__: away3d.lights.shadowmaps.DirectionalShadowMapper
	,__properties__: $extend(away3d.lights.shadowmaps.ShadowMapperBase.prototype.__properties__,{set_snap:"set_snap",get_snap:"get_snap",set_lightOffset:"set_lightOffset",get_lightOffset:"get_lightOffset",get_depthProjection:"get_depthProjection",get_depth:"get_depth"})
});
away3d.materials.MaterialBase = function() {
	this._blendMode = flash.display.BlendMode.NORMAL;
	this._mipmap = true;
	this._smooth = true;
	this._depthCompareMode = 515;
	this._owners = flash._Vector.Vector_Impl_._new();
	this._passes = flash._Vector.Vector_Impl_._new();
	this._depthPass = new away3d.materials.passes.DepthMapPass();
	this._distancePass = new away3d.materials.passes.DistanceMapPass();
	this._depthPass.addEventListener(flash.events.Event.CHANGE,$bind(this,this.onDepthPassChange));
	this._distancePass.addEventListener(flash.events.Event.CHANGE,$bind(this,this.onDistancePassChange));
	this.set_alphaPremultiplied(true);
	this._uniqueId = away3d.materials.MaterialBase.MATERIAL_ID_COUNT++;
	this._depthPassId = 0;
	this._numPasses = 0;
	away3d.library.assets.NamedAssetBase.call(this);
};
$hxClasses["away3d.materials.MaterialBase"] = away3d.materials.MaterialBase;
away3d.materials.MaterialBase.__name__ = ["away3d","materials","MaterialBase"];
away3d.materials.MaterialBase.__interfaces__ = [away3d.library.assets.IAsset];
away3d.materials.MaterialBase.__super__ = away3d.library.assets.NamedAssetBase;
away3d.materials.MaterialBase.prototype = $extend(away3d.library.assets.NamedAssetBase.prototype,{
	onDepthPassChange: function(event) {
		var ids = this._depthPass._program3Dids;
		var len = flash._Vector.Vector_Impl_.get_length(ids);
		this._depthPassId = 0;
		var j = 0;
		while(j < len) {
			if(ids[j] != -1) {
				this._depthPassId += ids[j];
				j = len;
			}
			++j;
		}
	}
	,onDistancePassChange: function(event) {
		var ids = this._distancePass._program3Dids;
		var len = flash._Vector.Vector_Impl_.get_length(ids);
		this._depthPassId = 0;
		var j = 0;
		while(j < len) {
			if(ids[j] != -1) {
				this._depthPassId += ids[j];
				j = len;
			}
			++j;
		}
	}
	,onPassChange: function(event) {
		var mult = 1;
		var ids;
		var len;
		this._renderOrderId = 0;
		var i = 0;
		while(i < this._numPasses) {
			ids = this._passes[i]._program3Dids;
			len = flash._Vector.Vector_Impl_.get_length(ids);
			var j = 0;
			while(j < len) {
				if(ids[j] != -1) {
					this._renderOrderId += mult * ids[j] | 0;
					j = len;
				}
				++j;
			}
			mult *= 1000;
			++i;
		}
	}
	,addPass: function(pass) {
		this._passes[this._numPasses++] = pass;
		pass.set_animationSet(this._animationSet);
		pass.set_alphaPremultiplied(this._alphaPremultiplied);
		pass.set_mipmap(this._mipmap);
		pass.set_smooth(this._smooth);
		pass.set_repeat(this._repeat);
		pass.set_lightPicker(this._lightPicker);
		pass.set_bothSides(this._bothSides);
		pass.addEventListener(flash.events.Event.CHANGE,$bind(this,this.onPassChange));
		this.invalidatePasses(null);
	}
	,clearPasses: function() {
		var i = 0;
		while(i < this._numPasses) {
			this._passes[i].removeEventListener(flash.events.Event.CHANGE,$bind(this,this.onPassChange));
			++i;
		}
		if(0 < this._passes.length) this._passes = this._passes.slice(0,0);
		while(0 > this._passes.length) this._passes.push(null);
		0;
		this._numPasses = 0;
	}
	,removePass: function(pass) {
		flash._Vector.Vector_Impl_.splice(this._passes,flash._Vector.Vector_Impl_.indexOf(this._passes,pass),1);
		--this._numPasses;
	}
	,invalidatePasses: function(triggerPass) {
		var owner;
		this._depthPass.invalidateShaderProgram();
		this._distancePass.invalidateShaderProgram();
		if(this._animationSet != null) {
			this._animationSet.resetGPUCompatibility();
			var $it0 = ((function(_e) {
				return function() {
					return $iterator(flash._Vector.Vector_Impl_)(_e);
				};
			})(this._owners))();
			while( $it0.hasNext() ) {
				var owner1 = $it0.next();
				if(owner1.get_animator() != null) {
					owner1.get_animator().testGPUCompatibility(this._depthPass);
					owner1.get_animator().testGPUCompatibility(this._distancePass);
				}
			}
		}
		var i = 0;
		while(i < this._numPasses) {
			if(this._passes[i] != triggerPass) this._passes[i].invalidateShaderProgram(false);
			if(this._animationSet != null) {
				var $it1 = ((function(_e1) {
					return function() {
						return $iterator(flash._Vector.Vector_Impl_)(_e1);
					};
				})(this._owners))();
				while( $it1.hasNext() ) {
					var owner1 = $it1.next();
					if(owner1.get_animator() != null) owner1.get_animator().testGPUCompatibility(this._passes[i]);
				}
			}
			++i;
		}
	}
	,deactivate: function(stage3DProxy) {
		this._passes[this._numPasses - 1].deactivate(stage3DProxy);
	}
	,updateMaterial: function(context) {
	}
	,get_owners: function() {
		return this._owners;
	}
	,removeOwner: function(owner) {
		flash._Vector.Vector_Impl_.splice(this._owners,flash._Vector.Vector_Impl_.indexOf(this._owners,owner),1);
		if(flash._Vector.Vector_Impl_.get_length(this._owners) == 0) {
			this._animationSet = null;
			var i = 0;
			while(i < this._numPasses) {
				this._passes[i].set_animationSet(this._animationSet);
				++i;
			}
			this._depthPass.set_animationSet(this._animationSet);
			this._distancePass.set_animationSet(this._animationSet);
			this.invalidatePasses(null);
		}
	}
	,addOwner: function(owner) {
		flash._Vector.Vector_Impl_.push(this._owners,owner);
		if(owner.get_animator() != null) {
			if(this._animationSet != null && owner.get_animator().get_animationSet() != this._animationSet) throw new flash.errors.Error("A Material instance cannot be shared across renderables with different animator libraries"); else if(this._animationSet != owner.get_animator().get_animationSet()) {
				this._animationSet = owner.get_animator().get_animationSet();
				var i = 0;
				while(i < this._numPasses) {
					this._passes[i].set_animationSet(this._animationSet);
					++i;
				}
				this._depthPass.set_animationSet(this._animationSet);
				this._distancePass.set_animationSet(this._animationSet);
				this.invalidatePasses(null);
			}
		}
	}
	,renderPass: function(index,renderable,stage3DProxy,entityCollector,viewProjection) {
		if(this._lightPicker != null) this._lightPicker.collectLights(renderable,entityCollector);
		var pass = this._passes[index];
		if(renderable.get_animator() != null) pass.updateAnimationState(renderable,stage3DProxy,entityCollector.get_camera());
		pass.render(renderable,stage3DProxy,entityCollector.get_camera(),viewProjection);
	}
	,deactivatePass: function(index,stage3DProxy) {
		this._passes[index].deactivate(stage3DProxy);
	}
	,activatePass: function(index,stage3DProxy,camera) {
		this._passes[index].activate(stage3DProxy,camera);
	}
	,passRendersToTexture: function(index) {
		return this._passes[index].get_renderToTexture();
	}
	,renderDepth: function(renderable,stage3DProxy,camera,viewProjection) {
		if(this._distanceBasedDepthRender) {
			if(renderable.get_animator() != null) this._distancePass.updateAnimationState(renderable,stage3DProxy,camera);
			this._distancePass.render(renderable,stage3DProxy,camera,viewProjection);
		} else {
			if(renderable.get_animator() != null) this._depthPass.updateAnimationState(renderable,stage3DProxy,camera);
			this._depthPass.render(renderable,stage3DProxy,camera,viewProjection);
		}
	}
	,deactivateForDepth: function(stage3DProxy) {
		if(this._distanceBasedDepthRender) this._distancePass.deactivate(stage3DProxy); else this._depthPass.deactivate(stage3DProxy);
	}
	,activateForDepth: function(stage3DProxy,camera,distanceBased) {
		if(distanceBased == null) distanceBased = false;
		this._distanceBasedDepthRender = distanceBased;
		if(distanceBased) this._distancePass.activate(stage3DProxy,camera); else this._depthPass.activate(stage3DProxy,camera);
	}
	,hasDepthAlphaThreshold: function() {
		return this._depthPass.get_alphaThreshold() > 0;
	}
	,get_numPasses: function() {
		return this._numPasses;
	}
	,get_uniqueId: function() {
		return this._uniqueId;
	}
	,get_requiresBlending: function() {
		return this._blendMode != flash.display.BlendMode.NORMAL;
	}
	,set_alphaPremultiplied: function(value) {
		this._alphaPremultiplied = value;
		var i = 0;
		while(i < this._numPasses) {
			this._passes[i].set_alphaPremultiplied(value);
			++i;
		}
		return value;
	}
	,get_alphaPremultiplied: function() {
		return this._alphaPremultiplied;
	}
	,set_blendMode: function(value) {
		this._blendMode = value;
		return value;
	}
	,get_blendMode: function() {
		return this._blendMode;
	}
	,set_bothSides: function(value) {
		this._bothSides = value;
		var i = 0;
		while(i < this._numPasses) {
			this._passes[i].set_bothSides(value);
			++i;
		}
		this._depthPass.set_bothSides(value);
		this._distancePass.set_bothSides(value);
		return value;
	}
	,get_bothSides: function() {
		return this._bothSides;
	}
	,dispose: function() {
		var i = 0;
		i = 0;
		while(i < this._numPasses) {
			this._passes[i].dispose();
			++i;
		}
		this._depthPass.dispose();
		this._distancePass.dispose();
		this._depthPass.removeEventListener(flash.events.Event.CHANGE,$bind(this,this.onDepthPassChange));
		this._distancePass.removeEventListener(flash.events.Event.CHANGE,$bind(this,this.onDistancePassChange));
	}
	,set_repeat: function(value) {
		this._repeat = value;
		var i = 0;
		while(i < this._numPasses) {
			this._passes[i].set_repeat(value);
			++i;
		}
		return value;
	}
	,get_repeat: function() {
		return this._repeat;
	}
	,set_depthCompareMode: function(value) {
		this._depthCompareMode = value;
		return value;
	}
	,get_depthCompareMode: function() {
		return this._depthCompareMode;
	}
	,set_smooth: function(value) {
		this._smooth = value;
		var i = 0;
		while(i < this._numPasses) {
			this._passes[i].set_smooth(value);
			++i;
		}
		return value;
	}
	,get_smooth: function() {
		return this._smooth;
	}
	,set_mipmap: function(value) {
		this._mipmap = value;
		var i = 0;
		while(i < this._numPasses) {
			this._passes[i].set_mipmap(value);
			++i;
		}
		return value;
	}
	,get_mipmap: function() {
		return this._mipmap;
	}
	,set_lightPicker: function(value) {
		if(value != this._lightPicker) {
			this._lightPicker = value;
			var len = flash._Vector.Vector_Impl_.get_length(this._passes);
			var i = 0;
			while(i < len) {
				this._passes[i].set_lightPicker(this._lightPicker);
				++i;
			}
		}
		return value;
	}
	,get_lightPicker: function() {
		return this._lightPicker;
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.MATERIAL;
	}
	,__class__: away3d.materials.MaterialBase
	,__properties__: $extend(away3d.library.assets.NamedAssetBase.prototype.__properties__,{get_assetType:"get_assetType",set_lightPicker:"set_lightPicker",get_lightPicker:"get_lightPicker",set_mipmap:"set_mipmap",get_mipmap:"get_mipmap",set_smooth:"set_smooth",get_smooth:"get_smooth",set_depthCompareMode:"set_depthCompareMode",get_depthCompareMode:"get_depthCompareMode",set_repeat:"set_repeat",get_repeat:"get_repeat",set_bothSides:"set_bothSides",get_bothSides:"get_bothSides",set_blendMode:"set_blendMode",get_blendMode:"get_blendMode",set_alphaPremultiplied:"set_alphaPremultiplied",get_alphaPremultiplied:"get_alphaPremultiplied",get_requiresBlending:"get_requiresBlending",get_uniqueId:"get_uniqueId",get_numPasses:"get_numPasses",get_owners:"get_owners"})
});
away3d.materials.SinglePassMaterialBase = function() {
	away3d.materials.MaterialBase.call(this);
	this.addPass(this._screenPass = new away3d.materials.passes.SuperShaderPass(this));
};
$hxClasses["away3d.materials.SinglePassMaterialBase"] = away3d.materials.SinglePassMaterialBase;
away3d.materials.SinglePassMaterialBase.__name__ = ["away3d","materials","SinglePassMaterialBase"];
away3d.materials.SinglePassMaterialBase.__super__ = away3d.materials.MaterialBase;
away3d.materials.SinglePassMaterialBase.prototype = $extend(away3d.materials.MaterialBase.prototype,{
	set_lightPicker: function(value) {
		away3d.materials.MaterialBase.prototype.set_lightPicker.call(this,value);
		this._screenPass.set_lightPicker(value);
		return value;
	}
	,updateMaterial: function(context) {
		if(this._screenPass._passesDirty) {
			this.clearPasses();
			if(this._screenPass._passes != null) {
				var len = flash._Vector.Vector_Impl_.get_length(this._screenPass._passes);
				var i = 0;
				while(i < len) {
					this.addPass(this._screenPass._passes[i]);
					++i;
				}
			}
			this.addPass(this._screenPass);
			this._screenPass._passesDirty = false;
		}
	}
	,set_alphaBlending: function(value) {
		this._alphaBlending = value;
		this._screenPass.setBlendMode(this.get_blendMode() == flash.display.BlendMode.NORMAL && this.get_requiresBlending()?flash.display.BlendMode.LAYER:this.get_blendMode());
		this._screenPass.set_preserveAlpha(this.get_requiresBlending());
		return value;
	}
	,get_alphaBlending: function() {
		return this._alphaBlending;
	}
	,set_specularColor: function(value) {
		this._screenPass.get_specularMethod().set_specularColor(value);
		return value;
	}
	,get_specularColor: function() {
		return this._screenPass.get_specularMethod().get_specularColor();
	}
	,set_ambientColor: function(value) {
		this._screenPass.get_ambientMethod().set_ambientColor(value);
		return value;
	}
	,get_ambientColor: function() {
		return this._screenPass.get_ambientMethod().get_ambientColor();
	}
	,set_specular: function(value) {
		if(this._screenPass.get_specularMethod() != null) this._screenPass.get_specularMethod().set_specular(value);
		return value;
	}
	,get_specular: function() {
		return this._screenPass.get_specularMethod() != null?this._screenPass.get_specularMethod().get_specular():0;
	}
	,set_ambient: function(value) {
		this._screenPass.get_ambientMethod().set_ambient(value);
		return value;
	}
	,get_ambient: function() {
		return this._screenPass.get_ambientMethod().get_ambient();
	}
	,set_gloss: function(value) {
		if(this._screenPass.get_specularMethod() != null) this._screenPass.get_specularMethod().set_gloss(value);
		return value;
	}
	,get_gloss: function() {
		return this._screenPass.get_specularMethod() != null?this._screenPass.get_specularMethod().get_gloss():0;
	}
	,set_specularMap: function(value) {
		if(this._screenPass.get_specularMethod() != null) this._screenPass.get_specularMethod().set_texture(value); else throw new flash.errors.Error("No specular method was set to assign the specularGlossMap to");
		return value;
	}
	,get_specularMap: function() {
		return this._screenPass.get_specularMethod().get_texture();
	}
	,set_normalMap: function(value) {
		this._screenPass.set_normalMap(value);
		return value;
	}
	,get_normalMap: function() {
		return this._screenPass.get_normalMap();
	}
	,set_mipmap: function(value) {
		if(this._mipmap == value) return value;
		away3d.materials.MaterialBase.prototype.set_mipmap.call(this,value);
		return value;
	}
	,removeMethod: function(method) {
		this._screenPass.removeMethod(method);
	}
	,addMethodAt: function(method,index) {
		this._screenPass.addMethodAt(method,index);
	}
	,getMethodAt: function(index) {
		return this._screenPass.getMethodAt(index);
	}
	,hasMethod: function(method) {
		return this._screenPass.hasMethod(method);
	}
	,get_numMethods: function() {
		return this._screenPass.get_numMethods();
	}
	,addMethod: function(method) {
		this._screenPass.addMethod(method);
	}
	,set_specularMethod: function(value) {
		this._screenPass.set_specularMethod(value);
		return value;
	}
	,get_specularMethod: function() {
		return this._screenPass.get_specularMethod();
	}
	,set_normalMethod: function(value) {
		this._screenPass.set_normalMethod(value);
		return value;
	}
	,get_normalMethod: function() {
		return this._screenPass.get_normalMethod();
	}
	,set_diffuseMethod: function(value) {
		this._screenPass.set_diffuseMethod(value);
		return value;
	}
	,get_diffuseMethod: function() {
		return this._screenPass.get_diffuseMethod();
	}
	,set_shadowMethod: function(value) {
		this._screenPass.set_shadowMethod(value);
		return value;
	}
	,get_shadowMethod: function() {
		return this._screenPass.get_shadowMethod();
	}
	,set_ambientMethod: function(value) {
		this._screenPass.set_ambientMethod(value);
		return value;
	}
	,get_ambientMethod: function() {
		return this._screenPass.get_ambientMethod();
	}
	,set_colorTransform: function(value) {
		this._screenPass.set_colorTransform(value);
		return value;
	}
	,get_colorTransform: function() {
		return this._screenPass.get_colorTransform();
	}
	,get_requiresBlending: function() {
		return away3d.materials.MaterialBase.prototype.get_requiresBlending.call(this) || this._alphaBlending || this._screenPass.get_colorTransform() != null && this._screenPass.get_colorTransform().alphaMultiplier < 1;
	}
	,set_diffuseLightSources: function(value) {
		this._screenPass.set_diffuseLightSources(value);
		return value;
	}
	,get_diffuseLightSources: function() {
		return this._screenPass.get_diffuseLightSources();
	}
	,set_specularLightSources: function(value) {
		this._screenPass.set_specularLightSources(value);
		return value;
	}
	,get_specularLightSources: function() {
		return this._screenPass.get_specularLightSources();
	}
	,activateForDepth: function(stage3DProxy,camera,distanceBased) {
		if(distanceBased == null) distanceBased = false;
		if(distanceBased) this._distancePass.set_alphaMask(this._screenPass.get_diffuseMethod().get_texture()); else this._depthPass.set_alphaMask(this._screenPass.get_diffuseMethod().get_texture());
		away3d.materials.MaterialBase.prototype.activateForDepth.call(this,stage3DProxy,camera,distanceBased);
	}
	,set_depthCompareMode: function(value) {
		away3d.materials.MaterialBase.prototype.set_depthCompareMode.call(this,value);
		this._screenPass.set_depthCompareMode(value);
		return value;
	}
	,set_blendMode: function(value) {
		away3d.materials.MaterialBase.prototype.set_blendMode.call(this,value);
		this._screenPass.setBlendMode(this.get_blendMode() == flash.display.BlendMode.NORMAL && this.get_requiresBlending()?flash.display.BlendMode.LAYER:this.get_blendMode());
		return value;
	}
	,set_alphaThreshold: function(value) {
		this._screenPass.get_diffuseMethod().set_alphaThreshold(value);
		this._depthPass.set_alphaThreshold(value);
		this._distancePass.set_alphaThreshold(value);
		return value;
	}
	,get_alphaThreshold: function() {
		return this._screenPass.get_diffuseMethod().get_alphaThreshold();
	}
	,set_enableLightFallOff: function(value) {
		this._screenPass.set_enableLightFallOff(value);
		return value;
	}
	,get_enableLightFallOff: function() {
		return this._screenPass.get_enableLightFallOff();
	}
	,__class__: away3d.materials.SinglePassMaterialBase
	,__properties__: $extend(away3d.materials.MaterialBase.prototype.__properties__,{set_enableLightFallOff:"set_enableLightFallOff",get_enableLightFallOff:"get_enableLightFallOff",set_alphaThreshold:"set_alphaThreshold",get_alphaThreshold:"get_alphaThreshold",set_specularLightSources:"set_specularLightSources",get_specularLightSources:"get_specularLightSources",set_diffuseLightSources:"set_diffuseLightSources",get_diffuseLightSources:"get_diffuseLightSources",set_colorTransform:"set_colorTransform",get_colorTransform:"get_colorTransform",set_ambientMethod:"set_ambientMethod",get_ambientMethod:"get_ambientMethod",set_shadowMethod:"set_shadowMethod",get_shadowMethod:"get_shadowMethod",set_diffuseMethod:"set_diffuseMethod",get_diffuseMethod:"get_diffuseMethod",set_normalMethod:"set_normalMethod",get_normalMethod:"get_normalMethod",set_specularMethod:"set_specularMethod",get_specularMethod:"get_specularMethod",get_numMethods:"get_numMethods",set_normalMap:"set_normalMap",get_normalMap:"get_normalMap",set_specularMap:"set_specularMap",get_specularMap:"get_specularMap",set_gloss:"set_gloss",get_gloss:"get_gloss",set_ambient:"set_ambient",get_ambient:"get_ambient",set_specular:"set_specular",get_specular:"get_specular",set_ambientColor:"set_ambientColor",get_ambientColor:"get_ambientColor",set_specularColor:"set_specularColor",get_specularColor:"get_specularColor",set_alphaBlending:"set_alphaBlending",get_alphaBlending:"get_alphaBlending"})
});
away3d.materials.ColorMaterial = function(color,alpha) {
	if(alpha == null) alpha = 1;
	if(color == null) color = 13421772;
	this._diffuseAlpha = 1;
	away3d.materials.SinglePassMaterialBase.call(this);
	this.set_color(color);
	this.set_alpha(alpha);
};
$hxClasses["away3d.materials.ColorMaterial"] = away3d.materials.ColorMaterial;
away3d.materials.ColorMaterial.__name__ = ["away3d","materials","ColorMaterial"];
away3d.materials.ColorMaterial.__super__ = away3d.materials.SinglePassMaterialBase;
away3d.materials.ColorMaterial.prototype = $extend(away3d.materials.SinglePassMaterialBase.prototype,{
	get_requiresBlending: function() {
		return away3d.materials.SinglePassMaterialBase.prototype.get_requiresBlending.call(this) || this._diffuseAlpha < 1;
	}
	,set_color: function(value) {
		this._screenPass.get_diffuseMethod().set_diffuseColor(value);
		return value;
	}
	,get_color: function() {
		return this._screenPass.get_diffuseMethod().get_diffuseColor();
	}
	,set_alpha: function(value) {
		if(value > 1) value = 1; else if(value < 0) value = 0;
		this._screenPass.get_diffuseMethod().set_diffuseAlpha(this._diffuseAlpha = value);
		this._screenPass.set_preserveAlpha(this.get_requiresBlending());
		this._screenPass.setBlendMode(this.get_blendMode() == flash.display.BlendMode.NORMAL && this.get_requiresBlending()?flash.display.BlendMode.LAYER:this.get_blendMode());
		return value;
	}
	,get_alpha: function() {
		return this._screenPass.get_diffuseMethod().get_diffuseAlpha();
	}
	,__class__: away3d.materials.ColorMaterial
	,__properties__: $extend(away3d.materials.SinglePassMaterialBase.prototype.__properties__,{set_alpha:"set_alpha",get_alpha:"get_alpha",set_color:"set_color",get_color:"get_color"})
});
away3d.materials.LightSources = function() { }
$hxClasses["away3d.materials.LightSources"] = away3d.materials.LightSources;
away3d.materials.LightSources.__name__ = ["away3d","materials","LightSources"];
away3d.materials.SegmentMaterial = function(thickness) {
	if(thickness == null) thickness = 1.25;
	away3d.materials.MaterialBase.call(this);
	this.set_bothSides(true);
	this.addPass(this._screenPass = new away3d.materials.passes.SegmentPass(thickness));
	this._screenPass.set_material(this);
};
$hxClasses["away3d.materials.SegmentMaterial"] = away3d.materials.SegmentMaterial;
away3d.materials.SegmentMaterial.__name__ = ["away3d","materials","SegmentMaterial"];
away3d.materials.SegmentMaterial.__super__ = away3d.materials.MaterialBase;
away3d.materials.SegmentMaterial.prototype = $extend(away3d.materials.MaterialBase.prototype,{
	__class__: away3d.materials.SegmentMaterial
});
away3d.materials.TextureMaterial = function(texture,smooth,repeat,mipmap) {
	if(mipmap == null) mipmap = true;
	if(repeat == null) repeat = false;
	if(smooth == null) smooth = true;
	away3d.materials.SinglePassMaterialBase.call(this);
	this.set_texture(texture);
	this.set_smooth(smooth);
	this.set_repeat(repeat);
	this.set_mipmap(mipmap);
};
$hxClasses["away3d.materials.TextureMaterial"] = away3d.materials.TextureMaterial;
away3d.materials.TextureMaterial.__name__ = ["away3d","materials","TextureMaterial"];
away3d.materials.TextureMaterial.__super__ = away3d.materials.SinglePassMaterialBase;
away3d.materials.TextureMaterial.prototype = $extend(away3d.materials.SinglePassMaterialBase.prototype,{
	set_ambientTexture: function(value) {
		this._screenPass.get_ambientMethod().set_texture(value);
		this._screenPass.get_diffuseMethod().set_useAmbientTexture(js.Boot.__cast(value != null , Bool));
		return value;
	}
	,get_ambientTexture: function() {
		return this._screenPass.get_ambientMethod().get_texture();
	}
	,set_texture: function(value) {
		this._screenPass.get_diffuseMethod().set_texture(value);
		return value;
	}
	,get_texture: function() {
		return this._screenPass.get_diffuseMethod().get_texture();
	}
	,set_alpha: function(value) {
		if(value > 1) value = 1; else if(value < 0) value = 0;
		if(this.get_colorTransform() == null) this.set_colorTransform(new flash.geom.ColorTransform());
		this.get_colorTransform().alphaMultiplier = value;
		this._screenPass.set_preserveAlpha(this.get_requiresBlending());
		this._screenPass.setBlendMode(this.get_blendMode() == flash.display.BlendMode.NORMAL && this.get_requiresBlending()?flash.display.BlendMode.LAYER:this.get_blendMode());
		return value;
	}
	,get_alpha: function() {
		return this._screenPass.get_colorTransform() != null?this._screenPass.get_colorTransform().alphaMultiplier:1;
	}
	,set_animateUVs: function(value) {
		this._screenPass.set_animateUVs(value);
		return value;
	}
	,get_animateUVs: function() {
		return this._screenPass.get_animateUVs();
	}
	,__class__: away3d.materials.TextureMaterial
	,__properties__: $extend(away3d.materials.SinglePassMaterialBase.prototype.__properties__,{set_animateUVs:"set_animateUVs",get_animateUVs:"get_animateUVs",set_alpha:"set_alpha",get_alpha:"get_alpha",set_texture:"set_texture",get_texture:"get_texture",set_ambientTexture:"set_ambientTexture",get_ambientTexture:"get_ambientTexture"})
});
away3d.materials.compilation.MethodDependencyCounter = function() {
	this._usesGlobalPosFragment = false;
};
$hxClasses["away3d.materials.compilation.MethodDependencyCounter"] = away3d.materials.compilation.MethodDependencyCounter;
away3d.materials.compilation.MethodDependencyCounter.__name__ = ["away3d","materials","compilation","MethodDependencyCounter"];
away3d.materials.compilation.MethodDependencyCounter.prototype = {
	addWorldSpaceDependencies: function(fragmentLights) {
		if(this._viewDirDependencies > 0) ++this._globalPosDependencies;
		if(this._numPointLights > 0 && (this._lightSourceMask & away3d.materials.LightSources.LIGHTS) == 1) {
			++this._globalPosDependencies;
			if(fragmentLights) this._usesGlobalPosFragment = true;
		}
	}
	,get_globalPosDependencies: function() {
		return this._globalPosDependencies;
	}
	,get_secondaryUVDependencies: function() {
		return this._secondaryUVDependencies;
	}
	,get_uvDependencies: function() {
		return this._uvDependencies;
	}
	,get_viewDirDependencies: function() {
		return this._viewDirDependencies;
	}
	,get_normalDependencies: function() {
		return this._normalDependencies;
	}
	,get_projectionDependencies: function() {
		return this._projectionDependencies;
	}
	,get_usesGlobalPosFragment: function() {
		return this._usesGlobalPosFragment;
	}
	,get_tangentDependencies: function() {
		return this._tangentDependencies;
	}
	,includeMethodVO: function(methodVO) {
		if(methodVO.needsProjection) ++this._projectionDependencies;
		if(methodVO.needsGlobalVertexPos) {
			++this._globalPosDependencies;
			if(methodVO.needsGlobalFragmentPos) this._usesGlobalPosFragment = true;
		} else if(methodVO.needsGlobalFragmentPos) {
			++this._globalPosDependencies;
			this._usesGlobalPosFragment = true;
		}
		if(methodVO.needsNormals) ++this._normalDependencies;
		if(methodVO.needsTangents) ++this._tangentDependencies;
		if(methodVO.needsView) ++this._viewDirDependencies;
		if(methodVO.needsUV) ++this._uvDependencies;
		if(methodVO.needsSecondaryUV) ++this._secondaryUVDependencies;
	}
	,setPositionedLights: function(numPointLights,lightSourceMask) {
		this._numPointLights = numPointLights;
		this._lightSourceMask = lightSourceMask;
	}
	,reset: function() {
		this._projectionDependencies = 0;
		this._normalDependencies = 0;
		this._viewDirDependencies = 0;
		this._uvDependencies = 0;
		this._secondaryUVDependencies = 0;
		this._globalPosDependencies = 0;
		this._tangentDependencies = 0;
		this._usesGlobalPosFragment = false;
	}
	,__class__: away3d.materials.compilation.MethodDependencyCounter
	,__properties__: {get_tangentDependencies:"get_tangentDependencies",get_usesGlobalPosFragment:"get_usesGlobalPosFragment",get_projectionDependencies:"get_projectionDependencies",get_normalDependencies:"get_normalDependencies",get_viewDirDependencies:"get_viewDirDependencies",get_uvDependencies:"get_uvDependencies",get_secondaryUVDependencies:"get_secondaryUVDependencies",get_globalPosDependencies:"get_globalPosDependencies"}
}
haxe.ds.StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe.ds.StringMap;
haxe.ds.StringMap.__name__ = ["haxe","ds","StringMap"];
haxe.ds.StringMap.__interfaces__ = [IMap];
haxe.ds.StringMap.prototype = {
	keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key.substr(1));
		}
		return HxOverrides.iter(a);
	}
	,remove: function(key) {
		key = "$" + key;
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,exists: function(key) {
		return this.h.hasOwnProperty("$" + key);
	}
	,get: function(key) {
		return this.h["$" + key];
	}
	,set: function(key,value) {
		this.h["$" + key] = value;
	}
	,__class__: haxe.ds.StringMap
}
away3d.materials.compilation.RegisterPool = function(regName,regCount,persistent) {
	if(persistent == null) persistent = true;
	this._regName = regName;
	this._regCount = regCount;
	this._persistent = persistent;
	this.initRegisters(regName,regCount);
};
$hxClasses["away3d.materials.compilation.RegisterPool"] = away3d.materials.compilation.RegisterPool;
away3d.materials.compilation.RegisterPool.__name__ = ["away3d","materials","compilation","RegisterPool"];
away3d.materials.compilation.RegisterPool._initPool = function(regName,regCount) {
	var hash = regName + regCount;
	if(away3d.materials.compilation.RegisterPool._regPool.exists(hash)) return hash;
	var vectorRegisters = flash._Vector.Vector_Impl_._new(regCount,true);
	away3d.materials.compilation.RegisterPool._regPool.set(hash,vectorRegisters);
	var registerComponents = [[],[],[],[]];
	away3d.materials.compilation.RegisterPool._regCompsPool.set(hash,registerComponents);
	var _g = 0;
	while(_g < regCount) {
		var i = _g++;
		vectorRegisters[i] = new away3d.materials.compilation.ShaderRegisterElement(regName,i);
		var _g1 = 0;
		while(_g1 < 4) {
			var j = _g1++;
			registerComponents[j][i] = new away3d.materials.compilation.ShaderRegisterElement(regName,i,j);
		}
	}
	return hash;
}
away3d.materials.compilation.RegisterPool.prototype = {
	isRegisterUsed: function(index) {
		if(this._usedVectorCount[index] > 0) return true;
		var i = 0;
		while(i < 4) {
			if(this._usedSingleCount[i][index] > 0) return true;
			++i;
		}
		return false;
	}
	,initRegisters: function(regName,regCount) {
		var hash = away3d.materials.compilation.RegisterPool._initPool(regName,regCount);
		this._vectorRegisters = away3d.materials.compilation.RegisterPool._regPool.get(hash);
		this._registerComponents = away3d.materials.compilation.RegisterPool._regCompsPool.get(hash);
		this._usedVectorCount = flash._Vector.Vector_Impl_._new(regCount,true);
		this._usedSingleCount = flash._Vector.Vector_Impl_._new(4,true);
		this._usedSingleCount[0] = flash._Vector.Vector_Impl_._new(regCount,true);
		this._usedSingleCount[1] = flash._Vector.Vector_Impl_._new(regCount,true);
		this._usedSingleCount[2] = flash._Vector.Vector_Impl_._new(regCount,true);
		this._usedSingleCount[3] = flash._Vector.Vector_Impl_._new(regCount,true);
		away3d.Stage3DUtils.fillVector(this._usedVectorCount,0,regCount,0);
		away3d.Stage3DUtils.fillVector(this._usedSingleCount[0],0,regCount,0);
		away3d.Stage3DUtils.fillVector(this._usedSingleCount[1],0,regCount,0);
		away3d.Stage3DUtils.fillVector(this._usedSingleCount[2],0,regCount,0);
		away3d.Stage3DUtils.fillVector(this._usedSingleCount[3],0,regCount,0);
	}
	,hasRegisteredRegs: function() {
		var i = 0;
		while(i < this._regCount) {
			if(this.isRegisterUsed(i)) return true;
			++i;
		}
		return false;
	}
	,dispose: function() {
		this._vectorRegisters = null;
		this._registerComponents = null;
		this._usedSingleCount = null;
		this._usedVectorCount = null;
	}
	,removeUsage: function(register) {
		if(register._component > -1) {
			if(--this._usedSingleCount[register._component][register.get_index()] < 0) throw new flash.errors.Error("More usages removed than exist!");
		} else if(--this._usedVectorCount[register.get_index()] < 0) throw new flash.errors.Error("More usages removed than exist!");
	}
	,addUsage: function(register,usageCount) {
		if(register._component > -1) this._usedSingleCount[register._component][register.get_index()] += usageCount; else this._usedVectorCount[register.get_index()] += usageCount;
	}
	,requestFreeRegComponent: function() {
		var i = 0;
		while(i < this._regCount) {
			if(this._usedVectorCount[i] > 0) {
				++i;
				continue;
			}
			var j = 0;
			while(j < 4) {
				if(this._usedSingleCount[j][i] == 0) {
					if(this._persistent) this._usedSingleCount[j][i]++;
					return this._registerComponents[j][i];
				}
				++j;
			}
			++i;
		}
		throw new flash.errors.Error("Register overflow!");
	}
	,requestFreeVectorReg: function() {
		var i = 0;
		while(i < this._regCount) {
			if(!this.isRegisterUsed(i)) {
				if(this._persistent) this._usedVectorCount[i]++;
				return this._vectorRegisters[i];
			}
			++i;
		}
		throw new flash.errors.Error("Register overflow!");
	}
	,__class__: away3d.materials.compilation.RegisterPool
}
away3d.materials.compilation.ShaderCompiler = function(profile) {
	this._preserveAlpha = true;
	this._commonsDataIndex = -1;
	this._uvBufferIndex = -1;
	this._uvTransformIndex = -1;
	this._secondaryUVBufferIndex = -1;
	this._normalBufferIndex = -1;
	this._tangentBufferIndex = -1;
	this._lightFragmentConstantIndex = -1;
	this._sceneMatrixIndex = -1;
	this._sceneNormalMatrixIndex = -1;
	this._cameraPositionIndex = -1;
	this._probeWeightsIndex = -1;
	this._sharedRegisters = new away3d.materials.compilation.ShaderRegisterData();
	this._dependencyCounter = new away3d.materials.compilation.MethodDependencyCounter();
	this._profile = profile;
	this.initRegisterCache(profile);
};
$hxClasses["away3d.materials.compilation.ShaderCompiler"] = away3d.materials.compilation.ShaderCompiler;
away3d.materials.compilation.ShaderCompiler.__name__ = ["away3d","materials","compilation","ShaderCompiler"];
away3d.materials.compilation.ShaderCompiler.prototype = {
	get_lightProbeSpecularIndices: function() {
		return this._lightProbeSpecularIndices;
	}
	,get_lightProbeDiffuseIndices: function() {
		return this._lightProbeDiffuseIndices;
	}
	,compileMethods: function() {
		var methods = this._methodSetup._methods;
		var numMethods = methods.length;
		var method;
		var data;
		var alphaReg = null;
		if(this._preserveAlpha) {
			alphaReg = this._registerCache.getFreeFragmentSingleTemp();
			this._registerCache.addFragmentTempUsages(alphaReg,1);
			this._fragmentCode += "mov " + Std.string(alphaReg) + ", " + Std.string(this._sharedRegisters.shadedTarget) + ".w\n";
		}
		var i = 0;
		while(i < numMethods) {
			method = methods[i].method;
			data = methods[i].data;
			this._vertexCode += method.getVertexCode(data,this._registerCache);
			if(data.needsGlobalVertexPos || data.needsGlobalFragmentPos) this._registerCache.removeVertexTempUsage(this._sharedRegisters.globalPositionVertex);
			this._fragmentCode += method.getFragmentCode(data,this._registerCache,this._sharedRegisters.shadedTarget);
			if(data.needsNormals) this._registerCache.removeFragmentTempUsage(this._sharedRegisters.normalFragment);
			if(data.needsView) this._registerCache.removeFragmentTempUsage(this._sharedRegisters.viewDirFragment);
			++i;
		}
		if(this._preserveAlpha) {
			this._fragmentCode += "mov " + Std.string(this._sharedRegisters.shadedTarget) + ".w, " + Std.string(alphaReg) + "\n";
			this._registerCache.removeFragmentTempUsage(alphaReg);
		}
		if(this._methodSetup._colorTransformMethod != null) {
			this._vertexCode += this._methodSetup._colorTransformMethod.getVertexCode(this._methodSetup._colorTransformMethodVO,this._registerCache);
			this._fragmentCode += this._methodSetup._colorTransformMethod.getFragmentCode(this._methodSetup._colorTransformMethodVO,this._registerCache,this._sharedRegisters.shadedTarget);
		}
	}
	,usesLights: function() {
		return this._numLights > 0 && (this._combinedLightSources & away3d.materials.LightSources.LIGHTS) != 0;
	}
	,get_usesNormals: function() {
		return this._dependencyCounter.get_normalDependencies() > 0 && this._methodSetup._normalMethod.get_hasOutput();
	}
	,get_animationTargetRegisters: function() {
		return this._animationTargetRegisters;
	}
	,get_animatableAttributes: function() {
		return this._animatableAttributes;
	}
	,get_usingSpecularMethod: function() {
		return this._usingSpecularMethod;
	}
	,set_numLightProbes: function(value) {
		this._numLightProbes = value;
		return value;
	}
	,get_numLightProbes: function() {
		return this._numLightProbes;
	}
	,set_numDirectionalLights: function(value) {
		this._numDirectionalLights = value;
		return value;
	}
	,get_numDirectionalLights: function() {
		return this._numDirectionalLights;
	}
	,set_numPointLights: function(numPointLights) {
		this._numPointLights = numPointLights;
		return numPointLights;
	}
	,get_numPointLights: function() {
		return this._numPointLights;
	}
	,get_shadedTarget: function() {
		return this._sharedRegisters.shadedTarget.toString();
	}
	,get_fragmentPostLightCode: function() {
		return this._fragmentPostLightCode;
	}
	,get_fragmentLightCode: function() {
		return this._fragmentLightCode;
	}
	,get_fragmentCode: function() {
		return this._fragmentCode;
	}
	,get_vertexCode: function() {
		return this._vertexCode;
	}
	,get_probeWeightsIndex: function() {
		return this._probeWeightsIndex;
	}
	,get_sceneNormalMatrixIndex: function() {
		return this._sceneNormalMatrixIndex;
	}
	,get_sceneMatrixIndex: function() {
		return this._sceneMatrixIndex;
	}
	,get_cameraPositionIndex: function() {
		return this._cameraPositionIndex;
	}
	,get_lightFragmentConstantIndex: function() {
		return this._lightFragmentConstantIndex;
	}
	,get_tangentBufferIndex: function() {
		return this._tangentBufferIndex;
	}
	,get_normalBufferIndex: function() {
		return this._normalBufferIndex;
	}
	,get_secondaryUVBufferIndex: function() {
		return this._secondaryUVBufferIndex;
	}
	,get_uvTransformIndex: function() {
		return this._uvTransformIndex;
	}
	,get_uvBufferIndex: function() {
		return this._uvBufferIndex;
	}
	,usesProbes: function() {
		return this._numLightProbes > 0 && ((this._diffuseLightSources | this._specularLightSources) & away3d.materials.LightSources.PROBES) != 0;
	}
	,usesProbesForDiffuse: function() {
		return this._numLightProbes > 0 && (this._diffuseLightSources & away3d.materials.LightSources.PROBES) != 0;
	}
	,usesProbesForSpecular: function() {
		return this._numLightProbes > 0 && (this._specularLightSources & away3d.materials.LightSources.PROBES) != 0;
	}
	,set_diffuseLightSources: function(value) {
		this._diffuseLightSources = value;
		return value;
	}
	,get_diffuseLightSources: function() {
		return this._diffuseLightSources;
	}
	,set_specularLightSources: function(value) {
		this._specularLightSources = value;
		return value;
	}
	,get_specularLightSources: function() {
		return this._specularLightSources;
	}
	,cleanUpMethods: function() {
		if(this._methodSetup._normalMethod != null) this._methodSetup._normalMethod.cleanCompilationData();
		if(this._methodSetup._diffuseMethod != null) this._methodSetup._diffuseMethod.cleanCompilationData();
		if(this._methodSetup._ambientMethod != null) this._methodSetup._ambientMethod.cleanCompilationData();
		if(this._methodSetup._specularMethod != null) this._methodSetup._specularMethod.cleanCompilationData();
		if(this._methodSetup._shadowMethod != null) this._methodSetup._shadowMethod.cleanCompilationData();
		if(this._methodSetup._colorTransformMethod != null) this._methodSetup._colorTransformMethod.cleanCompilationData();
		var methods = this._methodSetup._methods;
		var len = methods.length;
		var i = 0;
		while(i < len) {
			methods[i].method.cleanCompilationData();
			++i;
		}
	}
	,dispose: function() {
		this.cleanUpMethods();
		this._registerCache.dispose();
		this._registerCache = null;
		this._sharedRegisters = null;
	}
	,usesLightsForDiffuse: function() {
		return this._numLights > 0 && (this._diffuseLightSources & away3d.materials.LightSources.LIGHTS) != 0;
	}
	,usesLightsForSpecular: function() {
		return this._numLights > 0 && (this._specularLightSources & away3d.materials.LightSources.LIGHTS) != 0;
	}
	,get_numUsedVaryings: function() {
		return this._registerCache.get_numUsedVaryings();
	}
	,get_numUsedTextures: function() {
		return this._registerCache.get_numUsedTextures();
	}
	,get_numUsedStreams: function() {
		return this._registerCache.get_numUsedStreams();
	}
	,get_numUsedFragmentConstants: function() {
		return this._registerCache.get_numUsedFragmentConstants();
	}
	,get_numUsedVertexConstants: function() {
		return this._registerCache.get_numUsedVertexConstants();
	}
	,updateMethodRegisters: function() {
		this._methodSetup._normalMethod.set_sharedRegisters(this._sharedRegisters);
		this._methodSetup._diffuseMethod.set_sharedRegisters(this._sharedRegisters);
		if(this._methodSetup._shadowMethod != null) this._methodSetup._shadowMethod.set_sharedRegisters(this._sharedRegisters);
		this._methodSetup._ambientMethod.set_sharedRegisters(this._sharedRegisters);
		if(this._methodSetup._specularMethod != null) this._methodSetup._specularMethod.set_sharedRegisters(this._sharedRegisters);
		if(this._methodSetup._colorTransformMethod != null) this._methodSetup._colorTransformMethod.set_sharedRegisters(this._sharedRegisters);
		var methods = this._methodSetup._methods;
		var len = methods.length;
		var i = 0;
		while(i < len) {
			methods[i].method.set_sharedRegisters(this._sharedRegisters);
			++i;
		}
	}
	,get_commonsDataIndex: function() {
		return this._commonsDataIndex;
	}
	,setupMethod: function(method,methodVO) {
		method.reset();
		methodVO.reset();
		methodVO.vertexData = this._vertexConstantData;
		methodVO.fragmentData = this._fragmentConstantData;
		methodVO.useSmoothTextures = this._smooth;
		methodVO.repeatTextures = this._repeat;
		methodVO.useMipmapping = this._mipmap;
		methodVO.useLightFallOff = this._enableLightFallOff && this._profile != "baselineConstrained";
		methodVO.numLights = this._numLights + this._numLightProbes;
		method.initVO(methodVO);
	}
	,setupAndCountMethodDependencies: function(method,methodVO) {
		this.setupMethod(method,methodVO);
		this._dependencyCounter.includeMethodVO(methodVO);
	}
	,calculateDependencies: function() {
		this._dependencyCounter.reset();
		var methods = this._methodSetup._methods;
		var len;
		this.setupAndCountMethodDependencies(this._methodSetup._diffuseMethod,this._methodSetup._diffuseMethodVO);
		if(this._methodSetup._shadowMethod != null) this.setupAndCountMethodDependencies(this._methodSetup._shadowMethod,this._methodSetup._shadowMethodVO);
		this.setupAndCountMethodDependencies(this._methodSetup._ambientMethod,this._methodSetup._ambientMethodVO);
		if(this._usingSpecularMethod) this.setupAndCountMethodDependencies(this._methodSetup._specularMethod,this._methodSetup._specularMethodVO);
		if(this._methodSetup._colorTransformMethod != null) this.setupAndCountMethodDependencies(this._methodSetup._colorTransformMethod,this._methodSetup._colorTransformMethodVO);
		len = methods.length;
		var i = 0;
		while(i < len) {
			this.setupAndCountMethodDependencies(methods[i].method,methods[i].data);
			++i;
		}
		if(this.get_usesNormals()) this.setupAndCountMethodDependencies(this._methodSetup._normalMethod,this._methodSetup._normalMethodVO);
		this._dependencyCounter.setPositionedLights(this._numPointLights,this._combinedLightSources);
	}
	,createCommons: function() {
		this._sharedRegisters.commons = this._registerCache.getFreeFragmentConstant();
		this._commonsDataIndex = this._sharedRegisters.commons.get_index() * 4;
	}
	,initLightData: function() {
		this._numLights = this._numPointLights + this._numDirectionalLights;
		this._numProbeRegisters = Math.ceil(this._numLightProbes / 4);
		if(this._methodSetup._specularMethod != null) this._combinedLightSources = this._specularLightSources | this._diffuseLightSources; else this._combinedLightSources = this._diffuseLightSources;
		this._usingSpecularMethod = js.Boot.__cast(this._methodSetup._specularMethod != null && (this.usesLightsForSpecular() || this.usesProbesForSpecular()) , Bool);
	}
	,initRegisterIndices: function() {
		this._commonsDataIndex = -1;
		this._cameraPositionIndex = -1;
		this._uvBufferIndex = -1;
		this._uvTransformIndex = -1;
		this._secondaryUVBufferIndex = -1;
		this._normalBufferIndex = -1;
		this._tangentBufferIndex = -1;
		this._lightFragmentConstantIndex = -1;
		this._sceneMatrixIndex = -1;
		this._sceneNormalMatrixIndex = -1;
		this._probeWeightsIndex = -1;
	}
	,compileFragmentOutput: function() {
		this._fragmentCode += "mov " + Std.string(this._registerCache.get_fragmentOutputRegister()) + ", " + Std.string(this._sharedRegisters.shadedTarget) + "\n";
		this._registerCache.removeFragmentTempUsage(this._sharedRegisters.shadedTarget);
	}
	,compileProjectionCode: function() {
		var pos = this._dependencyCounter.get_globalPosDependencies() > 0 || this._forceSeperateMVP?this._sharedRegisters.globalPositionVertex.toString():this._animationTargetRegisters[0];
		var code;
		if(this._dependencyCounter.get_projectionDependencies() > 0) {
			this._sharedRegisters.projectionFragment = this._registerCache.getFreeVarying();
			code = "m44 vt5, " + pos + ", vc0\t\t\n" + "mov " + Std.string(this._sharedRegisters.projectionFragment) + ", vt5\n" + "mov op, vt5\n";
		} else code = "m44 op, " + pos + ", vc0\t\t\n";
		this._vertexCode += code;
	}
	,compileGlobalPositionCode: function() {
		this._sharedRegisters.globalPositionVertex = this._registerCache.getFreeVertexVectorTemp();
		this._registerCache.addVertexTempUsages(this._sharedRegisters.globalPositionVertex,this._dependencyCounter.get_globalPosDependencies());
		var positionMatrixReg = this._registerCache.getFreeVertexConstant();
		this._registerCache.getFreeVertexConstant();
		this._registerCache.getFreeVertexConstant();
		this._registerCache.getFreeVertexConstant();
		this._sceneMatrixIndex = positionMatrixReg.get_index() * 4;
		this._vertexCode += "m44 " + Std.string(this._sharedRegisters.globalPositionVertex) + ", " + Std.string(this._sharedRegisters.localPosition) + ", " + Std.string(positionMatrixReg) + "\n";
		if(this._dependencyCounter.get_usesGlobalPosFragment()) {
			this._sharedRegisters.globalPositionVarying = this._registerCache.getFreeVarying();
			this._vertexCode += "mov " + Std.string(this._sharedRegisters.globalPositionVarying) + ", " + Std.string(this._sharedRegisters.globalPositionVertex) + "\n";
		}
	}
	,compileSecondaryUVCode: function() {
		var uvAttributeReg = this._registerCache.getFreeVertexAttribute();
		this._secondaryUVBufferIndex = uvAttributeReg.get_index();
		this._sharedRegisters.secondaryUVVarying = this._registerCache.getFreeVarying();
		this._vertexCode += "mov " + Std.string(this._sharedRegisters.secondaryUVVarying) + ", " + Std.string(uvAttributeReg) + "\n";
	}
	,compileUVCode: function() {
		var uvAttributeReg = this._registerCache.getFreeVertexAttribute();
		this._uvBufferIndex = uvAttributeReg.get_index();
		var varying = this._registerCache.getFreeVarying();
		this._sharedRegisters.uvVarying = varying;
		if(this.get_animateUVs()) {
			var uvTransform1 = this._registerCache.getFreeVertexConstant();
			var uvTransform2 = this._registerCache.getFreeVertexConstant();
			this._uvTransformIndex = uvTransform1.get_index() * 4;
			this._vertexCode += "dp4 " + Std.string(varying) + ".x, " + Std.string(uvAttributeReg) + ", " + Std.string(uvTransform1) + "\n" + "dp4 " + Std.string(varying) + ".y, " + Std.string(uvAttributeReg) + ", " + Std.string(uvTransform2) + "\n" + "mov " + Std.string(varying) + ".zw, " + Std.string(uvAttributeReg) + ".zw \n";
		} else {
			this._uvTransformIndex = -1;
			this._needUVAnimation = true;
			this._UVTarget = varying.toString();
			this._UVSource = uvAttributeReg.toString();
		}
	}
	,compileNormalCode: function() {
	}
	,compileViewDirCode: function() {
	}
	,compileLightingCode: function() {
	}
	,compileMethodsCode: function() {
		if(this._dependencyCounter.get_uvDependencies() > 0) this.compileUVCode();
		if(this._dependencyCounter.get_secondaryUVDependencies() > 0) this.compileSecondaryUVCode();
		if(this._dependencyCounter.get_normalDependencies() > 0) this.compileNormalCode();
		if(this._dependencyCounter.get_viewDirDependencies() > 0) this.compileViewDirCode();
		this.compileLightingCode();
		this._fragmentLightCode = this._fragmentCode;
		this._fragmentCode = "";
		this.compileMethods();
	}
	,createNormalRegisters: function() {
	}
	,compile: function() {
		this.initRegisterIndices();
		this.initLightData();
		this._animatableAttributes = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),["va0"]);
		this._animationTargetRegisters = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),["vt0"]);
		this._vertexCode = "";
		this._fragmentCode = "";
		this._sharedRegisters.localPosition = this._registerCache.getFreeVertexVectorTemp();
		this._registerCache.addVertexTempUsages(this._sharedRegisters.localPosition,1);
		this.createCommons();
		this.calculateDependencies();
		this.updateMethodRegisters();
		var i = 0;
		while(i < 4) {
			this._registerCache.getFreeVertexConstant();
			++i;
		}
		this.createNormalRegisters();
		if(this._dependencyCounter.get_globalPosDependencies() > 0 || this._forceSeperateMVP) this.compileGlobalPositionCode();
		this.compileProjectionCode();
		this.compileMethodsCode();
		this.compileFragmentOutput();
		this._fragmentPostLightCode = this.get_fragmentCode();
	}
	,set_methodSetup: function(value) {
		this._methodSetup = value;
		return value;
	}
	,get_methodSetup: function() {
		return this._methodSetup;
	}
	,setConstantDataBuffers: function(vertexConstantData,fragmentConstantData) {
		this._vertexConstantData = vertexConstantData;
		this._fragmentConstantData = fragmentConstantData;
	}
	,setTextureSampling: function(smooth,repeat,mipmap) {
		this._smooth = smooth;
		this._repeat = repeat;
		this._mipmap = mipmap;
	}
	,set_preserveAlpha: function(value) {
		this._preserveAlpha = value;
		return value;
	}
	,get_preserveAlpha: function() {
		return this._preserveAlpha;
	}
	,set_alphaPremultiplied: function(value) {
		this._alphaPremultiplied = value;
		return value;
	}
	,get_alphaPremultiplied: function() {
		return this._alphaPremultiplied;
	}
	,set_animateUVs: function(value) {
		this._animateUVs = value;
		return value;
	}
	,get_animateUVs: function() {
		return this._animateUVs;
	}
	,initRegisterCache: function(profile) {
		this._registerCache = new away3d.materials.compilation.ShaderRegisterCache(profile);
		this._registerCache.set_vertexAttributesOffset(1);
		this._registerCache.reset();
	}
	,set_forceSeperateMVP: function(value) {
		this._forceSeperateMVP = value;
		return value;
	}
	,get_forceSeperateMVP: function() {
		return this._forceSeperateMVP;
	}
	,get_UVSource: function() {
		return this._UVSource;
	}
	,get_UVTarget: function() {
		return this._UVTarget;
	}
	,get_needUVAnimation: function() {
		return this._needUVAnimation;
	}
	,set_enableLightFallOff: function(value) {
		this._enableLightFallOff = value;
		return value;
	}
	,get_enableLightFallOff: function() {
		return this._enableLightFallOff;
	}
	,__class__: away3d.materials.compilation.ShaderCompiler
	,__properties__: {set_enableLightFallOff:"set_enableLightFallOff",get_enableLightFallOff:"get_enableLightFallOff",get_needUVAnimation:"get_needUVAnimation",get_UVTarget:"get_UVTarget",get_UVSource:"get_UVSource",set_forceSeperateMVP:"set_forceSeperateMVP",get_forceSeperateMVP:"get_forceSeperateMVP",set_animateUVs:"set_animateUVs",get_animateUVs:"get_animateUVs",set_alphaPremultiplied:"set_alphaPremultiplied",get_alphaPremultiplied:"get_alphaPremultiplied",set_preserveAlpha:"set_preserveAlpha",get_preserveAlpha:"get_preserveAlpha",set_methodSetup:"set_methodSetup",get_methodSetup:"get_methodSetup",get_commonsDataIndex:"get_commonsDataIndex",get_numUsedVertexConstants:"get_numUsedVertexConstants",get_numUsedFragmentConstants:"get_numUsedFragmentConstants",get_numUsedStreams:"get_numUsedStreams",get_numUsedTextures:"get_numUsedTextures",get_numUsedVaryings:"get_numUsedVaryings",set_specularLightSources:"set_specularLightSources",get_specularLightSources:"get_specularLightSources",set_diffuseLightSources:"set_diffuseLightSources",get_diffuseLightSources:"get_diffuseLightSources",get_uvBufferIndex:"get_uvBufferIndex",get_uvTransformIndex:"get_uvTransformIndex",get_secondaryUVBufferIndex:"get_secondaryUVBufferIndex",get_normalBufferIndex:"get_normalBufferIndex",get_tangentBufferIndex:"get_tangentBufferIndex",get_lightFragmentConstantIndex:"get_lightFragmentConstantIndex",get_cameraPositionIndex:"get_cameraPositionIndex",get_sceneMatrixIndex:"get_sceneMatrixIndex",get_sceneNormalMatrixIndex:"get_sceneNormalMatrixIndex",get_probeWeightsIndex:"get_probeWeightsIndex",get_vertexCode:"get_vertexCode",get_fragmentCode:"get_fragmentCode",get_fragmentLightCode:"get_fragmentLightCode",get_fragmentPostLightCode:"get_fragmentPostLightCode",get_shadedTarget:"get_shadedTarget",set_numPointLights:"set_numPointLights",get_numPointLights:"get_numPointLights",set_numDirectionalLights:"set_numDirectionalLights",get_numDirectionalLights:"get_numDirectionalLights",set_numLightProbes:"set_numLightProbes",get_numLightProbes:"get_numLightProbes",get_usingSpecularMethod:"get_usingSpecularMethod",get_animatableAttributes:"get_animatableAttributes",get_animationTargetRegisters:"get_animationTargetRegisters",get_usesNormals:"get_usesNormals",get_lightProbeDiffuseIndices:"get_lightProbeDiffuseIndices",get_lightProbeSpecularIndices:"get_lightProbeSpecularIndices"}
}
away3d.materials.compilation.ShaderRegisterData = function() {
};
$hxClasses["away3d.materials.compilation.ShaderRegisterData"] = away3d.materials.compilation.ShaderRegisterData;
away3d.materials.compilation.ShaderRegisterData.__name__ = ["away3d","materials","compilation","ShaderRegisterData"];
away3d.materials.compilation.ShaderRegisterData.prototype = {
	__class__: away3d.materials.compilation.ShaderRegisterData
}
away3d.materials.compilation.ShaderRegisterElement = function(regName,index,component) {
	if(component == null) component = -1;
	this._component = component;
	this._regName = regName;
	this._index = index;
	this._toStr = this._regName;
	if(this._index >= 0) this._toStr += this._index;
	if(component > -1) this._toStr += "." + away3d.materials.compilation.ShaderRegisterElement.COMPONENTS[component];
};
$hxClasses["away3d.materials.compilation.ShaderRegisterElement"] = away3d.materials.compilation.ShaderRegisterElement;
away3d.materials.compilation.ShaderRegisterElement.__name__ = ["away3d","materials","compilation","ShaderRegisterElement"];
away3d.materials.compilation.ShaderRegisterElement.prototype = {
	get_index: function() {
		return this._index;
	}
	,get_regName: function() {
		return this._regName;
	}
	,toString: function() {
		return this._toStr;
	}
	,__class__: away3d.materials.compilation.ShaderRegisterElement
	,__properties__: {get_regName:"get_regName",get_index:"get_index"}
}
away3d.materials.compilation.SuperShaderCompiler = function(profile) {
	away3d.materials.compilation.ShaderCompiler.call(this,profile);
};
$hxClasses["away3d.materials.compilation.SuperShaderCompiler"] = away3d.materials.compilation.SuperShaderCompiler;
away3d.materials.compilation.SuperShaderCompiler.__name__ = ["away3d","materials","compilation","SuperShaderCompiler"];
away3d.materials.compilation.SuperShaderCompiler.__super__ = away3d.materials.compilation.ShaderCompiler;
away3d.materials.compilation.SuperShaderCompiler.prototype = $extend(away3d.materials.compilation.ShaderCompiler.prototype,{
	compileLightProbeCode: function() {
		var weightReg;
		var weightComponents = [".x",".y",".z",".w"];
		var weightRegisters = flash._Vector.Vector_Impl_._new();
		var i = 0;
		var texReg;
		var addSpec = this._usingSpecularMethod && this.usesProbesForSpecular();
		var addDiff = this.usesProbesForDiffuse();
		if(!(addSpec || addDiff)) return;
		if(addDiff) this._lightProbeDiffuseIndices = flash._Vector.Vector_Impl_._new();
		if(addSpec) this._lightProbeSpecularIndices = flash._Vector.Vector_Impl_._new();
		i = 0;
		while(i < this._numProbeRegisters) {
			weightRegisters[i] = this._registerCache.getFreeFragmentConstant();
			if(i == 0) this._probeWeightsIndex = weightRegisters[i].get_index() * 4;
			++i;
		}
		i = 0;
		while(i < this._numLightProbes) {
			weightReg = weightRegisters[Math.floor(i / 4)].toString() + weightComponents[i % 4];
			if(addDiff) {
				texReg = this._registerCache.getFreeTextureReg();
				this._lightProbeDiffuseIndices[i] = texReg.get_index();
				this._fragmentCode += this._methodSetup._diffuseMethod.getFragmentCodePerProbe(this._methodSetup._diffuseMethodVO,texReg,weightReg,this._registerCache);
			}
			if(addSpec) {
				texReg = this._registerCache.getFreeTextureReg();
				this._lightProbeSpecularIndices[i] = texReg.get_index();
				this._fragmentCode += this._methodSetup._specularMethod.getFragmentCodePerProbe(this._methodSetup._specularMethodVO,texReg,weightReg,this._registerCache);
			}
			++i;
		}
	}
	,compilePointLightCode: function() {
		var diffuseColorReg;
		var specularColorReg;
		var lightPosReg;
		var lightDirReg;
		var regIndex = 0;
		var addSpec = this._usingSpecularMethod && this.usesLightsForSpecular();
		var addDiff = this.usesLightsForDiffuse();
		if(!(addSpec || addDiff)) return;
		var i = 0;
		while(i < this._numPointLights) {
			lightPosReg = this._pointLightRegisters[regIndex++];
			diffuseColorReg = this._pointLightRegisters[regIndex++];
			specularColorReg = this._pointLightRegisters[regIndex++];
			lightDirReg = this._registerCache.getFreeFragmentVectorTemp();
			this._registerCache.addFragmentTempUsages(lightDirReg,1);
			this._fragmentCode += "sub " + Std.string(lightDirReg) + ", " + Std.string(lightPosReg) + ", " + Std.string(this._sharedRegisters.globalPositionVarying) + "\n" + "dp3 " + Std.string(lightDirReg) + ".w, " + Std.string(lightDirReg) + ", " + Std.string(lightDirReg) + "\n" + "sub " + Std.string(lightDirReg) + ".w, " + Std.string(lightDirReg) + ".w, " + Std.string(diffuseColorReg) + ".w\n" + "mul " + Std.string(lightDirReg) + ".w, " + Std.string(lightDirReg) + ".w, " + Std.string(specularColorReg) + ".w\n" + "sat " + Std.string(lightDirReg) + ".w, " + Std.string(lightDirReg) + ".w\n" + "sub " + Std.string(lightDirReg) + ".w, " + Std.string(lightPosReg) + ".w, " + Std.string(lightDirReg) + ".w\n" + "nrm " + Std.string(lightDirReg) + ".xyz, " + Std.string(lightDirReg) + "\n";
			if(this._lightFragmentConstantIndex == -1) this._lightFragmentConstantIndex = lightPosReg.get_index() * 4;
			if(addDiff) this._fragmentCode += this._methodSetup._diffuseMethod.getFragmentCodePerLight(this._methodSetup._diffuseMethodVO,lightDirReg,diffuseColorReg,this._registerCache);
			if(addSpec) this._fragmentCode += this._methodSetup._specularMethod.getFragmentCodePerLight(this._methodSetup._specularMethodVO,lightDirReg,specularColorReg,this._registerCache);
			this._registerCache.removeFragmentTempUsage(lightDirReg);
			++i;
		}
	}
	,compileDirectionalLightCode: function() {
		var diffuseColorReg;
		var specularColorReg;
		var lightDirReg;
		var regIndex = 0;
		var addSpec = this._usingSpecularMethod && this.usesLightsForSpecular();
		var addDiff = this.usesLightsForDiffuse();
		if(!(addSpec || addDiff)) return;
		var i = 0;
		while(i < this._numDirectionalLights) {
			lightDirReg = this._dirLightRegisters[regIndex++];
			diffuseColorReg = this._dirLightRegisters[regIndex++];
			specularColorReg = this._dirLightRegisters[regIndex++];
			if(addDiff) this._fragmentCode += this._methodSetup._diffuseMethod.getFragmentCodePerLight(this._methodSetup._diffuseMethodVO,lightDirReg,diffuseColorReg,this._registerCache);
			if(addSpec) this._fragmentCode += this._methodSetup._specularMethod.getFragmentCodePerLight(this._methodSetup._specularMethodVO,lightDirReg,specularColorReg,this._registerCache);
			++i;
		}
	}
	,initLightRegisters: function() {
		var i = 0;
		var len;
		len = flash._Vector.Vector_Impl_.get_length(this._dirLightRegisters);
		i = 0;
		while(i < len) {
			this._dirLightRegisters[i] = this._registerCache.getFreeFragmentConstant();
			if(this._lightFragmentConstantIndex == -1) this._lightFragmentConstantIndex = this._dirLightRegisters[i].get_index() * 4;
			++i;
		}
		len = flash._Vector.Vector_Impl_.get_length(this._pointLightRegisters);
		i = 0;
		while(i < len) {
			this._pointLightRegisters[i] = this._registerCache.getFreeFragmentConstant();
			if(this._lightFragmentConstantIndex == -1) this._lightFragmentConstantIndex = this._pointLightRegisters[i].get_index() * 4;
			++i;
		}
	}
	,compileLightingCode: function() {
		var shadowReg = null;
		this._sharedRegisters.shadedTarget = this._registerCache.getFreeFragmentVectorTemp();
		this._registerCache.addFragmentTempUsages(this._sharedRegisters.shadedTarget,1);
		this._vertexCode += this._methodSetup._diffuseMethod.getVertexCode(this._methodSetup._diffuseMethodVO,this._registerCache);
		this._fragmentCode += this._methodSetup._diffuseMethod.getFragmentPreLightingCode(this._methodSetup._diffuseMethodVO,this._registerCache);
		if(this._usingSpecularMethod) {
			this._vertexCode += this._methodSetup._specularMethod.getVertexCode(this._methodSetup._specularMethodVO,this._registerCache);
			this._fragmentCode += this._methodSetup._specularMethod.getFragmentPreLightingCode(this._methodSetup._specularMethodVO,this._registerCache);
		}
		if(this.usesLights()) {
			this.initLightRegisters();
			this.compileDirectionalLightCode();
			this.compilePointLightCode();
		}
		if(this.usesProbes()) this.compileLightProbeCode();
		this._vertexCode += this._methodSetup._ambientMethod.getVertexCode(this._methodSetup._ambientMethodVO,this._registerCache);
		this._fragmentCode += this._methodSetup._ambientMethod.getFragmentCode(this._methodSetup._ambientMethodVO,this._registerCache,this._sharedRegisters.shadedTarget);
		if(this._methodSetup._ambientMethodVO.needsNormals) this._registerCache.removeFragmentTempUsage(this._sharedRegisters.normalFragment);
		if(this._methodSetup._ambientMethodVO.needsView) this._registerCache.removeFragmentTempUsage(this._sharedRegisters.viewDirFragment);
		if(this._methodSetup._shadowMethod != null) {
			this._vertexCode += this._methodSetup._shadowMethod.getVertexCode(this._methodSetup._shadowMethodVO,this._registerCache);
			if(this._dependencyCounter.get_normalDependencies() == 0) {
				shadowReg = this._registerCache.getFreeFragmentVectorTemp();
				this._registerCache.addFragmentTempUsages(shadowReg,1);
			} else shadowReg = this._sharedRegisters.normalFragment;
			this._methodSetup._diffuseMethod.set_shadowRegister(shadowReg);
			this._fragmentCode += this._methodSetup._shadowMethod.getFragmentCode(this._methodSetup._shadowMethodVO,this._registerCache,shadowReg);
		}
		this._fragmentCode += this._methodSetup._diffuseMethod.getFragmentPostLightingCode(this._methodSetup._diffuseMethodVO,this._registerCache,this._sharedRegisters.shadedTarget);
		if(this._alphaPremultiplied) this._fragmentCode += "add " + Std.string(this._sharedRegisters.shadedTarget) + ".w, " + Std.string(this._sharedRegisters.shadedTarget) + ".w, " + Std.string(this._sharedRegisters.commons) + ".z\n" + "div " + Std.string(this._sharedRegisters.shadedTarget) + ".xyz, " + Std.string(this._sharedRegisters.shadedTarget) + ", " + Std.string(this._sharedRegisters.shadedTarget) + ".w\n" + "sub " + Std.string(this._sharedRegisters.shadedTarget) + ".w, " + Std.string(this._sharedRegisters.shadedTarget) + ".w, " + Std.string(this._sharedRegisters.commons) + ".z\n" + "sat " + Std.string(this._sharedRegisters.shadedTarget) + ".xyz, " + Std.string(this._sharedRegisters.shadedTarget) + "\n";
		if(this._methodSetup._diffuseMethodVO.needsNormals) this._registerCache.removeFragmentTempUsage(this._sharedRegisters.normalFragment);
		if(this._methodSetup._diffuseMethodVO.needsView) this._registerCache.removeFragmentTempUsage(this._sharedRegisters.viewDirFragment);
		if(this._usingSpecularMethod) {
			this._methodSetup._specularMethod.set_shadowRegister(shadowReg);
			this._fragmentCode += this._methodSetup._specularMethod.getFragmentPostLightingCode(this._methodSetup._specularMethodVO,this._registerCache,this._sharedRegisters.shadedTarget);
			if(this._methodSetup._specularMethodVO.needsNormals) this._registerCache.removeFragmentTempUsage(this._sharedRegisters.normalFragment);
			if(this._methodSetup._specularMethodVO.needsView) this._registerCache.removeFragmentTempUsage(this._sharedRegisters.viewDirFragment);
		}
	}
	,compileViewDirCode: function() {
		var cameraPositionReg = this._registerCache.getFreeVertexConstant();
		this._sharedRegisters.viewDirVarying = this._registerCache.getFreeVarying();
		this._sharedRegisters.viewDirFragment = this._registerCache.getFreeFragmentVectorTemp();
		this._registerCache.addFragmentTempUsages(this._sharedRegisters.viewDirFragment,this._dependencyCounter.get_viewDirDependencies());
		this._cameraPositionIndex = cameraPositionReg.get_index() * 4;
		this._vertexCode += "sub " + Std.string(this._sharedRegisters.viewDirVarying) + ", " + Std.string(cameraPositionReg) + ", " + Std.string(this._sharedRegisters.globalPositionVertex) + "\n";
		this._fragmentCode += "nrm " + Std.string(this._sharedRegisters.viewDirFragment) + ".xyz, " + Std.string(this._sharedRegisters.viewDirVarying) + "\n" + "mov " + Std.string(this._sharedRegisters.viewDirFragment) + ".w,   " + Std.string(this._sharedRegisters.viewDirVarying) + ".w \t\t\n";
		this._registerCache.removeVertexTempUsage(this._sharedRegisters.globalPositionVertex);
	}
	,compileTangentNormalMapFragmentCode: function() {
		var t;
		var b;
		var n;
		t = this._registerCache.getFreeFragmentVectorTemp();
		this._registerCache.addFragmentTempUsages(t,1);
		b = this._registerCache.getFreeFragmentVectorTemp();
		this._registerCache.addFragmentTempUsages(b,1);
		n = this._registerCache.getFreeFragmentVectorTemp();
		this._registerCache.addFragmentTempUsages(n,1);
		this._fragmentCode += "nrm " + Std.string(t) + ".xyz, " + Std.string(this._sharedRegisters.tangentVarying) + "\n" + "mov " + Std.string(t) + ".w, " + Std.string(this._sharedRegisters.tangentVarying) + ".w\t\n" + "nrm " + Std.string(b) + ".xyz, " + Std.string(this._sharedRegisters.bitangentVarying) + "\n" + "nrm " + Std.string(n) + ".xyz, " + Std.string(this._sharedRegisters.normalVarying) + "\n";
		var temp = this._registerCache.getFreeFragmentVectorTemp();
		this._registerCache.addFragmentTempUsages(temp,1);
		this._fragmentCode += this._methodSetup._normalMethod.getFragmentCode(this._methodSetup._normalMethodVO,this._registerCache,temp) + "m33 " + Std.string(this._sharedRegisters.normalFragment) + ".xyz, " + Std.string(temp) + ", " + Std.string(t) + "\t\n" + "mov " + Std.string(this._sharedRegisters.normalFragment) + ".w,   " + Std.string(this._sharedRegisters.normalVarying) + ".w\t\t\t\n";
		this._registerCache.removeFragmentTempUsage(temp);
		if(this._methodSetup._normalMethodVO.needsView) this._registerCache.removeFragmentTempUsage(this._sharedRegisters.viewDirFragment);
		if(this._methodSetup._normalMethodVO.needsGlobalVertexPos || this._methodSetup._normalMethodVO.needsGlobalFragmentPos) this._registerCache.removeVertexTempUsage(this._sharedRegisters.globalPositionVertex);
		this._registerCache.removeFragmentTempUsage(b);
		this._registerCache.removeFragmentTempUsage(t);
		this._registerCache.removeFragmentTempUsage(n);
	}
	,compileTangentVertexCode: function(matrix) {
		this._sharedRegisters.tangentVarying = this._registerCache.getFreeVarying();
		this._sharedRegisters.bitangentVarying = this._registerCache.getFreeVarying();
		this._vertexCode += "m33 " + Std.string(this._sharedRegisters.animatedNormal) + ".xyz, " + Std.string(this._sharedRegisters.animatedNormal) + ", " + Std.string(matrix[0]) + "\n" + "nrm " + Std.string(this._sharedRegisters.animatedNormal) + ".xyz, " + Std.string(this._sharedRegisters.animatedNormal) + "\n";
		this._vertexCode += "m33 " + Std.string(this._sharedRegisters.animatedTangent) + ".xyz, " + Std.string(this._sharedRegisters.animatedTangent) + ", " + Std.string(matrix[0]) + "\n" + "nrm " + Std.string(this._sharedRegisters.animatedTangent) + ".xyz, " + Std.string(this._sharedRegisters.animatedTangent) + "\n";
		var bitanTemp = this._registerCache.getFreeVertexVectorTemp();
		this._vertexCode += "mov " + Std.string(this._sharedRegisters.tangentVarying) + ".x, " + Std.string(this._sharedRegisters.animatedTangent) + ".x  \n" + "mov " + Std.string(this._sharedRegisters.tangentVarying) + ".z, " + Std.string(this._sharedRegisters.animatedNormal) + ".x  \n" + "mov " + Std.string(this._sharedRegisters.tangentVarying) + ".w, " + Std.string(this._sharedRegisters.normalInput) + ".w  \n" + "mov " + Std.string(this._sharedRegisters.bitangentVarying) + ".x, " + Std.string(this._sharedRegisters.animatedTangent) + ".y  \n" + "mov " + Std.string(this._sharedRegisters.bitangentVarying) + ".z, " + Std.string(this._sharedRegisters.animatedNormal) + ".y  \n" + "mov " + Std.string(this._sharedRegisters.bitangentVarying) + ".w, " + Std.string(this._sharedRegisters.normalInput) + ".w  \n" + "mov " + Std.string(this._sharedRegisters.normalVarying) + ".x, " + Std.string(this._sharedRegisters.animatedTangent) + ".z  \n" + "mov " + Std.string(this._sharedRegisters.normalVarying) + ".z, " + Std.string(this._sharedRegisters.animatedNormal) + ".z  \n" + "mov " + Std.string(this._sharedRegisters.normalVarying) + ".w, " + Std.string(this._sharedRegisters.normalInput) + ".w  \n" + "crs " + Std.string(bitanTemp) + ".xyz, " + Std.string(this._sharedRegisters.animatedNormal) + ", " + Std.string(this._sharedRegisters.animatedTangent) + "\n" + "mov " + Std.string(this._sharedRegisters.tangentVarying) + ".y, " + Std.string(bitanTemp) + ".x    \n" + "mov " + Std.string(this._sharedRegisters.bitangentVarying) + ".y, " + Std.string(bitanTemp) + ".y  \n" + "mov " + Std.string(this._sharedRegisters.normalVarying) + ".y, " + Std.string(bitanTemp) + ".z    \n";
		this._registerCache.removeVertexTempUsage(this._sharedRegisters.animatedTangent);
	}
	,createNormalRegisters: function() {
		if(this._dependencyCounter.get_normalDependencies() > 0) {
			this._sharedRegisters.normalInput = this._registerCache.getFreeVertexAttribute();
			this._normalBufferIndex = this._sharedRegisters.normalInput.get_index();
			this._sharedRegisters.animatedNormal = this._registerCache.getFreeVertexVectorTemp();
			this._registerCache.addVertexTempUsages(this._sharedRegisters.animatedNormal,1);
			flash._Vector.Vector_Impl_.push(this._animatableAttributes,this._sharedRegisters.normalInput.toString());
			flash._Vector.Vector_Impl_.push(this._animationTargetRegisters,this._sharedRegisters.animatedNormal.toString());
		}
		if(this._methodSetup._normalMethod.get_hasOutput()) {
			this._sharedRegisters.tangentInput = this._registerCache.getFreeVertexAttribute();
			this._tangentBufferIndex = this._sharedRegisters.tangentInput.get_index();
			this._sharedRegisters.animatedTangent = this._registerCache.getFreeVertexVectorTemp();
			this._registerCache.addVertexTempUsages(this._sharedRegisters.animatedTangent,1);
			flash._Vector.Vector_Impl_.push(this._animatableAttributes,this._sharedRegisters.tangentInput.toString());
			flash._Vector.Vector_Impl_.push(this._animationTargetRegisters,this._sharedRegisters.animatedTangent.toString());
		}
	}
	,compileNormalCode: function() {
		var normalMatrix = flash._Vector.Vector_Impl_._new(3,true);
		this._sharedRegisters.normalFragment = this._registerCache.getFreeFragmentVectorTemp();
		this._registerCache.addFragmentTempUsages(this._sharedRegisters.normalFragment,this._dependencyCounter.get_normalDependencies());
		if(this._methodSetup._normalMethod.get_hasOutput() && !this._methodSetup._normalMethod.get_tangentSpace()) {
			this._vertexCode += this._methodSetup._normalMethod.getVertexCode(this._methodSetup._normalMethodVO,this._registerCache);
			this._fragmentCode += this._methodSetup._normalMethod.getFragmentCode(this._methodSetup._normalMethodVO,this._registerCache,this._sharedRegisters.normalFragment);
			return;
		}
		this._sharedRegisters.normalVarying = this._registerCache.getFreeVarying();
		normalMatrix[0] = this._registerCache.getFreeVertexConstant();
		normalMatrix[1] = this._registerCache.getFreeVertexConstant();
		normalMatrix[2] = this._registerCache.getFreeVertexConstant();
		this._registerCache.getFreeVertexConstant();
		this._sceneNormalMatrixIndex = normalMatrix[0].get_index() * 4;
		if(this._methodSetup._normalMethod.get_hasOutput()) {
			this.compileTangentVertexCode(normalMatrix);
			this.compileTangentNormalMapFragmentCode();
		} else {
			this._vertexCode += "m33 " + Std.string(this._sharedRegisters.normalVarying) + ".xyz, " + Std.string(this._sharedRegisters.animatedNormal) + ", " + Std.string(normalMatrix[0]) + "\n" + "mov " + Std.string(this._sharedRegisters.normalVarying) + ".w, " + Std.string(this._sharedRegisters.animatedNormal) + ".w\t\n";
			this._fragmentCode += "nrm " + Std.string(this._sharedRegisters.normalFragment) + ".xyz, " + Std.string(this._sharedRegisters.normalVarying) + "\n" + "mov " + Std.string(this._sharedRegisters.normalFragment) + ".w, " + Std.string(this._sharedRegisters.normalVarying) + ".w\t\t\n";
			if(this._dependencyCounter.get_tangentDependencies() > 0) {
				this._sharedRegisters.tangentInput = this._registerCache.getFreeVertexAttribute();
				this._tangentBufferIndex = this._sharedRegisters.tangentInput.get_index();
				this._sharedRegisters.tangentVarying = this._registerCache.getFreeVarying();
				this._vertexCode += "mov " + Std.string(this._sharedRegisters.tangentVarying) + ", " + Std.string(this._sharedRegisters.tangentInput) + "\n";
			}
		}
		this._registerCache.removeVertexTempUsage(this._sharedRegisters.animatedNormal);
	}
	,calculateDependencies: function() {
		away3d.materials.compilation.ShaderCompiler.prototype.calculateDependencies.call(this);
		this._dependencyCounter.addWorldSpaceDependencies(true);
	}
	,initLightData: function() {
		away3d.materials.compilation.ShaderCompiler.prototype.initLightData.call(this);
		this._pointLightRegisters = flash._Vector.Vector_Impl_._new(this._numPointLights * 3,true);
		this._dirLightRegisters = flash._Vector.Vector_Impl_._new(this._numDirectionalLights * 3,true);
	}
	,__class__: away3d.materials.compilation.SuperShaderCompiler
});
away3d.materials.lightpickers = {}
away3d.materials.lightpickers.LightPickerBase = function() {
	away3d.library.assets.NamedAssetBase.call(this);
};
$hxClasses["away3d.materials.lightpickers.LightPickerBase"] = away3d.materials.lightpickers.LightPickerBase;
away3d.materials.lightpickers.LightPickerBase.__name__ = ["away3d","materials","lightpickers","LightPickerBase"];
away3d.materials.lightpickers.LightPickerBase.__interfaces__ = [away3d.library.assets.IAsset];
away3d.materials.lightpickers.LightPickerBase.__super__ = away3d.library.assets.NamedAssetBase;
away3d.materials.lightpickers.LightPickerBase.prototype = $extend(away3d.library.assets.NamedAssetBase.prototype,{
	updateProbeWeights: function(renderable) {
		var objectPos = renderable.get_sourceEntity().get_scenePosition();
		var lightPos;
		var rx = objectPos.x;
		var ry = objectPos.y;
		var rz = objectPos.z;
		var dx;
		var dy;
		var dz;
		var w;
		var total = 0;
		var i;
		i = 0;
		while(i < this._numLightProbes) {
			lightPos = this._lightProbes[i].get_scenePosition();
			dx = rx - lightPos.x;
			dy = ry - lightPos.y;
			dz = rz - lightPos.z;
			w = dx * dx + dy * dy + dz * dz;
			w = w > .00001?1 / w:50000000;
			this._lightProbeWeights[i] = w;
			total += w;
			++i;
		}
		total = 1 / total;
		i = 0;
		while(i < this._numLightProbes) {
			this._lightProbeWeights[i] *= total;
			++i;
		}
	}
	,collectLights: function(renderable,entityCollector) {
		this.updateProbeWeights(renderable);
	}
	,get_allPickedLights: function() {
		return this._allPickedLights;
	}
	,get_lightProbeWeights: function() {
		return this._lightProbeWeights;
	}
	,get_lightProbes: function() {
		return this._lightProbes;
	}
	,get_castingDirectionalLights: function() {
		return this._castingDirectionalLights;
	}
	,get_castingPointLights: function() {
		return this._castingPointLights;
	}
	,get_directionalLights: function() {
		return this._directionalLights;
	}
	,get_pointLights: function() {
		return this._pointLights;
	}
	,get_numLightProbes: function() {
		return this._numLightProbes;
	}
	,get_numCastingPointLights: function() {
		return this._numCastingPointLights;
	}
	,get_numCastingDirectionalLights: function() {
		return this._numCastingDirectionalLights;
	}
	,get_numPointLights: function() {
		return this._numPointLights;
	}
	,get_numDirectionalLights: function() {
		return this._numDirectionalLights;
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.LIGHT_PICKER;
	}
	,dispose: function() {
	}
	,__class__: away3d.materials.lightpickers.LightPickerBase
	,__properties__: $extend(away3d.library.assets.NamedAssetBase.prototype.__properties__,{get_assetType:"get_assetType",get_numDirectionalLights:"get_numDirectionalLights",get_numPointLights:"get_numPointLights",get_numCastingDirectionalLights:"get_numCastingDirectionalLights",get_numCastingPointLights:"get_numCastingPointLights",get_numLightProbes:"get_numLightProbes",get_pointLights:"get_pointLights",get_directionalLights:"get_directionalLights",get_castingPointLights:"get_castingPointLights",get_castingDirectionalLights:"get_castingDirectionalLights",get_lightProbes:"get_lightProbes",get_lightProbeWeights:"get_lightProbeWeights",get_allPickedLights:"get_allPickedLights"})
});
away3d.materials.methods = {}
away3d.materials.methods.ShadingMethodBase = function() {
	away3d.library.assets.NamedAssetBase.call(this);
};
$hxClasses["away3d.materials.methods.ShadingMethodBase"] = away3d.materials.methods.ShadingMethodBase;
away3d.materials.methods.ShadingMethodBase.__name__ = ["away3d","materials","methods","ShadingMethodBase"];
away3d.materials.methods.ShadingMethodBase.__super__ = away3d.library.assets.NamedAssetBase;
away3d.materials.methods.ShadingMethodBase.prototype = $extend(away3d.library.assets.NamedAssetBase.prototype,{
	copyFrom: function(method) {
	}
	,invalidateShaderProgram: function() {
		this.dispatchEvent(new away3d.events.ShadingMethodEvent(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED));
	}
	,getFormatStringForTexture: function(texture) {
		var _sw0_ = texture.get_format();
		switch( (_sw0_)[1] ) {
		case 1:
			return "dxt1,";
		case 2:
			return "dxt5,";
		default:
			return "";
		}
	}
	,getTexCubeSampleCode: function(vo,targetReg,inputReg,texture,uvReg) {
		var filter;
		var format = this.getFormatStringForTexture(texture);
		var enableMipMaps = vo.useMipmapping && texture.get_hasMipMaps();
		if(vo.useSmoothTextures) filter = enableMipMaps?"linear,miplinear":"linear"; else filter = enableMipMaps?"nearest,mipnearest":"nearest";
		return "tex " + Std.string(targetReg) + ", " + Std.string(uvReg) + ", " + Std.string(inputReg) + " <cube," + format + filter + ">\n";
	}
	,getTex2DSampleCode: function(vo,targetReg,inputReg,texture,uvReg,forceWrap) {
		var wrap = vo.repeatTextures?"wrap":"clamp";
		if(forceWrap != null) wrap = forceWrap;
		var filter;
		var format = this.getFormatStringForTexture(texture);
		var enableMipMaps = vo.useMipmapping && texture.get_hasMipMaps();
		if(vo.useSmoothTextures) filter = enableMipMaps?"linear,miplinear":"linear"; else filter = enableMipMaps?"nearest,mipnearest":"nearest";
		if(uvReg == null) uvReg = this._sharedRegisters.uvVarying;
		return "tex " + Std.string(targetReg) + ", " + Std.string(uvReg) + ", " + Std.string(inputReg) + " <2d," + filter + "," + format + wrap + ">\n";
	}
	,deactivate: function(vo,stage3DProxy) {
	}
	,setRenderState: function(vo,renderable,stage3DProxy,camera) {
	}
	,activate: function(vo,stage3DProxy) {
	}
	,getVertexCode: function(vo,regCache) {
		return "";
	}
	,cleanCompilationData: function() {
	}
	,reset: function() {
		this.cleanCompilationData();
	}
	,createMethodVO: function() {
		return new away3d.materials.methods.MethodVO();
	}
	,dispose: function() {
	}
	,get_passes: function() {
		return this._passes;
	}
	,set_sharedRegisters: function(value) {
		this._sharedRegisters = value;
		return value;
	}
	,get_sharedRegisters: function() {
		return this._sharedRegisters;
	}
	,initConstants: function(vo) {
	}
	,initVO: function(vo) {
	}
	,__class__: away3d.materials.methods.ShadingMethodBase
	,__properties__: $extend(away3d.library.assets.NamedAssetBase.prototype.__properties__,{set_sharedRegisters:"set_sharedRegisters",get_sharedRegisters:"get_sharedRegisters",get_passes:"get_passes"})
});
away3d.materials.methods.BasicAmbientMethod = function() {
	this._ambientColor = 16777215;
	this._ambientR = 0;
	this._ambientG = 0;
	this._ambientB = 0;
	this._ambient = 1;
	this._lightAmbientR = 0;
	this._lightAmbientG = 0;
	this._lightAmbientB = 0;
	away3d.materials.methods.ShadingMethodBase.call(this);
};
$hxClasses["away3d.materials.methods.BasicAmbientMethod"] = away3d.materials.methods.BasicAmbientMethod;
away3d.materials.methods.BasicAmbientMethod.__name__ = ["away3d","materials","methods","BasicAmbientMethod"];
away3d.materials.methods.BasicAmbientMethod.__super__ = away3d.materials.methods.ShadingMethodBase;
away3d.materials.methods.BasicAmbientMethod.prototype = $extend(away3d.materials.methods.ShadingMethodBase.prototype,{
	setRenderState: function(vo,renderable,stage3DProxy,camera) {
		this.updateAmbient();
		if(!this._useTexture) {
			var index = vo.fragmentConstantsIndex;
			var data = vo.fragmentData;
			data[index] = this._ambientR;
			data[index + 1] = this._ambientG;
			data[index + 2] = this._ambientB;
		}
	}
	,updateAmbient: function() {
		this._ambientR = (this._ambientColor >> 16 & 255) / 255 * this._ambient * this._lightAmbientR;
		this._ambientG = (this._ambientColor >> 8 & 255) / 255 * this._ambient * this._lightAmbientG;
		this._ambientB = (this._ambientColor & 255) / 255 * this._ambient * this._lightAmbientB;
	}
	,activate: function(vo,stage3DProxy) {
		if(this._useTexture) stage3DProxy._context3D.setTextureAt(vo.texturesIndex,this._texture.getTextureForStage3D(stage3DProxy));
	}
	,getFragmentCode: function(vo,regCache,targetReg) {
		var code = "";
		if(this._useTexture) {
			this._ambientInputRegister = regCache.getFreeTextureReg();
			vo.texturesIndex = this._ambientInputRegister.get_index();
			code += this.getTex2DSampleCode(vo,targetReg,this._ambientInputRegister,this._texture) + "div " + Std.string(targetReg) + ".xyz, " + Std.string(targetReg) + ".xyz, " + Std.string(targetReg) + ".w\n";
		} else {
			this._ambientInputRegister = regCache.getFreeFragmentConstant();
			vo.fragmentConstantsIndex = this._ambientInputRegister.get_index() * 4;
			code += "mov " + Std.string(targetReg) + ", " + Std.string(this._ambientInputRegister) + "\n";
		}
		return code;
	}
	,cleanCompilationData: function() {
		away3d.materials.methods.ShadingMethodBase.prototype.cleanCompilationData.call(this);
		this._ambientInputRegister = null;
	}
	,copyFrom: function(method) {
		var diff = js.Boot.__cast(method , away3d.materials.methods.BasicAmbientMethod);
		this.set_ambient(diff.get_ambient());
		this.set_ambientColor(diff.get_ambientColor());
	}
	,set_texture: function(value) {
		if(js.Boot.__cast(value != null , Bool) != this._useTexture || value != null && this._texture != null && (value.get_hasMipMaps() != this._texture.get_hasMipMaps() || value.get_format() != this._texture.get_format())) this.invalidateShaderProgram();
		this._useTexture = js.Boot.__cast(value , Bool);
		this._texture = value;
		return value;
	}
	,get_texture: function() {
		return this._texture;
	}
	,set_ambientColor: function(value) {
		this._ambientColor = value;
		return value;
	}
	,get_ambientColor: function() {
		return this._ambientColor;
	}
	,set_ambient: function(value) {
		this._ambient = value;
		return value;
	}
	,get_ambient: function() {
		return this._ambient;
	}
	,initConstants: function(vo) {
		vo.fragmentData[vo.fragmentConstantsIndex + 3] = 1;
	}
	,initVO: function(vo) {
		vo.needsUV = this._useTexture;
	}
	,__class__: away3d.materials.methods.BasicAmbientMethod
	,__properties__: $extend(away3d.materials.methods.ShadingMethodBase.prototype.__properties__,{set_ambient:"set_ambient",get_ambient:"get_ambient",set_ambientColor:"set_ambientColor",get_ambientColor:"get_ambientColor",set_texture:"set_texture",get_texture:"get_texture"})
});
away3d.materials.methods.LightingMethodBase = function() {
	away3d.materials.methods.ShadingMethodBase.call(this);
};
$hxClasses["away3d.materials.methods.LightingMethodBase"] = away3d.materials.methods.LightingMethodBase;
away3d.materials.methods.LightingMethodBase.__name__ = ["away3d","materials","methods","LightingMethodBase"];
away3d.materials.methods.LightingMethodBase.__super__ = away3d.materials.methods.ShadingMethodBase;
away3d.materials.methods.LightingMethodBase.prototype = $extend(away3d.materials.methods.ShadingMethodBase.prototype,{
	getFragmentPostLightingCode: function(vo,regCache,targetReg) {
		return "";
	}
	,getFragmentCodePerProbe: function(vo,cubeMapReg,weightRegister,regCache) {
		return "";
	}
	,getFragmentCodePerLight: function(vo,lightDirReg,lightColReg,regCache) {
		return "";
	}
	,getFragmentPreLightingCode: function(vo,regCache) {
		return "";
	}
	,__class__: away3d.materials.methods.LightingMethodBase
});
away3d.materials.methods.BasicDiffuseMethod = function() {
	this._diffuseColor = 16777215;
	this._diffuseR = 1;
	this._diffuseG = 1;
	this._diffuseB = 1;
	this._diffuseA = 1;
	this._alphaThreshold = 0;
	away3d.materials.methods.LightingMethodBase.call(this);
};
$hxClasses["away3d.materials.methods.BasicDiffuseMethod"] = away3d.materials.methods.BasicDiffuseMethod;
away3d.materials.methods.BasicDiffuseMethod.__name__ = ["away3d","materials","methods","BasicDiffuseMethod"];
away3d.materials.methods.BasicDiffuseMethod.__super__ = away3d.materials.methods.LightingMethodBase;
away3d.materials.methods.BasicDiffuseMethod.prototype = $extend(away3d.materials.methods.LightingMethodBase.prototype,{
	set_shadowRegister: function(value) {
		this._shadowRegister = value;
		return value;
	}
	,updateDiffuse: function() {
		this._diffuseR = (this._diffuseColor >> 16 & 255) / 255;
		this._diffuseG = (this._diffuseColor >> 8 & 255) / 255;
		this._diffuseB = (this._diffuseColor & 255) / 255;
	}
	,activate: function(vo,stage3DProxy) {
		if(this._useTexture) {
			stage3DProxy._context3D.setTextureAt(vo.texturesIndex,this._texture.getTextureForStage3D(stage3DProxy));
			if(this._alphaThreshold > 0) vo.fragmentData[vo.fragmentConstantsIndex] = this._alphaThreshold;
		} else {
			var index = vo.fragmentConstantsIndex;
			var data = vo.fragmentData;
			data[index] = this._diffuseR;
			data[index + 1] = this._diffuseG;
			data[index + 2] = this._diffuseB;
			data[index + 3] = this._diffuseA;
		}
	}
	,applyShadow: function(vo,regCache) {
		return "mul " + Std.string(this._totalLightColorReg) + ".xyz, " + Std.string(this._totalLightColorReg) + ", " + Std.string(this._shadowRegister) + ".w\n";
	}
	,getFragmentPostLightingCode: function(vo,regCache,targetReg) {
		var code = "";
		var albedo;
		var cutOffReg;
		if(vo.numLights > 0) {
			if(this._shadowRegister != null) code += this.applyShadow(vo,regCache);
			albedo = regCache.getFreeFragmentVectorTemp();
			regCache.addFragmentTempUsages(albedo,1);
		} else albedo = targetReg;
		if(this._useTexture) {
			this._diffuseInputRegister = regCache.getFreeTextureReg();
			vo.texturesIndex = this._diffuseInputRegister.get_index();
			code += this.getTex2DSampleCode(vo,albedo,this._diffuseInputRegister,this._texture);
			if(this._alphaThreshold > 0) {
				cutOffReg = regCache.getFreeFragmentConstant();
				vo.fragmentConstantsIndex = cutOffReg.get_index() * 4;
				code += "sub " + Std.string(albedo) + ".w, " + Std.string(albedo) + ".w, " + Std.string(cutOffReg) + ".x\n" + "kil " + Std.string(albedo) + ".w\n" + "add " + Std.string(albedo) + ".w, " + Std.string(albedo) + ".w, " + Std.string(cutOffReg) + ".x\n";
			}
		} else {
			this._diffuseInputRegister = regCache.getFreeFragmentConstant();
			vo.fragmentConstantsIndex = this._diffuseInputRegister.get_index() * 4;
			code += "mov " + Std.string(albedo) + ", " + Std.string(this._diffuseInputRegister) + "\n";
		}
		if(vo.numLights == 0) return code;
		code += "sat " + Std.string(this._totalLightColorReg) + ", " + Std.string(this._totalLightColorReg) + "\n";
		if(this._useAmbientTexture) code += "mul " + Std.string(albedo) + ".xyz, " + Std.string(albedo) + ", " + Std.string(this._totalLightColorReg) + "\n" + "mul " + Std.string(this._totalLightColorReg) + ".xyz, " + Std.string(targetReg) + ", " + Std.string(this._totalLightColorReg) + "\n" + "sub " + Std.string(targetReg) + ".xyz, " + Std.string(targetReg) + ", " + Std.string(this._totalLightColorReg) + "\n" + "add " + Std.string(targetReg) + ".xyz, " + Std.string(albedo) + ", " + Std.string(targetReg) + "\n"; else {
			code += "add " + Std.string(targetReg) + ".xyz, " + Std.string(this._totalLightColorReg) + ", " + Std.string(targetReg) + "\n";
			if(this._useTexture) code += "mul " + Std.string(targetReg) + ".xyz, " + Std.string(albedo) + ", " + Std.string(targetReg) + "\n" + "mov " + Std.string(targetReg) + ".w, " + Std.string(albedo) + ".w\n"; else code += "mul " + Std.string(targetReg) + ".xyz, " + Std.string(this._diffuseInputRegister) + ", " + Std.string(targetReg) + "\n" + "mov " + Std.string(targetReg) + ".w, " + Std.string(this._diffuseInputRegister) + ".w\n";
		}
		regCache.removeFragmentTempUsage(this._totalLightColorReg);
		regCache.removeFragmentTempUsage(albedo);
		return code;
	}
	,getFragmentCodePerProbe: function(vo,cubeMapReg,weightRegister,regCache) {
		var code = "";
		var t;
		if(this._isFirstLight) t = this._totalLightColorReg; else {
			t = regCache.getFreeFragmentVectorTemp();
			regCache.addFragmentTempUsages(t,1);
		}
		code += "tex " + Std.string(t) + ", " + Std.string(this._sharedRegisters.normalFragment) + ", " + Std.string(cubeMapReg) + " <cube,linear,miplinear>\n" + "mul " + Std.string(t) + ".xyz, " + Std.string(t) + ".xyz, " + weightRegister + "\n";
		if(this._modulateMethod != null) code += Std.string(this._modulateMethod(vo,t,regCache,this._sharedRegisters));
		if(!this._isFirstLight) {
			code += "add " + Std.string(this._totalLightColorReg) + ".xyz, " + Std.string(this._totalLightColorReg) + ", " + Std.string(t) + "\n";
			regCache.removeFragmentTempUsage(t);
		}
		this._isFirstLight = false;
		return code;
	}
	,getFragmentCodePerLight: function(vo,lightDirReg,lightColReg,regCache) {
		var code = "";
		var t;
		if(this._isFirstLight) t = this._totalLightColorReg; else {
			t = regCache.getFreeFragmentVectorTemp();
			regCache.addFragmentTempUsages(t,1);
		}
		code += "dp3 " + Std.string(t) + ".x, " + Std.string(lightDirReg) + ", " + Std.string(this._sharedRegisters.normalFragment) + "\n" + "max " + Std.string(t) + ".w, " + Std.string(t) + ".x, " + Std.string(this._sharedRegisters.commons) + ".y\n";
		if(vo.useLightFallOff) code += "mul " + Std.string(t) + ".w, " + Std.string(t) + ".w, " + Std.string(lightDirReg) + ".w\n";
		if(this._modulateMethod != null) code += Std.string(this._modulateMethod(vo,t,regCache,this._sharedRegisters));
		code += "mul " + Std.string(t) + ", " + Std.string(t) + ".w, " + Std.string(lightColReg) + "\n";
		if(!this._isFirstLight) {
			code += "add " + Std.string(this._totalLightColorReg) + ".xyz, " + Std.string(this._totalLightColorReg) + ", " + Std.string(t) + "\n";
			regCache.removeFragmentTempUsage(t);
		}
		this._isFirstLight = false;
		return code;
	}
	,getFragmentPreLightingCode: function(vo,regCache) {
		var code = "";
		this._isFirstLight = true;
		if(vo.numLights > 0) {
			this._totalLightColorReg = regCache.getFreeFragmentVectorTemp();
			regCache.addFragmentTempUsages(this._totalLightColorReg,1);
		}
		return code;
	}
	,cleanCompilationData: function() {
		away3d.materials.methods.LightingMethodBase.prototype.cleanCompilationData.call(this);
		this._shadowRegister = null;
		this._totalLightColorReg = null;
		this._diffuseInputRegister = null;
	}
	,copyFrom: function(method) {
		var diff = js.Boot.__cast(method , away3d.materials.methods.BasicDiffuseMethod);
		this.set_alphaThreshold(diff.get_alphaThreshold());
		this.set_texture(diff.get_texture());
		this.set_useAmbientTexture(diff.get_useAmbientTexture());
		this.set_diffuseAlpha(diff.get_diffuseAlpha());
		this.set_diffuseColor(diff.get_diffuseColor());
	}
	,dispose: function() {
		this._texture = null;
	}
	,set_alphaThreshold: function(value) {
		if(value < 0) value = 0; else if(value > 1) value = 1;
		if(value == this._alphaThreshold) return value;
		if(value == 0 || this._alphaThreshold == 0) this.invalidateShaderProgram();
		this._alphaThreshold = value;
		return value;
	}
	,get_alphaThreshold: function() {
		return this._alphaThreshold;
	}
	,set_texture: function(value) {
		if(js.Boot.__cast(value != null , Bool) != this._useTexture || value != null && this._texture != null && (value.get_hasMipMaps() != this._texture.get_hasMipMaps() || value.get_format() != this._texture.get_format())) this.invalidateShaderProgram();
		this._useTexture = js.Boot.__cast(value != null , Bool);
		this._texture = value;
		return value;
	}
	,get_texture: function() {
		return this._texture;
	}
	,set_diffuseColor: function(diffuseColor) {
		this._diffuseColor = diffuseColor;
		this.updateDiffuse();
		return diffuseColor;
	}
	,get_diffuseColor: function() {
		return this._diffuseColor;
	}
	,set_diffuseAlpha: function(value) {
		this._diffuseA = value;
		return value;
	}
	,get_diffuseAlpha: function() {
		return this._diffuseA;
	}
	,generateMip: function(stage3DProxy) {
		if(this._useTexture) this._texture.getTextureForStage3D(stage3DProxy);
	}
	,initVO: function(vo) {
		vo.needsUV = this._useTexture;
		vo.needsNormals = vo.numLights > 0;
	}
	,set_useAmbientTexture: function(value) {
		if(this._useAmbientTexture == value) return value;
		this._useAmbientTexture = value;
		this.invalidateShaderProgram();
		return value;
	}
	,get_useAmbientTexture: function() {
		return this._useAmbientTexture;
	}
	,__class__: away3d.materials.methods.BasicDiffuseMethod
	,__properties__: $extend(away3d.materials.methods.LightingMethodBase.prototype.__properties__,{set_useAmbientTexture:"set_useAmbientTexture",get_useAmbientTexture:"get_useAmbientTexture",set_diffuseAlpha:"set_diffuseAlpha",get_diffuseAlpha:"get_diffuseAlpha",set_diffuseColor:"set_diffuseColor",get_diffuseColor:"get_diffuseColor",set_texture:"set_texture",get_texture:"get_texture",set_alphaThreshold:"set_alphaThreshold",get_alphaThreshold:"get_alphaThreshold",set_shadowRegister:"set_shadowRegister"})
});
away3d.materials.methods.BasicNormalMethod = function() {
	away3d.materials.methods.ShadingMethodBase.call(this);
};
$hxClasses["away3d.materials.methods.BasicNormalMethod"] = away3d.materials.methods.BasicNormalMethod;
away3d.materials.methods.BasicNormalMethod.__name__ = ["away3d","materials","methods","BasicNormalMethod"];
away3d.materials.methods.BasicNormalMethod.__super__ = away3d.materials.methods.ShadingMethodBase;
away3d.materials.methods.BasicNormalMethod.prototype = $extend(away3d.materials.methods.ShadingMethodBase.prototype,{
	getFragmentCode: function(vo,regCache,targetReg) {
		this._normalTextureRegister = regCache.getFreeTextureReg();
		vo.texturesIndex = this._normalTextureRegister.get_index();
		return this.getTex2DSampleCode(vo,targetReg,this._normalTextureRegister,this._texture) + "sub " + Std.string(targetReg) + ".xyz, " + Std.string(targetReg) + ".xyz, " + Std.string(this._sharedRegisters.commons) + ".xxx\t\n" + "nrm " + Std.string(targetReg) + ".xyz, " + Std.string(targetReg) + ".xyz\t\t\t\t\t\t\t\n";
	}
	,activate: function(vo,stage3DProxy) {
		if(vo.texturesIndex >= 0) stage3DProxy._context3D.setTextureAt(vo.texturesIndex,this._texture.getTextureForStage3D(stage3DProxy));
	}
	,dispose: function() {
		if(this._texture != null) this._texture = null;
	}
	,cleanCompilationData: function() {
		away3d.materials.methods.ShadingMethodBase.prototype.cleanCompilationData.call(this);
		this._normalTextureRegister = null;
	}
	,set_normalMap: function(value) {
		if(js.Boot.__cast(value != null , Bool) != this._useTexture || value != null && this._texture != null && (value.get_hasMipMaps() != this._texture.get_hasMipMaps() || value.get_format() != this._texture.get_format())) this.invalidateShaderProgram();
		this._useTexture = js.Boot.__cast(value != null , Bool);
		this._texture = value;
		return value;
	}
	,get_normalMap: function() {
		return this._texture;
	}
	,copyFrom: function(method) {
		this.set_normalMap((js.Boot.__cast(method , away3d.materials.methods.BasicNormalMethod)).get_normalMap());
	}
	,get_hasOutput: function() {
		return this._useTexture;
	}
	,get_tangentSpace: function() {
		return true;
	}
	,initVO: function(vo) {
		vo.needsUV = js.Boot.__cast(this._texture != null , Bool);
	}
	,__class__: away3d.materials.methods.BasicNormalMethod
	,__properties__: $extend(away3d.materials.methods.ShadingMethodBase.prototype.__properties__,{get_tangentSpace:"get_tangentSpace",get_hasOutput:"get_hasOutput",set_normalMap:"set_normalMap",get_normalMap:"get_normalMap"})
});
away3d.materials.methods.BasicSpecularMethod = function() {
	this._gloss = 50;
	this._specular = 1;
	this._specularColor = 16777215;
	this._specularR = 1;
	this._specularG = 1;
	this._specularB = 1;
	away3d.materials.methods.LightingMethodBase.call(this);
};
$hxClasses["away3d.materials.methods.BasicSpecularMethod"] = away3d.materials.methods.BasicSpecularMethod;
away3d.materials.methods.BasicSpecularMethod.__name__ = ["away3d","materials","methods","BasicSpecularMethod"];
away3d.materials.methods.BasicSpecularMethod.__super__ = away3d.materials.methods.LightingMethodBase;
away3d.materials.methods.BasicSpecularMethod.prototype = $extend(away3d.materials.methods.LightingMethodBase.prototype,{
	set_shadowRegister: function(shadowReg) {
		this._shadowRegister = shadowReg;
		return shadowReg;
	}
	,updateSpecular: function() {
		this._specularR = (this._specularColor >> 16 & 255) / 255 * this._specular;
		this._specularG = (this._specularColor >> 8 & 255) / 255 * this._specular;
		this._specularB = (this._specularColor & 255) / 255 * this._specular;
	}
	,activate: function(vo,stage3DProxy) {
		if(vo.numLights == 0) return;
		if(this._useTexture) stage3DProxy._context3D.setTextureAt(vo.texturesIndex,this._texture.getTextureForStage3D(stage3DProxy));
		var index = vo.fragmentConstantsIndex;
		var data = vo.fragmentData;
		data[index] = this._specularR;
		data[index + 1] = this._specularG;
		data[index + 2] = this._specularB;
		data[index + 3] = this._gloss;
	}
	,getFragmentPostLightingCode: function(vo,regCache,targetReg) {
		var code = "";
		if(vo.numLights == 0) return code;
		if(this._shadowRegister != null) code += "mul " + Std.string(this._totalLightColorReg) + ".xyz, " + Std.string(this._totalLightColorReg) + ", " + Std.string(this._shadowRegister) + ".w\n";
		if(this._useTexture) {
			code += "mul " + Std.string(this._totalLightColorReg) + ".xyz, " + Std.string(this._totalLightColorReg) + ", " + Std.string(this._specularTexData) + ".x\n";
			regCache.removeFragmentTempUsage(this._specularTexData);
		}
		code += "mul " + Std.string(this._totalLightColorReg) + ".xyz, " + Std.string(this._totalLightColorReg) + ", " + Std.string(this._specularDataRegister) + "\n" + "add " + Std.string(targetReg) + ".xyz, " + Std.string(targetReg) + ", " + Std.string(this._totalLightColorReg) + "\n";
		regCache.removeFragmentTempUsage(this._totalLightColorReg);
		return code;
	}
	,getFragmentCodePerProbe: function(vo,cubeMapReg,weightRegister,regCache) {
		var code = "";
		var t;
		if(this._isFirstLight) t = this._totalLightColorReg; else {
			t = regCache.getFreeFragmentVectorTemp();
			regCache.addFragmentTempUsages(t,1);
		}
		var normalReg = this._sharedRegisters.normalFragment;
		var viewDirReg = this._sharedRegisters.viewDirFragment;
		code += "dp3 " + Std.string(t) + ".w, " + Std.string(normalReg) + ", " + Std.string(viewDirReg) + "\n" + "add " + Std.string(t) + ".w, " + Std.string(t) + ".w, " + Std.string(t) + ".w\n" + "mul " + Std.string(t) + ", " + Std.string(t) + ".w, " + Std.string(normalReg) + "\n" + "sub " + Std.string(t) + ", " + Std.string(t) + ", " + Std.string(viewDirReg) + "\n" + "tex " + Std.string(t) + ", " + Std.string(t) + ", " + Std.string(cubeMapReg) + " <cube," + (vo.useSmoothTextures?"linear":"nearest") + ",miplinear>\n" + "mul " + Std.string(t) + ".xyz, " + Std.string(t) + ", " + weightRegister + "\n";
		if(this._modulateMethod != null) code += Std.string(this._modulateMethod(vo,t,regCache,this._sharedRegisters));
		if(!this._isFirstLight) {
			code += "add " + Std.string(this._totalLightColorReg) + ".xyz, " + Std.string(this._totalLightColorReg) + ", " + Std.string(t) + "\n";
			regCache.removeFragmentTempUsage(t);
		}
		this._isFirstLight = false;
		return code;
	}
	,getFragmentCodePerLight: function(vo,lightDirReg,lightColReg,regCache) {
		var code = "";
		var t;
		if(this._isFirstLight) t = this._totalLightColorReg; else {
			t = regCache.getFreeFragmentVectorTemp();
			regCache.addFragmentTempUsages(t,1);
		}
		var viewDirReg = this._sharedRegisters.viewDirFragment;
		var normalReg = this._sharedRegisters.normalFragment;
		code += "add " + Std.string(t) + ", " + Std.string(lightDirReg) + ", " + Std.string(viewDirReg) + "\n" + "nrm " + Std.string(t) + ".xyz, " + Std.string(t) + "\n" + "dp3 " + Std.string(t) + ".w, " + Std.string(normalReg) + ", " + Std.string(t) + "\n" + "sat " + Std.string(t) + ".w, " + Std.string(t) + ".w\n";
		if(this._useTexture) code += "mul " + Std.string(this._specularTexData) + ".w, " + Std.string(this._specularTexData) + ".y, " + Std.string(this._specularDataRegister) + ".w\n" + "pow " + Std.string(t) + ".w, " + Std.string(t) + ".w, " + Std.string(this._specularTexData) + ".w\n"; else code += "pow " + Std.string(t) + ".w, " + Std.string(t) + ".w, " + Std.string(this._specularDataRegister) + ".w\n";
		if(vo.useLightFallOff) code += "mul " + Std.string(t) + ".w, " + Std.string(t) + ".w, " + Std.string(lightDirReg) + ".w\n";
		if(this._modulateMethod != null) code += Std.string(this._modulateMethod(vo,t,regCache,this._sharedRegisters));
		code += "mul " + Std.string(t) + ".xyz, " + Std.string(lightColReg) + ", " + Std.string(t) + ".w\n";
		if(!this._isFirstLight) {
			code += "add " + Std.string(this._totalLightColorReg) + ".xyz, " + Std.string(this._totalLightColorReg) + ", " + Std.string(t) + "\n";
			regCache.removeFragmentTempUsage(t);
		}
		this._isFirstLight = false;
		return code;
	}
	,getFragmentPreLightingCode: function(vo,regCache) {
		var code = "";
		this._isFirstLight = true;
		if(vo.numLights > 0) {
			this._specularDataRegister = regCache.getFreeFragmentConstant();
			vo.fragmentConstantsIndex = this._specularDataRegister.get_index() * 4;
			if(this._useTexture) {
				this._specularTexData = regCache.getFreeFragmentVectorTemp();
				regCache.addFragmentTempUsages(this._specularTexData,1);
				this._specularTextureRegister = regCache.getFreeTextureReg();
				vo.texturesIndex = this._specularTextureRegister.get_index();
				code = this.getTex2DSampleCode(vo,this._specularTexData,this._specularTextureRegister,this._texture);
			} else this._specularTextureRegister = null;
			this._totalLightColorReg = regCache.getFreeFragmentVectorTemp();
			regCache.addFragmentTempUsages(this._totalLightColorReg,1);
		}
		return code;
	}
	,cleanCompilationData: function() {
		away3d.materials.methods.LightingMethodBase.prototype.cleanCompilationData.call(this);
		this._shadowRegister = null;
		this._totalLightColorReg = null;
		this._specularTextureRegister = null;
		this._specularTexData = null;
		this._specularDataRegister = null;
	}
	,copyFrom: function(method) {
		var spec = js.Boot.__cast(method , away3d.materials.methods.BasicSpecularMethod);
		this.set_texture(spec.get_texture());
		this.set_specular(spec.get_specular());
		this.set_specularColor(spec.get_specularColor());
		this.set_gloss(spec.get_gloss());
	}
	,set_texture: function(value) {
		if(js.Boot.__cast(value != null , Bool) != this._useTexture || value != null && this._texture != null && (value.get_hasMipMaps() != this._texture.get_hasMipMaps() || value.get_format() != this._texture.get_format())) this.invalidateShaderProgram();
		this._useTexture = js.Boot.__cast(value != null , Bool);
		this._texture = value;
		return value;
	}
	,get_texture: function() {
		return this._texture;
	}
	,set_specularColor: function(value) {
		if(this._specularColor == value) return value;
		if(this._specularColor == 0 || value == 0) this.invalidateShaderProgram();
		this._specularColor = value;
		this.updateSpecular();
		return value;
	}
	,get_specularColor: function() {
		return this._specularColor;
	}
	,set_specular: function(value) {
		if(value == this._specular) return value;
		this._specular = value;
		this.updateSpecular();
		return value;
	}
	,get_specular: function() {
		return this._specular;
	}
	,set_gloss: function(value) {
		this._gloss = value;
		return value;
	}
	,get_gloss: function() {
		return this._gloss;
	}
	,initVO: function(vo) {
		vo.needsUV = this._useTexture;
		vo.needsNormals = vo.numLights > 0;
		vo.needsView = vo.numLights > 0;
	}
	,__class__: away3d.materials.methods.BasicSpecularMethod
	,__properties__: $extend(away3d.materials.methods.LightingMethodBase.prototype.__properties__,{set_gloss:"set_gloss",get_gloss:"get_gloss",set_specular:"set_specular",get_specular:"get_specular",set_specularColor:"set_specularColor",get_specularColor:"get_specularColor",set_texture:"set_texture",get_texture:"get_texture",set_shadowRegister:"set_shadowRegister"})
});
away3d.materials.methods.EffectMethodBase = function() {
	away3d.materials.methods.ShadingMethodBase.call(this);
};
$hxClasses["away3d.materials.methods.EffectMethodBase"] = away3d.materials.methods.EffectMethodBase;
away3d.materials.methods.EffectMethodBase.__name__ = ["away3d","materials","methods","EffectMethodBase"];
away3d.materials.methods.EffectMethodBase.__interfaces__ = [away3d.library.assets.IAsset];
away3d.materials.methods.EffectMethodBase.__super__ = away3d.materials.methods.ShadingMethodBase;
away3d.materials.methods.EffectMethodBase.prototype = $extend(away3d.materials.methods.ShadingMethodBase.prototype,{
	getFragmentCode: function(vo,regCache,targetReg) {
		throw new away3d.errors.AbstractMethodError();
		return "";
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.EFFECTS_METHOD;
	}
	,__class__: away3d.materials.methods.EffectMethodBase
	,__properties__: $extend(away3d.materials.methods.ShadingMethodBase.prototype.__properties__,{get_assetType:"get_assetType"})
});
away3d.materials.methods.ColorTransformMethod = function() {
	away3d.materials.methods.EffectMethodBase.call(this);
};
$hxClasses["away3d.materials.methods.ColorTransformMethod"] = away3d.materials.methods.ColorTransformMethod;
away3d.materials.methods.ColorTransformMethod.__name__ = ["away3d","materials","methods","ColorTransformMethod"];
away3d.materials.methods.ColorTransformMethod.__super__ = away3d.materials.methods.EffectMethodBase;
away3d.materials.methods.ColorTransformMethod.prototype = $extend(away3d.materials.methods.EffectMethodBase.prototype,{
	activate: function(vo,stage3DProxy) {
		var inv = 1 / 255;
		var index = vo.fragmentConstantsIndex;
		var data = vo.fragmentData;
		data[index] = this._colorTransform.redMultiplier;
		data[index + 1] = this._colorTransform.greenMultiplier;
		data[index + 2] = this._colorTransform.blueMultiplier;
		data[index + 3] = this._colorTransform.alphaMultiplier;
		data[index + 4] = this._colorTransform.redOffset * inv;
		data[index + 5] = this._colorTransform.greenOffset * inv;
		data[index + 6] = this._colorTransform.blueOffset * inv;
		data[index + 7] = this._colorTransform.alphaOffset * inv;
	}
	,getFragmentCode: function(vo,regCache,targetReg) {
		var code = "";
		var colorMultReg = regCache.getFreeFragmentConstant();
		var colorOffsReg = regCache.getFreeFragmentConstant();
		vo.fragmentConstantsIndex = colorMultReg.get_index() * 4;
		code += "mul " + Std.string(targetReg) + ", " + targetReg.toString() + ", " + Std.string(colorMultReg) + "\n" + "add " + Std.string(targetReg) + ", " + targetReg.toString() + ", " + Std.string(colorOffsReg) + "\n";
		return code;
	}
	,set_colorTransform: function(value) {
		this._colorTransform = value;
		return value;
	}
	,get_colorTransform: function() {
		return this._colorTransform;
	}
	,__class__: away3d.materials.methods.ColorTransformMethod
	,__properties__: $extend(away3d.materials.methods.EffectMethodBase.prototype.__properties__,{set_colorTransform:"set_colorTransform",get_colorTransform:"get_colorTransform"})
});
away3d.materials.methods.MethodVO = function() {
	this.useLightFallOff = true;
};
$hxClasses["away3d.materials.methods.MethodVO"] = away3d.materials.methods.MethodVO;
away3d.materials.methods.MethodVO.__name__ = ["away3d","materials","methods","MethodVO"];
away3d.materials.methods.MethodVO.prototype = {
	reset: function() {
		this.texturesIndex = -1;
		this.vertexConstantsIndex = -1;
		this.fragmentConstantsIndex = -1;
		this.useMipmapping = true;
		this.useSmoothTextures = true;
		this.repeatTextures = false;
		this.needsProjection = false;
		this.needsView = false;
		this.needsNormals = false;
		this.needsTangents = false;
		this.needsUV = false;
		this.needsSecondaryUV = false;
		this.needsGlobalVertexPos = false;
		this.needsGlobalFragmentPos = false;
		this.numLights = 0;
		this.useLightFallOff = true;
	}
	,__class__: away3d.materials.methods.MethodVO
}
away3d.materials.methods.MethodVOSet = function(method) {
	this.method = method;
	this.data = method.createMethodVO();
};
$hxClasses["away3d.materials.methods.MethodVOSet"] = away3d.materials.methods.MethodVOSet;
away3d.materials.methods.MethodVOSet.__name__ = ["away3d","materials","methods","MethodVOSet"];
away3d.materials.methods.MethodVOSet.prototype = {
	__class__: away3d.materials.methods.MethodVOSet
}
away3d.materials.methods.ShaderMethodSetup = function() {
	this._methods = new Array();
	this._normalMethod = new away3d.materials.methods.BasicNormalMethod();
	this._ambientMethod = new away3d.materials.methods.BasicAmbientMethod();
	this._diffuseMethod = new away3d.materials.methods.BasicDiffuseMethod();
	this._specularMethod = new away3d.materials.methods.BasicSpecularMethod();
	this._normalMethod.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
	this._diffuseMethod.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
	this._specularMethod.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
	this._ambientMethod.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
	this._normalMethodVO = this._normalMethod.createMethodVO();
	this._ambientMethodVO = this._ambientMethod.createMethodVO();
	this._diffuseMethodVO = this._diffuseMethod.createMethodVO();
	this._specularMethodVO = this._specularMethod.createMethodVO();
	flash.events.EventDispatcher.call(this);
};
$hxClasses["away3d.materials.methods.ShaderMethodSetup"] = away3d.materials.methods.ShaderMethodSetup;
away3d.materials.methods.ShaderMethodSetup.__name__ = ["away3d","materials","methods","ShaderMethodSetup"];
away3d.materials.methods.ShaderMethodSetup.__super__ = flash.events.EventDispatcher;
away3d.materials.methods.ShaderMethodSetup.prototype = $extend(flash.events.EventDispatcher.prototype,{
	getMethodSetForMethod: function(method) {
		var len = this._methods.length;
		var i = 0;
		while(i < len) {
			if(this._methods[i].method == method) return this._methods[i];
			++i;
		}
		return null;
	}
	,removeMethod: function(method) {
		var methodSet = this.getMethodSetForMethod(method);
		if(methodSet != null) {
			HxOverrides.remove(this._methods,methodSet);
			method.removeEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
			this.invalidateShaderProgram();
		}
	}
	,get_numMethods: function() {
		return this._methods.length;
	}
	,getMethodAt: function(index) {
		if(index > this._methods.length - 1) return null;
		return this._methods[index].method;
	}
	,addMethodAt: function(method,index) {
		this._methods.splice(index,0,new away3d.materials.methods.MethodVOSet(method));
		method.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
		this.invalidateShaderProgram();
	}
	,hasMethod: function(method) {
		return this.getMethodSetForMethod(method) != null;
	}
	,addMethod: function(method) {
		this._methods.push(new away3d.materials.methods.MethodVOSet(method));
		method.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
		this.invalidateShaderProgram();
	}
	,clearListeners: function(method) {
		if(method != null) method.removeEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
	}
	,dispose: function() {
		this.clearListeners(this._normalMethod);
		this.clearListeners(this._diffuseMethod);
		this.clearListeners(this._shadowMethod);
		this.clearListeners(this._ambientMethod);
		this.clearListeners(this._specularMethod);
		var i = 0;
		while(i < this._methods.length) {
			this.clearListeners(this._methods[i].method);
			++i;
		}
		this._methods = null;
	}
	,set_colorTransformMethod: function(value) {
		if(this._colorTransformMethod == value) return value;
		if(this._colorTransformMethod != null) this._colorTransformMethod.removeEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
		if(this._colorTransformMethod == null || value == null) this.invalidateShaderProgram();
		this._colorTransformMethod = value;
		if(this._colorTransformMethod != null) {
			this._colorTransformMethod.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
			this._colorTransformMethodVO = this._colorTransformMethod.createMethodVO();
		} else this._colorTransformMethodVO = null;
		return value;
	}
	,get_colorTransformMethod: function() {
		return this._colorTransformMethod;
	}
	,set_specularMethod: function(value) {
		if(this._specularMethod != null) {
			this._specularMethod.removeEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
			if(value != null) value.copyFrom(this._specularMethod);
		}
		this._specularMethod = value;
		if(this._specularMethod != null) {
			this._specularMethod.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
			this._specularMethodVO = this._specularMethod.createMethodVO();
		} else this._specularMethodVO = null;
		this.invalidateShaderProgram();
		return value;
	}
	,get_specularMethod: function() {
		return this._specularMethod;
	}
	,set_diffuseMethod: function(value) {
		if(this._diffuseMethod != null) this._diffuseMethod.removeEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
		if(value != null) {
			if(this._diffuseMethod != null) value.copyFrom(this._diffuseMethod);
			value.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
			this._diffuseMethodVO = value.createMethodVO();
		}
		this._diffuseMethod = value;
		if(value != null) this.invalidateShaderProgram();
		return value;
	}
	,get_diffuseMethod: function() {
		return this._diffuseMethod;
	}
	,set_shadowMethod: function(value) {
		if(this._shadowMethod != null) this._shadowMethod.removeEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
		this._shadowMethod = value;
		if(this._shadowMethod != null) {
			this._shadowMethod.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
			this._shadowMethodVO = this._shadowMethod.createMethodVO();
		} else this._shadowMethodVO = null;
		this.invalidateShaderProgram();
		return value;
	}
	,get_shadowMethod: function() {
		return this._shadowMethod;
	}
	,set_ambientMethod: function(value) {
		if(this._ambientMethod != null) this._ambientMethod.removeEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
		if(value != null) {
			if(this._ambientMethod != null) value.copyFrom(this._ambientMethod);
			value.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
			this._ambientMethodVO = value.createMethodVO();
		}
		this._ambientMethod = value;
		if(value != null) this.invalidateShaderProgram();
		return value;
	}
	,get_ambientMethod: function() {
		return this._ambientMethod;
	}
	,set_normalMethod: function(value) {
		if(this._normalMethod != null) this._normalMethod.removeEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
		if(value != null) {
			if(this._normalMethod != null) value.copyFrom(this._normalMethod);
			this._normalMethodVO = value.createMethodVO();
			value.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
		}
		this._normalMethod = value;
		if(value != null) this.invalidateShaderProgram();
		return value;
	}
	,get_normalMethod: function() {
		return this._normalMethod;
	}
	,invalidateShaderProgram: function() {
		this.dispatchEvent(new away3d.events.ShadingMethodEvent(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED));
	}
	,onShaderInvalidated: function(event) {
		this.invalidateShaderProgram();
	}
	,__class__: away3d.materials.methods.ShaderMethodSetup
	,__properties__: {set_normalMethod:"set_normalMethod",get_normalMethod:"get_normalMethod",set_ambientMethod:"set_ambientMethod",get_ambientMethod:"get_ambientMethod",set_shadowMethod:"set_shadowMethod",get_shadowMethod:"get_shadowMethod",set_diffuseMethod:"set_diffuseMethod",get_diffuseMethod:"get_diffuseMethod",set_specularMethod:"set_specularMethod",get_specularMethod:"get_specularMethod",set_colorTransformMethod:"set_colorTransformMethod",get_colorTransformMethod:"get_colorTransformMethod",get_numMethods:"get_numMethods"}
});
away3d.materials.methods.ShadowMapMethodBase = function(castingLight) {
	this._epsilon = .02;
	this._alpha = 1;
	away3d.materials.methods.ShadingMethodBase.call(this);
	this._castingLight = castingLight;
	castingLight.set_castsShadows(true);
	this._shadowMapper = castingLight.get_shadowMapper();
};
$hxClasses["away3d.materials.methods.ShadowMapMethodBase"] = away3d.materials.methods.ShadowMapMethodBase;
away3d.materials.methods.ShadowMapMethodBase.__name__ = ["away3d","materials","methods","ShadowMapMethodBase"];
away3d.materials.methods.ShadowMapMethodBase.__interfaces__ = [away3d.library.assets.IAsset];
away3d.materials.methods.ShadowMapMethodBase.__super__ = away3d.materials.methods.ShadingMethodBase;
away3d.materials.methods.ShadowMapMethodBase.prototype = $extend(away3d.materials.methods.ShadingMethodBase.prototype,{
	getFragmentCode: function(vo,regCache,targetReg) {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,set_epsilon: function(value) {
		this._epsilon = value;
		return value;
	}
	,get_epsilon: function() {
		return this._epsilon;
	}
	,get_castingLight: function() {
		return this._castingLight;
	}
	,set_alpha: function(value) {
		this._alpha = value;
		return value;
	}
	,get_alpha: function() {
		return this._alpha;
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.SHADOW_MAP_METHOD;
	}
	,__class__: away3d.materials.methods.ShadowMapMethodBase
	,__properties__: $extend(away3d.materials.methods.ShadingMethodBase.prototype.__properties__,{get_assetType:"get_assetType",set_alpha:"set_alpha",get_alpha:"get_alpha",get_castingLight:"get_castingLight",set_epsilon:"set_epsilon",get_epsilon:"get_epsilon"})
});
away3d.materials.passes = {}
away3d.materials.passes.MaterialPassBase = function(renderToTexture) {
	if(renderToTexture == null) renderToTexture = false;
	this._program3Ds = flash._Vector.Vector_Impl_._new(8);
	this._program3Dids = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[-1,-1,-1,-1,-1,-1,-1,-1]);
	this._context3Ds = flash._Vector.Vector_Impl_._new(8);
	this._smooth = true;
	this._repeat = false;
	this._mipmap = true;
	this._depthCompareMode = 515;
	this._blendFactorSource = 1;
	this._blendFactorDest = 0;
	this._animatableAttributes = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),["va0"]);
	this._animationTargetRegisters = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),["vt0"]);
	this._shadedTarget = "ft0";
	this._defaultCulling = 1028;
	this._writeDepth = true;
	this._renderToTexture = renderToTexture;
	this._numUsedStreams = 1;
	this._numUsedVertexConstants = 5;
	flash.events.EventDispatcher.call(this);
};
$hxClasses["away3d.materials.passes.MaterialPassBase"] = away3d.materials.passes.MaterialPassBase;
away3d.materials.passes.MaterialPassBase.__name__ = ["away3d","materials","passes","MaterialPassBase"];
away3d.materials.passes.MaterialPassBase.__super__ = flash.events.EventDispatcher;
away3d.materials.passes.MaterialPassBase.prototype = $extend(flash.events.EventDispatcher.prototype,{
	set_alphaPremultiplied: function(value) {
		this._alphaPremultiplied = value;
		this.invalidateShaderProgram(false);
		return value;
	}
	,get_alphaPremultiplied: function() {
		return this._alphaPremultiplied;
	}
	,updateLights: function() {
	}
	,onLightsChange: function(event) {
		this.updateLights();
	}
	,set_lightPicker: function(value) {
		if(this._lightPicker != null) this._lightPicker.removeEventListener(flash.events.Event.CHANGE,$bind(this,this.onLightsChange));
		this._lightPicker = value;
		if(this._lightPicker != null) this._lightPicker.addEventListener(flash.events.Event.CHANGE,$bind(this,this.onLightsChange));
		this.updateLights();
		return value;
	}
	,get_lightPicker: function() {
		return this._lightPicker;
	}
	,updateProgram: function(stage3DProxy) {
		var animatorCode = "";
		var UVAnimatorCode = "";
		var fragmentAnimatorCode = "";
		var vertexCode = this.getVertexCode();
		if(this._animationSet != null && !this._animationSet.get_usesCPU()) {
			animatorCode = this._animationSet.getAGALVertexCode(this,this._animatableAttributes,this._animationTargetRegisters,stage3DProxy.get_profile());
			if(this._needFragmentAnimation) fragmentAnimatorCode = this._animationSet.getAGALFragmentCode(this,this._shadedTarget,stage3DProxy.get_profile());
			if(this._needUVAnimation) UVAnimatorCode = this._animationSet.getAGALUVCode(this,this._UVSource,this._UVTarget);
			this._animationSet.doneAGALCode(this);
		} else {
			var len = flash._Vector.Vector_Impl_.get_length(this._animatableAttributes);
			var i = 0;
			while(i < len) {
				animatorCode += "mov " + this._animationTargetRegisters[i] + ", " + this._animatableAttributes[i] + "\n";
				++i;
			}
			if(this._needUVAnimation) UVAnimatorCode = "mov " + this._UVTarget + "," + this._UVSource + "\n";
		}
		vertexCode = animatorCode + UVAnimatorCode + vertexCode;
		var fragmentCode = this.getFragmentCode(fragmentAnimatorCode);
		if(away3d.debug.Debug.active) {
			console.log("Compiling AGAL Code:");
			console.log("--------------------");
			console.log(vertexCode);
			console.log("--------------------");
			console.log(fragmentCode);
		}
		away3d.core.managers.AGALProgram3DCache.getInstance(stage3DProxy).setProgram3D(this,vertexCode,fragmentCode);
	}
	,invalidateShaderProgram: function(updateMaterial) {
		if(updateMaterial == null) updateMaterial = true;
		var i = 0;
		while(i < 8) {
			this._program3Ds[i] = null;
			++i;
		}
		if(this._material != null && updateMaterial) this._material.invalidatePasses(this);
	}
	,deactivate: function(stage3DProxy) {
		var index = stage3DProxy._stage3DIndex;
		away3d.materials.passes.MaterialPassBase._previousUsedStreams[index] = this._numUsedStreams;
		away3d.materials.passes.MaterialPassBase._previousUsedTexs[index] = this._numUsedTextures;
		if(this._animationSet != null && !this._animationSet.get_usesCPU()) this._animationSet.deactivate(stage3DProxy,this);
		if(this._renderToTexture) {
			stage3DProxy.setRenderTarget(this._oldTarget,this._oldDepthStencil,this._oldSurface);
			stage3DProxy.set_scissorRect(this._oldRect);
		}
		stage3DProxy._context3D.setDepthTest(true,515);
	}
	,activate: function(stage3DProxy,camera) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var context = stage3DProxy._context3D;
		context.setDepthTest(this._writeDepth && !this._enableBlending,this._depthCompareMode);
		if(this._enableBlending) context.setBlendFactors(this._blendFactorSource,this._blendFactorDest);
		if(this._context3Ds[contextIndex] != context || this._program3Ds[contextIndex] == null) {
			this._context3Ds[contextIndex] = context;
			this.updateProgram(stage3DProxy);
			this.dispatchEvent(new flash.events.Event(flash.events.Event.CHANGE));
		}
		context.setProgram(this._program3Ds[contextIndex]);
		var prevUsed = away3d.materials.passes.MaterialPassBase._previousUsedStreams[contextIndex];
		var i = 0;
		i = this._numUsedStreams;
		while(i < prevUsed) {
			context.setVertexBufferAt(i,null);
			++i;
		}
		prevUsed = away3d.materials.passes.MaterialPassBase._previousUsedTexs[contextIndex];
		i = this._numUsedTextures;
		while(i < prevUsed) {
			context.setTextureAt(i,null);
			++i;
		}
		if(this._animationSet != null && !this._animationSet.get_usesCPU()) this._animationSet.activate(stage3DProxy,this);
		context.setCulling(this._bothSides?0:this._defaultCulling);
		if(this._renderToTexture) {
			this._oldTarget = stage3DProxy.get_renderTarget();
			this._oldSurface = stage3DProxy.get_renderSurfaceSelector();
			this._oldDepthStencil = stage3DProxy.get_enableDepthAndStencil();
			this._oldRect = stage3DProxy.get_scissorRect();
		}
	}
	,setBlendMode: function(value) {
		switch( (value)[1] ) {
		case 10:
			this._blendFactorSource = 1;
			this._blendFactorDest = 0;
			this._enableBlending = false;
			break;
		case 7:
			this._blendFactorSource = 770;
			this._blendFactorDest = 771;
			this._enableBlending = true;
			break;
		case 9:
			this._blendFactorSource = 0;
			this._blendFactorDest = 768;
			this._enableBlending = true;
			break;
		case 0:
			this._blendFactorSource = 770;
			this._blendFactorDest = 1;
			this._enableBlending = true;
			break;
		case 1:
			this._blendFactorSource = 0;
			this._blendFactorDest = 770;
			this._enableBlending = true;
			break;
		default:
			throw new flash.errors.ArgumentError("Unsupported blend mode!");
		}
	}
	,getFragmentCode: function(fragmentAnimatorCode) {
		throw new away3d.errors.AbstractMethodError();
		return "";
	}
	,getVertexCode: function() {
		throw new away3d.errors.AbstractMethodError();
		return "";
	}
	,render: function(renderable,stage3DProxy,camera,viewProjection) {
		throw new away3d.errors.AbstractMethodError();
	}
	,updateAnimationState: function(renderable,stage3DProxy,camera) {
		renderable.get_animator().setRenderState(stage3DProxy,renderable,this._numUsedVertexConstants,this._numUsedStreams,camera);
	}
	,get_needUVAnimation: function() {
		return this._needUVAnimation;
	}
	,get_needFragmentAnimation: function() {
		return this._needFragmentAnimation;
	}
	,get_numUsedFragmentConstants: function() {
		return this._numUsedFragmentConstants;
	}
	,get_numUsedVaryings: function() {
		return this._numUsedVaryings;
	}
	,get_numUsedVertexConstants: function() {
		return this._numUsedVertexConstants;
	}
	,get_numUsedStreams: function() {
		return this._numUsedStreams;
	}
	,dispose: function() {
		if(this._lightPicker != null) this._lightPicker.removeEventListener(flash.events.Event.CHANGE,$bind(this,this.onLightsChange));
		var i = 0;
		while(i < 8) {
			if(this._program3Ds[i] != null) {
				away3d.core.managers.AGALProgram3DCache.getInstanceFromIndex(i).freeProgram3D(this._program3Dids[i]);
				this._program3Ds[i] = null;
			}
			++i;
		}
	}
	,get_renderToTexture: function() {
		return this._renderToTexture;
	}
	,set_animationSet: function(value) {
		if(this._animationSet == value) return value;
		this._animationSet = value;
		this.invalidateShaderProgram();
		return value;
	}
	,get_animationSet: function() {
		return this._animationSet;
	}
	,set_depthCompareMode: function(value) {
		this._depthCompareMode = value;
		return value;
	}
	,get_depthCompareMode: function() {
		return this._depthCompareMode;
	}
	,set_bothSides: function(value) {
		this._bothSides = value;
		return value;
	}
	,get_bothSides: function() {
		return this._bothSides;
	}
	,set_repeat: function(value) {
		if(this._repeat == value) return value;
		this._repeat = value;
		this.invalidateShaderProgram();
		return value;
	}
	,get_repeat: function() {
		return this._repeat;
	}
	,set_smooth: function(value) {
		if(this._smooth == value) return value;
		this._smooth = value;
		this.invalidateShaderProgram();
		return value;
	}
	,get_smooth: function() {
		return this._smooth;
	}
	,set_mipmap: function(value) {
		if(this._mipmap == value) return value;
		this._mipmap = value;
		this.invalidateShaderProgram();
		return value;
	}
	,get_mipmap: function() {
		return this._mipmap;
	}
	,set_writeDepth: function(value) {
		this._writeDepth = value;
		return value;
	}
	,get_writeDepth: function() {
		return this._writeDepth;
	}
	,set_material: function(value) {
		this._material = value;
		return value;
	}
	,get_material: function() {
		return this._material;
	}
	,__class__: away3d.materials.passes.MaterialPassBase
	,__properties__: {set_material:"set_material",get_material:"get_material",set_writeDepth:"set_writeDepth",get_writeDepth:"get_writeDepth",set_mipmap:"set_mipmap",get_mipmap:"get_mipmap",set_smooth:"set_smooth",get_smooth:"get_smooth",set_repeat:"set_repeat",get_repeat:"get_repeat",set_bothSides:"set_bothSides",get_bothSides:"get_bothSides",set_depthCompareMode:"set_depthCompareMode",get_depthCompareMode:"get_depthCompareMode",set_animationSet:"set_animationSet",get_animationSet:"get_animationSet",get_renderToTexture:"get_renderToTexture",get_numUsedStreams:"get_numUsedStreams",get_numUsedVertexConstants:"get_numUsedVertexConstants",get_numUsedVaryings:"get_numUsedVaryings",get_numUsedFragmentConstants:"get_numUsedFragmentConstants",get_needFragmentAnimation:"get_needFragmentAnimation",get_needUVAnimation:"get_needUVAnimation",set_lightPicker:"set_lightPicker",get_lightPicker:"get_lightPicker",set_alphaPremultiplied:"set_alphaPremultiplied",get_alphaPremultiplied:"get_alphaPremultiplied"}
});
away3d.materials.passes.CompiledPass = function(material) {
	this._specularLightSources = 1;
	this._diffuseLightSources = 3;
	this._vertexConstantData = flash._Vector.Vector_Impl_._new();
	this._fragmentConstantData = flash._Vector.Vector_Impl_._new();
	this._preserveAlpha = true;
	this._enableLightFallOff = true;
	this._material = material;
	this.init();
	away3d.materials.passes.MaterialPassBase.call(this);
};
$hxClasses["away3d.materials.passes.CompiledPass"] = away3d.materials.passes.CompiledPass;
away3d.materials.passes.CompiledPass.__name__ = ["away3d","materials","passes","CompiledPass"];
away3d.materials.passes.CompiledPass.__super__ = away3d.materials.passes.MaterialPassBase;
away3d.materials.passes.CompiledPass.prototype = $extend(away3d.materials.passes.MaterialPassBase.prototype,{
	set_diffuseLightSources: function(value) {
		this._diffuseLightSources = value;
		return value;
	}
	,get_diffuseLightSources: function() {
		return this._diffuseLightSources;
	}
	,set_specularLightSources: function(value) {
		this._specularLightSources = value;
		return value;
	}
	,get_specularLightSources: function() {
		return this._specularLightSources;
	}
	,deactivate: function(stage3DProxy) {
		away3d.materials.passes.MaterialPassBase.prototype.deactivate.call(this,stage3DProxy);
		if(this._usesNormals) this._methodSetup._normalMethod.deactivate(this._methodSetup._normalMethodVO,stage3DProxy);
		this._methodSetup._ambientMethod.deactivate(this._methodSetup._ambientMethodVO,stage3DProxy);
		if(this._methodSetup._shadowMethod != null) this._methodSetup._shadowMethod.deactivate(this._methodSetup._shadowMethodVO,stage3DProxy);
		this._methodSetup._diffuseMethod.deactivate(this._methodSetup._diffuseMethodVO,stage3DProxy);
		if(this._usingSpecularMethod) this._methodSetup._specularMethod.deactivate(this._methodSetup._specularMethodVO,stage3DProxy);
	}
	,usesLights: function() {
		return (this._numPointLights > 0 || this._numDirectionalLights > 0) && ((this._diffuseLightSources | this._specularLightSources) & away3d.materials.LightSources.LIGHTS) != 0;
	}
	,usesProbes: function() {
		return this._numLightProbes > 0 && ((this._diffuseLightSources | this._specularLightSources) & away3d.materials.LightSources.PROBES) != 0;
	}
	,render: function(renderable,stage3DProxy,camera,viewProjection) {
		var i = 0;
		var context = stage3DProxy._context3D;
		if(this._uvBufferIndex >= 0) renderable.activateUVBuffer(this._uvBufferIndex,stage3DProxy);
		if(this._secondaryUVBufferIndex >= 0) renderable.activateSecondaryUVBuffer(this._secondaryUVBufferIndex,stage3DProxy);
		if(this._normalBufferIndex >= 0) renderable.activateVertexNormalBuffer(this._normalBufferIndex,stage3DProxy);
		if(this._tangentBufferIndex >= 0) renderable.activateVertexTangentBuffer(this._tangentBufferIndex,stage3DProxy);
		if(this._animateUVs) {
			var uvTransform = renderable.get_uvTransform();
			if(uvTransform != null) {
				this._vertexConstantData[this._uvTransformIndex] = uvTransform.a;
				this._vertexConstantData[this._uvTransformIndex + 1] = uvTransform.b;
				this._vertexConstantData[this._uvTransformIndex + 3] = uvTransform.tx;
				this._vertexConstantData[this._uvTransformIndex + 4] = uvTransform.c;
				this._vertexConstantData[this._uvTransformIndex + 5] = uvTransform.d;
				this._vertexConstantData[this._uvTransformIndex + 7] = uvTransform.ty;
			} else {
				this._vertexConstantData[this._uvTransformIndex] = 1;
				this._vertexConstantData[this._uvTransformIndex + 1] = 0;
				this._vertexConstantData[this._uvTransformIndex + 3] = 0;
				this._vertexConstantData[this._uvTransformIndex + 4] = 0;
				this._vertexConstantData[this._uvTransformIndex + 5] = 1;
				this._vertexConstantData[this._uvTransformIndex + 7] = 0;
			}
		}
		this._ambientLightR = this._ambientLightG = this._ambientLightB = 0;
		if(this.usesLights()) this.updateLightConstants();
		if(this.usesProbes()) this.updateProbes(stage3DProxy);
		if(this._sceneMatrixIndex >= 0) {
			away3d.Stage3DUtils.copyRawDataTo(renderable.getRenderSceneTransform(camera),this._vertexConstantData,this._sceneMatrixIndex,true);
			away3d.Stage3DUtils.copyRawDataTo(viewProjection,this._vertexConstantData,0,true);
		} else {
			var matrix3D = away3d.core.math.Matrix3DUtils.CALCULATION_MATRIX;
			matrix3D.copyFrom(renderable.getRenderSceneTransform(camera));
			matrix3D.append(viewProjection);
			away3d.Stage3DUtils.copyRawDataTo(matrix3D,this._vertexConstantData,0,true);
		}
		if(this._sceneNormalMatrixIndex >= 0) away3d.Stage3DUtils.copyRawDataTo(renderable.get_inverseSceneTransform(),this._vertexConstantData,this._sceneNormalMatrixIndex,false);
		if(this._usesNormals) this._methodSetup._normalMethod.setRenderState(this._methodSetup._normalMethodVO,renderable,stage3DProxy,camera);
		var ambientMethod = this._methodSetup._ambientMethod;
		ambientMethod._lightAmbientR = this._ambientLightR;
		ambientMethod._lightAmbientG = this._ambientLightG;
		ambientMethod._lightAmbientB = this._ambientLightB;
		ambientMethod.setRenderState(this._methodSetup._ambientMethodVO,renderable,stage3DProxy,camera);
		if(this._methodSetup._shadowMethod != null) this._methodSetup._shadowMethod.setRenderState(this._methodSetup._shadowMethodVO,renderable,stage3DProxy,camera);
		this._methodSetup._diffuseMethod.setRenderState(this._methodSetup._diffuseMethodVO,renderable,stage3DProxy,camera);
		if(this._usingSpecularMethod) this._methodSetup._specularMethod.setRenderState(this._methodSetup._specularMethodVO,renderable,stage3DProxy,camera);
		if(this._methodSetup._colorTransformMethod != null) this._methodSetup._colorTransformMethod.setRenderState(this._methodSetup._colorTransformMethodVO,renderable,stage3DProxy,camera);
		var methods = this._methodSetup._methods;
		var len = methods.length;
		i = 0;
		while(i < len) {
			var set = methods[i];
			set.method.setRenderState(set.data,renderable,stage3DProxy,camera);
			++i;
		}
		context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.VERTEX,0,this._vertexConstantData,this._numUsedVertexConstants);
		context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.FRAGMENT,0,this._fragmentConstantData,this._numUsedFragmentConstants);
		renderable.activateVertexBuffer(0,stage3DProxy);
		context.drawTriangles(renderable.getIndexBuffer(stage3DProxy),0,renderable.get_numTriangles());
	}
	,activate: function(stage3DProxy,camera) {
		away3d.materials.passes.MaterialPassBase.prototype.activate.call(this,stage3DProxy,camera);
		if(this._usesNormals) this._methodSetup._normalMethod.activate(this._methodSetup._normalMethodVO,stage3DProxy);
		this._methodSetup._ambientMethod.activate(this._methodSetup._ambientMethodVO,stage3DProxy);
		if(this._methodSetup._shadowMethod != null) this._methodSetup._shadowMethod.activate(this._methodSetup._shadowMethodVO,stage3DProxy);
		this._methodSetup._diffuseMethod.activate(this._methodSetup._diffuseMethodVO,stage3DProxy);
		if(this._usingSpecularMethod) this._methodSetup._specularMethod.activate(this._methodSetup._specularMethodVO,stage3DProxy);
	}
	,getFragmentCode: function(animatorCode) {
		return this._fragmentLightCode + animatorCode + this._framentPostLightCode;
	}
	,getVertexCode: function() {
		return this._vertexCode;
	}
	,onShaderInvalidated: function(event) {
		this.invalidateShaderProgram();
	}
	,updateProbes: function(stage3DProxy) {
	}
	,updateLightConstants: function() {
	}
	,updateMethodConstants: function() {
		if(this._methodSetup._normalMethod != null) this._methodSetup._normalMethod.initConstants(this._methodSetup._normalMethodVO);
		if(this._methodSetup._diffuseMethod != null) this._methodSetup._diffuseMethod.initConstants(this._methodSetup._diffuseMethodVO);
		if(this._methodSetup._ambientMethod != null) this._methodSetup._ambientMethod.initConstants(this._methodSetup._ambientMethodVO);
		if(this._usingSpecularMethod) this._methodSetup._specularMethod.initConstants(this._methodSetup._specularMethodVO);
		if(this._methodSetup._shadowMethod != null) this._methodSetup._shadowMethod.initConstants(this._methodSetup._shadowMethodVO);
	}
	,cleanUp: function() {
		this._compiler.dispose();
		this._compiler = null;
	}
	,initCommonsData: function() {
		this._fragmentConstantData[this._commonsDataIndex] = .5;
		this._fragmentConstantData[this._commonsDataIndex + 1] = 0;
		this._fragmentConstantData[this._commonsDataIndex + 2] = 1 / 255;
		this._fragmentConstantData[this._commonsDataIndex + 3] = 1;
	}
	,initUVTransformData: function() {
		this._vertexConstantData[this._uvTransformIndex] = 1;
		this._vertexConstantData[this._uvTransformIndex + 1] = 0;
		this._vertexConstantData[this._uvTransformIndex + 2] = 0;
		this._vertexConstantData[this._uvTransformIndex + 3] = 0;
		this._vertexConstantData[this._uvTransformIndex + 4] = 0;
		this._vertexConstantData[this._uvTransformIndex + 5] = 1;
		this._vertexConstantData[this._uvTransformIndex + 6] = 0;
		this._vertexConstantData[this._uvTransformIndex + 7] = 0;
	}
	,addPasses: function(passes) {
		if(passes == null) return;
		var len = flash._Vector.Vector_Impl_.get_length(passes);
		var i = 0;
		while(i < len) {
			passes[i].set_material(this.get_material());
			passes[i].set_lightPicker(this._lightPicker);
			flash._Vector.Vector_Impl_.push(this._passes,passes[i]);
			++i;
		}
	}
	,addPassesFromMethods: function() {
		if(this._methodSetup._normalMethod != null && this._methodSetup._normalMethod.get_hasOutput()) this.addPasses(this._methodSetup._normalMethod.get_passes());
		if(this._methodSetup._ambientMethod != null) this.addPasses(this._methodSetup._ambientMethod.get_passes());
		if(this._methodSetup._shadowMethod != null) this.addPasses(this._methodSetup._shadowMethod.get_passes());
		if(this._methodSetup._diffuseMethod != null) this.addPasses(this._methodSetup._diffuseMethod.get_passes());
		if(this._methodSetup._specularMethod != null) this.addPasses(this._methodSetup._specularMethod.get_passes());
	}
	,invalidateShaderProgram: function(updateMaterial) {
		if(updateMaterial == null) updateMaterial = true;
		var oldPasses = this._passes;
		this._passes = flash._Vector.Vector_Impl_._new();
		if(this._methodSetup != null) this.addPassesFromMethods();
		if(oldPasses == null || flash._Vector.Vector_Impl_.get_length(this._passes) != flash._Vector.Vector_Impl_.get_length(oldPasses)) {
			this._passesDirty = true;
			return;
		}
		var i = 0;
		while(i < flash._Vector.Vector_Impl_.get_length(this._passes)) {
			if(this._passes[i] != oldPasses[i]) {
				this._passesDirty = true;
				return;
			}
			++i;
		}
		away3d.materials.passes.MaterialPassBase.prototype.invalidateShaderProgram.call(this,updateMaterial);
	}
	,dispose: function() {
		away3d.materials.passes.MaterialPassBase.prototype.dispose.call(this);
		this._methodSetup.removeEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
		this._methodSetup.dispose();
		this._methodSetup = null;
	}
	,init: function() {
		this._methodSetup = new away3d.materials.methods.ShaderMethodSetup();
		this._methodSetup.addEventListener(away3d.events.ShadingMethodEvent.SHADER_INVALIDATED,$bind(this,this.onShaderInvalidated));
	}
	,set_specularMethod: function(value) {
		this._methodSetup.set_specularMethod(value);
		return value;
	}
	,get_specularMethod: function() {
		return this._methodSetup.get_specularMethod();
	}
	,set_diffuseMethod: function(value) {
		this._methodSetup.set_diffuseMethod(value);
		return value;
	}
	,get_diffuseMethod: function() {
		return this._methodSetup.get_diffuseMethod();
	}
	,set_shadowMethod: function(value) {
		this._methodSetup.set_shadowMethod(value);
		return value;
	}
	,get_shadowMethod: function() {
		return this._methodSetup.get_shadowMethod();
	}
	,set_ambientMethod: function(value) {
		this._methodSetup.set_ambientMethod(value);
		return value;
	}
	,get_ambientMethod: function() {
		return this._methodSetup.get_ambientMethod();
	}
	,set_normalMethod: function(value) {
		this._methodSetup.set_normalMethod(value);
		return value;
	}
	,get_normalMethod: function() {
		return this._methodSetup.get_normalMethod();
	}
	,set_normalMap: function(value) {
		this._methodSetup._normalMethod.set_normalMap(value);
		return value;
	}
	,get_normalMap: function() {
		return this._methodSetup._normalMethod.get_normalMap();
	}
	,set_mipmap: function(value) {
		if(this._mipmap == value) return value;
		away3d.materials.passes.MaterialPassBase.prototype.set_mipmap.call(this,value);
		return value;
	}
	,set_animateUVs: function(value) {
		if(this._animateUVs == value) return value;
		this._animateUVs = value;
		this.invalidateShaderProgram();
		return value;
	}
	,get_animateUVs: function() {
		return this._animateUVs;
	}
	,set_preserveAlpha: function(value) {
		if(this._preserveAlpha == value) return value;
		this._preserveAlpha = value;
		this.invalidateShaderProgram();
		return value;
	}
	,get_preserveAlpha: function() {
		return this._preserveAlpha;
	}
	,updateRegisterIndices: function() {
		this._uvBufferIndex = this._compiler.get_uvBufferIndex();
		this._uvTransformIndex = this._compiler.get_uvTransformIndex();
		this._secondaryUVBufferIndex = this._compiler.get_secondaryUVBufferIndex();
		this._normalBufferIndex = this._compiler.get_normalBufferIndex();
		this._tangentBufferIndex = this._compiler.get_tangentBufferIndex();
		this._lightFragmentConstantIndex = this._compiler.get_lightFragmentConstantIndex();
		this._cameraPositionIndex = this._compiler.get_cameraPositionIndex();
		this._commonsDataIndex = this._compiler.get_commonsDataIndex();
		this._sceneMatrixIndex = this._compiler.get_sceneMatrixIndex();
		this._sceneNormalMatrixIndex = this._compiler.get_sceneNormalMatrixIndex();
		this._probeWeightsIndex = this._compiler.get_probeWeightsIndex();
		this._lightProbeDiffuseIndices = this._compiler.get_lightProbeDiffuseIndices();
		this._lightProbeSpecularIndices = this._compiler.get_lightProbeSpecularIndices();
	}
	,updateShaderProperties: function() {
		this._animatableAttributes = this._compiler.get_animatableAttributes();
		this._animationTargetRegisters = this._compiler.get_animationTargetRegisters();
		this._vertexCode = this._compiler.get_vertexCode();
		this._fragmentLightCode = this._compiler.get_fragmentLightCode();
		this._framentPostLightCode = this._compiler.get_fragmentPostLightCode();
		this._shadedTarget = this._compiler.get_shadedTarget();
		this._usingSpecularMethod = this._compiler.get_usingSpecularMethod();
		this._usesNormals = this._compiler.get_usesNormals();
		this._needUVAnimation = this._compiler.get_needUVAnimation();
		this._UVSource = this._compiler.get_UVSource();
		this._UVTarget = this._compiler.get_UVTarget();
		this.updateRegisterIndices();
		this.updateUsedOffsets();
	}
	,createCompiler: function(profile) {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,initCompiler: function(profile) {
		this._compiler = this.createCompiler(profile);
		this._compiler.set_forceSeperateMVP(this._forceSeparateMVP);
		this._compiler.set_numPointLights(this._numPointLights);
		this._compiler.set_numDirectionalLights(this._numDirectionalLights);
		this._compiler.set_numLightProbes(this._numLightProbes);
		this._compiler.set_methodSetup(this._methodSetup);
		this._compiler.set_diffuseLightSources(this._diffuseLightSources);
		this._compiler.set_specularLightSources(this._specularLightSources);
		this._compiler.setTextureSampling(this._smooth,this._repeat,this._mipmap);
		this._compiler.setConstantDataBuffers(this._vertexConstantData,this._fragmentConstantData);
		this._compiler.set_animateUVs(this._animateUVs);
		this._compiler.set_alphaPremultiplied(this._alphaPremultiplied && this._enableBlending);
		this._compiler.set_preserveAlpha(this._preserveAlpha && this._enableBlending);
		this._compiler.set_enableLightFallOff(this._enableLightFallOff);
		this._compiler.compile();
	}
	,initConstantData: function() {
		var value = this._numUsedVertexConstants * 4;
		if(value < this._vertexConstantData.length) this._vertexConstantData = this._vertexConstantData.slice(0,value);
		while(value > this._vertexConstantData.length) this._vertexConstantData.push(null);
		value;
		var value = this._numUsedFragmentConstants * 4;
		if(value < this._fragmentConstantData.length) this._fragmentConstantData = this._fragmentConstantData.slice(0,value);
		while(value > this._fragmentConstantData.length) this._fragmentConstantData.push(null);
		value;
		this.initCommonsData();
		if(this._uvTransformIndex >= 0) this.initUVTransformData();
		if(this._cameraPositionIndex >= 0) this._vertexConstantData[this._cameraPositionIndex + 3] = 1;
		this.updateMethodConstants();
	}
	,updateUsedOffsets: function() {
		this._numUsedVertexConstants = this._compiler.get_numUsedVertexConstants();
		this._numUsedFragmentConstants = this._compiler.get_numUsedFragmentConstants();
		this._numUsedStreams = this._compiler.get_numUsedStreams();
		this._numUsedTextures = this._compiler.get_numUsedTextures();
		this._numUsedVaryings = this._compiler.get_numUsedVaryings();
		this._numUsedFragmentConstants = this._compiler.get_numUsedFragmentConstants();
	}
	,reset: function(profile) {
		this.initCompiler(profile);
		this.updateShaderProperties();
		this.initConstantData();
		this.cleanUp();
	}
	,updateProgram: function(stage3DProxy) {
		this.reset(stage3DProxy.get_profile());
		away3d.materials.passes.MaterialPassBase.prototype.updateProgram.call(this,stage3DProxy);
	}
	,get_numLightProbes: function() {
		return this._numLightProbes;
	}
	,get_numDirectionalLights: function() {
		return this._numDirectionalLights;
	}
	,get_numPointLights: function() {
		return this._numPointLights;
	}
	,set_forceSeparateMVP: function(value) {
		this._forceSeparateMVP = value;
		return value;
	}
	,get_forceSeparateMVP: function() {
		return this._forceSeparateMVP;
	}
	,set_enableLightFallOff: function(value) {
		if(value != this._enableLightFallOff) this.invalidateShaderProgram(true);
		this._enableLightFallOff = value;
		return value;
	}
	,get_enableLightFallOff: function() {
		return this._enableLightFallOff;
	}
	,__class__: away3d.materials.passes.CompiledPass
	,__properties__: $extend(away3d.materials.passes.MaterialPassBase.prototype.__properties__,{set_enableLightFallOff:"set_enableLightFallOff",get_enableLightFallOff:"get_enableLightFallOff",set_forceSeparateMVP:"set_forceSeparateMVP",get_forceSeparateMVP:"get_forceSeparateMVP",get_numPointLights:"get_numPointLights",get_numDirectionalLights:"get_numDirectionalLights",get_numLightProbes:"get_numLightProbes",set_preserveAlpha:"set_preserveAlpha",get_preserveAlpha:"get_preserveAlpha",set_animateUVs:"set_animateUVs",get_animateUVs:"get_animateUVs",set_normalMap:"set_normalMap",get_normalMap:"get_normalMap",set_normalMethod:"set_normalMethod",get_normalMethod:"get_normalMethod",set_ambientMethod:"set_ambientMethod",get_ambientMethod:"get_ambientMethod",set_shadowMethod:"set_shadowMethod",get_shadowMethod:"get_shadowMethod",set_diffuseMethod:"set_diffuseMethod",get_diffuseMethod:"get_diffuseMethod",set_specularMethod:"set_specularMethod",get_specularMethod:"get_specularMethod",set_specularLightSources:"set_specularLightSources",get_specularLightSources:"get_specularLightSources",set_diffuseLightSources:"set_diffuseLightSources",get_diffuseLightSources:"get_diffuseLightSources"})
});
away3d.materials.passes.DepthMapPass = function() {
	this._alphaThreshold = 0;
	away3d.materials.passes.MaterialPassBase.call(this);
	this._data = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[1.0,255.0,65025.0,16581375.0,1.0 / 255.0,1.0 / 255.0,1.0 / 255.0,0.0,0.0,0.0,0.0,0.0]);
};
$hxClasses["away3d.materials.passes.DepthMapPass"] = away3d.materials.passes.DepthMapPass;
away3d.materials.passes.DepthMapPass.__name__ = ["away3d","materials","passes","DepthMapPass"];
away3d.materials.passes.DepthMapPass.__super__ = away3d.materials.passes.MaterialPassBase;
away3d.materials.passes.DepthMapPass.prototype = $extend(away3d.materials.passes.MaterialPassBase.prototype,{
	activate: function(stage3DProxy,camera) {
		var context = stage3DProxy._context3D;
		away3d.materials.passes.MaterialPassBase.prototype.activate.call(this,stage3DProxy,camera);
		if(this._alphaThreshold > 0) {
			context.setTextureAt(0,this._alphaMask.getTextureForStage3D(stage3DProxy));
			context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.FRAGMENT,0,this._data,3);
		} else context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.FRAGMENT,0,this._data,2);
	}
	,render: function(renderable,stage3DProxy,camera,viewProjection) {
		if(this._alphaThreshold > 0) renderable.activateUVBuffer(1,stage3DProxy);
		var context = stage3DProxy._context3D;
		var matrix = away3d.core.math.Matrix3DUtils.CALCULATION_MATRIX;
		matrix.copyFrom(renderable.getRenderSceneTransform(camera));
		matrix.append(viewProjection);
		context.setProgramConstantsFromMatrix(flash.display3D.Context3DProgramType.VERTEX,0,matrix,true);
		renderable.activateVertexBuffer(0,stage3DProxy);
		context.drawTriangles(renderable.getIndexBuffer(stage3DProxy),0,renderable.get_numTriangles());
	}
	,getFragmentCode: function(code) {
		var codeF = "div ft2, v0, v0.w\t\t\n" + "mul ft0, fc0, ft2.z\t\n" + "frc ft0, ft0\t\t\t\n" + "mul ft1, ft0.yzww, fc1\t\n";
		if(this._alphaThreshold > 0) {
			var wrap = this._repeat?"wrap":"clamp";
			var filter;
			var format;
			var enableMipMaps = this._mipmap && this._alphaMask.get_hasMipMaps();
			if(this._smooth) filter = enableMipMaps?"linear,miplinear":"linear"; else filter = enableMipMaps?"nearest,mipnearest":"nearest";
			var _sw0_ = this._alphaMask.get_format();
			switch( (_sw0_)[1] ) {
			case 1:
				format = "dxt1,";
				break;
			case 2:
				format = "dxt5,";
				break;
			default:
				format = "";
			}
			codeF += "tex ft3, v1, fs0 <2d," + filter + "," + format + wrap + ">\n" + "sub ft3.w, ft3.w, fc2.x\n" + "kil ft3.w\n";
		}
		codeF += "sub oc, ft0, ft1\t\t\n";
		return codeF;
	}
	,getVertexCode: function() {
		var code;
		code = "m44 vt1, vt0, vc0\t\t\n" + "mov op, vt1\t\n";
		if(this._alphaThreshold > 0) {
			this._numUsedTextures = 1;
			this._numUsedStreams = 2;
			code += "mov v0, vt1\n" + "mov v1, va1\n";
		} else {
			this._numUsedTextures = 0;
			this._numUsedStreams = 1;
			code += "mov v0, vt1\n";
		}
		return code;
	}
	,set_alphaMask: function(value) {
		this._alphaMask = value;
		return value;
	}
	,get_alphaMask: function() {
		return this._alphaMask;
	}
	,set_alphaThreshold: function(value) {
		if(value < 0) value = 0; else if(value > 1) value = 1;
		if(value == this._alphaThreshold) return value;
		if(value == 0 || this._alphaThreshold == 0) this.invalidateShaderProgram();
		this._alphaThreshold = value;
		this._data[8] = this._alphaThreshold;
		return value;
	}
	,get_alphaThreshold: function() {
		return this._alphaThreshold;
	}
	,__class__: away3d.materials.passes.DepthMapPass
	,__properties__: $extend(away3d.materials.passes.MaterialPassBase.prototype.__properties__,{set_alphaThreshold:"set_alphaThreshold",get_alphaThreshold:"get_alphaThreshold",set_alphaMask:"set_alphaMask",get_alphaMask:"get_alphaMask"})
});
away3d.materials.passes.DistanceMapPass = function() {
	away3d.materials.passes.MaterialPassBase.call(this);
	this._fragmentData = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[1.0,255.0,65025.0,16581375.0,1.0 / 255.0,1.0 / 255.0,1.0 / 255.0,0.0,0.0,0.0,0.0,0.0]);
	this._vertexData = flash._Vector.Vector_Impl_._new(4,true);
	this._vertexData[3] = 1;
	this._numUsedVertexConstants = 9;
};
$hxClasses["away3d.materials.passes.DistanceMapPass"] = away3d.materials.passes.DistanceMapPass;
away3d.materials.passes.DistanceMapPass.__name__ = ["away3d","materials","passes","DistanceMapPass"];
away3d.materials.passes.DistanceMapPass.__super__ = away3d.materials.passes.MaterialPassBase;
away3d.materials.passes.DistanceMapPass.prototype = $extend(away3d.materials.passes.MaterialPassBase.prototype,{
	activate: function(stage3DProxy,camera) {
		var context = stage3DProxy._context3D;
		away3d.materials.passes.MaterialPassBase.prototype.activate.call(this,stage3DProxy,camera);
		var f = camera.get_lens().get_far();
		f = 1 / (2 * f * f);
		this._fragmentData[0] = f;
		this._fragmentData[1] = 255.0 * f;
		this._fragmentData[2] = 65025.0 * f;
		this._fragmentData[3] = 16581375.0 * f;
		if(this._alphaThreshold > 0) {
			context.setTextureAt(0,this._alphaMask.getTextureForStage3D(stage3DProxy));
			context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.FRAGMENT,0,this._fragmentData,3);
		} else context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.FRAGMENT,0,this._fragmentData,2);
	}
	,render: function(renderable,stage3DProxy,camera,viewProjection) {
		var context = stage3DProxy._context3D;
		var pos = camera.get_scenePosition();
		this._vertexData[0] = pos.x;
		this._vertexData[1] = pos.y;
		this._vertexData[2] = pos.z;
		this._vertexData[3] = 1;
		var sceneTransform = renderable.getRenderSceneTransform(camera);
		context.setProgramConstantsFromMatrix(flash.display3D.Context3DProgramType.VERTEX,5,sceneTransform,true);
		context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.VERTEX,9,this._vertexData,1);
		if(this._alphaThreshold > 0) renderable.activateUVBuffer(1,stage3DProxy);
		var matrix = away3d.core.math.Matrix3DUtils.CALCULATION_MATRIX;
		matrix.copyFrom(sceneTransform);
		matrix.append(viewProjection);
		context.setProgramConstantsFromMatrix(flash.display3D.Context3DProgramType.VERTEX,0,matrix,true);
		renderable.activateVertexBuffer(0,stage3DProxy);
		context.drawTriangles(renderable.getIndexBuffer(stage3DProxy),0,renderable.get_numTriangles());
	}
	,getFragmentCode: function(animationCode) {
		var code;
		var wrap = this._repeat?"wrap":"clamp";
		var filter;
		if(this._smooth) filter = this._mipmap?"linear,miplinear":"linear"; else filter = this._mipmap?"nearest,mipnearest":"nearest";
		code = "dp3 ft2.z, v0.xyz, v0.xyz\t\n" + "mul ft0, fc0, ft2.z\t\n" + "frc ft0, ft0\t\t\t\n" + "mul ft1, ft0.yzww, fc1\t\n";
		if(this._alphaThreshold > 0) {
			var format;
			var _sw1_ = this._alphaMask.get_format();
			switch( (_sw1_)[1] ) {
			case 1:
				format = "dxt1,";
				break;
			case 2:
				format = "dxt5,";
				break;
			default:
				format = "";
			}
			code += "tex ft3, v1, fs0 <2d," + filter + "," + format + wrap + ">\n" + "sub ft3.w, ft3.w, fc2.x\n" + "kil ft3.w\n";
		}
		code += "sub oc, ft0, ft1\t\t\n";
		return code;
	}
	,getVertexCode: function() {
		var code;
		code = "m44 op, vt0, vc0\t\t\n" + "m44 vt1, vt0, vc5\t\t\n" + "sub v0, vt1, vc9\t\t\n";
		if(this._alphaThreshold > 0) {
			code += "mov v1, va1\n";
			this._numUsedTextures = 1;
			this._numUsedStreams = 2;
		} else {
			this._numUsedTextures = 0;
			this._numUsedStreams = 1;
		}
		return code;
	}
	,set_alphaMask: function(value) {
		this._alphaMask = value;
		return value;
	}
	,get_alphaMask: function() {
		return this._alphaMask;
	}
	,set_alphaThreshold: function(value) {
		if(value < 0) value = 0; else if(value > 1) value = 1;
		if(value == this._alphaThreshold) return value;
		if(value == 0 || this._alphaThreshold == 0) this.invalidateShaderProgram();
		this._alphaThreshold = value;
		this._fragmentData[8] = this._alphaThreshold;
		return value;
	}
	,get_alphaThreshold: function() {
		return this._alphaThreshold;
	}
	,__class__: away3d.materials.passes.DistanceMapPass
	,__properties__: $extend(away3d.materials.passes.MaterialPassBase.prototype.__properties__,{set_alphaThreshold:"set_alphaThreshold",get_alphaThreshold:"get_alphaThreshold",set_alphaMask:"set_alphaMask",get_alphaMask:"get_alphaMask"})
});
away3d.materials.passes.SegmentPass = function(thickness) {
	this._constants = flash._Vector.Vector_Impl_._new(4,true);
	this._calcMatrix = new flash.geom.Matrix3D();
	this._thickness = thickness;
	this._constants[1] = 1 / 255;
	away3d.materials.passes.MaterialPassBase.call(this);
};
$hxClasses["away3d.materials.passes.SegmentPass"] = away3d.materials.passes.SegmentPass;
away3d.materials.passes.SegmentPass.__name__ = ["away3d","materials","passes","SegmentPass"];
away3d.materials.passes.SegmentPass.__super__ = away3d.materials.passes.MaterialPassBase;
away3d.materials.passes.SegmentPass.prototype = $extend(away3d.materials.passes.MaterialPassBase.prototype,{
	deactivate: function(stage3DProxy) {
		var context = stage3DProxy._context3D;
		context.setVertexBufferAt(0,null);
		context.setVertexBufferAt(1,null);
		context.setVertexBufferAt(2,null);
		context.setVertexBufferAt(3,null);
	}
	,activate: function(stage3DProxy,camera) {
		var context = stage3DProxy._context3D;
		away3d.materials.passes.MaterialPassBase.prototype.activate.call(this,stage3DProxy,camera);
		if(stage3DProxy.get_scissorRect() != null) this._constants[0] = this._thickness / Math.min(stage3DProxy.get_scissorRect().width,stage3DProxy.get_scissorRect().height); else this._constants[0] = this._thickness / Math.min(stage3DProxy.get_width(),stage3DProxy.get_height());
		this._constants[2] = camera.get_lens().get_near();
		context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.VERTEX,5,away3d.materials.passes.SegmentPass.ONE_VECTOR);
		context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.VERTEX,6,away3d.materials.passes.SegmentPass.FRONT_VECTOR);
		context.setProgramConstantsFromVector(flash.display3D.Context3DProgramType.VERTEX,7,this._constants);
		context.setProgramConstantsFromMatrix(flash.display3D.Context3DProgramType.VERTEX,0,camera.get_lens().get_matrix(),true);
	}
	,render: function(renderable,stage3DProxy,camera,viewProjection) {
		var context = stage3DProxy._context3D;
		this._calcMatrix.copyFrom(renderable.get_sourceEntity().get_sceneTransform());
		this._calcMatrix.append(camera.get_inverseSceneTransform());
		var subSetCount = (js.Boot.__cast(renderable , away3d.entities.SegmentSet)).get_subSetCount();
		if((js.Boot.__cast(renderable , away3d.entities.SegmentSet)).get_hasData()) {
			var i = 0;
			while(i < subSetCount) {
				renderable.activateVertexBuffer(i,stage3DProxy);
				context.setProgramConstantsFromMatrix(flash.display3D.Context3DProgramType.VERTEX,8,this._calcMatrix,true);
				context.drawTriangles(renderable.getIndexBuffer(stage3DProxy),0,renderable.get_numTriangles());
				++i;
			}
		}
	}
	,getFragmentCode: function(animationCode) {
		return "mov oc, v0\n";
	}
	,getVertexCode: function() {
		return "m44 vt0, va0, vc8\t\t\t\n" + "m44 vt1, va1, vc8\t\t\t\n" + "sub vt2, vt1, vt0 \t\t\t\n" + "slt vt5.x, vt0.z, vc7.z\t\t\t\n" + "sub vt5.y, vc5.x, vt5.x\t\t\t\n" + "add vt4.x, vt0.z, vc7.z\t\t\t\n" + "sub vt4.y, vt0.z, vt1.z\t\t\t\n" + "seq vt4.z, vt4.y vc6.x\t\t\t\n" + "add vt4.y, vt4.y, vt4.z\t\t\t\n" + "div vt4.z, vt4.x, vt4.y\t\t\t\n" + "mul vt4.xyz, vt4.zzz, vt2.xyz\t\n" + "add vt3.xyz, vt0.xyz, vt4.xyz\t\n" + "mov vt3.w, vc5.x\t\t\t\n" + "mul vt0, vt0, vt5.yyyy\t\t\t\n" + "mul vt3, vt3, vt5.xxxx\t\t\t\n" + "add vt0, vt0, vt3\t\t\t\t\n" + "sub vt2, vt1, vt0 \t\t\t\n" + "nrm vt2.xyz, vt2.xyz\t\t\t\n" + "nrm vt5.xyz, vt0.xyz\t\t\t\n" + "mov vt5.w, vc5.x\t\t\t\t\n" + "crs vt3.xyz, vt2, vt5\t\t\t\n" + "nrm vt3.xyz, vt3.xyz\t\t\t\n" + "mul vt3.xyz, vt3.xyz, va2.xxx\t\n" + "mov vt3.w, vc5.x\t\t\t\n" + "dp3 vt4.x, vt0, vc6\t\t\t\n" + "mul vt4.x, vt4.x, vc7.x\t\t\t\n" + "mul vt3.xyz, vt3.xyz, vt4.xxx\t\n" + "add vt0.xyz, vt0.xyz, vt3.xyz\t\n" + "m44 op, vt0, vc0\t\t\t\n" + "mov v0, va3\t\t\t\t\n";
	}
	,__class__: away3d.materials.passes.SegmentPass
});
away3d.materials.passes.SuperShaderPass = function(material) {
	this._includeCasters = true;
	away3d.materials.passes.CompiledPass.call(this,material);
	this._needFragmentAnimation = true;
};
$hxClasses["away3d.materials.passes.SuperShaderPass"] = away3d.materials.passes.SuperShaderPass;
away3d.materials.passes.SuperShaderPass.__name__ = ["away3d","materials","passes","SuperShaderPass"];
away3d.materials.passes.SuperShaderPass.__super__ = away3d.materials.passes.CompiledPass;
away3d.materials.passes.SuperShaderPass.prototype = $extend(away3d.materials.passes.CompiledPass.prototype,{
	get_ignoreLights: function() {
		return this._ignoreLights;
	}
	,set_ignoreLights: function(ignoreLights) {
		this._ignoreLights = ignoreLights;
		return ignoreLights;
	}
	,updateProbes: function(stage3DProxy) {
		var probe;
		var lightProbes = this._lightPicker.get_lightProbes();
		var weights = this._lightPicker.get_lightProbeWeights();
		var len = flash._Vector.Vector_Impl_.get_length(lightProbes);
		var addDiff = this.usesProbesForDiffuse();
		var addSpec = js.Boot.__cast(this._methodSetup._specularMethod != null && this.usesProbesForSpecular() , Bool);
		var context = stage3DProxy._context3D;
		if(!(addDiff || addSpec)) return;
		var i = 0;
		while(i < len) {
			probe = lightProbes[i];
			if(addDiff) context.setTextureAt(this._lightProbeDiffuseIndices[i],probe.get_diffuseMap().getTextureForStage3D(stage3DProxy));
			if(addSpec) context.setTextureAt(this._lightProbeSpecularIndices[i],probe.get_specularMap().getTextureForStage3D(stage3DProxy));
			++i;
		}
		this._fragmentConstantData[this._probeWeightsIndex] = weights[0];
		this._fragmentConstantData[this._probeWeightsIndex + 1] = weights[1];
		this._fragmentConstantData[this._probeWeightsIndex + 2] = weights[2];
		this._fragmentConstantData[this._probeWeightsIndex + 3] = weights[3];
	}
	,updateLightConstants: function() {
		var dirLight;
		var pointLight;
		var i = 0;
		var k = 0;
		var len;
		var dirPos;
		var total = 0;
		var numLightTypes = this._includeCasters?2:1;
		k = this._lightFragmentConstantIndex;
		var __cast = 0;
		while(__cast < numLightTypes) {
			var dirLights = __cast > 0?this._lightPicker.get_castingDirectionalLights():this._lightPicker.get_directionalLights();
			len = flash._Vector.Vector_Impl_.get_length(dirLights);
			total += len;
			i = 0;
			while(i < len) {
				dirLight = dirLights[i];
				dirPos = dirLight.get_sceneDirection();
				this._ambientLightR += dirLight._ambientR;
				this._ambientLightG += dirLight._ambientG;
				this._ambientLightB += dirLight._ambientB;
				this._fragmentConstantData[k++] = -dirPos.x;
				this._fragmentConstantData[k++] = -dirPos.y;
				this._fragmentConstantData[k++] = -dirPos.z;
				this._fragmentConstantData[k++] = 1;
				this._fragmentConstantData[k++] = dirLight._diffuseR;
				this._fragmentConstantData[k++] = dirLight._diffuseG;
				this._fragmentConstantData[k++] = dirLight._diffuseB;
				this._fragmentConstantData[k++] = 1;
				this._fragmentConstantData[k++] = dirLight._specularR;
				this._fragmentConstantData[k++] = dirLight._specularG;
				this._fragmentConstantData[k++] = dirLight._specularB;
				this._fragmentConstantData[k++] = 1;
				++i;
			}
			++__cast;
		}
		if(this._numDirectionalLights > total) {
			i = k + (this._numDirectionalLights - total) * 12;
			while(k < i) this._fragmentConstantData[k++] = 0;
		}
		total = 0;
		__cast = 0;
		while(__cast < numLightTypes) {
			var pointLights = __cast > 0?this._lightPicker.get_castingPointLights():this._lightPicker.get_pointLights();
			len = flash._Vector.Vector_Impl_.get_length(pointLights);
			i = 0;
			while(i < len) {
				pointLight = pointLights[i];
				dirPos = pointLight.get_scenePosition();
				this._ambientLightR += pointLight._ambientR;
				this._ambientLightG += pointLight._ambientG;
				this._ambientLightB += pointLight._ambientB;
				this._fragmentConstantData[k++] = dirPos.x;
				this._fragmentConstantData[k++] = dirPos.y;
				this._fragmentConstantData[k++] = dirPos.z;
				this._fragmentConstantData[k++] = 1;
				this._fragmentConstantData[k++] = pointLight._diffuseR;
				this._fragmentConstantData[k++] = pointLight._diffuseG;
				this._fragmentConstantData[k++] = pointLight._diffuseB;
				this._fragmentConstantData[k++] = pointLight._radius * pointLight._radius;
				this._fragmentConstantData[k++] = pointLight._specularR;
				this._fragmentConstantData[k++] = pointLight._specularG;
				this._fragmentConstantData[k++] = pointLight._specularB;
				this._fragmentConstantData[k++] = pointLight._fallOffFactor;
				++i;
			}
			++__cast;
		}
		if(this._numPointLights > total) {
			i = k + (total - this._numPointLights) * 12;
			while(k < i) {
				this._fragmentConstantData[k] = 0;
				++k;
			}
		}
	}
	,updateMethodConstants: function() {
		away3d.materials.passes.CompiledPass.prototype.updateMethodConstants.call(this);
		if(this._methodSetup._colorTransformMethod != null) this._methodSetup._colorTransformMethod.initConstants(this._methodSetup._colorTransformMethodVO);
		var methods = this._methodSetup._methods;
		var len = methods.length;
		var i = 0;
		while(i < len) {
			methods[i].method.initConstants(methods[i].data);
			++i;
		}
	}
	,usesProbesForDiffuse: function() {
		return this._numLightProbes > 0 && (this._diffuseLightSources & away3d.materials.LightSources.PROBES) != 0;
	}
	,usesProbesForSpecular: function() {
		return this._numLightProbes > 0 && (this._specularLightSources & away3d.materials.LightSources.PROBES) != 0;
	}
	,addPassesFromMethods: function() {
		away3d.materials.passes.CompiledPass.prototype.addPassesFromMethods.call(this);
		if(this._methodSetup._colorTransformMethod != null) this.addPasses(this._methodSetup._colorTransformMethod.get_passes());
		var methods = this._methodSetup._methods;
		var i = 0;
		while(i < methods.length) {
			this.addPasses(methods[i].method.get_passes());
			++i;
		}
	}
	,deactivate: function(stage3DProxy) {
		away3d.materials.passes.CompiledPass.prototype.deactivate.call(this,stage3DProxy);
		if(this._methodSetup._colorTransformMethod != null) this._methodSetup._colorTransformMethod.deactivate(this._methodSetup._colorTransformMethodVO,stage3DProxy);
		var set;
		var methods = this._methodSetup._methods;
		var len = methods.length;
		var i = 0;
		while(i < len) {
			set = methods[i];
			set.method.deactivate(set.data,stage3DProxy);
			++i;
		}
	}
	,activate: function(stage3DProxy,camera) {
		away3d.materials.passes.CompiledPass.prototype.activate.call(this,stage3DProxy,camera);
		if(this._methodSetup._colorTransformMethod != null) this._methodSetup._colorTransformMethod.activate(this._methodSetup._colorTransformMethodVO,stage3DProxy);
		var methods = this._methodSetup._methods;
		var len = methods.length;
		var i = 0;
		while(i < len) {
			var set = methods[i];
			set.method.activate(set.data,stage3DProxy);
			++i;
		}
		if(this._cameraPositionIndex >= 0) {
			var pos = camera.get_scenePosition();
			this._vertexConstantData[this._cameraPositionIndex] = pos.x;
			this._vertexConstantData[this._cameraPositionIndex + 1] = pos.y;
			this._vertexConstantData[this._cameraPositionIndex + 2] = pos.z;
		}
	}
	,updateLights: function() {
		if(this._lightPicker != null && !this._ignoreLights) {
			this._numPointLights = this._lightPicker.get_numPointLights();
			this._numDirectionalLights = this._lightPicker.get_numDirectionalLights();
			this._numLightProbes = this._lightPicker.get_numLightProbes();
			if(this._includeCasters) {
				this._numPointLights += this._lightPicker.get_numCastingPointLights();
				this._numDirectionalLights += this._lightPicker.get_numCastingDirectionalLights();
			}
		} else {
			this._numPointLights = 0;
			this._numDirectionalLights = 0;
			this._numLightProbes = 0;
		}
		this.invalidateShaderProgram();
	}
	,removeMethod: function(method) {
		this._methodSetup.removeMethod(method);
	}
	,addMethodAt: function(method,index) {
		this._methodSetup.addMethodAt(method,index);
	}
	,getMethodAt: function(index) {
		return this._methodSetup.getMethodAt(index);
	}
	,hasMethod: function(method) {
		return this._methodSetup.hasMethod(method);
	}
	,get_numMethods: function() {
		return this._methodSetup.get_numMethods();
	}
	,addMethod: function(method) {
		this._methodSetup.addMethod(method);
	}
	,set_colorTransformMethod: function(value) {
		this._methodSetup.set_colorTransformMethod(value);
		return value;
	}
	,get_colorTransformMethod: function() {
		return this._methodSetup.get_colorTransformMethod();
	}
	,set_colorTransform: function(value) {
		if(value != null) {
			if(this.get_colorTransformMethod() == null) this.set_colorTransformMethod(new away3d.materials.methods.ColorTransformMethod());
			this._methodSetup._colorTransformMethod.set_colorTransform(value);
		} else if(value == null) {
			if(this._methodSetup._colorTransformMethod != null) this.set_colorTransformMethod(null);
			this.set_colorTransformMethod(this._methodSetup._colorTransformMethod = null);
		}
		return value;
	}
	,get_colorTransform: function() {
		return this._methodSetup.get_colorTransformMethod() != null?this._methodSetup._colorTransformMethod.get_colorTransform():null;
	}
	,set_includeCasters: function(value) {
		if(this._includeCasters == value) return value;
		this._includeCasters = value;
		this.invalidateShaderProgram();
		return value;
	}
	,get_includeCasters: function() {
		return this._includeCasters;
	}
	,createCompiler: function(profile) {
		return new away3d.materials.compilation.SuperShaderCompiler(profile);
	}
	,__class__: away3d.materials.passes.SuperShaderPass
	,__properties__: $extend(away3d.materials.passes.CompiledPass.prototype.__properties__,{set_includeCasters:"set_includeCasters",get_includeCasters:"get_includeCasters",set_colorTransform:"set_colorTransform",get_colorTransform:"get_colorTransform",set_colorTransformMethod:"set_colorTransformMethod",get_colorTransformMethod:"get_colorTransformMethod",get_numMethods:"get_numMethods",set_ignoreLights:"set_ignoreLights",get_ignoreLights:"get_ignoreLights"})
});
away3d.materials.utils = {}
away3d.materials.utils.DefaultMaterialManager = function() { }
$hxClasses["away3d.materials.utils.DefaultMaterialManager"] = away3d.materials.utils.DefaultMaterialManager;
away3d.materials.utils.DefaultMaterialManager.__name__ = ["away3d","materials","utils","DefaultMaterialManager"];
away3d.materials.utils.DefaultMaterialManager.getDefaultMaterial = function(renderable) {
	if(away3d.materials.utils.DefaultMaterialManager._defaultTexture == null) away3d.materials.utils.DefaultMaterialManager.createDefaultTexture();
	if(away3d.materials.utils.DefaultMaterialManager._defaultMaterial == null) away3d.materials.utils.DefaultMaterialManager.createDefaultMaterial();
	return away3d.materials.utils.DefaultMaterialManager._defaultMaterial;
}
away3d.materials.utils.DefaultMaterialManager.getDefaultTexture = function(renderable) {
	if(away3d.materials.utils.DefaultMaterialManager._defaultTexture == null) away3d.materials.utils.DefaultMaterialManager.createDefaultTexture();
	return away3d.materials.utils.DefaultMaterialManager._defaultTexture;
}
away3d.materials.utils.DefaultMaterialManager.createDefaultTexture = function() {
	away3d.materials.utils.DefaultMaterialManager._defaultTextureBitmapData = new flash.display.BitmapData(8,8,false,0);
	var i = 0;
	var j;
	i = 0;
	while(i < 8) {
		j = 0;
		while(j < 8) {
			if((j & 1 ^ i & 1) == 1) away3d.materials.utils.DefaultMaterialManager._defaultTextureBitmapData.setPixel(i,j,16777215);
			j++;
		}
		i++;
	}
	away3d.materials.utils.DefaultMaterialManager._defaultTexture = new away3d.textures.BitmapTexture(away3d.materials.utils.DefaultMaterialManager._defaultTextureBitmapData);
	away3d.materials.utils.DefaultMaterialManager._defaultTexture.set_name("defaultTexture");
}
away3d.materials.utils.DefaultMaterialManager.createDefaultMaterial = function() {
	away3d.materials.utils.DefaultMaterialManager._defaultMaterial = new away3d.materials.TextureMaterial(away3d.materials.utils.DefaultMaterialManager._defaultTexture);
	away3d.materials.utils.DefaultMaterialManager._defaultMaterial.set_mipmap(false);
	away3d.materials.utils.DefaultMaterialManager._defaultMaterial.set_smooth(false);
	away3d.materials.utils.DefaultMaterialManager._defaultMaterial.set_name("defaultMaterial");
}
flash.geom.Matrix = function(in_a,in_b,in_c,in_d,in_tx,in_ty) {
	if(in_ty == null) in_ty = 0;
	if(in_tx == null) in_tx = 0;
	if(in_d == null) in_d = 1;
	if(in_c == null) in_c = 0;
	if(in_b == null) in_b = 0;
	if(in_a == null) in_a = 1;
	this.a = in_a;
	this.b = in_b;
	this.c = in_c;
	this.d = in_d;
	this.set_tx(in_tx);
	this.set_ty(in_ty);
	this._sx = 1.0;
	this._sy = 1.0;
};
$hxClasses["flash.geom.Matrix"] = flash.geom.Matrix;
flash.geom.Matrix.__name__ = ["flash","geom","Matrix"];
flash.geom.Matrix.prototype = {
	set_ty: function(inValue) {
		this.ty = inValue;
		return this.ty;
	}
	,set_tx: function(inValue) {
		this.tx = inValue;
		return this.tx;
	}
	,__translateTransformed: function(inPos) {
		this.set_tx(inPos.x * this.a + inPos.y * this.c + this.tx);
		this.set_ty(inPos.x * this.b + inPos.y * this.d + this.ty);
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.set_tx(Math.round(this.tx * 10) / 10);
		this.set_ty(Math.round(this.ty * 10) / 10);
	}
	,__transformY: function(inPos) {
		return inPos.x * this.b + inPos.y * this.d + this.ty;
	}
	,__transformX: function(inPos) {
		return inPos.x * this.a + inPos.y * this.c + this.tx;
	}
	,translate: function(inDX,inDY) {
		var m = new flash.geom.Matrix();
		m.set_tx(inDX);
		m.set_ty(inDY);
		this.concat(m);
	}
	,transformPoint: function(inPos) {
		return new flash.geom.Point(inPos.x * this.a + inPos.y * this.c + this.tx,inPos.x * this.b + inPos.y * this.d + this.ty);
	}
	,toString: function() {
		return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")";
	}
	,toMozString: function() {
		return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + "px, " + this.ty + "px)";
	}
	,to3DString: function() {
		return "matrix3d(" + this.a + ", " + this.b + ", " + "0, 0, " + this.c + ", " + this.d + ", " + "0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", " + "0, 1" + ")";
	}
	,setRotation: function(inTheta,inScale) {
		if(inScale == null) inScale = 1;
		var scale = inScale;
		this.a = Math.cos(inTheta) * scale;
		this.c = Math.sin(inTheta) * scale;
		this.b = -this.c;
		this.d = this.a;
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.set_tx(Math.round(this.tx * 10) / 10);
		this.set_ty(Math.round(this.ty * 10) / 10);
	}
	,scale: function(inSX,inSY) {
		this._sx = inSX;
		this._sy = inSY;
		this.a *= inSX;
		this.b *= inSY;
		this.c *= inSX;
		this.d *= inSY;
		var _g = this;
		_g.set_tx(_g.tx * inSX);
		var _g = this;
		_g.set_ty(_g.ty * inSY);
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.set_tx(Math.round(this.tx * 10) / 10);
		this.set_ty(Math.round(this.ty * 10) / 10);
	}
	,rotate: function(inTheta) {
		var cos = Math.cos(inTheta);
		var sin = Math.sin(inTheta);
		var a1 = this.a * cos - this.b * sin;
		this.b = this.a * sin + this.b * cos;
		this.a = a1;
		var c1 = this.c * cos - this.d * sin;
		this.d = this.c * sin + this.d * cos;
		this.c = c1;
		var tx1 = this.tx * cos - this.ty * sin;
		this.set_ty(this.tx * sin + this.ty * cos);
		this.set_tx(tx1);
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.set_tx(Math.round(this.tx * 10) / 10);
		this.set_ty(Math.round(this.ty * 10) / 10);
	}
	,mult: function(m) {
		var result = this.clone();
		result.concat(m);
		return result;
	}
	,invert: function() {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.set_tx(-this.tx);
			this.set_ty(-this.ty);
		} else {
			norm = 1.0 / norm;
			var a1 = this.d * norm;
			this.d = this.a * norm;
			this.a = a1;
			this.b *= -norm;
			this.c *= -norm;
			var tx1 = -this.a * this.tx - this.c * this.ty;
			this.set_ty(-this.b * this.tx - this.d * this.ty);
			this.set_tx(tx1);
		}
		this._sx /= this._sx;
		this._sy /= this._sy;
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.set_tx(Math.round(this.tx * 10) / 10);
		this.set_ty(Math.round(this.ty * 10) / 10);
		return this;
	}
	,identity: function() {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.set_tx(0);
		this.set_ty(0);
		this._sx = 1.0;
		this._sy = 1.0;
	}
	,createGradientBox: function(in_width,in_height,rotation,in_tx,in_ty) {
		if(in_ty == null) in_ty = 0;
		if(in_tx == null) in_tx = 0;
		if(rotation == null) rotation = 0;
		this.a = in_width / 1638.4;
		this.d = in_height / 1638.4;
		if(rotation != null && rotation != 0.0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.b = sin * this.d;
			this.c = -sin * this.a;
			this.a *= cos;
			this.d *= cos;
		} else {
			this.b = 0;
			this.c = 0;
		}
		this.set_tx(in_tx != null?in_tx + in_width / 2:in_width / 2);
		this.set_ty(in_ty != null?in_ty + in_height / 2:in_height / 2);
	}
	,copy: function(m) {
		this.a = m.a;
		this.b = m.b;
		this.c = m.c;
		this.d = m.d;
		this.set_tx(m.tx);
		this.set_ty(m.ty);
		this._sx = m._sx;
		this._sy = m._sy;
	}
	,concat: function(m) {
		var a1 = this.a * m.a + this.b * m.c;
		this.b = this.a * m.b + this.b * m.d;
		this.a = a1;
		var c1 = this.c * m.a + this.d * m.c;
		this.d = this.c * m.b + this.d * m.d;
		this.c = c1;
		var tx1 = this.tx * m.a + this.ty * m.c + m.tx;
		this.set_ty(this.tx * m.b + this.ty * m.d + m.ty);
		this.set_tx(tx1);
		this._sx *= m._sx;
		this._sy *= m._sy;
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.set_tx(Math.round(this.tx * 10) / 10);
		this.set_ty(Math.round(this.ty * 10) / 10);
	}
	,clone: function() {
		var m = new flash.geom.Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
		m._sx = this._sx;
		m._sy = this._sy;
		return m;
	}
	,cleanValues: function() {
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.set_tx(Math.round(this.tx * 10) / 10);
		this.set_ty(Math.round(this.ty * 10) / 10);
	}
	,__class__: flash.geom.Matrix
	,__properties__: {set_tx:"set_tx",set_ty:"set_ty"}
}
away3d.materials.utils.MipmapGenerator = function() { }
$hxClasses["away3d.materials.utils.MipmapGenerator"] = away3d.materials.utils.MipmapGenerator;
away3d.materials.utils.MipmapGenerator.__name__ = ["away3d","materials","utils","MipmapGenerator"];
away3d.materials.utils.MipmapGenerator.generateMipMaps = function(source,target,mipmap,alpha,side) {
	if(side == null) side = -1;
	if(alpha == null) alpha = false;
	var w = source.___textureBuffer != null?source.___textureBuffer.width:0;
	var h = source.___textureBuffer != null?source.___textureBuffer.height:0;
	var i = 0;
	var regen = mipmap != null;
	if(mipmap == null) mipmap = new flash.display.BitmapData(w,h,alpha);
	away3d.materials.utils.MipmapGenerator._rect.width = w;
	away3d.materials.utils.MipmapGenerator._rect.height = h;
	while(w >= 1 || h >= 1) {
		if(alpha) mipmap.fillRect(away3d.materials.utils.MipmapGenerator._rect,0);
		away3d.materials.utils.MipmapGenerator._matrix.a = away3d.materials.utils.MipmapGenerator._rect.width / (source.___textureBuffer != null?source.___textureBuffer.width:0);
		away3d.materials.utils.MipmapGenerator._matrix.d = away3d.materials.utils.MipmapGenerator._rect.height / (source.___textureBuffer != null?source.___textureBuffer.height:0);
		mipmap.draw(source,away3d.materials.utils.MipmapGenerator._matrix,null,null,null,true);
		if(js.Boot.__instanceof(target,flash.display3D.textures.Texture)) (js.Boot.__cast(target , flash.display3D.textures.Texture)).uploadFromBitmapData(mipmap,i++); else (js.Boot.__cast(target , flash.display3D.textures.CubeTexture)).uploadFromBitmapData(mipmap,side,i++);
		w >>= 1;
		h >>= 1;
		away3d.materials.utils.MipmapGenerator._rect.width = w > 1?w:1;
		away3d.materials.utils.MipmapGenerator._rect.height = h > 1?h:1;
	}
	if(!regen) mipmap.dispose();
}
away3d.primitives = {}
away3d.primitives.PrimitiveBase = function() {
	away3d.core.base.Geometry.call(this);
	this._geomDirty = true;
	this._uvDirty = true;
	this._subGeometry = new away3d.core.base.CompactSubGeometry();
	this._subGeometry.set_autoGenerateDummyUVs(false);
	this.addSubGeometry(this._subGeometry);
};
$hxClasses["away3d.primitives.PrimitiveBase"] = away3d.primitives.PrimitiveBase;
away3d.primitives.PrimitiveBase.__name__ = ["away3d","primitives","PrimitiveBase"];
away3d.primitives.PrimitiveBase.__super__ = away3d.core.base.Geometry;
away3d.primitives.PrimitiveBase.prototype = $extend(away3d.core.base.Geometry.prototype,{
	validate: function() {
		if(this._geomDirty) this.updateGeometry();
		if(this._uvDirty) this.updateUVs();
	}
	,updateUVs: function() {
		this.buildUVs(this._subGeometry);
		this._uvDirty = false;
	}
	,updateGeometry: function() {
		this.buildGeometry(this._subGeometry);
		this._geomDirty = false;
	}
	,invalidateUVs: function() {
		this._uvDirty = true;
	}
	,invalidateGeometry: function() {
		this._geomDirty = true;
	}
	,buildUVs: function(target) {
		throw new away3d.errors.AbstractMethodError();
	}
	,buildGeometry: function(target) {
		throw new away3d.errors.AbstractMethodError();
	}
	,applyTransformation: function(transform) {
		if(this._geomDirty) this.updateGeometry();
		away3d.core.base.Geometry.prototype.applyTransformation.call(this,transform);
	}
	,scaleUV: function(scaleU,scaleV) {
		if(scaleV == null) scaleV = 1;
		if(scaleU == null) scaleU = 1;
		if(this._uvDirty) this.updateUVs();
		away3d.core.base.Geometry.prototype.scaleUV.call(this,scaleU,scaleV);
	}
	,scale: function(scale) {
		if(this._geomDirty) this.updateGeometry();
		away3d.core.base.Geometry.prototype.scale.call(this,scale);
	}
	,clone: function() {
		if(this._geomDirty) this.updateGeometry();
		if(this._uvDirty) this.updateUVs();
		return away3d.core.base.Geometry.prototype.clone.call(this);
	}
	,get_subGeometries: function() {
		if(this._geomDirty) this.updateGeometry();
		if(this._uvDirty) this.updateUVs();
		return away3d.core.base.Geometry.prototype.get_subGeometries.call(this);
	}
	,__class__: away3d.primitives.PrimitiveBase
});
away3d.primitives.CubeGeometry = function(width,height,depth,segmentsW,segmentsH,segmentsD,tile6) {
	if(tile6 == null) tile6 = true;
	if(segmentsD == null) segmentsD = 1;
	if(segmentsH == null) segmentsH = 1;
	if(segmentsW == null) segmentsW = 1;
	if(depth == null) depth = 100;
	if(height == null) height = 100;
	if(width == null) width = 100;
	away3d.primitives.PrimitiveBase.call(this);
	this._width = width;
	this._height = height;
	this._depth = depth;
	this._segmentsW = segmentsW;
	this._segmentsH = segmentsH;
	this._segmentsD = segmentsD;
	this._tile6 = tile6;
};
$hxClasses["away3d.primitives.CubeGeometry"] = away3d.primitives.CubeGeometry;
away3d.primitives.CubeGeometry.__name__ = ["away3d","primitives","CubeGeometry"];
away3d.primitives.CubeGeometry.__super__ = away3d.primitives.PrimitiveBase;
away3d.primitives.CubeGeometry.prototype = $extend(away3d.primitives.PrimitiveBase.prototype,{
	buildUVs: function(target) {
		var i = 0;
		var j;
		var uidx;
		var data;
		var u_tile_dim;
		var v_tile_dim;
		var u_tile_step;
		var v_tile_step;
		var tl0u;
		var tl0v;
		var tl1u;
		var tl1v;
		var du;
		var dv;
		var stride = target.get_UVStride();
		var numUvs = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2 * stride | 0;
		var skip = stride - 2;
		if(target.get_UVData() != null && numUvs == flash._Vector.Vector_Impl_.get_length(target.get_UVData())) data = target.get_UVData(); else {
			data = flash._Vector.Vector_Impl_._new(numUvs,true);
			this.invalidateGeometry();
		}
		if(this._tile6) {
			u_tile_dim = u_tile_step = 1 / 3;
			v_tile_dim = v_tile_step = 0.5;
		} else {
			u_tile_dim = v_tile_dim = 1;
			u_tile_step = v_tile_step = 0;
		}
		uidx = target.get_UVOffset();
		tl0u = u_tile_step;
		tl0v = v_tile_step;
		tl1u = 2 * u_tile_step;
		tl1v = 0 * v_tile_step;
		du = u_tile_dim / this._segmentsW;
		dv = v_tile_dim / this._segmentsH;
		i = 0;
		while(i <= this._segmentsW) {
			j = 0;
			while(j <= this._segmentsH) {
				data[uidx++] = (tl0u + i * du) * target.get_scaleU();
				data[uidx++] = (tl0v + (v_tile_dim - j * dv)) * target.get_scaleV();
				uidx += skip;
				data[uidx++] = (tl1u + (u_tile_dim - i * du)) * target.get_scaleU();
				data[uidx++] = (tl1v + (v_tile_dim - j * dv)) * target.get_scaleV();
				uidx += skip;
				j++;
			}
			i++;
		}
		tl0u = u_tile_step;
		tl0v = 0 * v_tile_step;
		tl1u = 0 * u_tile_step;
		tl1v = 0 * v_tile_step;
		du = u_tile_dim / this._segmentsW;
		dv = v_tile_dim / this._segmentsD;
		i = 0;
		while(i <= this._segmentsW) {
			j = 0;
			while(j <= this._segmentsD) {
				data[uidx++] = (tl0u + i * du) * target.get_scaleU();
				data[uidx++] = (tl0v + (v_tile_dim - j * dv)) * target.get_scaleV();
				uidx += skip;
				data[uidx++] = (tl1u + i * du) * target.get_scaleU();
				data[uidx++] = (tl1v + j * dv) * target.get_scaleV();
				uidx += skip;
				j++;
			}
			i++;
		}
		tl0u = 0 * u_tile_step;
		tl0v = v_tile_step;
		tl1u = 2 * u_tile_step;
		tl1v = v_tile_step;
		du = u_tile_dim / this._segmentsD;
		dv = v_tile_dim / this._segmentsH;
		i = 0;
		while(i <= this._segmentsD) {
			j = 0;
			while(j <= this._segmentsH) {
				data[uidx++] = (tl0u + i * du) * target.get_scaleU();
				data[uidx++] = (tl0v + (v_tile_dim - j * dv)) * target.get_scaleV();
				uidx += skip;
				data[uidx++] = (tl1u + (u_tile_dim - i * du)) * target.get_scaleU();
				data[uidx++] = (tl1v + (v_tile_dim - j * dv)) * target.get_scaleV();
				uidx += skip;
				j++;
			}
			i++;
		}
		target.updateData(data);
	}
	,buildGeometry: function(target) {
		var data;
		var indices;
		var tl;
		var tr;
		var bl;
		var br;
		var i = 0;
		var j;
		var inc = 0;
		var vidx;
		var fidx;
		var hw;
		var hh;
		var hd;
		var dw;
		var dh;
		var dd;
		var outer_pos;
		var numVerts = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2 | 0;
		var stride = target.get_vertexStride();
		var skip = stride - 9;
		if(numVerts == target.get_numVertices()) {
			data = target.get_vertexData();
			indices = target.get_indexData();
			if(indices == null) indices = flash._Vector.Vector_Impl_._new((this._segmentsW * this._segmentsH + this._segmentsW * this._segmentsD + this._segmentsH * this._segmentsD) * 12 | 0,true);
		} else {
			data = flash._Vector.Vector_Impl_._new(numVerts * stride,true);
			indices = flash._Vector.Vector_Impl_._new((this._segmentsW * this._segmentsH + this._segmentsW * this._segmentsD + this._segmentsH * this._segmentsD) * 12 | 0,true);
			away3d.Stage3DUtils.fillVector(data,0,numVerts * stride,0);
			away3d.Stage3DUtils.fillVector(indices,0,(this._segmentsW * this._segmentsH + this._segmentsW * this._segmentsD + this._segmentsH * this._segmentsD) * 12 | 0,0);
			this.invalidateUVs();
		}
		vidx = target.get_vertexOffset();
		fidx = 0;
		hw = this._width / 2;
		hh = this._height / 2;
		hd = this._depth / 2;
		dw = this._width / this._segmentsW;
		dh = this._height / this._segmentsH;
		dd = this._depth / this._segmentsD;
		i = 0;
		while(i <= this._segmentsW) {
			outer_pos = -hw + i * dw;
			j = 0;
			while(j <= this._segmentsH) {
				data[vidx++] = outer_pos;
				data[vidx++] = -hh + j * dh;
				data[vidx++] = -hd;
				data[vidx++] = 0;
				data[vidx++] = 0;
				data[vidx++] = -1;
				data[vidx++] = 1;
				data[vidx++] = 0;
				data[vidx++] = 0;
				vidx += skip;
				data[vidx++] = outer_pos;
				data[vidx++] = -hh + j * dh;
				data[vidx++] = hd;
				data[vidx++] = 0;
				data[vidx++] = 0;
				data[vidx++] = 1;
				data[vidx++] = -1;
				data[vidx++] = 0;
				data[vidx++] = 0;
				vidx += skip;
				if(i > 0 && j > 0) {
					tl = 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1)) | 0;
					tr = 2 * (i * (this._segmentsH + 1) + (j - 1)) | 0;
					bl = tl + 2;
					br = tr + 2;
					indices[fidx++] = tl;
					indices[fidx++] = bl;
					indices[fidx++] = br;
					indices[fidx++] = tl;
					indices[fidx++] = br;
					indices[fidx++] = tr;
					indices[fidx++] = tr + 1;
					indices[fidx++] = br + 1;
					indices[fidx++] = bl + 1;
					indices[fidx++] = tr + 1;
					indices[fidx++] = bl + 1;
					indices[fidx++] = tl + 1;
				}
				j++;
			}
			i++;
		}
		inc += 2 * (this._segmentsW + 1) * (this._segmentsH + 1) | 0;
		i = 0;
		while(i <= this._segmentsW) {
			outer_pos = -hw + i * dw;
			j = 0;
			while(j <= this._segmentsD) {
				data[vidx++] = outer_pos;
				data[vidx++] = hh;
				data[vidx++] = -hd + j * dd;
				data[vidx++] = 0;
				data[vidx++] = 1;
				data[vidx++] = 0;
				data[vidx++] = 1;
				data[vidx++] = 0;
				data[vidx++] = 0;
				vidx += skip;
				data[vidx++] = outer_pos;
				data[vidx++] = -hh;
				data[vidx++] = -hd + j * dd;
				data[vidx++] = 0;
				data[vidx++] = -1;
				data[vidx++] = 0;
				data[vidx++] = 1;
				data[vidx++] = 0;
				data[vidx++] = 0;
				vidx += skip;
				if(i > 0 && j > 0) {
					tl = inc + 2 * ((i - 1) * (this._segmentsD + 1) + (j - 1)) | 0;
					tr = inc + 2 * (i * (this._segmentsD + 1) + (j - 1)) | 0;
					bl = tl + 2;
					br = tr + 2;
					indices[fidx++] = tl;
					indices[fidx++] = bl;
					indices[fidx++] = br;
					indices[fidx++] = tl;
					indices[fidx++] = br;
					indices[fidx++] = tr;
					indices[fidx++] = tr + 1;
					indices[fidx++] = br + 1;
					indices[fidx++] = bl + 1;
					indices[fidx++] = tr + 1;
					indices[fidx++] = bl + 1;
					indices[fidx++] = tl + 1;
				}
				j++;
			}
			i++;
		}
		inc += 2 * (this._segmentsW + 1) * (this._segmentsD + 1) | 0;
		i = 0;
		while(i <= this._segmentsD) {
			outer_pos = hd - i * dd;
			j = 0;
			while(j <= this._segmentsH) {
				data[vidx++] = -hw;
				data[vidx++] = -hh + j * dh;
				data[vidx++] = outer_pos;
				data[vidx++] = -1;
				data[vidx++] = 0;
				data[vidx++] = 0;
				data[vidx++] = 0;
				data[vidx++] = 0;
				data[vidx++] = -1;
				vidx += skip;
				data[vidx++] = hw;
				data[vidx++] = -hh + j * dh;
				data[vidx++] = outer_pos;
				data[vidx++] = 1;
				data[vidx++] = 0;
				data[vidx++] = 0;
				data[vidx++] = 0;
				data[vidx++] = 0;
				data[vidx++] = 1;
				vidx += skip;
				if(i > 0 && j > 0) {
					tl = inc + 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1)) | 0;
					tr = inc + 2 * (i * (this._segmentsH + 1) + (j - 1)) | 0;
					bl = tl + 2;
					br = tr + 2;
					indices[fidx++] = tl;
					indices[fidx++] = bl;
					indices[fidx++] = br;
					indices[fidx++] = tl;
					indices[fidx++] = br;
					indices[fidx++] = tr;
					indices[fidx++] = tr + 1;
					indices[fidx++] = br + 1;
					indices[fidx++] = bl + 1;
					indices[fidx++] = tr + 1;
					indices[fidx++] = bl + 1;
					indices[fidx++] = tl + 1;
				}
				j++;
			}
			i++;
		}
		target.updateData(data);
		target.updateIndexData(indices);
	}
	,set_segmentsD: function(value) {
		this._segmentsD = value;
		this.invalidateGeometry();
		this.invalidateUVs();
		return value;
	}
	,get_segmentsD: function() {
		return this._segmentsD;
	}
	,set_segmentsH: function(value) {
		this._segmentsH = value;
		this.invalidateGeometry();
		this.invalidateUVs();
		return value;
	}
	,get_segmentsH: function() {
		return this._segmentsH;
	}
	,set_segmentsW: function(value) {
		this._segmentsW = value;
		this.invalidateGeometry();
		this.invalidateUVs();
		return value;
	}
	,get_segmentsW: function() {
		return this._segmentsW;
	}
	,set_tile6: function(value) {
		this._tile6 = value;
		this.invalidateUVs();
		return value;
	}
	,get_tile6: function() {
		return this._tile6;
	}
	,set_depth: function(value) {
		this._depth = value;
		this.invalidateGeometry();
		return value;
	}
	,get_depth: function() {
		return this._depth;
	}
	,set_height: function(value) {
		this._height = value;
		this.invalidateGeometry();
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_width: function(value) {
		this._width = value;
		this.invalidateGeometry();
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,__class__: away3d.primitives.CubeGeometry
	,__properties__: $extend(away3d.primitives.PrimitiveBase.prototype.__properties__,{set_width:"set_width",get_width:"get_width",set_height:"set_height",get_height:"get_height",set_depth:"set_depth",get_depth:"get_depth",set_tile6:"set_tile6",get_tile6:"get_tile6",set_segmentsW:"set_segmentsW",get_segmentsW:"get_segmentsW",set_segmentsH:"set_segmentsH",get_segmentsH:"get_segmentsH",set_segmentsD:"set_segmentsD",get_segmentsD:"get_segmentsD"})
});
away3d.primitives.data = {}
away3d.primitives.data.Segment = function(start,end,anchor,colorStart,colorEnd,thickness) {
	if(thickness == null) thickness = 1;
	if(colorEnd == null) colorEnd = 3355443;
	if(colorStart == null) colorStart = 3355443;
	this._index = -1;
	this._subSetIndex = -1;
	anchor = null;
	this._thickness = thickness * .5;
	this._start = start;
	this._end = end;
	this.set_startColor(colorStart);
	this.set_endColor(colorEnd);
};
$hxClasses["away3d.primitives.data.Segment"] = away3d.primitives.data.Segment;
away3d.primitives.data.Segment.__name__ = ["away3d","primitives","data","Segment"];
away3d.primitives.data.Segment.prototype = {
	update: function() {
		if(this._segmentsBase == null) return;
		this._segmentsBase.updateSegment(this);
	}
	,set_segmentsBase: function(segBase) {
		this._segmentsBase = segBase;
		return segBase;
	}
	,set_subSetIndex: function(ind) {
		this._subSetIndex = ind;
		return ind;
	}
	,get_subSetIndex: function() {
		return this._subSetIndex;
	}
	,set_index: function(ind) {
		this._index = ind;
		return ind;
	}
	,get_index: function() {
		return this._index;
	}
	,dispose: function() {
		this._start = null;
		this._end = null;
	}
	,set_endColor: function(color) {
		this._endR = (color >> 16 & 255) / 255;
		this._endG = (color >> 8 & 255) / 255;
		this._endB = (color & 255) / 255;
		this._endColor = color;
		this.update();
		return color;
	}
	,get_endColor: function() {
		return this._endColor;
	}
	,set_startColor: function(color) {
		this._startR = (color >> 16 & 255) / 255;
		this._startG = (color >> 8 & 255) / 255;
		this._startB = (color & 255) / 255;
		this._startColor = color;
		this.update();
		return color;
	}
	,get_startColor: function() {
		return this._startColor;
	}
	,set_thickness: function(value) {
		this._thickness = value * .5;
		this.update();
		return value;
	}
	,get_thickness: function() {
		return this._thickness * 2;
	}
	,set_end: function(value) {
		this._end = value;
		this.update();
		return value;
	}
	,get_end: function() {
		return this._end;
	}
	,set_start: function(value) {
		this._start = value;
		this.update();
		return value;
	}
	,get_start: function() {
		return this._start;
	}
	,updateSegment: function(start,end,anchor,colorStart,colorEnd,thickness) {
		if(thickness == null) thickness = 1;
		if(colorEnd == null) colorEnd = 3355443;
		if(colorStart == null) colorStart = 3355443;
		anchor = null;
		this._start = start;
		this._end = end;
		if(this._startColor != colorStart) this.set_startColor(colorStart);
		if(this._endColor != colorEnd) this.set_endColor(colorEnd);
		this._thickness = thickness * .5;
		this.update();
	}
	,__class__: away3d.primitives.data.Segment
	,__properties__: {set_start:"set_start",get_start:"get_start",set_end:"set_end",get_end:"get_end",set_thickness:"set_thickness",get_thickness:"get_thickness",set_startColor:"set_startColor",get_startColor:"get_startColor",set_endColor:"set_endColor",get_endColor:"get_endColor",set_index:"set_index",get_index:"get_index",set_subSetIndex:"set_subSetIndex",get_subSetIndex:"get_subSetIndex",set_segmentsBase:"set_segmentsBase"}
}
away3d.primitives.LineSegment = function(v0,v1,color0,color1,thickness) {
	if(thickness == null) thickness = 1;
	if(color1 == null) color1 = 3355443;
	if(color0 == null) color0 = 3355443;
	this.TYPE = "line";
	away3d.primitives.data.Segment.call(this,v0,v1,null,color0,color1,thickness);
};
$hxClasses["away3d.primitives.LineSegment"] = away3d.primitives.LineSegment;
away3d.primitives.LineSegment.__name__ = ["away3d","primitives","LineSegment"];
away3d.primitives.LineSegment.__super__ = away3d.primitives.data.Segment;
away3d.primitives.LineSegment.prototype = $extend(away3d.primitives.data.Segment.prototype,{
	__class__: away3d.primitives.LineSegment
});
away3d.primitives.PlaneGeometry = function(width,height,segmentsW,segmentsH,yUp,doubleSided) {
	if(doubleSided == null) doubleSided = false;
	if(yUp == null) yUp = true;
	if(segmentsH == null) segmentsH = 1;
	if(segmentsW == null) segmentsW = 1;
	if(height == null) height = 100;
	if(width == null) width = 100;
	away3d.primitives.PrimitiveBase.call(this);
	this._segmentsW = segmentsW;
	this._segmentsH = segmentsH;
	this._yUp = yUp;
	this._width = width;
	this._height = height;
	this._doubleSided = doubleSided;
};
$hxClasses["away3d.primitives.PlaneGeometry"] = away3d.primitives.PlaneGeometry;
away3d.primitives.PlaneGeometry.__name__ = ["away3d","primitives","PlaneGeometry"];
away3d.primitives.PlaneGeometry.__super__ = away3d.primitives.PrimitiveBase;
away3d.primitives.PlaneGeometry.prototype = $extend(away3d.primitives.PrimitiveBase.prototype,{
	buildUVs: function(target) {
		var data;
		var stride = target.get_UVStride();
		var numUvs = (this._segmentsH + 1) * (this._segmentsW + 1) * stride;
		var skip = stride - 2;
		if(this._doubleSided) numUvs *= 2;
		if(target.get_UVData() != null && numUvs == flash._Vector.Vector_Impl_.get_length(target.get_UVData())) data = target.get_UVData(); else {
			data = flash._Vector.Vector_Impl_._new(numUvs,true);
			this.invalidateGeometry();
		}
		var index = target.get_UVOffset();
		var yi = 0;
		while(yi <= this._segmentsH) {
			var xi = 0;
			while(xi <= this._segmentsW) {
				data[index++] = xi / this._segmentsW * target.get_scaleU();
				data[index++] = (1 - yi / this._segmentsH) * target.get_scaleV();
				index += skip;
				if(this._doubleSided) {
					data[index++] = xi / this._segmentsW * target.get_scaleU();
					data[index++] = (1 - yi / this._segmentsH) * target.get_scaleV();
					index += skip;
				}
				++xi;
			}
			++yi;
		}
		target.updateData(data);
	}
	,buildGeometry: function(target) {
		var data;
		var indices;
		var x;
		var y;
		var numIndices;
		var base;
		var tw = this._segmentsW + 1;
		var numVertices = (this._segmentsH + 1) * tw;
		var stride = target.get_vertexStride();
		var skip = stride - 9;
		if(this._doubleSided) numVertices *= 2;
		numIndices = this._segmentsH * this._segmentsW * 6;
		if(this._doubleSided) numIndices <<= 1;
		if(numVertices == target.get_numVertices()) {
			data = target.get_vertexData();
			indices = target.get_indexData();
			if(indices == null) indices = flash._Vector.Vector_Impl_._new(numIndices,true);
		} else {
			data = flash._Vector.Vector_Impl_._new(numVertices * stride,true);
			indices = flash._Vector.Vector_Impl_._new(numIndices,true);
			away3d.Stage3DUtils.fillVector(data,0,numVertices * stride,0);
			away3d.Stage3DUtils.fillVector(indices,0,numIndices,0);
			this.invalidateUVs();
		}
		numIndices = 0;
		var index = target.get_vertexOffset();
		var yi = 0;
		while(yi <= this._segmentsH) {
			var xi = 0;
			while(xi <= this._segmentsW) {
				x = (xi / this._segmentsW - .5) * this._width;
				y = (yi / this._segmentsH - .5) * this._height;
				data[index++] = x;
				if(this._yUp) {
					data[index++] = 0;
					data[index++] = y;
				} else {
					data[index++] = y;
					data[index++] = 0;
				}
				data[index++] = 0;
				if(this._yUp) {
					data[index++] = 1;
					data[index++] = 0;
				} else {
					data[index++] = 0;
					data[index++] = -1;
				}
				data[index++] = 1;
				data[index++] = 0;
				data[index++] = 0;
				index += skip;
				if(this._doubleSided) {
					var i = 0;
					while(i < 3) {
						data[index] = data[index - stride];
						++index;
						++i;
					}
					i = 0;
					while(i < 3) {
						data[index] = -data[index - stride];
						++index;
						++i;
					}
					i = 0;
					while(i < 3) {
						data[index] = -data[index - stride];
						++index;
						++i;
					}
					index += skip;
				}
				if(xi != this._segmentsW && yi != this._segmentsH) {
					base = xi + yi * tw;
					var mult = this._doubleSided?2:1;
					indices[numIndices++] = base * mult;
					indices[numIndices++] = (base + tw) * mult;
					indices[numIndices++] = (base + tw + 1) * mult;
					indices[numIndices++] = base * mult;
					indices[numIndices++] = (base + tw + 1) * mult;
					indices[numIndices++] = (base + 1) * mult;
					if(this._doubleSided) {
						indices[numIndices++] = (base + tw + 1) * mult + 1;
						indices[numIndices++] = (base + tw) * mult + 1;
						indices[numIndices++] = base * mult + 1;
						indices[numIndices++] = (base + 1) * mult + 1;
						indices[numIndices++] = (base + tw + 1) * mult + 1;
						indices[numIndices++] = base * mult + 1;
					}
				}
				++xi;
			}
			++yi;
		}
		target.updateData(data);
		target.updateIndexData(indices);
	}
	,set_height: function(value) {
		this._height = value;
		this.invalidateGeometry();
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_width: function(value) {
		this._width = value;
		this.invalidateGeometry();
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_doubleSided: function(value) {
		this._doubleSided = value;
		this.invalidateGeometry();
		return value;
	}
	,get_doubleSided: function() {
		return this._doubleSided;
	}
	,set_yUp: function(value) {
		this._yUp = value;
		this.invalidateGeometry();
		return value;
	}
	,get_yUp: function() {
		return this._yUp;
	}
	,set_segmentsH: function(value) {
		this._segmentsH = value;
		this.invalidateGeometry();
		this.invalidateUVs();
		return value;
	}
	,get_segmentsH: function() {
		return this._segmentsH;
	}
	,set_segmentsW: function(value) {
		this._segmentsW = value;
		this.invalidateGeometry();
		this.invalidateUVs();
		return value;
	}
	,get_segmentsW: function() {
		return this._segmentsW;
	}
	,__class__: away3d.primitives.PlaneGeometry
	,__properties__: $extend(away3d.primitives.PrimitiveBase.prototype.__properties__,{set_segmentsW:"set_segmentsW",get_segmentsW:"get_segmentsW",set_segmentsH:"set_segmentsH",get_segmentsH:"get_segmentsH",set_yUp:"set_yUp",get_yUp:"get_yUp",set_doubleSided:"set_doubleSided",get_doubleSided:"get_doubleSided",set_width:"set_width",get_width:"get_width",set_height:"set_height",get_height:"get_height"})
});
away3d.primitives.SphereGeometry = function(radius,segmentsW,segmentsH,yUp) {
	if(yUp == null) yUp = true;
	if(segmentsH == null) segmentsH = 12;
	if(segmentsW == null) segmentsW = 16;
	if(radius == null) radius = 50;
	away3d.primitives.PrimitiveBase.call(this);
	this._radius = radius;
	this._segmentsW = segmentsW;
	this._segmentsH = segmentsH;
	this._yUp = yUp;
};
$hxClasses["away3d.primitives.SphereGeometry"] = away3d.primitives.SphereGeometry;
away3d.primitives.SphereGeometry.__name__ = ["away3d","primitives","SphereGeometry"];
away3d.primitives.SphereGeometry.__super__ = away3d.primitives.PrimitiveBase;
away3d.primitives.SphereGeometry.prototype = $extend(away3d.primitives.PrimitiveBase.prototype,{
	set_yUp: function(value) {
		this._yUp = value;
		this.invalidateGeometry();
		return value;
	}
	,get_yUp: function() {
		return this._yUp;
	}
	,set_segmentsH: function(value) {
		this._segmentsH = value;
		this.invalidateGeometry();
		this.invalidateUVs();
		return value;
	}
	,get_segmentsH: function() {
		return this._segmentsH;
	}
	,set_segmentsW: function(value) {
		this._segmentsW = value;
		this.invalidateGeometry();
		this.invalidateUVs();
		return value;
	}
	,get_segmentsW: function() {
		return this._segmentsW;
	}
	,set_radius: function(value) {
		this._radius = value;
		this.invalidateGeometry();
		return value;
	}
	,get_radius: function() {
		return this._radius;
	}
	,buildUVs: function(target) {
		var i;
		var j;
		var stride = target.get_UVStride();
		var numUvs = (this._segmentsH + 1) * (this._segmentsW + 1) * stride;
		var data;
		var skip = stride - 2;
		if(target.get_UVData() != null && numUvs == flash._Vector.Vector_Impl_.get_length(target.get_UVData())) data = target.get_UVData(); else {
			data = flash._Vector.Vector_Impl_._new(numUvs,true);
			this.invalidateGeometry();
		}
		var index = target.get_UVOffset();
		j = 0;
		while(j <= this._segmentsH) {
			i = 0;
			while(i <= this._segmentsW) {
				data[index++] = i / this._segmentsW * target.get_scaleU();
				data[index++] = j / this._segmentsH * target.get_scaleV();
				index += skip;
				++i;
			}
			++j;
		}
		target.updateData(data);
	}
	,buildGeometry: function(target) {
		var vertices;
		var indices;
		var i = 0;
		var j = 0;
		var triIndex = 0;
		var numVerts = (this._segmentsH + 1) * (this._segmentsW + 1);
		var stride = target.get_vertexStride();
		var skip = stride - 9;
		if(numVerts == target.get_numVertices()) {
			vertices = target.get_vertexData();
			indices = target.get_indexData();
			if(indices == null) indices = flash._Vector.Vector_Impl_._new((this._segmentsH - 1) * this._segmentsW * 6,true);
		} else {
			vertices = flash._Vector.Vector_Impl_._new(numVerts * stride,true);
			indices = flash._Vector.Vector_Impl_._new((this._segmentsH - 1) * this._segmentsW * 6,true);
			this.invalidateGeometry();
		}
		var startIndex;
		var index = target.get_vertexOffset();
		var comp1;
		var comp2;
		var t1;
		var t2;
		j = 0;
		while(j <= this._segmentsH) {
			startIndex = index;
			var horangle = Math.PI * j / this._segmentsH;
			var z = -this._radius * Math.cos(horangle);
			var ringradius = this._radius * Math.sin(horangle);
			i = 0;
			while(i <= this._segmentsW) {
				var verangle = 2 * Math.PI * i / this._segmentsW;
				var x = ringradius * Math.cos(verangle);
				var y = ringradius * Math.sin(verangle);
				var normLen = 1 / Math.sqrt(x * x + y * y + z * z);
				var tanLen = Math.sqrt(y * y + x * x);
				if(this._yUp) {
					t1 = 0;
					t2 = tanLen > .007?x / tanLen:0;
					comp1 = -z;
					comp2 = y;
				} else {
					t1 = tanLen > .007?x / tanLen:0;
					t2 = 0;
					comp1 = y;
					comp2 = z;
				}
				if(i == this._segmentsW) {
					vertices[index++] = vertices[startIndex];
					vertices[index++] = vertices[startIndex + 1];
					vertices[index++] = vertices[startIndex + 2];
					vertices[index++] = vertices[startIndex + 3] + x * normLen * .5;
					vertices[index++] = vertices[startIndex + 4] + comp1 * normLen * .5;
					vertices[index++] = vertices[startIndex + 5] + comp2 * normLen * .5;
					vertices[index++] = tanLen > .007?-y / tanLen:1;
					vertices[index++] = t1;
					vertices[index++] = t2;
				} else {
					vertices[index++] = x;
					vertices[index++] = comp1;
					vertices[index++] = comp2;
					vertices[index++] = x * normLen;
					vertices[index++] = comp1 * normLen;
					vertices[index++] = comp2 * normLen;
					vertices[index++] = tanLen > .007?-y / tanLen:1;
					vertices[index++] = t1;
					vertices[index++] = t2;
				}
				if(i > 0 && j > 0) {
					var a = (this._segmentsW + 1) * j + i;
					var b = (this._segmentsW + 1) * j + i - 1;
					var c = (this._segmentsW + 1) * (j - 1) + i - 1;
					var d = (this._segmentsW + 1) * (j - 1) + i;
					if(j == this._segmentsH) {
						vertices[index - 9] = vertices[startIndex];
						vertices[index - 8] = vertices[startIndex + 1];
						vertices[index - 7] = vertices[startIndex + 2];
						indices[triIndex++] = a;
						indices[triIndex++] = c;
						indices[triIndex++] = d;
					} else if(j == 1) {
						indices[triIndex++] = a;
						indices[triIndex++] = b;
						indices[triIndex++] = c;
					} else {
						indices[triIndex++] = a;
						indices[triIndex++] = b;
						indices[triIndex++] = c;
						indices[triIndex++] = a;
						indices[triIndex++] = c;
						indices[triIndex++] = d;
					}
				}
				index += skip;
				++i;
			}
			++j;
		}
		target.updateData(vertices);
		target.updateIndexData(indices);
	}
	,__class__: away3d.primitives.SphereGeometry
	,__properties__: $extend(away3d.primitives.PrimitiveBase.prototype.__properties__,{set_radius:"set_radius",get_radius:"get_radius",set_segmentsW:"set_segmentsW",get_segmentsW:"get_segmentsW",set_segmentsH:"set_segmentsH",get_segmentsH:"get_segmentsH",set_yUp:"set_yUp",get_yUp:"get_yUp"})
});
away3d.primitives.WireframePrimitiveBase = function(color,thickness) {
	if(thickness == null) thickness = 1;
	if(color == null) color = 16777215;
	this._geomDirty = true;
	if(thickness <= 0) thickness = 1;
	this._color = color;
	this._thickness = thickness;
	this.set_mouseEnabled(this.set_mouseChildren(false));
	away3d.entities.SegmentSet.call(this);
};
$hxClasses["away3d.primitives.WireframePrimitiveBase"] = away3d.primitives.WireframePrimitiveBase;
away3d.primitives.WireframePrimitiveBase.__name__ = ["away3d","primitives","WireframePrimitiveBase"];
away3d.primitives.WireframePrimitiveBase.__super__ = away3d.entities.SegmentSet;
away3d.primitives.WireframePrimitiveBase.prototype = $extend(away3d.entities.SegmentSet.prototype,{
	updateMouseChildren: function() {
		this._ancestorsAllowMouseEnabled = false;
	}
	,updateOrAddSegment: function(index,v0,v1) {
		var segment;
		var s;
		var e;
		if((segment = this.getSegment(index)) != null) {
			s = segment.get_start();
			e = segment.get_end();
			s.x = v0.x;
			s.y = v0.y;
			s.z = v0.z;
			e.x = v1.x;
			e.y = v1.y;
			e.z = v1.z;
			segment.updateSegment(s,e,null,this._color,this._color,this._thickness);
		} else this.addSegment(new away3d.primitives.LineSegment(new flash.geom.Vector3D(v0.x,v0.y,v0.z,v0.w),new flash.geom.Vector3D(v1.x,v1.y,v1.z,v1.w),this._color,this._color,this._thickness));
	}
	,updateGeometry: function() {
		this.buildGeometry();
		this._geomDirty = false;
	}
	,invalidateGeometry: function() {
		this._geomDirty = true;
		this.invalidateBounds();
	}
	,buildGeometry: function() {
		throw new away3d.errors.AbstractMethodError();
	}
	,get_bounds: function() {
		if(this._geomDirty) this.updateGeometry();
		return away3d.entities.SegmentSet.prototype.get_bounds.call(this);
	}
	,removeAllSegments: function() {
		away3d.entities.SegmentSet.prototype.removeAllSegments.call(this);
	}
	,set_thickness: function(value) {
		this._thickness = value;
		var $it0 = this._segments.iterator();
		while( $it0.hasNext() ) {
			var segRef = $it0.next();
			segRef.segment.set_thickness(segRef.segment.set_thickness(value));
		}
		return value;
	}
	,get_thickness: function() {
		return this._thickness;
	}
	,set_color: function(value) {
		this._color = value;
		var $it0 = this._segments.iterator();
		while( $it0.hasNext() ) {
			var segRef = $it0.next();
			segRef.segment.set_startColor(segRef.segment.set_endColor(value));
		}
		return value;
	}
	,get_color: function() {
		return this._color;
	}
	,__class__: away3d.primitives.WireframePrimitiveBase
	,__properties__: $extend(away3d.entities.SegmentSet.prototype.__properties__,{set_color:"set_color",get_color:"get_color",set_thickness:"set_thickness",get_thickness:"get_thickness"})
});
away3d.primitives.WireframeCube = function(width,height,depth,color,thickness) {
	if(thickness == null) thickness = 1;
	if(color == null) color = 16777215;
	if(depth == null) depth = 100;
	if(height == null) height = 100;
	if(width == null) width = 100;
	away3d.primitives.WireframePrimitiveBase.call(this,color,thickness);
	this._width = width;
	this._height = height;
	this._depth = depth;
};
$hxClasses["away3d.primitives.WireframeCube"] = away3d.primitives.WireframeCube;
away3d.primitives.WireframeCube.__name__ = ["away3d","primitives","WireframeCube"];
away3d.primitives.WireframeCube.__super__ = away3d.primitives.WireframePrimitiveBase;
away3d.primitives.WireframeCube.prototype = $extend(away3d.primitives.WireframePrimitiveBase.prototype,{
	buildGeometry: function() {
		var v0 = new flash.geom.Vector3D();
		var v1 = new flash.geom.Vector3D();
		var hw = this._width * .5;
		var hh = this._height * .5;
		var hd = this._depth * .5;
		v0.x = -hw;
		v0.y = hh;
		v0.z = -hd;
		v1.x = -hw;
		v1.y = -hh;
		v1.z = -hd;
		this.updateOrAddSegment(0,v0,v1);
		v0.z = hd;
		v1.z = hd;
		this.updateOrAddSegment(1,v0,v1);
		v0.x = hw;
		v1.x = hw;
		this.updateOrAddSegment(2,v0,v1);
		v0.z = -hd;
		v1.z = -hd;
		this.updateOrAddSegment(3,v0,v1);
		v0.x = -hw;
		v0.y = -hh;
		v0.z = -hd;
		v1.x = hw;
		v1.y = -hh;
		v1.z = -hd;
		this.updateOrAddSegment(4,v0,v1);
		v0.y = hh;
		v1.y = hh;
		this.updateOrAddSegment(5,v0,v1);
		v0.z = hd;
		v1.z = hd;
		this.updateOrAddSegment(6,v0,v1);
		v0.y = -hh;
		v1.y = -hh;
		this.updateOrAddSegment(7,v0,v1);
		v0.x = -hw;
		v0.y = -hh;
		v0.z = -hd;
		v1.x = -hw;
		v1.y = -hh;
		v1.z = hd;
		this.updateOrAddSegment(8,v0,v1);
		v0.y = hh;
		v1.y = hh;
		this.updateOrAddSegment(9,v0,v1);
		v0.x = hw;
		v1.x = hw;
		this.updateOrAddSegment(10,v0,v1);
		v0.y = -hh;
		v1.y = -hh;
		this.updateOrAddSegment(11,v0,v1);
	}
	,set_depth: function(value) {
		this._depth = value;
		this.invalidateGeometry();
		return value;
	}
	,get_depth: function() {
		return this._depth;
	}
	,set_height: function(value) {
		if(value <= 0) throw new flash.errors.Error("Value needs to be greater than 0");
		this._height = value;
		this.invalidateGeometry();
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_width: function(value) {
		this._width = value;
		this.invalidateGeometry();
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,__class__: away3d.primitives.WireframeCube
	,__properties__: $extend(away3d.primitives.WireframePrimitiveBase.prototype.__properties__,{set_width:"set_width",get_width:"get_width",set_height:"set_height",get_height:"get_height",set_depth:"set_depth",get_depth:"get_depth"})
});
away3d.primitives.WireframeSphere = function(radius,segmentsW,segmentsH,color,thickness) {
	if(thickness == null) thickness = 1;
	if(color == null) color = 16777215;
	if(segmentsH == null) segmentsH = 12;
	if(segmentsW == null) segmentsW = 16;
	if(radius == null) radius = 50;
	away3d.primitives.WireframePrimitiveBase.call(this,color,thickness);
	this._radius = radius;
	this._segmentsW = segmentsW;
	this._segmentsH = segmentsH;
};
$hxClasses["away3d.primitives.WireframeSphere"] = away3d.primitives.WireframeSphere;
away3d.primitives.WireframeSphere.__name__ = ["away3d","primitives","WireframeSphere"];
away3d.primitives.WireframeSphere.__super__ = away3d.primitives.WireframePrimitiveBase;
away3d.primitives.WireframeSphere.prototype = $extend(away3d.primitives.WireframePrimitiveBase.prototype,{
	buildGeometry: function() {
		var vertices = flash._Vector.Vector_Impl_._new();
		var v0 = new flash.geom.Vector3D();
		var v1 = new flash.geom.Vector3D();
		var i = 0;
		var j = 0;
		var numVerts = 0;
		var index = 0;
		j = 0;
		while(j <= this._segmentsH) {
			var horangle = Math.PI * j / this._segmentsH;
			var z = -this._radius * Math.cos(horangle);
			var ringradius = this._radius * Math.sin(horangle);
			i = 0;
			while(i <= this._segmentsW) {
				var verangle = 2 * Math.PI * i / this._segmentsW;
				var x = ringradius * Math.cos(verangle);
				var y = ringradius * Math.sin(verangle);
				vertices[numVerts++] = x;
				vertices[numVerts++] = -z;
				vertices[numVerts++] = y;
				++i;
			}
			++j;
		}
		j = 1;
		while(j <= this._segmentsH) {
			i = 1;
			while(i <= this._segmentsW) {
				var a = ((this._segmentsW + 1) * j + i) * 3;
				var b = ((this._segmentsW + 1) * j + i - 1) * 3;
				var c = ((this._segmentsW + 1) * (j - 1) + i - 1) * 3;
				var d = ((this._segmentsW + 1) * (j - 1) + i) * 3;
				if(j == this._segmentsH) {
					v0.x = vertices[c];
					v0.y = vertices[c + 1];
					v0.z = vertices[c + 2];
					v1.x = vertices[d];
					v1.y = vertices[d + 1];
					v1.z = vertices[d + 2];
					this.updateOrAddSegment(index++,v0,v1);
					v0.x = vertices[a];
					v0.y = vertices[a + 1];
					v0.z = vertices[a + 2];
					this.updateOrAddSegment(index++,v0,v1);
				} else if(j == 1) {
					v1.x = vertices[b];
					v1.y = vertices[b + 1];
					v1.z = vertices[b + 2];
					v0.x = vertices[c];
					v0.y = vertices[c + 1];
					v0.z = vertices[c + 2];
					this.updateOrAddSegment(index++,v0,v1);
				} else {
					v1.x = vertices[b];
					v1.y = vertices[b + 1];
					v1.z = vertices[b + 2];
					v0.x = vertices[c];
					v0.y = vertices[c + 1];
					v0.z = vertices[c + 2];
					this.updateOrAddSegment(index++,v0,v1);
					v1.x = vertices[d];
					v1.y = vertices[d + 1];
					v1.z = vertices[d + 2];
					this.updateOrAddSegment(index++,v0,v1);
				}
				++i;
			}
			++j;
		}
	}
	,__class__: away3d.primitives.WireframeSphere
});
away3d.textures = {}
away3d.textures.TextureProxyBase = function() {
	this._format = flash.display3D.Context3DTextureFormat.BGRA;
	this._hasMipmaps = true;
	this._textures = flash._Vector.Vector_Impl_._new(8);
	this._dirty = flash._Vector.Vector_Impl_._new(8);
	away3d.library.assets.NamedAssetBase.call(this);
};
$hxClasses["away3d.textures.TextureProxyBase"] = away3d.textures.TextureProxyBase;
away3d.textures.TextureProxyBase.__name__ = ["away3d","textures","TextureProxyBase"];
away3d.textures.TextureProxyBase.__interfaces__ = [away3d.library.assets.IAsset];
away3d.textures.TextureProxyBase.__super__ = away3d.library.assets.NamedAssetBase;
away3d.textures.TextureProxyBase.prototype = $extend(away3d.library.assets.NamedAssetBase.prototype,{
	dispose: function() {
		var i = 0;
		while(i < 8) {
			if(this._textures[i] != null) this._textures[i].dispose();
			++i;
		}
	}
	,createTexture: function(context) {
		throw new away3d.errors.AbstractMethodError();
		return null;
	}
	,invalidateSize: function() {
		var tex;
		var i = 0;
		while(i < 8) {
			tex = this._textures[i];
			if(tex != null) {
				tex.dispose();
				this._textures[i] = null;
				this._dirty[i] = null;
			}
			++i;
		}
	}
	,invalidateContent: function() {
		var i = 0;
		while(i < 8) {
			this._dirty[i] = null;
			++i;
		}
	}
	,setSize: function(width,height) {
		if(this._width != width || this._height != height) this.invalidateSize();
		this._width = width;
		this._height = height;
	}
	,uploadContent: function(texture) {
		throw new away3d.errors.AbstractMethodError();
	}
	,getTextureForStage3D: function(stage3DProxy) {
		var contextIndex = stage3DProxy._stage3DIndex;
		var tex = this._textures[contextIndex];
		var context = stage3DProxy._context3D;
		if(tex == null || this._dirty[contextIndex] != context) {
			this._textures[contextIndex] = tex = this.createTexture(context);
			this._dirty[contextIndex] = context;
			this.uploadContent(tex);
		}
		return tex;
	}
	,set_height: function(value) {
		if(value == this._height) return value;
		this._height = value;
		return value;
	}
	,set_width: function(value) {
		if(value == this._width) return value;
		this._width = value;
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,get_width: function() {
		return this._width;
	}
	,get_assetType: function() {
		return away3d.library.assets.AssetType.TEXTURE;
	}
	,get_format: function() {
		return this._format;
	}
	,get_hasMipMaps: function() {
		return this._hasMipmaps;
	}
	,__class__: away3d.textures.TextureProxyBase
	,__properties__: $extend(away3d.library.assets.NamedAssetBase.prototype.__properties__,{get_hasMipMaps:"get_hasMipMaps",get_format:"get_format",get_assetType:"get_assetType",get_width:"get_width",get_height:"get_height"})
});
away3d.textures.Texture2DBase = function() {
	away3d.textures.TextureProxyBase.call(this);
};
$hxClasses["away3d.textures.Texture2DBase"] = away3d.textures.Texture2DBase;
away3d.textures.Texture2DBase.__name__ = ["away3d","textures","Texture2DBase"];
away3d.textures.Texture2DBase.__super__ = away3d.textures.TextureProxyBase;
away3d.textures.Texture2DBase.prototype = $extend(away3d.textures.TextureProxyBase.prototype,{
	createTexture: function(context) {
		return context.createTexture(this._width,this._height,flash.display3D.Context3DTextureFormat.BGRA,false);
	}
	,__class__: away3d.textures.Texture2DBase
});
away3d.textures.BitmapTexture = function(bitmapData,generateMipmaps) {
	if(generateMipmaps == null) generateMipmaps = true;
	away3d.textures.Texture2DBase.call(this);
	this.set_bitmapData(bitmapData);
	this._generateMipmaps = generateMipmaps;
};
$hxClasses["away3d.textures.BitmapTexture"] = away3d.textures.BitmapTexture;
away3d.textures.BitmapTexture.__name__ = ["away3d","textures","BitmapTexture"];
away3d.textures.BitmapTexture.__super__ = away3d.textures.Texture2DBase;
away3d.textures.BitmapTexture.prototype = $extend(away3d.textures.Texture2DBase.prototype,{
	dispose: function() {
		away3d.textures.Texture2DBase.prototype.dispose.call(this);
		if(this._mipMapHolder != null) this.freeMipMapHolder();
	}
	,freeMipMapHolder: function() {
		var holderWidth = this._mipMapHolder.get_width();
		var holderHeight = this._mipMapHolder.get_height();
		if(--away3d.textures.BitmapTexture._mipMapUses[holderWidth][holderHeight] == 0) {
			away3d.textures.BitmapTexture._mipMaps[holderWidth][holderHeight].dispose();
			away3d.textures.BitmapTexture._mipMaps[holderWidth][holderHeight] = null;
		}
	}
	,getMipMapHolder: function() {
		var newW, newH;
		newW = this._bitmapData.get_width();
		newH = this._bitmapData.get_height();
		if(this._mipMapHolder != null) {
			if(this._mipMapHolder.get_width() == newW && this._bitmapData.get_height() == newH) return;
			this.freeMipMapHolder();
		}
		if(away3d.textures.BitmapTexture._mipMaps[newW] == null) {
			away3d.textures.BitmapTexture._mipMaps[newW] = [];
			away3d.textures.BitmapTexture._mipMapUses[newW] = [];
		}
		if(away3d.textures.BitmapTexture._mipMaps[newW][newH] == null) {
			this._mipMapHolder = away3d.textures.BitmapTexture._mipMaps[newW][newH] = new flash.display.BitmapData(newW,newH,true);
			away3d.textures.BitmapTexture._mipMapUses[newW][newH] = 1;
		} else {
			away3d.textures.BitmapTexture._mipMapUses[newW][newH] = away3d.textures.BitmapTexture._mipMapUses[newW][newH] + 1;
			this._mipMapHolder = away3d.textures.BitmapTexture._mipMaps[newW][newH];
		}
	}
	,uploadContent: function(texture) {
		if(this._generateMipmaps) away3d.materials.utils.MipmapGenerator.generateMipMaps(this._bitmapData,texture,this._mipMapHolder,true); else (js.Boot.__cast(texture , flash.display3D.textures.Texture)).uploadFromBitmapData(this._bitmapData,0);
	}
	,set_bitmapData: function(value) {
		if(value == this._bitmapData) return null;
		if(!away3d.tools.utils.TextureUtils.isBitmapDataValid(value)) throw new flash.errors.Error("Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048");
		this.invalidateContent();
		this.setSize(value.___textureBuffer != null?value.___textureBuffer.width:0,value.___textureBuffer != null?value.___textureBuffer.height:0);
		this._bitmapData = value;
		if(this._generateMipmaps) this.getMipMapHolder();
		return value;
	}
	,get_bitmapData: function() {
		return this._bitmapData;
	}
	,__class__: away3d.textures.BitmapTexture
	,__properties__: $extend(away3d.textures.Texture2DBase.prototype.__properties__,{set_bitmapData:"set_bitmapData",get_bitmapData:"get_bitmapData"})
});
away3d.textures.CubeTextureBase = function() {
	away3d.textures.TextureProxyBase.call(this);
};
$hxClasses["away3d.textures.CubeTextureBase"] = away3d.textures.CubeTextureBase;
away3d.textures.CubeTextureBase.__name__ = ["away3d","textures","CubeTextureBase"];
away3d.textures.CubeTextureBase.__super__ = away3d.textures.TextureProxyBase;
away3d.textures.CubeTextureBase.prototype = $extend(away3d.textures.TextureProxyBase.prototype,{
	createTexture: function(context) {
		return context.createCubeTexture(this.get_width(),flash.display3D.Context3DTextureFormat.BGRA,false);
	}
	,get_size: function() {
		return this._width;
	}
	,__class__: away3d.textures.CubeTextureBase
	,__properties__: $extend(away3d.textures.TextureProxyBase.prototype.__properties__,{get_size:"get_size"})
});
away3d.textures.RenderCubeTexture = function(size) {
	away3d.textures.CubeTextureBase.call(this);
	this.setSize(size,size);
};
$hxClasses["away3d.textures.RenderCubeTexture"] = away3d.textures.RenderCubeTexture;
away3d.textures.RenderCubeTexture.__name__ = ["away3d","textures","RenderCubeTexture"];
away3d.textures.RenderCubeTexture.__super__ = away3d.textures.CubeTextureBase;
away3d.textures.RenderCubeTexture.prototype = $extend(away3d.textures.CubeTextureBase.prototype,{
	createTexture: function(context) {
		return context.createCubeTexture(this._width,flash.display3D.Context3DTextureFormat.BGRA,true);
	}
	,uploadContent: function(texture) {
		var bmd = new flash.display.BitmapData(this._width,this._height,false,0);
		var i = 0;
		while(i < 6) {
			away3d.materials.utils.MipmapGenerator.generateMipMaps(bmd,texture,null,false,i);
			++i;
		}
		bmd.dispose();
	}
	,set_size: function(value) {
		if(value == this._width) return value;
		if(!away3d.tools.utils.TextureUtils.isDimensionValid(value)) throw new flash.errors.Error("Invalid size: Width and height must be power of 2 and cannot exceed 2048");
		this.invalidateContent();
		this.setSize(value,value);
		return value;
	}
	,__class__: away3d.textures.RenderCubeTexture
});
away3d.textures.RenderTexture = function(_width,_height) {
	away3d.textures.Texture2DBase.call(this);
	this.setSize(_width,_height);
};
$hxClasses["away3d.textures.RenderTexture"] = away3d.textures.RenderTexture;
away3d.textures.RenderTexture.__name__ = ["away3d","textures","RenderTexture"];
away3d.textures.RenderTexture.__super__ = away3d.textures.Texture2DBase;
away3d.textures.RenderTexture.prototype = $extend(away3d.textures.Texture2DBase.prototype,{
	createTexture: function(context) {
		return context.createTexture(this.get_width(),this.get_height(),flash.display3D.Context3DTextureFormat.BGRA,true);
	}
	,uploadContent: function(texture) {
		var bmp = new flash.display.BitmapData(this.get_width(),this.get_height(),false,16711680);
		away3d.materials.utils.MipmapGenerator.generateMipMaps(bmp,texture);
		bmp.dispose();
	}
	,set_height: function(value) {
		if(value == this._height) return value;
		if(!away3d.tools.utils.TextureUtils.isDimensionValid(value)) throw new flash.errors.Error("Invalid size: Width and height must be power of 2 and cannot exceed 2048");
		this.invalidateContent();
		this.setSize(this._width,value);
		return value;
	}
	,set_width: function(value) {
		if(value == this._width) return value;
		if(!away3d.tools.utils.TextureUtils.isDimensionValid(value)) throw new flash.errors.Error("Invalid size: Width and height must be power of 2 and cannot exceed 2048");
		this.invalidateContent();
		this.setSize(value,this._height);
		return value;
	}
	,__class__: away3d.textures.RenderTexture
});
away3d.tools = {}
away3d.tools.utils = {}
away3d.tools.utils.GeomUtil = function() { }
$hxClasses["away3d.tools.utils.GeomUtil"] = away3d.tools.utils.GeomUtil;
away3d.tools.utils.GeomUtil.__name__ = ["away3d","tools","utils","GeomUtil"];
away3d.tools.utils.GeomUtil.fromVectors = function(verts,indices,uvs,normals,tangents,weights,jointIndices,triangleOffset) {
	if(triangleOffset == null) triangleOffset = 0;
	var LIMIT_VERTS = 196605;
	var LIMIT_INDICES = 983025;
	var subs = flash._Vector.Vector_Impl_._new();
	if(uvs != null && flash._Vector.Vector_Impl_.get_length(uvs) > 0) uvs = null;
	if(normals != null && flash._Vector.Vector_Impl_.get_length(normals) > 0) normals = null;
	if(tangents != null && flash._Vector.Vector_Impl_.get_length(tangents) > 0) tangents = null;
	if(weights != null && flash._Vector.Vector_Impl_.get_length(weights) > 0) weights = null;
	if(jointIndices != null && flash._Vector.Vector_Impl_.get_length(jointIndices) > 0) jointIndices = null;
	if(flash._Vector.Vector_Impl_.get_length(indices) >= LIMIT_INDICES || flash._Vector.Vector_Impl_.get_length(verts) >= LIMIT_VERTS) {
		var i = 0;
		var len;
		var outIndex;
		var j;
		var splitVerts = flash._Vector.Vector_Impl_._new();
		var splitIndices = flash._Vector.Vector_Impl_._new();
		var splitUvs = uvs != null?flash._Vector.Vector_Impl_._new():null;
		var splitNormals = normals != null?flash._Vector.Vector_Impl_._new():null;
		var splitTangents = tangents != null?flash._Vector.Vector_Impl_._new():null;
		var splitWeights = weights != null?flash._Vector.Vector_Impl_._new():null;
		var splitJointIndices = jointIndices != null?flash._Vector.Vector_Impl_._new():null;
		var mappings = flash._Vector.Vector_Impl_._new(flash._Vector.Vector_Impl_.get_length(verts) / 3 | 0,true);
		i = flash._Vector.Vector_Impl_.get_length(mappings);
		while(i-- > 0) mappings[i] = -1;
		var originalIndex;
		var splitIndex;
		var o0;
		var o1;
		var o2;
		var s0;
		var s1;
		var s2;
		var su;
		var ou;
		var sv;
		var ov;
		outIndex = 0;
		len = flash._Vector.Vector_Impl_.get_length(indices);
		i = 0;
		while(i < len) {
			splitIndex = flash._Vector.Vector_Impl_.get_length(splitVerts) + 6;
			if(outIndex + 2 >= LIMIT_INDICES || splitIndex >= LIMIT_VERTS) {
				flash._Vector.Vector_Impl_.push(subs,away3d.tools.utils.GeomUtil.constructSubGeometry(splitVerts,splitIndices,splitUvs,splitNormals,splitTangents,splitWeights,splitJointIndices,triangleOffset));
				splitVerts = flash._Vector.Vector_Impl_._new();
				splitIndices = flash._Vector.Vector_Impl_._new();
				splitUvs = uvs != null?flash._Vector.Vector_Impl_._new():null;
				splitNormals = normals != null?flash._Vector.Vector_Impl_._new():null;
				splitTangents = tangents != null?flash._Vector.Vector_Impl_._new():null;
				splitWeights = weights != null?flash._Vector.Vector_Impl_._new():null;
				splitJointIndices = jointIndices != null?flash._Vector.Vector_Impl_._new():null;
				splitIndex = 0;
				j = flash._Vector.Vector_Impl_.get_length(mappings);
				while(j-- > 0) mappings[j] = -1;
				outIndex = 0;
			}
			j = 0;
			while(j < 3) {
				originalIndex = indices[i + j];
				if(mappings[originalIndex] >= 0) splitIndex = mappings[originalIndex]; else {
					o0 = originalIndex * 3;
					o1 = originalIndex * 3 + 1;
					o2 = originalIndex * 3 + 2;
					splitIndex = flash._Vector.Vector_Impl_.get_length(splitVerts) / 3 | 0;
					s0 = splitIndex * 3;
					s1 = splitIndex * 3 + 1;
					s2 = splitIndex * 3 + 2;
					splitVerts[s0] = verts[o0];
					splitVerts[s1] = verts[o1];
					splitVerts[s2] = verts[o2];
					if(uvs != null) {
						su = splitIndex * 2;
						sv = splitIndex * 2 + 1;
						ou = originalIndex * 2;
						ov = originalIndex * 2 + 1;
						splitUvs[su] = uvs[ou];
						splitUvs[sv] = uvs[ov];
					}
					if(normals != null) {
						splitNormals[s0] = normals[o0];
						splitNormals[s1] = normals[o1];
						splitNormals[s2] = normals[o2];
					}
					if(tangents != null) {
						splitTangents[s0] = tangents[o0];
						splitTangents[s1] = tangents[o1];
						splitTangents[s2] = tangents[o2];
					}
					if(weights != null) {
						splitWeights[s0] = weights[o0];
						splitWeights[s1] = weights[o1];
						splitWeights[s2] = weights[o2];
					}
					if(jointIndices != null) {
						splitJointIndices[s0] = jointIndices[o0];
						splitJointIndices[s1] = jointIndices[o1];
						splitJointIndices[s2] = jointIndices[o2];
					}
					mappings[originalIndex] = splitIndex;
				}
				splitIndices[outIndex + j] = splitIndex;
				j++;
			}
			outIndex += 3;
			i += 3;
		}
		if(flash._Vector.Vector_Impl_.get_length(splitVerts) > 0) flash._Vector.Vector_Impl_.push(subs,away3d.tools.utils.GeomUtil.constructSubGeometry(splitVerts,splitIndices,splitUvs,splitNormals,splitTangents,splitWeights,splitJointIndices,triangleOffset));
	} else flash._Vector.Vector_Impl_.push(subs,away3d.tools.utils.GeomUtil.constructSubGeometry(verts,indices,uvs,normals,tangents,weights,jointIndices,triangleOffset));
	return subs;
}
away3d.tools.utils.GeomUtil.constructSubGeometry = function(verts,indices,uvs,normals,tangents,weights,jointIndices,triangleOffset) {
	var sub;
	if(weights != null && jointIndices != null) {
		sub = new away3d.core.base.SkinnedSubGeometry(flash._Vector.Vector_Impl_.get_length(weights) / (flash._Vector.Vector_Impl_.get_length(verts) / 3) | 0);
		(js.Boot.__cast(sub , away3d.core.base.SkinnedSubGeometry)).updateJointWeightsData(weights);
		(js.Boot.__cast(sub , away3d.core.base.SkinnedSubGeometry)).updateJointIndexData(jointIndices);
	} else sub = new away3d.core.base.CompactSubGeometry();
	sub.updateIndexData(indices);
	sub.fromVectors(verts,uvs,normals,tangents);
	return sub;
}
away3d.tools.utils.GeomUtil.interleaveBuffers = function(numVertices,vertices,normals,tangents,uvs,suvs) {
	var i = 0;
	var compIndex;
	var uvCompIndex;
	var interleavedCompIndex;
	var interleavedBuffer;
	interleavedBuffer = flash._Vector.Vector_Impl_._new();
	i = 0;
	while(i < numVertices) {
		uvCompIndex = i * 2;
		compIndex = i * 3;
		interleavedCompIndex = i * 13;
		interleavedBuffer[interleavedCompIndex] = vertices != null?vertices[compIndex]:0;
		interleavedBuffer[interleavedCompIndex + 1] = vertices != null?vertices[compIndex + 1]:0;
		interleavedBuffer[interleavedCompIndex + 2] = vertices != null?vertices[compIndex + 2]:0;
		interleavedBuffer[interleavedCompIndex + 3] = normals != null?normals[compIndex]:0;
		interleavedBuffer[interleavedCompIndex + 4] = normals != null?normals[compIndex + 1]:0;
		interleavedBuffer[interleavedCompIndex + 5] = normals != null?normals[compIndex + 2]:0;
		interleavedBuffer[interleavedCompIndex + 6] = tangents != null?tangents[compIndex]:0;
		interleavedBuffer[interleavedCompIndex + 7] = tangents != null?tangents[compIndex + 1]:0;
		interleavedBuffer[interleavedCompIndex + 8] = tangents != null?tangents[compIndex + 2]:0;
		interleavedBuffer[interleavedCompIndex + 9] = uvs != null?uvs[uvCompIndex]:0;
		interleavedBuffer[interleavedCompIndex + 10] = uvs != null?uvs[uvCompIndex + 1]:0;
		interleavedBuffer[interleavedCompIndex + 11] = suvs != null?suvs[uvCompIndex]:0;
		interleavedBuffer[interleavedCompIndex + 12] = suvs != null?suvs[uvCompIndex + 1]:0;
		++i;
	}
	return interleavedBuffer;
}
away3d.tools.utils.GeomUtil.getMeshSubgeometryIndex = function(subGeometry) {
	var index = 0;
	var subGeometries = subGeometry.get_parentGeometry().get_subGeometries();
	var i = 0;
	while(i < flash._Vector.Vector_Impl_.get_length(subGeometries)) {
		if(subGeometries[i] == subGeometry) {
			index = i;
			break;
		}
		++i;
	}
	return index;
}
away3d.tools.utils.GeomUtil.getMeshSubMeshIndex = function(subMesh) {
	var index = 0;
	var subMeshes = subMesh.get_parentMesh().get_subMeshes();
	var i = 0;
	while(i < flash._Vector.Vector_Impl_.get_length(subMeshes)) {
		if(subMeshes[i] == subMesh) {
			index = i;
			break;
		}
		++i;
	}
	return index;
}
away3d.tools.utils.TextureUtils = function() { }
$hxClasses["away3d.tools.utils.TextureUtils"] = away3d.tools.utils.TextureUtils;
away3d.tools.utils.TextureUtils.__name__ = ["away3d","tools","utils","TextureUtils"];
away3d.tools.utils.TextureUtils.isBitmapDataValid = function(bitmapData) {
	if(bitmapData == null) return true;
	return away3d.tools.utils.TextureUtils.isDimensionValid(bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.width:0) && away3d.tools.utils.TextureUtils.isDimensionValid(bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.height:0);
}
away3d.tools.utils.TextureUtils.isDimensionValid = function(d) {
	return d >= 1 && d <= away3d.tools.utils.TextureUtils.MAX_SIZE && away3d.tools.utils.TextureUtils.isPowerOfTwo(d);
}
away3d.tools.utils.TextureUtils.isPowerOfTwo = function(value) {
	return value > 0?(value & -value) == value:false;
}
away3d.tools.utils.TextureUtils.getBestPowerOf2 = function(value) {
	var p = 1;
	while(p < value) p <<= 1;
	if(p > away3d.tools.utils.TextureUtils.MAX_SIZE) p = away3d.tools.utils.TextureUtils.MAX_SIZE;
	return p;
}
haxe.Timer = function() { }
$hxClasses["haxe.Timer"] = haxe.Timer;
haxe.Timer.__name__ = ["haxe","Timer"];
haxe.Timer.stamp = function() {
	return new Date().getTime() / 1000;
}
flash.Lib = function(rootElement,width,height) {
	this.mKilled = false;
	this.__scr = rootElement;
	if(this.__scr == null) throw "Root element not found";
	this.__scr.style.setProperty("overflow","hidden","");
	this.__scr.style.setProperty("position","absolute","");
	if(this.__scr.style.getPropertyValue("width") != "100%") this.__scr.style.width = width + "px";
	if(this.__scr.style.getPropertyValue("height") != "100%") this.__scr.style.height = height + "px";
};
$hxClasses["flash.Lib"] = flash.Lib;
flash.Lib.__name__ = ["flash","Lib"];
flash.Lib.__properties__ = {get_current:"get_current"}
flash.Lib.addCallback = function(functionName,closure) {
	flash.Lib.mMe.__scr[functionName] = closure;
}
flash.Lib["as"] = function(v,c) {
	return js.Boot.__instanceof(v,c)?v:null;
}
flash.Lib.attach = function(name) {
	return new flash.display.MovieClip();
}
flash.Lib.getTimer = function() {
	return (haxe.Timer.stamp() - flash.Lib.starttime) * 1000 | 0;
}
flash.Lib.getURL = function(request,target) {
	if(target == null) target = "_blank";
	window.open(request.url,target);
}
flash.Lib.preventDefaultTouchMove = function() {
	js.Browser.document.addEventListener("touchmove",function(evt) {
		evt.preventDefault();
	},false);
}
flash.Lib.Run = function(tgt,width,height) {
	flash.Lib.mMe = new flash.Lib(tgt,width,height);
	var _g1 = 0, _g = tgt.attributes.length;
	while(_g1 < _g) {
		var i = _g1++;
		var attr = tgt.attributes.item(i);
		if(StringTools.startsWith(attr.name,"data-")) {
			if(attr.name == "data-" + "framerate") flash.Lib.__getStage().set_frameRate(Std.parseFloat(attr.value));
		}
	}
	var _g = 0, _g1 = flash.Lib.HTML_TOUCH_EVENT_TYPES;
	while(_g < _g1.length) {
		var type = _g1[_g];
		++_g;
		tgt.addEventListener(type,($_=flash.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	}
	var _g = 0, _g1 = flash.Lib.HTML_TOUCH_ALT_EVENT_TYPES;
	while(_g < _g1.length) {
		var type = _g1[_g];
		++_g;
		tgt.addEventListener(type,($_=flash.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	}
	var _g = 0, _g1 = flash.Lib.HTML_DIV_EVENT_TYPES;
	while(_g < _g1.length) {
		var type = _g1[_g];
		++_g;
		tgt.addEventListener(type,($_=flash.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	}
	if(Reflect.hasField(js.Browser.window,"on" + "devicemotion")) js.Browser.window.addEventListener("devicemotion",($_=flash.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	if(Reflect.hasField(js.Browser.window,"on" + "orientationchange")) js.Browser.window.addEventListener("orientationchange",($_=flash.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	var _g = 0, _g1 = flash.Lib.HTML_WINDOW_EVENT_TYPES;
	while(_g < _g1.length) {
		var type = _g1[_g];
		++_g;
		js.Browser.window.addEventListener(type,($_=flash.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),false);
	}
	if(tgt.style.backgroundColor != null && tgt.style.backgroundColor != "") flash.Lib.__getStage().set_backgroundColor(flash.Lib.__parseColor(tgt.style.backgroundColor,function(res,pos,cur) {
		return pos == 0?res | cur << 16:pos == 1?res | cur << 8:pos == 2?res | cur:(function($this) {
			var $r;
			throw "pos should be 0-2";
			return $r;
		}(this));
	})); else flash.Lib.__getStage().set_backgroundColor(16777215);
	flash.Lib.get_current().get_graphics().beginFill(flash.Lib.__getStage().get_backgroundColor());
	flash.Lib.get_current().get_graphics().drawRect(0,0,width,height);
	flash.Lib.__setSurfaceId(flash.Lib.get_current().get_graphics().__surface,"Root MovieClip");
	flash.Lib.__getStage().__updateNextWake();
	return flash.Lib.mMe;
}
flash.Lib.setUserScalable = function(isScalable) {
	if(isScalable == null) isScalable = true;
	var meta = js.Browser.document.createElement("meta");
	meta.name = "viewport";
	meta.content = "user-scalable=" + (isScalable?"yes":"no");
}
flash.Lib.trace = function(arg) {
	if(window.console != null) window.console.log(arg);
}
flash.Lib.__appendSurface = function(surface,before,after) {
	if(flash.Lib.mMe.__scr != null) {
		surface.style.setProperty("position","absolute","");
		surface.style.setProperty("left","0px","");
		surface.style.setProperty("top","0px","");
		surface.style.setProperty("transform-origin","0 0","");
		surface.style.setProperty("-moz-transform-origin","0 0","");
		surface.style.setProperty("-webkit-transform-origin","0 0","");
		surface.style.setProperty("-o-transform-origin","0 0","");
		surface.style.setProperty("-ms-transform-origin","0 0","");
		try {
			if(surface.localName == "canvas") surface.onmouseover = surface.onselectstart = function() {
				return false;
			};
		} catch( e ) {
		}
		if(before != null) before.parentNode.insertBefore(surface,before); else if(after != null && after.nextSibling != null) after.parentNode.insertBefore(surface,after.nextSibling); else flash.Lib.mMe.__scr.appendChild(surface);
	}
}
flash.Lib.__appendText = function(surface,container,text,wrap,isHtml) {
	var _g1 = 0, _g = surface.childNodes.length;
	while(_g1 < _g) {
		var i = _g1++;
		surface.removeChild(surface.childNodes[i]);
	}
	if(isHtml) container.innerHTML = text; else container.appendChild(js.Browser.document.createTextNode(text));
	container.style.setProperty("position","relative","");
	container.style.setProperty("cursor","default","");
	if(!wrap) container.style.setProperty("white-space","nowrap","");
	surface.appendChild(container);
}
flash.Lib.__bootstrap = function() {
	if(flash.Lib.mMe == null) {
		var target = js.Browser.document.getElementById("haxe:openfl");
		if(target == null) target = js.Browser.document.createElement("div");
		var agent = navigator.userAgent;
		if(agent.indexOf("BlackBerry") > -1 && target.style.height == "100%") target.style.height = screen.height + "px";
		if(agent.indexOf("Android") > -1) {
			var version = Std.parseFloat(HxOverrides.substr(agent,agent.indexOf("Android") + 8,3));
			if(version <= 2.3) flash.Lib.mForce2DTransform = true;
		}
		flash.Lib.Run(target,flash.Lib.__getWidth(),flash.Lib.__getHeight());
	}
}
flash.Lib.__copyStyle = function(src,tgt) {
	tgt.id = src.id;
	var _g = 0, _g1 = ["left","top","transform","transform-origin","-moz-transform","-moz-transform-origin","-webkit-transform","-webkit-transform-origin","-o-transform","-o-transform-origin","opacity","display"];
	while(_g < _g1.length) {
		var prop = _g1[_g];
		++_g;
		tgt.style.setProperty(prop,src.style.getPropertyValue(prop),"");
	}
}
flash.Lib.__createSurfaceAnimationCSS = function(surface,data,template,templateFunc,fps,discrete,infinite) {
	if(infinite == null) infinite = false;
	if(discrete == null) discrete = false;
	if(fps == null) fps = 25;
	if(surface.id == null || surface.id == "") {
		flash.Lib.trace("Failed to create a CSS Style tag for a surface without an id attribute");
		return null;
	}
	var style = null;
	if(surface.getAttribute("data-openfl-anim") != null) style = js.Browser.document.getElementById(surface.getAttribute("data-openfl-anim")); else {
		style = flash.Lib.mMe.__scr.appendChild(js.Browser.document.createElement("style"));
		style.sheet.id = "__openfl_anim_" + surface.id + "__";
		surface.setAttribute("data-openfl-anim",style.sheet.id);
	}
	var keyframeStylesheetRule = "";
	var _g1 = 0, _g = data.length;
	while(_g1 < _g) {
		var i = _g1++;
		var perc = i / (data.length - 1) * 100;
		var frame = data[i];
		keyframeStylesheetRule += perc + "% { " + template.execute(templateFunc(frame)) + " } ";
	}
	var animationDiscreteRule = discrete?"steps(::steps::, end)":"";
	var animationInfiniteRule = infinite?"infinite":"";
	var animationTpl = "";
	var _g = 0, _g1 = ["animation","-moz-animation","-webkit-animation","-o-animation","-ms-animation"];
	while(_g < _g1.length) {
		var prefix = _g1[_g];
		++_g;
		animationTpl += prefix + ": ::id:: ::duration::s " + animationDiscreteRule + " " + animationInfiniteRule + "; ";
	}
	var animationStylesheetRule = new haxe.Template(animationTpl).execute({ id : surface.id, duration : data.length / fps, steps : 1});
	var rules = style.sheet.rules != null?style.sheet.rules:style.sheet.cssRules;
	var _g = 0, _g1 = ["","-moz-","-webkit-","-o-","-ms-"];
	while(_g < _g1.length) {
		var variant = _g1[_g];
		++_g;
		try {
			style.sheet.insertRule("@" + variant + "keyframes " + surface.id + " {" + keyframeStylesheetRule + "}",rules.length);
		} catch( e ) {
		}
	}
	style.sheet.insertRule("#" + surface.id + " { " + animationStylesheetRule + " } ",rules.length);
	return style;
}
flash.Lib.__designMode = function(mode) {
	js.Browser.document.designMode = mode?"on":"off";
}
flash.Lib.__disableFullScreen = function() {
}
flash.Lib.__disableRightClick = function() {
	if(flash.Lib.mMe != null) try {
		flash.Lib.mMe.__scr.oncontextmenu = function() {
			return false;
		};
	} catch( e ) {
		flash.Lib.trace("Disable right click not supported in this browser.");
	}
}
flash.Lib.__drawClippedImage = function(surface,tgtCtx,clipRect) {
	if(clipRect != null) {
		if(clipRect.x < 0) {
			clipRect.width += clipRect.x;
			clipRect.x = 0;
		}
		if(clipRect.y < 0) {
			clipRect.height += clipRect.y;
			clipRect.y = 0;
		}
		if(clipRect.width > surface.width - clipRect.x) clipRect.width = surface.width - clipRect.x;
		if(clipRect.height > surface.height - clipRect.y) clipRect.height = surface.height - clipRect.y;
		tgtCtx.drawImage(surface,clipRect.x,clipRect.y,clipRect.width,clipRect.height,clipRect.x,clipRect.y,clipRect.width,clipRect.height);
	} else tgtCtx.drawImage(surface,0,0);
}
flash.Lib.__drawSurfaceRect = function(surface,tgt,x,y,rect) {
	var tgtCtx = tgt.getContext("2d");
	tgt.width = rect.width;
	tgt.height = rect.height;
	tgtCtx.drawImage(surface,rect.x,rect.y,rect.width,rect.height,0,0,rect.width,rect.height);
	tgt.style.left = x + "px";
	tgt.style.top = y + "px";
}
flash.Lib.__drawToSurface = function(surface,tgt,matrix,alpha,clipRect,smoothing) {
	if(smoothing == null) smoothing = true;
	if(alpha == null) alpha = 1.0;
	var srcCtx = surface.getContext("2d");
	var tgtCtx = tgt.getContext("2d");
	tgtCtx.globalAlpha = alpha;
	flash.Lib.__setImageSmoothing(tgtCtx,smoothing);
	if(surface.width > 0 && surface.height > 0) {
		if(matrix != null) {
			tgtCtx.save();
			if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1) tgtCtx.translate(matrix.tx,matrix.ty); else tgtCtx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);
			flash.Lib.__drawClippedImage(surface,tgtCtx,clipRect);
			tgtCtx.restore();
		} else flash.Lib.__drawClippedImage(surface,tgtCtx,clipRect);
	}
}
flash.Lib.__enableFullScreen = function() {
	if(flash.Lib.mMe != null) {
		var origWidth = flash.Lib.mMe.__scr.style.getPropertyValue("width");
		var origHeight = flash.Lib.mMe.__scr.style.getPropertyValue("height");
		flash.Lib.mMe.__scr.style.setProperty("width","100%","");
		flash.Lib.mMe.__scr.style.setProperty("height","100%","");
		flash.Lib.__disableFullScreen = function() {
			flash.Lib.mMe.__scr.style.setProperty("width",origWidth,"");
			flash.Lib.mMe.__scr.style.setProperty("height",origHeight,"");
		};
	}
}
flash.Lib.__enableRightClick = function() {
	if(flash.Lib.mMe != null) try {
		flash.Lib.mMe.__scr.oncontextmenu = null;
	} catch( e ) {
		flash.Lib.trace("Enable right click not supported in this browser.");
	}
}
flash.Lib.__fullScreenHeight = function() {
	return js.Browser.window.innerHeight;
}
flash.Lib.__fullScreenWidth = function() {
	return js.Browser.window.innerWidth;
}
flash.Lib.__getHeight = function() {
	var tgt = flash.Lib.mMe != null?flash.Lib.mMe.__scr:js.Browser.document.getElementById("haxe:openfl");
	return tgt != null && tgt.clientHeight > 0?tgt.clientHeight:500;
}
flash.Lib.__getStage = function() {
	if(flash.Lib.mStage == null) {
		var width = flash.Lib.__getWidth();
		var height = flash.Lib.__getHeight();
		flash.Lib.mStage = new flash.display.Stage(width,height);
	}
	return flash.Lib.mStage;
}
flash.Lib.__getWidth = function() {
	var tgt = flash.Lib.mMe != null?flash.Lib.mMe.__scr:js.Browser.document.getElementById("haxe:openfl");
	return tgt != null && tgt.clientWidth > 0?tgt.clientWidth:500;
}
flash.Lib.__isOnStage = function(surface) {
	var p = surface;
	while(p != null && p != flash.Lib.mMe.__scr) p = p.parentNode;
	return p == flash.Lib.mMe.__scr;
}
flash.Lib.__parseColor = function(str,cb) {
	var re = new EReg("rgb\\(([0-9]*), ?([0-9]*), ?([0-9]*)\\)","");
	var hex = new EReg("#([0-9a-zA-Z][0-9a-zA-Z])([0-9a-zA-Z][0-9a-zA-Z])([0-9a-zA-Z][0-9a-zA-Z])","");
	if(re.match(str)) {
		var col = 0;
		var _g = 1;
		while(_g < 4) {
			var pos = _g++;
			var v = Std.parseInt(re.matched(pos));
			col = cb(col,pos - 1,v);
		}
		return col;
	} else if(hex.match(str)) {
		var col = 0;
		var _g = 1;
		while(_g < 4) {
			var pos = _g++;
			var v = "0x" + hex.matched(pos) & 255;
			v = cb(col,pos - 1,v);
		}
		return col;
	} else throw "Cannot parse color '" + str + "'.";
}
flash.Lib.__removeSurface = function(surface) {
	if(flash.Lib.mMe.__scr != null) {
		var anim = surface.getAttribute("data-openfl-anim");
		if(anim != null) {
			var style = js.Browser.document.getElementById(anim);
			if(style != null) flash.Lib.mMe.__scr.removeChild(style);
		}
		if(surface.parentNode != null) surface.parentNode.removeChild(surface);
	}
	return surface;
}
flash.Lib.__setSurfaceBorder = function(surface,color,size) {
	surface.style.setProperty("border-color","#" + StringTools.hex(color),"");
	surface.style.setProperty("border-style","solid","");
	surface.style.setProperty("border-width",size + "px","");
	surface.style.setProperty("border-collapse","collapse","");
}
flash.Lib.__setSurfaceClipping = function(surface,rect) {
}
flash.Lib.__setSurfaceFont = function(surface,font,bold,size,color,align,lineHeight) {
	surface.style.setProperty("font-family",font,"");
	surface.style.setProperty("font-weight",Std.string(bold),"");
	surface.style.setProperty("color","#" + StringTools.hex(color),"");
	surface.style.setProperty("font-size",size + "px","");
	surface.style.setProperty("text-align",align,"");
	surface.style.setProperty("line-height",lineHeight + "px","");
}
flash.Lib.__setSurfaceOpacity = function(surface,alpha) {
	surface.style.setProperty("opacity",Std.string(alpha),"");
}
flash.Lib.__setSurfacePadding = function(surface,padding,margin,display) {
	surface.style.setProperty("padding",padding + "px","");
	surface.style.setProperty("margin",margin + "px","");
	surface.style.setProperty("top",padding + 2 + "px","");
	surface.style.setProperty("right",padding + 1 + "px","");
	surface.style.setProperty("left",padding + 1 + "px","");
	surface.style.setProperty("bottom",padding + 1 + "px","");
	surface.style.setProperty("display",display?"inline":"block","");
}
flash.Lib.__setSurfaceTransform = function(surface,matrix) {
	if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1 && surface.getAttribute("data-openfl-anim") == null) {
		surface.style.left = matrix.tx + "px";
		surface.style.top = matrix.ty + "px";
		surface.style.setProperty("transform","","");
		surface.style.setProperty("-moz-transform","","");
		surface.style.setProperty("-webkit-transform","","");
		surface.style.setProperty("-o-transform","","");
		surface.style.setProperty("-ms-transform","","");
	} else {
		surface.style.left = "0px";
		surface.style.top = "0px";
		surface.style.setProperty("transform","matrix(" + matrix.a + ", " + matrix.b + ", " + matrix.c + ", " + matrix.d + ", " + matrix.tx + ", " + matrix.ty + ")","");
		surface.style.setProperty("-moz-transform","matrix(" + matrix.a + ", " + matrix.b + ", " + matrix.c + ", " + matrix.d + ", " + matrix.tx + "px, " + matrix.ty + "px)","");
		if(!flash.Lib.mForce2DTransform) surface.style.setProperty("-webkit-transform","matrix3d(" + matrix.a + ", " + matrix.b + ", " + "0, 0, " + matrix.c + ", " + matrix.d + ", " + "0, 0, 0, 0, 1, 0, " + matrix.tx + ", " + matrix.ty + ", " + "0, 1" + ")",""); else surface.style.setProperty("-webkit-transform","matrix(" + matrix.a + ", " + matrix.b + ", " + matrix.c + ", " + matrix.d + ", " + matrix.tx + ", " + matrix.ty + ")","");
		surface.style.setProperty("-o-transform","matrix(" + matrix.a + ", " + matrix.b + ", " + matrix.c + ", " + matrix.d + ", " + matrix.tx + ", " + matrix.ty + ")","");
		surface.style.setProperty("-ms-transform","matrix(" + matrix.a + ", " + matrix.b + ", " + matrix.c + ", " + matrix.d + ", " + matrix.tx + ", " + matrix.ty + ")","");
	}
}
flash.Lib.__setSurfaceZIndexAfter = function(surface1,surface2) {
	if(surface1 != null && surface2 != null) {
		if(surface1.parentNode != surface2.parentNode && surface2.parentNode != null) surface2.parentNode.appendChild(surface1);
		if(surface2.parentNode != null) {
			var nextSibling = surface2.nextSibling;
			if(surface1.previousSibling != surface2) {
				var swap = flash.Lib.__removeSurface(surface1);
				if(nextSibling == null) surface2.parentNode.appendChild(swap); else surface2.parentNode.insertBefore(swap,nextSibling);
			}
		}
	}
}
flash.Lib.__swapSurface = function(surface1,surface2) {
	var parent1 = surface1.parentNode;
	var parent2 = surface2.parentNode;
	if(parent1 != null && parent2 != null) {
		if(parent1 == parent2) {
			var next1 = surface1.nextSibling;
			var next2 = surface2.nextSibling;
			if(next1 == surface2) parent1.insertBefore(surface2,surface1); else if(next2 == surface1) parent1.insertBefore(surface1,surface2); else {
				parent1.replaceChild(surface2,surface1);
				if(next2 != null) parent1.insertBefore(surface1,next2); else parent1.appendChild(surface1);
			}
		} else {
			var next2 = surface2.nextSibling;
			parent1.replaceChild(surface2,surface1);
			if(next2 != null) parent2.insertBefore(surface1,next2); else parent2.appendChild(surface1);
		}
	}
}
flash.Lib.__setContentEditable = function(surface,contentEditable) {
	if(contentEditable == null) contentEditable = true;
	surface.setAttribute("contentEditable",contentEditable?"true":"false");
}
flash.Lib.__setCursor = function(type) {
	if(flash.Lib.mMe != null) flash.Lib.mMe.__scr.style.cursor = (function($this) {
		var $r;
		switch( (type)[1] ) {
		case 0:
			$r = "pointer";
			break;
		case 1:
			$r = "text";
			break;
		default:
			$r = "default";
		}
		return $r;
	}(this));
}
flash.Lib.__setImageSmoothing = function(context,enabled) {
	var _g = 0, _g1 = ["imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled"];
	while(_g < _g1.length) {
		var variant = _g1[_g];
		++_g;
		context[variant] = enabled;
	}
}
flash.Lib.__setSurfaceAlign = function(surface,align) {
	surface.style.setProperty("text-align",align,"");
}
flash.Lib.__setSurfaceId = function(surface,name) {
	var regex = new EReg("[^a-zA-Z0-9\\-]","g");
	surface.id = regex.replace(name,"_");
}
flash.Lib.__setSurfaceRotation = function(surface,rotate) {
	surface.style.setProperty("transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-moz-transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-webkit-transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-o-transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-ms-transform","rotate(" + rotate + "deg)","");
}
flash.Lib.__setSurfaceScale = function(surface,scale) {
	surface.style.setProperty("transform","scale(" + scale + ")","");
	surface.style.setProperty("-moz-transform","scale(" + scale + ")","");
	surface.style.setProperty("-webkit-transform","scale(" + scale + ")","");
	surface.style.setProperty("-o-transform","scale(" + scale + ")","");
	surface.style.setProperty("-ms-transform","scale(" + scale + ")","");
}
flash.Lib.__setSurfaceSpritesheetAnimation = function(surface,spec,fps) {
	if(spec.length == 0) return surface;
	var div = js.Browser.document.createElement("div");
	div.style.backgroundImage = "url(" + surface.toDataURL("image/png") + ")";
	div.id = surface.id;
	var keyframeTpl = new haxe.Template("background-position: ::left::px ::top::px; width: ::width::px; height: ::height::px; ");
	var templateFunc = function(frame) {
		return { left : -frame.x, top : -frame.y, width : frame.width, height : frame.height};
	};
	flash.Lib.__createSurfaceAnimationCSS(div,spec,keyframeTpl,templateFunc,fps,true,true);
	if(flash.Lib.__isOnStage(surface)) {
		flash.Lib.__appendSurface(div);
		flash.Lib.__copyStyle(surface,div);
		flash.Lib.__swapSurface(surface,div);
		flash.Lib.__removeSurface(surface);
	} else flash.Lib.__copyStyle(surface,div);
	return div;
}
flash.Lib.__setSurfaceVisible = function(surface,visible) {
	if(visible) surface.style.setProperty("display","block",""); else surface.style.setProperty("display","none","");
}
flash.Lib.__setTextDimensions = function(surface,width,height,align) {
	surface.style.setProperty("width",width + "px","");
	surface.style.setProperty("height",height + "px","");
	surface.style.setProperty("overflow","hidden","");
	surface.style.setProperty("text-align",align,"");
}
flash.Lib.__surfaceHitTest = function(surface,x,y) {
	var _g1 = 0, _g = surface.childNodes.length;
	while(_g1 < _g) {
		var i = _g1++;
		var node = surface.childNodes[i];
		if(x >= node.offsetLeft && x <= node.offsetLeft + node.offsetWidth && y >= node.offsetTop && y <= node.offsetTop + node.offsetHeight) return true;
	}
	return false;
}
flash.Lib.get_current = function() {
	if(flash.Lib.mMainClassRoot == null) {
		flash.Lib.mMainClassRoot = new flash.display.MovieClip();
		flash.Lib.mCurrent = flash.Lib.mMainClassRoot;
		flash.Lib.__getStage().addChild(flash.Lib.mCurrent);
	}
	return flash.Lib.mMainClassRoot;
}
flash.Lib.prototype = {
	__class__: flash.Lib
}
flash._Lib = {}
flash._Lib.CursorType = $hxClasses["flash._Lib.CursorType"] = { __ename__ : true, __constructs__ : ["Pointer","Text","Default"] }
flash._Lib.CursorType.Pointer = ["Pointer",0];
flash._Lib.CursorType.Pointer.toString = $estr;
flash._Lib.CursorType.Pointer.__enum__ = flash._Lib.CursorType;
flash._Lib.CursorType.Text = ["Text",1];
flash._Lib.CursorType.Text.toString = $estr;
flash._Lib.CursorType.Text.__enum__ = flash._Lib.CursorType;
flash._Lib.CursorType.Default = ["Default",2];
flash._Lib.CursorType.Default.toString = $estr;
flash._Lib.CursorType.Default.__enum__ = flash._Lib.CursorType;
flash.accessibility = {}
flash.accessibility.AccessibilityProperties = function() {
	this.description = "";
	this.forceSimple = false;
	this.name = "";
	this.noAutoLabeling = false;
	this.shortcut = "";
	this.silent = false;
};
$hxClasses["flash.accessibility.AccessibilityProperties"] = flash.accessibility.AccessibilityProperties;
flash.accessibility.AccessibilityProperties.__name__ = ["flash","accessibility","AccessibilityProperties"];
flash.accessibility.AccessibilityProperties.prototype = {
	__class__: flash.accessibility.AccessibilityProperties
}
flash.display.Bitmap = function(inBitmapData,inPixelSnapping,inSmoothing) {
	if(inSmoothing == null) inSmoothing = false;
	flash.display.DisplayObject.call(this);
	this.pixelSnapping = inPixelSnapping;
	this.smoothing = inSmoothing;
	if(inBitmapData != null) {
		this.set_bitmapData(inBitmapData);
		if(this.bitmapData.__referenceCount == 1) this.__graphics = new flash.display.Graphics(this.bitmapData.___textureBuffer);
	}
	if(this.pixelSnapping == null) this.pixelSnapping = flash.display.PixelSnapping.AUTO;
	if(this.__graphics == null) this.__graphics = new flash.display.Graphics();
	if(this.bitmapData != null) this.__render();
};
$hxClasses["flash.display.Bitmap"] = flash.display.Bitmap;
flash.display.Bitmap.__name__ = ["flash","display","Bitmap"];
flash.display.Bitmap.__super__ = flash.display.DisplayObject;
flash.display.Bitmap.prototype = $extend(flash.display.DisplayObject.prototype,{
	set_bitmapData: function(inBitmapData) {
		if(inBitmapData != this.bitmapData) {
			if(this.bitmapData != null) {
				this.bitmapData.__referenceCount--;
				if(this.__graphics.__surface == this.bitmapData.___textureBuffer) flash.Lib.__setSurfaceOpacity(this.bitmapData.___textureBuffer,0);
			}
			if(inBitmapData != null) inBitmapData.__referenceCount++;
		}
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		this.bitmapData = inBitmapData;
		return inBitmapData;
	}
	,__render: function(inMask,clipRect) {
		if(!this.__combinedVisible) return;
		if(this.bitmapData == null) return;
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		if(this.bitmapData.___textureBuffer != this.__graphics.__surface) {
			var imageDataLease = this.bitmapData.__lease;
			if(imageDataLease != null && (this.__currentLease == null || imageDataLease.seed != this.__currentLease.seed || imageDataLease.time != this.__currentLease.time)) {
				var srcCanvas = this.bitmapData.___textureBuffer;
				this.__graphics.__surface.width = srcCanvas.width;
				this.__graphics.__surface.height = srcCanvas.height;
				this.__graphics.clear();
				flash.Lib.__drawToSurface(srcCanvas,this.__graphics.__surface);
				this.__currentLease = imageDataLease.clone();
				this.___renderFlags |= 64;
				if(this.parent != null) this.parent.___renderFlags |= 64;
				this.__applyFilters(this.__graphics.__surface);
				this.___renderFlags |= 32;
			}
		}
		if(inMask != null) {
			this.__applyFilters(this.__graphics.__surface);
			var m = this.getBitmapSurfaceTransform(this.__graphics);
			flash.Lib.__drawToSurface(this.__graphics.__surface,inMask,m,(this.parent != null?this.parent.__combinedAlpha:1) * this.alpha,clipRect,this.smoothing);
		} else {
			if((this.___renderFlags & 32) != 0) {
				var m = this.getBitmapSurfaceTransform(this.__graphics);
				flash.Lib.__setSurfaceTransform(this.__graphics.__surface,m);
				this.___renderFlags &= -33;
			}
			if(!this.__init) {
				flash.Lib.__setSurfaceOpacity(this.__graphics.__surface,0);
				this.__init = true;
			} else flash.Lib.__setSurfaceOpacity(this.__graphics.__surface,(this.parent != null?this.parent.__combinedAlpha:1) * this.alpha);
		}
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.get_visible()) return null; else if(this.bitmapData != null) {
			var local = this.globalToLocal(point);
			if(local.x < 0 || local.y < 0 || local.x > this.get_width() / this.get_scaleX() || local.y > this.get_height() / this.get_scaleY()) return null; else return this;
		} else return flash.display.DisplayObject.prototype.__getObjectUnderPoint.call(this,point);
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,validateBounds: function() {
		if(this.get__boundsInvalid()) {
			flash.display.DisplayObject.prototype.validateBounds.call(this);
			if(this.bitmapData != null) {
				var r = new flash.geom.Rectangle(0,0,this.bitmapData.get_width(),this.bitmapData.get_height());
				if(r.width != 0 || r.height != 0) {
					if(this.__boundsRect.width == 0 && this.__boundsRect.height == 0) this.__boundsRect = r.clone(); else this.__boundsRect.extendBounds(r);
				}
			}
			if(this.scale9Grid != null) {
				this.__boundsRect.width *= this.__scaleX;
				this.__boundsRect.height *= this.__scaleY;
				this.__width = this.__boundsRect.width;
				this.__height = this.__boundsRect.height;
			} else {
				this.__width = this.__boundsRect.width * this.__scaleX;
				this.__height = this.__boundsRect.height * this.__scaleY;
			}
		}
	}
	,toString: function() {
		return "[Bitmap name=" + this.name + " id=" + this.___id + "]";
	}
	,getBitmapSurfaceTransform: function(gfx) {
		var extent = gfx.__extentWithFilters;
		var fm = this.transform.__getFullMatrix(null);
		fm.__translateTransformed(extent.get_topLeft());
		return fm;
	}
	,__class__: flash.display.Bitmap
	,__properties__: $extend(flash.display.DisplayObject.prototype.__properties__,{set_bitmapData:"set_bitmapData"})
});
flash.display.BitmapData = function(width,height,transparent,inFillColor) {
	if(inFillColor == null) inFillColor = -1;
	if(transparent == null) transparent = true;
	this.__locked = false;
	this.__referenceCount = 0;
	this.__leaseNum = 0;
	this.__lease = new flash.display.ImageDataLease();
	this.__lease.set(this.__leaseNum++,new Date().getTime());
	this.___textureBuffer = js.Browser.document.createElement("canvas");
	this.___textureBuffer.width = width;
	this.___textureBuffer.height = height;
	this.___id = flash.utils.Uuid.uuid();
	flash.Lib.__setSurfaceId(this.___textureBuffer,this.___id);
	this.__transparent = transparent;
	this.rect = new flash.geom.Rectangle(0,0,width,height);
	if(this.__transparent) {
		this.__transparentFiller = js.Browser.document.createElement("canvas");
		this.__transparentFiller.width = width;
		this.__transparentFiller.height = height;
		var ctx = this.__transparentFiller.getContext("2d");
		ctx.fillStyle = "rgba(0,0,0,0);";
		ctx.fill();
	}
	if(inFillColor != null && width > 0 && height > 0) {
		if(!this.__transparent) inFillColor |= -16777216;
		this.__initColor = inFillColor;
		this.__fillRect(this.rect,inFillColor);
	}
};
$hxClasses["flash.display.BitmapData"] = flash.display.BitmapData;
flash.display.BitmapData.__name__ = ["flash","display","BitmapData"];
flash.display.BitmapData.__interfaces__ = [flash.display.IBitmapDrawable];
flash.display.BitmapData.getRGBAPixels = function(bitmapData) {
	var p = bitmapData.getPixels(new flash.geom.Rectangle(0,0,bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.width:0,bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.height:0));
	var num = (bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.width:0) * (bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.height:0);
	p.position = 0;
	var _g = 0;
	while(_g < num) {
		var i = _g++;
		var pos = p.position;
		var alpha = p.readByte();
		var red = p.readByte();
		var green = p.readByte();
		var blue = p.readByte();
		p.position = pos;
		p.writeByte(red);
		p.writeByte(green);
		p.writeByte(blue);
		p.writeByte(alpha);
	}
	return p;
}
flash.display.BitmapData.loadFromBase64 = function(base64,type,onload) {
	var bitmapData = new flash.display.BitmapData(0,0);
	bitmapData.__loadFromBase64(base64,type,onload);
	return bitmapData;
}
flash.display.BitmapData.loadFromBytes = function(bytes,inRawAlpha,onload) {
	var bitmapData = new flash.display.BitmapData(0,0);
	bitmapData.__loadFromBytes(bytes,inRawAlpha,onload);
	return bitmapData;
}
flash.display.BitmapData.__base64Encode = function(bytes) {
	var blob = "";
	var codex = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	bytes.position = 0;
	while(bytes.position < bytes.length) {
		var by1 = 0, by2 = 0, by3 = 0;
		by1 = bytes.readByte();
		if(bytes.position < bytes.length) by2 = bytes.readByte();
		if(bytes.position < bytes.length) by3 = bytes.readByte();
		var by4 = 0, by5 = 0, by6 = 0, by7 = 0;
		by4 = by1 >> 2;
		by5 = (by1 & 3) << 4 | by2 >> 4;
		by6 = (by2 & 15) << 2 | by3 >> 6;
		by7 = by3 & 63;
		blob += codex.charAt(by4);
		blob += codex.charAt(by5);
		if(bytes.position < bytes.length) blob += codex.charAt(by6); else blob += "=";
		if(bytes.position < bytes.length) blob += codex.charAt(by7); else blob += "=";
	}
	return blob;
}
flash.display.BitmapData.__createFromHandle = function(inHandle) {
	var result = new flash.display.BitmapData(0,0);
	result.___textureBuffer = inHandle;
	return result;
}
flash.display.BitmapData.__isJPG = function(bytes) {
	bytes.position = 0;
	return bytes.readByte() == 255 && bytes.readByte() == 216;
}
flash.display.BitmapData.__isPNG = function(bytes) {
	bytes.position = 0;
	return bytes.readByte() == 137 && bytes.readByte() == 80 && bytes.readByte() == 78 && bytes.readByte() == 71 && bytes.readByte() == 13 && bytes.readByte() == 10 && bytes.readByte() == 26 && bytes.readByte() == 10;
}
flash.display.BitmapData.prototype = {
	get_width: function() {
		if(this.___textureBuffer != null) return this.___textureBuffer.width; else return 0;
	}
	,get_transparent: function() {
		return this.__transparent;
	}
	,get_height: function() {
		if(this.___textureBuffer != null) return this.___textureBuffer.height; else return 0;
	}
	,__onLoad: function(data,e) {
		var canvas = data.texture;
		var width = data.image.width;
		var height = data.image.height;
		canvas.width = width;
		canvas.height = height;
		var ctx = canvas.getContext("2d");
		ctx.drawImage(data.image,0,0,width,height);
		data.bitmapData.width = width;
		data.bitmapData.height = height;
		data.bitmapData.rect = new flash.geom.Rectangle(0,0,width,height);
		data.bitmapData.__buildLease();
		if(data.inLoader != null) {
			var e1 = new flash.events.Event(flash.events.Event.COMPLETE);
			e1.target = data.inLoader;
			data.inLoader.dispatchEvent(e1);
		}
	}
	,__loadFromFile: function(inFilename,inLoader) {
		var _g = this;
		var image = js.Browser.document.createElement("img");
		if(inLoader != null) {
			var data = { image : image, texture : this.___textureBuffer, inLoader : inLoader, bitmapData : this};
			image.addEventListener("load",(function(f,a1) {
				return function(e) {
					return f(a1,e);
				};
			})($bind(this,this.__onLoad),data),false);
			image.addEventListener("error",function(e) {
				if(!image.complete) _g.__onLoad(data,e);
			},false);
		}
		image.src = inFilename;
		if(image.complete) {
		}
	}
	,__incrNumRefBitmaps: function() {
		this.__assignedBitmaps++;
	}
	,__getNumRefBitmaps: function() {
		return this.__assignedBitmaps;
	}
	,__loadFromBytes: function(bytes,inRawAlpha,onload) {
		var _g = this;
		var type = "";
		if(flash.display.BitmapData.__isPNG(bytes)) type = "image/png"; else if(flash.display.BitmapData.__isJPG(bytes)) type = "image/jpeg"; else throw new flash.errors.IOError("BitmapData tried to read a PNG/JPG ByteArray, but found an invalid header.");
		if(inRawAlpha != null) this.__loadFromBase64(flash.display.BitmapData.__base64Encode(bytes),type,function(_) {
			var ctx = _g.___textureBuffer.getContext("2d");
			var pixels = ctx.getImageData(0,0,_g.___textureBuffer.width,_g.___textureBuffer.height);
			var _g2 = 0, _g1 = inRawAlpha.length;
			while(_g2 < _g1) {
				var i = _g2++;
				pixels.data[i * 4 + 3] = inRawAlpha.readUnsignedByte();
			}
			ctx.putImageData(pixels,0,0);
			if(onload != null) onload(_g);
		}); else this.__loadFromBase64(flash.display.BitmapData.__base64Encode(bytes),type,onload);
	}
	,__loadFromBase64: function(base64,type,onload) {
		var _g = this;
		var img = js.Browser.document.createElement("img");
		var canvas = this.___textureBuffer;
		var drawImage = function(_) {
			canvas.width = img.width;
			canvas.height = img.height;
			var ctx = canvas.getContext("2d");
			ctx.drawImage(img,0,0);
			_g.rect = new flash.geom.Rectangle(0,0,canvas.width,canvas.height);
			if(onload != null) onload(_g);
		};
		img.addEventListener("load",drawImage,false);
		img.src = "data:" + type + ";base64," + base64;
	}
	,__getLease: function() {
		return this.__lease;
	}
	,__fillRect: function(rect,color) {
		this.__lease.set(this.__leaseNum++,new Date().getTime());
		var ctx = this.___textureBuffer.getContext("2d");
		var r = (color & 16711680) >>> 16;
		var g = (color & 65280) >>> 8;
		var b = color & 255;
		var a = this.__transparent?color >>> 24:255;
		if(!this.__locked) {
			var style = "rgba(" + r + ", " + g + ", " + b + ", " + a / 255 + ")";
			ctx.fillStyle = style;
			ctx.fillRect(rect.x,rect.y,rect.width,rect.height);
		} else {
			var s = 4 * (Math.round(rect.x) + Math.round(rect.y) * this.__imageData.width);
			var offsetY;
			var offsetX;
			var _g1 = 0, _g = Math.round(rect.height);
			while(_g1 < _g) {
				var i = _g1++;
				offsetY = i * this.__imageData.width;
				var _g3 = 0, _g2 = Math.round(rect.width);
				while(_g3 < _g2) {
					var j = _g3++;
					offsetX = 4 * (j + offsetY);
					this.__imageData.data[s + offsetX] = r;
					this.__imageData.data[s + offsetX + 1] = g;
					this.__imageData.data[s + offsetX + 2] = b;
					this.__imageData.data[s + offsetX + 3] = a;
				}
			}
			this.__imageDataChanged = true;
		}
	}
	,__decrNumRefBitmaps: function() {
		this.__assignedBitmaps--;
	}
	,__clearCanvas: function() {
		var ctx = this.___textureBuffer.getContext("2d");
		ctx.clearRect(0,0,this.___textureBuffer.width,this.___textureBuffer.height);
	}
	,__buildLease: function() {
		this.__lease.set(this.__leaseNum++,new Date().getTime());
	}
	,unlock: function(changeRect) {
		this.__locked = false;
		var ctx = this.___textureBuffer.getContext("2d");
		if(this.__imageDataChanged) {
			if(changeRect != null) ctx.putImageData(this.__imageData,0,0,changeRect.x,changeRect.y,changeRect.width,changeRect.height); else ctx.putImageData(this.__imageData,0,0);
		}
		var _g = 0, _g1 = this.__copyPixelList;
		while(_g < _g1.length) {
			var copyCache = _g1[_g];
			++_g;
			if(this.__transparent && copyCache.transparentFiller != null) {
				var trpCtx = copyCache.transparentFiller.getContext("2d");
				var trpData = trpCtx.getImageData(copyCache.sourceX,copyCache.sourceY,copyCache.sourceWidth,copyCache.sourceHeight);
				ctx.putImageData(trpData,copyCache.destX,copyCache.destY);
			}
			ctx.drawImage(copyCache.handle,copyCache.sourceX,copyCache.sourceY,copyCache.sourceWidth,copyCache.sourceHeight,copyCache.destX,copyCache.destY,copyCache.sourceWidth,copyCache.sourceHeight);
		}
		this.__lease.set(this.__leaseNum++,new Date().getTime());
	}
	,threshold: function(sourceBitmapData,sourceRect,destPoint,operation,threshold,color,mask,copySource) {
		if(copySource == null) copySource = false;
		if(mask == null) mask = -1;
		if(color == null) color = 0;
		console.log("BitmapData.threshold not implemented");
		return 0;
	}
	,setPixels: function(rect,byteArray) {
		rect = this.clipRect(rect);
		if(rect == null) return;
		var len = Math.round(4 * rect.width * rect.height);
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.createImageData(rect.width,rect.height);
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				imageData.data[i] = byteArray.readByte();
			}
			ctx.putImageData(imageData,rect.x,rect.y);
		} else {
			var offset = Math.round(4 * this.__imageData.width * rect.y + rect.x * 4);
			var pos = offset;
			var boundR = Math.round(4 * (rect.x + rect.width));
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				if(pos % (this.__imageData.width * 4) > boundR - 1) pos += this.__imageData.width * 4 - boundR;
				this.__imageData.data[pos] = byteArray.readByte();
				pos++;
			}
			this.__imageDataChanged = true;
		}
	}
	,setPixel32: function(x,y,color) {
		if(x < 0 || y < 0 || x >= (this.___textureBuffer != null?this.___textureBuffer.width:0) || y >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) return;
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.createImageData(1,1);
			imageData.data[0] = (color & 16711680) >>> 16;
			imageData.data[1] = (color & 65280) >>> 8;
			imageData.data[2] = color & 255;
			if(this.__transparent) imageData.data[3] = (color & -16777216) >>> 24; else imageData.data[3] = 255;
			ctx.putImageData(imageData,x,y);
		} else {
			var offset = 4 * y * this.__imageData.width + x * 4;
			this.__imageData.data[offset] = (color & 16711680) >>> 16;
			this.__imageData.data[offset + 1] = (color & 65280) >>> 8;
			this.__imageData.data[offset + 2] = color & 255;
			if(this.__transparent) this.__imageData.data[offset + 3] = (color & -16777216) >>> 24; else this.__imageData.data[offset + 3] = 255;
			this.__imageDataChanged = true;
		}
	}
	,setPixel: function(x,y,color) {
		if(x < 0 || y < 0 || x >= (this.___textureBuffer != null?this.___textureBuffer.width:0) || y >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) return;
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.createImageData(1,1);
			imageData.data[0] = (color & 16711680) >>> 16;
			imageData.data[1] = (color & 65280) >>> 8;
			imageData.data[2] = color & 255;
			if(this.__transparent) imageData.data[3] = 255;
			ctx.putImageData(imageData,x,y);
		} else {
			var offset = 4 * y * this.__imageData.width + x * 4;
			this.__imageData.data[offset] = (color & 16711680) >>> 16;
			this.__imageData.data[offset + 1] = (color & 65280) >>> 8;
			this.__imageData.data[offset + 2] = color & 255;
			if(this.__transparent) this.__imageData.data[offset + 3] = 255;
			this.__imageDataChanged = true;
		}
	}
	,scroll: function(x,y) {
		throw "bitmapData.scroll is currently not supported for HTML5";
	}
	,noise: function(randomSeed,low,high,channelOptions,grayScale) {
		if(grayScale == null) grayScale = false;
		if(channelOptions == null) channelOptions = 7;
		if(high == null) high = 255;
		if(low == null) low = 0;
		var generator = new flash.display._BitmapData.MinstdGenerator(randomSeed);
		var ctx = this.___textureBuffer.getContext("2d");
		var imageData = null;
		if(this.__locked) imageData = this.__imageData; else imageData = ctx.createImageData(this.___textureBuffer.width,this.___textureBuffer.height);
		var _g1 = 0, _g = this.___textureBuffer.width * this.___textureBuffer.height;
		while(_g1 < _g) {
			var i = _g1++;
			if(grayScale) imageData.data[i * 4] = imageData.data[i * 4 + 1] = imageData.data[i * 4 + 2] = low + generator.nextValue() % (high - low + 1); else {
				imageData.data[i * 4] = (channelOptions & 1) == 0?0:low + generator.nextValue() % (high - low + 1);
				imageData.data[i * 4 + 1] = (channelOptions & 2) == 0?0:low + generator.nextValue() % (high - low + 1);
				imageData.data[i * 4 + 2] = (channelOptions & 4) == 0?0:low + generator.nextValue() % (high - low + 1);
			}
			imageData.data[i * 4 + 3] = (channelOptions & 8) == 0?255:low + generator.nextValue() % (high - low + 1);
		}
		if(this.__locked) this.__imageDataChanged = true; else ctx.putImageData(imageData,0,0);
	}
	,lock: function() {
		this.__locked = true;
		var ctx = this.___textureBuffer.getContext("2d");
		this.__imageData = ctx.getImageData(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
		this.__imageDataChanged = false;
		this.__copyPixelList = [];
	}
	,hitTest: function(firstPoint,firstAlphaThreshold,secondObject,secondBitmapDataPoint,secondAlphaThreshold) {
		if(secondAlphaThreshold == null) secondAlphaThreshold = 1;
		var type = Type.getClassName(Type.getClass(secondObject));
		firstAlphaThreshold = firstAlphaThreshold & -1;
		var me = this;
		var doHitTest = function(imageData) {
			if(secondObject.__proto__ == null || secondObject.__proto__.__class__ == null || secondObject.__proto__.__class__.__name__ == null) return false;
			var _g = secondObject.__proto__.__class__.__name__[2];
			switch(_g) {
			case "Rectangle":
				var rect = secondObject;
				rect.x -= firstPoint.x;
				rect.y -= firstPoint.y;
				rect = me.clipRect(me.rect);
				if(me.rect == null) return false;
				var boundingBox = new flash.geom.Rectangle(0,0,me.___textureBuffer != null?me.___textureBuffer.width:0,me.___textureBuffer != null?me.___textureBuffer.height:0);
				if(!rect.intersects(boundingBox)) return false;
				var diff = rect.intersection(boundingBox);
				var offset = 4 * (Math.round(diff.x) + Math.round(diff.y) * imageData.width) + 3;
				var pos = offset;
				var boundR = Math.round(4 * (diff.x + diff.width));
				while(pos < offset + Math.round(4 * (diff.width + imageData.width * diff.height))) {
					if(pos % (imageData.width * 4) > boundR - 1) pos += imageData.width * 4 - boundR;
					if(imageData.data[pos] - firstAlphaThreshold >= 0) return true;
					pos += 4;
				}
				return false;
			case "Point":
				var point = secondObject;
				var x = point.x - firstPoint.x;
				var y = point.y - firstPoint.y;
				if(x < 0 || y < 0 || x >= (me.___textureBuffer != null?me.___textureBuffer.width:0) || y >= (me.___textureBuffer != null?me.___textureBuffer.height:0)) return false;
				if(imageData.data[Math.round(4 * (y * (me.___textureBuffer != null?me.___textureBuffer.width:0) + x)) + 3] - firstAlphaThreshold > 0) return true;
				return false;
			case "Bitmap":
				throw "bitmapData.hitTest with a second object of type Bitmap is currently not supported for HTML5";
				return false;
			case "BitmapData":
				throw "bitmapData.hitTest with a second object of type BitmapData is currently not supported for HTML5";
				return false;
			default:
				throw "BitmapData::hitTest secondObject argument must be either a Rectangle, a Point, a Bitmap or a BitmapData object.";
				return false;
			}
		};
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.getImageData(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
			return doHitTest(imageData);
		} else return doHitTest(this.__imageData);
	}
	,handle: function() {
		return this.___textureBuffer;
	}
	,getPixels: function(rect) {
		var len = Math.round(4 * rect.width * rect.height);
		var byteArray = new flash.utils.ByteArray();
		if(byteArray.allocated < len) byteArray.___resizeBuffer(byteArray.allocated = Math.max(len,byteArray.allocated * 2) | 0); else if(byteArray.allocated > len) byteArray.___resizeBuffer(byteArray.allocated = len);
		byteArray.length = len;
		len;
		rect = this.clipRect(rect);
		if(rect == null) return byteArray;
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			var imagedata = ctx.getImageData(rect.x,rect.y,rect.width,rect.height);
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				byteArray.writeByte(imagedata.data[i]);
			}
		} else {
			var offset = Math.round(4 * this.__imageData.width * rect.y + rect.x * 4);
			var pos = offset;
			var boundR = Math.round(4 * (rect.x + rect.width));
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				if(pos % (this.__imageData.width * 4) > boundR - 1) pos += this.__imageData.width * 4 - boundR;
				byteArray.writeByte(this.__imageData.data[pos]);
				pos++;
			}
		}
		byteArray.position = 0;
		return byteArray;
	}
	,getPixel32: function(x,y) {
		if(x < 0 || y < 0 || x >= (this.___textureBuffer != null?this.___textureBuffer.width:0) || y >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) return 0;
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			return this.getInt32(0,ctx.getImageData(x,y,1,1).data);
		} else return this.getInt32(4 * y * this.___textureBuffer.width + x * 4,this.__imageData.data);
	}
	,getPixel: function(x,y) {
		if(x < 0 || y < 0 || x >= (this.___textureBuffer != null?this.___textureBuffer.width:0) || y >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) return 0;
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			var imagedata = ctx.getImageData(x,y,1,1);
			return imagedata.data[0] << 16 | imagedata.data[1] << 8 | imagedata.data[2];
		} else {
			var offset = 4 * y * (this.___textureBuffer != null?this.___textureBuffer.width:0) + x * 4;
			return this.__imageData.data[offset] << 16 | this.__imageData.data[offset + 1] << 8 | this.__imageData.data[offset + 2];
		}
	}
	,getInt32: function(offset,data) {
		return (this.__transparent?data[offset + 3]:255) << 24 | data[offset] << 16 | data[offset + 1] << 8 | data[offset + 2];
	}
	,getColorBoundsRect: function(mask,color,findColor) {
		if(findColor == null) findColor = true;
		var me = this;
		var doGetColorBoundsRect = function(data) {
			var minX = me.___textureBuffer != null?me.___textureBuffer.width:0, maxX = 0, minY = me.___textureBuffer != null?me.___textureBuffer.height:0, maxY = 0, i = 0;
			while(i < data.length) {
				var value = me.getInt32(i,data);
				if(findColor) {
					if((value & mask) == color) {
						var x = Math.round(i % ((me.___textureBuffer != null?me.___textureBuffer.width:0) * 4) / 4);
						var y = Math.round(i / ((me.___textureBuffer != null?me.___textureBuffer.width:0) * 4));
						if(x < minX) minX = x;
						if(x > maxX) maxX = x;
						if(y < minY) minY = y;
						if(y > maxY) maxY = y;
					}
				} else if((value & mask) != color) {
					var x = Math.round(i % ((me.___textureBuffer != null?me.___textureBuffer.width:0) * 4) / 4);
					var y = Math.round(i / ((me.___textureBuffer != null?me.___textureBuffer.width:0) * 4));
					if(x < minX) minX = x;
					if(x > maxX) maxX = x;
					if(y < minY) minY = y;
					if(y > maxY) maxY = y;
				}
				i += 4;
			}
			if(minX < maxX && minY < maxY) return new flash.geom.Rectangle(minX,minY,maxX - minX + 1,maxY - minY); else return new flash.geom.Rectangle(0,0,me.___textureBuffer != null?me.___textureBuffer.width:0,me.___textureBuffer != null?me.___textureBuffer.height:0);
		};
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.getImageData(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
			return doGetColorBoundsRect(imageData.data);
		} else return doGetColorBoundsRect(this.__imageData.data);
	}
	,floodFill: function(x,y,color) {
		var wasLocked = this.__locked;
		if(!this.__locked) this.lock();
		var queue = new Array();
		queue.push(new flash.geom.Point(x,y));
		var old = this.getPixel32(x,y);
		var iterations = 0;
		var search = new Array();
		var _g1 = 0, _g = (this.___textureBuffer != null?this.___textureBuffer.width:0) + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var column = new Array();
			var _g3 = 0, _g2 = (this.___textureBuffer != null?this.___textureBuffer.height:0) + 1;
			while(_g3 < _g2) {
				var i1 = _g3++;
				column.push(false);
			}
			search.push(column);
		}
		var currPoint, newPoint;
		while(queue.length > 0) {
			currPoint = queue.shift();
			++iterations;
			var x1 = currPoint.x | 0;
			var y1 = currPoint.y | 0;
			if(x1 < 0 || x1 >= (this.___textureBuffer != null?this.___textureBuffer.width:0)) continue;
			if(y1 < 0 || y1 >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) continue;
			search[x1][y1] = true;
			if(this.getPixel32(x1,y1) == old) {
				this.setPixel32(x1,y1,color);
				if(!search[x1 + 1][y1]) queue.push(new flash.geom.Point(x1 + 1,y1));
				if(!search[x1][y1 + 1]) queue.push(new flash.geom.Point(x1,y1 + 1));
				if(x1 > 0 && !search[x1 - 1][y1]) queue.push(new flash.geom.Point(x1 - 1,y1));
				if(y1 > 0 && !search[x1][y1 - 1]) queue.push(new flash.geom.Point(x1,y1 - 1));
			}
		}
		if(!wasLocked) this.unlock();
	}
	,fillRect: function(rect,color) {
		if(rect == null) return;
		if(rect.width <= 0 || rect.height <= 0) return;
		if(rect.x == 0 && rect.y == 0 && rect.width == this.___textureBuffer.width && rect.height == this.___textureBuffer.height) {
			if(this.__transparent) {
				if(color >>> 24 == 0 || color == this.__initColor) return this.__clearCanvas();
			} else if((color | -16777216) == (this.__initColor | -16777216)) return this.__clearCanvas();
		}
		return this.__fillRect(rect,color);
	}
	,drawToSurface: function(inSurface,matrix,inColorTransform,blendMode,clipRect,smoothing) {
		this.__lease.set(this.__leaseNum++,new Date().getTime());
		var ctx = inSurface.getContext("2d");
		if(matrix != null) {
			ctx.save();
			if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1) ctx.translate(matrix.tx,matrix.ty); else {
				flash.Lib.__setImageSmoothing(ctx,smoothing);
				ctx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);
			}
			ctx.drawImage(this.___textureBuffer,0,0);
			ctx.restore();
		} else ctx.drawImage(this.___textureBuffer,0,0);
		if(inColorTransform != null) this.colorTransform(new flash.geom.Rectangle(0,0,this.___textureBuffer.width,this.___textureBuffer.height),inColorTransform);
	}
	,draw: function(source,matrix,inColorTransform,blendMode,clipRect,smoothing) {
		if(smoothing == null) smoothing = false;
		this.__lease.set(this.__leaseNum++,new Date().getTime());
		source.drawToSurface(this.___textureBuffer,matrix,inColorTransform,blendMode,clipRect,smoothing);
		if(inColorTransform != null) {
			var rect = new flash.geom.Rectangle();
			var object = source;
			rect.x = matrix != null?matrix.tx:0;
			rect.y = matrix != null?matrix.ty:0;
			try {
				rect.width = Reflect.getProperty(source,"width");
				rect.height = Reflect.getProperty(source,"height");
			} catch( e ) {
				rect.width = this.___textureBuffer.width;
				rect.height = this.___textureBuffer.height;
			}
			this.colorTransform(rect,inColorTransform);
		}
	}
	,dispose: function() {
		this.__clearCanvas();
		this.___textureBuffer = null;
		this.__leaseNum = 0;
		this.__lease = null;
		this.__imageData = null;
	}
	,destroy: function() {
		this.___textureBuffer = null;
	}
	,copyPixels: function(sourceBitmapData,sourceRect,destPoint,alphaBitmapData,alphaPoint,mergeAlpha) {
		if(mergeAlpha == null) mergeAlpha = false;
		if(sourceBitmapData.___textureBuffer == null || this.___textureBuffer == null || sourceBitmapData.___textureBuffer.width == 0 || sourceBitmapData.___textureBuffer.height == 0 || sourceRect.width <= 0 || sourceRect.height <= 0) return;
		if(sourceRect.x + sourceRect.width > sourceBitmapData.___textureBuffer.width) sourceRect.width = sourceBitmapData.___textureBuffer.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceBitmapData.___textureBuffer.height) sourceRect.height = sourceBitmapData.___textureBuffer.height - sourceRect.y;
		if(alphaBitmapData != null && alphaBitmapData.__transparent) {
			if(alphaPoint == null) alphaPoint = new flash.geom.Point();
			var bitmapData = new flash.display.BitmapData(sourceBitmapData.___textureBuffer != null?sourceBitmapData.___textureBuffer.width:0,sourceBitmapData.___textureBuffer != null?sourceBitmapData.___textureBuffer.height:0,true);
			bitmapData.copyPixels(sourceBitmapData,sourceRect,new flash.geom.Point(sourceRect.x,sourceRect.y));
			bitmapData.copyChannel(alphaBitmapData,new flash.geom.Rectangle(alphaPoint.x,alphaPoint.y,sourceRect.width,sourceRect.height),new flash.geom.Point(sourceRect.x,sourceRect.y),8,8);
			sourceBitmapData = bitmapData;
		}
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			if(!mergeAlpha) {
				if(this.__transparent && sourceBitmapData.__transparent) {
					var trpCtx = sourceBitmapData.__transparentFiller.getContext("2d");
					var trpData = trpCtx.getImageData(sourceRect.x,sourceRect.y,sourceRect.width,sourceRect.height);
					ctx.putImageData(trpData,destPoint.x,destPoint.y);
				}
			}
			ctx.drawImage(sourceBitmapData.___textureBuffer,sourceRect.x,sourceRect.y,sourceRect.width,sourceRect.height,destPoint.x,destPoint.y,sourceRect.width,sourceRect.height);
		} else this.__copyPixelList[this.__copyPixelList.length] = { handle : sourceBitmapData.___textureBuffer, transparentFiller : mergeAlpha?null:sourceBitmapData.__transparentFiller, sourceX : sourceRect.x, sourceY : sourceRect.y, sourceWidth : sourceRect.width, sourceHeight : sourceRect.height, destX : destPoint.x, destY : destPoint.y};
	}
	,copyChannel: function(sourceBitmapData,sourceRect,destPoint,sourceChannel,destChannel) {
		this.rect = this.clipRect(this.rect);
		if(this.rect == null) return;
		if(destChannel == 8 && !this.__transparent) return;
		if(sourceBitmapData.___textureBuffer == null || this.___textureBuffer == null || sourceRect.width <= 0 || sourceRect.height <= 0) return;
		if(sourceRect.x + sourceRect.width > sourceBitmapData.___textureBuffer.width) sourceRect.width = sourceBitmapData.___textureBuffer.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceBitmapData.___textureBuffer.height) sourceRect.height = sourceBitmapData.___textureBuffer.height - sourceRect.y;
		var doChannelCopy = function(imageData) {
			var srcCtx = sourceBitmapData.___textureBuffer.getContext("2d");
			var srcImageData = srcCtx.getImageData(sourceRect.x,sourceRect.y,sourceRect.width,sourceRect.height);
			var destIdx = -1;
			if(destChannel == 8) destIdx = 3; else if(destChannel == 4) destIdx = 2; else if(destChannel == 2) destIdx = 1; else if(destChannel == 1) destIdx = 0; else throw "Invalid destination BitmapDataChannel passed to BitmapData::copyChannel.";
			var pos = 4 * (Math.round(destPoint.x) + Math.round(destPoint.y) * imageData.width) + destIdx;
			var boundR = Math.round(4 * (destPoint.x + sourceRect.width));
			var setPos = function(val) {
				if(pos % (imageData.width * 4) > boundR - 1) pos += imageData.width * 4 - boundR;
				imageData.data[pos] = val;
				pos += 4;
			};
			var srcIdx = -1;
			if(sourceChannel == 8) srcIdx = 3; else if(sourceChannel == 4) srcIdx = 2; else if(sourceChannel == 2) srcIdx = 1; else if(sourceChannel == 1) srcIdx = 0; else throw "Invalid source BitmapDataChannel passed to BitmapData::copyChannel.";
			while(srcIdx < srcImageData.data.length) {
				setPos(srcImageData.data[srcIdx]);
				srcIdx += 4;
			}
		};
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.getImageData(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
			doChannelCopy(imageData);
			ctx.putImageData(imageData,0,0);
		} else {
			doChannelCopy(this.__imageData);
			this.__imageDataChanged = true;
		}
	}
	,compare: function(inBitmapTexture) {
		throw "bitmapData.compare is currently not supported for HTML5";
		return 0;
	}
	,colorTransform: function(rect,colorTransform) {
		if(rect == null) return;
		rect = this.clipRect(rect);
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imagedata = ctx.getImageData(rect.x,rect.y,rect.width,rect.height);
			var offsetX;
			var _g1 = 0, _g = imagedata.data.length >> 2;
			while(_g1 < _g) {
				var i = _g1++;
				offsetX = i * 4;
				imagedata.data[offsetX] = imagedata.data[offsetX] * colorTransform.redMultiplier + colorTransform.redOffset | 0;
				imagedata.data[offsetX + 1] = imagedata.data[offsetX + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset | 0;
				imagedata.data[offsetX + 2] = imagedata.data[offsetX + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset | 0;
				imagedata.data[offsetX + 3] = imagedata.data[offsetX + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset | 0;
			}
			ctx.putImageData(imagedata,rect.x,rect.y);
		} else {
			var s = 4 * (Math.round(rect.x) + Math.round(rect.y) * this.__imageData.width);
			var offsetY;
			var offsetX;
			var _g1 = 0, _g = Math.round(rect.height);
			while(_g1 < _g) {
				var i = _g1++;
				offsetY = i * this.__imageData.width;
				var _g3 = 0, _g2 = Math.round(rect.width);
				while(_g3 < _g2) {
					var j = _g3++;
					offsetX = 4 * (j + offsetY);
					this.__imageData.data[s + offsetX] = this.__imageData.data[s + offsetX] * colorTransform.redMultiplier + colorTransform.redOffset | 0;
					this.__imageData.data[s + offsetX + 1] = this.__imageData.data[s + offsetX + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset | 0;
					this.__imageData.data[s + offsetX + 2] = this.__imageData.data[s + offsetX + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset | 0;
					this.__imageData.data[s + offsetX + 3] = this.__imageData.data[s + offsetX + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset | 0;
				}
			}
			this.__imageDataChanged = true;
		}
	}
	,clone: function() {
		var bitmapData = new flash.display.BitmapData(this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0,this.__transparent);
		var rect = new flash.geom.Rectangle(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
		bitmapData.setPixels(rect,this.getPixels(rect));
		bitmapData.__lease.set(bitmapData.__leaseNum++,new Date().getTime());
		return bitmapData;
	}
	,clipRect: function(r) {
		if(r.x < 0) {
			r.width -= -r.x;
			r.x = 0;
			if(r.x + r.width <= 0) return null;
		}
		if(r.y < 0) {
			r.height -= -r.y;
			r.y = 0;
			if(r.y + r.height <= 0) return null;
		}
		if(r.x + r.width >= (this.___textureBuffer != null?this.___textureBuffer.width:0)) {
			r.width -= r.x + r.width - (this.___textureBuffer != null?this.___textureBuffer.width:0);
			if(r.width <= 0) return null;
		}
		if(r.y + r.height >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) {
			r.height -= r.y + r.height - (this.___textureBuffer != null?this.___textureBuffer.height:0);
			if(r.height <= 0) return null;
		}
		return r;
	}
	,clear: function(color) {
		this.fillRect(this.rect,color);
	}
	,applyFilter: function(sourceBitmapData,sourceRect,destPoint,filter) {
		if(sourceBitmapData == this && sourceRect.x == destPoint.x && sourceRect.y == destPoint.y) filter.__applyFilter(this.___textureBuffer,sourceRect); else {
			var bitmapData = new flash.display.BitmapData(sourceRect.width | 0,sourceRect.height | 0);
			bitmapData.copyPixels(sourceBitmapData,sourceRect,new flash.geom.Point());
			filter.__applyFilter(bitmapData.___textureBuffer);
			this.copyPixels(bitmapData,bitmapData.rect,destPoint);
		}
	}
	,__class__: flash.display.BitmapData
	,__properties__: {get_height:"get_height",get_transparent:"get_transparent",get_width:"get_width"}
}
flash.display.ImageDataLease = function() {
};
$hxClasses["flash.display.ImageDataLease"] = flash.display.ImageDataLease;
flash.display.ImageDataLease.__name__ = ["flash","display","ImageDataLease"];
flash.display.ImageDataLease.prototype = {
	set: function(s,t) {
		this.seed = s;
		this.time = t;
	}
	,clone: function() {
		var leaseClone = new flash.display.ImageDataLease();
		leaseClone.seed = this.seed;
		leaseClone.time = this.time;
		return leaseClone;
	}
	,__class__: flash.display.ImageDataLease
}
flash.display._BitmapData = {}
flash.display._BitmapData.MinstdGenerator = function(seed) {
	if(seed == 0) this.value = 1; else this.value = seed;
};
$hxClasses["flash.display._BitmapData.MinstdGenerator"] = flash.display._BitmapData.MinstdGenerator;
flash.display._BitmapData.MinstdGenerator.__name__ = ["flash","display","_BitmapData","MinstdGenerator"];
flash.display._BitmapData.MinstdGenerator.prototype = {
	nextValue: function() {
		var lo = 16807 * (this.value & 65535);
		var hi = 16807 * (this.value >>> 16);
		lo += (hi & 32767) << 16;
		if(lo < 0 || lo > -2147483648 - 1) {
			lo &= -2147483648 - 1;
			++lo;
		}
		lo += hi >>> 15;
		if(lo < 0 || lo > -2147483648 - 1) {
			lo &= -2147483648 - 1;
			++lo;
		}
		return this.value = lo;
	}
	,__class__: flash.display._BitmapData.MinstdGenerator
}
flash.display.BitmapDataChannel = function() { }
$hxClasses["flash.display.BitmapDataChannel"] = flash.display.BitmapDataChannel;
flash.display.BitmapDataChannel.__name__ = ["flash","display","BitmapDataChannel"];
flash.display.BlendMode = $hxClasses["flash.display.BlendMode"] = { __ename__ : true, __constructs__ : ["ADD","ALPHA","DARKEN","DIFFERENCE","ERASE","HARDLIGHT","INVERT","LAYER","LIGHTEN","MULTIPLY","NORMAL","OVERLAY","SCREEN","SUBTRACT"] }
flash.display.BlendMode.ADD = ["ADD",0];
flash.display.BlendMode.ADD.toString = $estr;
flash.display.BlendMode.ADD.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.ALPHA = ["ALPHA",1];
flash.display.BlendMode.ALPHA.toString = $estr;
flash.display.BlendMode.ALPHA.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.DARKEN = ["DARKEN",2];
flash.display.BlendMode.DARKEN.toString = $estr;
flash.display.BlendMode.DARKEN.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.DIFFERENCE = ["DIFFERENCE",3];
flash.display.BlendMode.DIFFERENCE.toString = $estr;
flash.display.BlendMode.DIFFERENCE.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.ERASE = ["ERASE",4];
flash.display.BlendMode.ERASE.toString = $estr;
flash.display.BlendMode.ERASE.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.HARDLIGHT = ["HARDLIGHT",5];
flash.display.BlendMode.HARDLIGHT.toString = $estr;
flash.display.BlendMode.HARDLIGHT.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.INVERT = ["INVERT",6];
flash.display.BlendMode.INVERT.toString = $estr;
flash.display.BlendMode.INVERT.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.LAYER = ["LAYER",7];
flash.display.BlendMode.LAYER.toString = $estr;
flash.display.BlendMode.LAYER.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.LIGHTEN = ["LIGHTEN",8];
flash.display.BlendMode.LIGHTEN.toString = $estr;
flash.display.BlendMode.LIGHTEN.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.MULTIPLY = ["MULTIPLY",9];
flash.display.BlendMode.MULTIPLY.toString = $estr;
flash.display.BlendMode.MULTIPLY.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.NORMAL = ["NORMAL",10];
flash.display.BlendMode.NORMAL.toString = $estr;
flash.display.BlendMode.NORMAL.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.OVERLAY = ["OVERLAY",11];
flash.display.BlendMode.OVERLAY.toString = $estr;
flash.display.BlendMode.OVERLAY.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.SCREEN = ["SCREEN",12];
flash.display.BlendMode.SCREEN.toString = $estr;
flash.display.BlendMode.SCREEN.__enum__ = flash.display.BlendMode;
flash.display.BlendMode.SUBTRACT = ["SUBTRACT",13];
flash.display.BlendMode.SUBTRACT.toString = $estr;
flash.display.BlendMode.SUBTRACT.__enum__ = flash.display.BlendMode;
flash.display.CapsStyle = $hxClasses["flash.display.CapsStyle"] = { __ename__ : true, __constructs__ : ["NONE","ROUND","SQUARE"] }
flash.display.CapsStyle.NONE = ["NONE",0];
flash.display.CapsStyle.NONE.toString = $estr;
flash.display.CapsStyle.NONE.__enum__ = flash.display.CapsStyle;
flash.display.CapsStyle.ROUND = ["ROUND",1];
flash.display.CapsStyle.ROUND.toString = $estr;
flash.display.CapsStyle.ROUND.__enum__ = flash.display.CapsStyle;
flash.display.CapsStyle.SQUARE = ["SQUARE",2];
flash.display.CapsStyle.SQUARE.toString = $estr;
flash.display.CapsStyle.SQUARE.__enum__ = flash.display.CapsStyle;
flash.display.GradientType = $hxClasses["flash.display.GradientType"] = { __ename__ : true, __constructs__ : ["RADIAL","LINEAR"] }
flash.display.GradientType.RADIAL = ["RADIAL",0];
flash.display.GradientType.RADIAL.toString = $estr;
flash.display.GradientType.RADIAL.__enum__ = flash.display.GradientType;
flash.display.GradientType.LINEAR = ["LINEAR",1];
flash.display.GradientType.LINEAR.toString = $estr;
flash.display.GradientType.LINEAR.__enum__ = flash.display.GradientType;
flash.display.Graphics = function(inSurface) {
	flash.Lib.__bootstrap();
	if(inSurface == null) {
		this.__surface = js.Browser.document.createElement("canvas");
		this.__surface.width = 0;
		this.__surface.height = 0;
	} else this.__surface = inSurface;
	this.mLastMoveID = 0;
	this.mPenX = 0.0;
	this.mPenY = 0.0;
	this.mDrawList = new Array();
	this.mPoints = [];
	this.mSolidGradient = null;
	this.mBitmap = null;
	this.mFilling = false;
	this.mFillColour = 0;
	this.mFillAlpha = 0.0;
	this.mLastMoveID = 0;
	this.boundsDirty = true;
	this.__clearLine();
	this.mLineJobs = [];
	this.__changed = true;
	this.nextDrawIndex = 0;
	this.__extent = new flash.geom.Rectangle();
	this.__extentWithFilters = new flash.geom.Rectangle();
	this._padding = 0.0;
	this.__clearNextCycle = true;
};
$hxClasses["flash.display.Graphics"] = flash.display.Graphics;
flash.display.Graphics.__name__ = ["flash","display","Graphics"];
flash.display.Graphics.__detectIsPointInPathMode = function() {
	var canvas = js.Browser.document.createElement("canvas");
	var ctx = canvas.getContext("2d");
	if(ctx.isPointInPath == null) return flash.display.PointInPathMode.USER_SPACE;
	ctx.save();
	ctx.translate(1,0);
	ctx.beginPath();
	ctx.rect(0,0,1,1);
	var rv = ctx.isPointInPath(0.3,0.3)?flash.display.PointInPathMode.USER_SPACE:flash.display.PointInPathMode.DEVICE_SPACE;
	ctx.restore();
	return rv;
}
flash.display.Graphics.prototype = {
	__render: function(maskHandle,filters,sx,sy,clip0,clip1,clip2,clip3) {
		if(sy == null) sy = 1.0;
		if(sx == null) sx = 1.0;
		if(!this.__changed) return false;
		this.closePolygon(true);
		var padding = this._padding;
		if(filters != null) {
			var _g = 0;
			while(_g < filters.length) {
				var filter = filters[_g];
				++_g;
				if(Reflect.hasField(filter,"blurX")) padding += Math.max(Reflect.field(filter,"blurX"),Reflect.field(filter,"blurY")) * 4;
			}
		}
		this.__expandFilteredExtent(-(padding * sx) / 2,-(padding * sy) / 2);
		if(this.__clearNextCycle) {
			this.nextDrawIndex = 0;
			this.__clearCanvas();
			this.__clearNextCycle = false;
		}
		if(this.__extentWithFilters.width - this.__extentWithFilters.x > this.__surface.width || this.__extentWithFilters.height - this.__extentWithFilters.y > this.__surface.height) this.__adjustSurface(sx,sy);
		var ctx = (function($this) {
			var $r;
			try {
				$r = $this.__surface.getContext("2d");
			} catch( e ) {
				$r = null;
			}
			return $r;
		}(this));
		if(ctx == null) return false;
		if(clip0 != null) {
			ctx.beginPath();
			ctx.moveTo(clip0.x * sx,clip0.y * sy);
			ctx.lineTo(clip1.x * sx,clip1.y * sy);
			ctx.lineTo(clip2.x * sx,clip2.y * sy);
			ctx.lineTo(clip3.x * sx,clip3.y * sy);
			ctx.closePath();
			ctx.clip();
		}
		if(filters != null) {
			var _g = 0;
			while(_g < filters.length) {
				var filter = filters[_g];
				++_g;
				if(js.Boot.__instanceof(filter,flash.filters.DropShadowFilter)) filter.__applyFilter(this.__surface,null,true);
			}
		}
		var len = this.mDrawList.length;
		ctx.save();
		if(this.__extentWithFilters.x != 0 || this.__extentWithFilters.y != 0) ctx.translate(-this.__extentWithFilters.x * sx,-this.__extentWithFilters.y * sy);
		if(sx != 1 || sy != 0) ctx.scale(sx,sy);
		var doStroke = false;
		var _g = this.nextDrawIndex;
		while(_g < len) {
			var i = _g++;
			var d = this.mDrawList[len - 1 - i];
			if(d.tileJob != null) this.__drawTiles(d.tileJob.sheet,d.tileJob.drawList,d.tileJob.flags); else {
				if(d.lineJobs.length > 0) {
					var _g1 = 0, _g2 = d.lineJobs;
					while(_g1 < _g2.length) {
						var lj = _g2[_g1];
						++_g1;
						ctx.lineWidth = lj.thickness;
						switch(lj.joints) {
						case 0:
							ctx.lineJoin = "round";
							break;
						case 4096:
							ctx.lineJoin = "miter";
							break;
						case 8192:
							ctx.lineJoin = "bevel";
							break;
						}
						switch(lj.caps) {
						case 256:
							ctx.lineCap = "round";
							break;
						case 512:
							ctx.lineCap = "square";
							break;
						case 0:
							ctx.lineCap = "butt";
							break;
						}
						ctx.miterLimit = lj.miter_limit;
						if(lj.grad != null) ctx.strokeStyle = this.createCanvasGradient(ctx,lj.grad); else ctx.strokeStyle = this.createCanvasColor(lj.colour,lj.alpha);
						ctx.beginPath();
						var _g4 = lj.point_idx0, _g3 = lj.point_idx1 + 1;
						while(_g4 < _g3) {
							var i1 = _g4++;
							var p = d.points[i1];
							switch(p.type) {
							case 0:
								ctx.moveTo(p.x,p.y);
								break;
							case 2:
								ctx.quadraticCurveTo(p.cx,p.cy,p.x,p.y);
								break;
							default:
								ctx.lineTo(p.x,p.y);
							}
						}
						ctx.closePath();
						doStroke = true;
					}
				} else {
					ctx.beginPath();
					var _g1 = 0, _g2 = d.points;
					while(_g1 < _g2.length) {
						var p = _g2[_g1];
						++_g1;
						switch(p.type) {
						case 0:
							ctx.moveTo(p.x,p.y);
							break;
						case 2:
							ctx.quadraticCurveTo(p.cx,p.cy,p.x,p.y);
							break;
						default:
							ctx.lineTo(p.x,p.y);
						}
					}
					ctx.closePath();
				}
				var fillColour = d.fillColour;
				var fillAlpha = d.fillAlpha;
				var g = d.solidGradient;
				var bitmap = d.bitmap;
				if(g != null) ctx.fillStyle = this.createCanvasGradient(ctx,g); else if(bitmap != null && (bitmap.flags & 16) > 0) {
					var m = bitmap.matrix;
					if(m != null) ctx.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
					if((bitmap.flags & 65536) == 0) {
						ctx.mozImageSmoothingEnabled = false;
						ctx.webkitImageSmoothingEnabled = false;
					}
					ctx.fillStyle = ctx.createPattern(bitmap.texture_buffer,"repeat");
				} else ctx.fillStyle = this.createCanvasColor(fillColour,Math.min(1.0,Math.max(0.0,fillAlpha)));
				ctx.fill();
				if(doStroke) ctx.stroke();
				ctx.save();
				if(bitmap != null && (bitmap.flags & 16) == 0) {
					ctx.clip();
					var img = bitmap.texture_buffer;
					var m = bitmap.matrix;
					if(m != null) ctx.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
					ctx.drawImage(img,0,0);
				}
				ctx.restore();
			}
		}
		ctx.restore();
		this.__changed = false;
		this.nextDrawIndex = len > 0?len - 1:0;
		this.mDrawList = [];
		return true;
	}
	,__mediaSurface: function(surface) {
		this.__surface = surface;
	}
	,__invalidate: function() {
		this.__changed = true;
		this.__clearNextCycle = true;
	}
	,__hitTest: function(inX,inY) {
		var ctx = (function($this) {
			var $r;
			try {
				$r = $this.__surface.getContext("2d");
			} catch( e ) {
				$r = null;
			}
			return $r;
		}(this));
		if(ctx == null) return false;
		if(ctx.isPointInPath(inX,inY)) return true; else if(this.mDrawList.length == 0 && this.__extent.width > 0 && this.__extent.height > 0) return true;
		return false;
	}
	,__expandStandardExtent: function(x,y,thickness) {
		if(thickness == null) thickness = 0;
		if(this._padding > 0) {
			this.__extent.width -= this._padding;
			this.__extent.height -= this._padding;
		}
		if(thickness != null && thickness > this._padding) this._padding = thickness;
		var maxX, minX, maxY, minY;
		minX = this.__extent.x;
		minY = this.__extent.y;
		maxX = this.__extent.width + minX;
		maxY = this.__extent.height + minY;
		maxX = x > maxX?x:maxX;
		minX = x < minX?x:minX;
		maxY = y > maxY?y:maxY;
		minY = y < minY?y:minY;
		this.__extent.x = minX;
		this.__extent.y = minY;
		this.__extent.width = maxX - minX + this._padding;
		this.__extent.height = maxY - minY + this._padding;
		this.boundsDirty = true;
	}
	,__expandFilteredExtent: function(x,y) {
		var maxX, minX, maxY, minY;
		minX = this.__extent.x;
		minY = this.__extent.y;
		maxX = this.__extent.width + minX;
		maxY = this.__extent.height + minY;
		maxX = x > maxX?x:maxX;
		minX = x < minX?x:minX;
		maxY = y > maxY?y:maxY;
		minY = y < minY?y:minY;
		this.__extentWithFilters.x = minX;
		this.__extentWithFilters.y = minY;
		this.__extentWithFilters.width = maxX - minX;
		this.__extentWithFilters.height = maxY - minY;
	}
	,__drawTiles: function(sheet,tileData,flags) {
		if(flags == null) flags = 0;
		var useScale = (flags & 1) > 0;
		var useRotation = (flags & 2) > 0;
		var useTransform = (flags & 16) > 0;
		var useRGB = (flags & 4) > 0;
		var useAlpha = (flags & 8) > 0;
		if(useTransform) {
			useScale = false;
			useRotation = false;
		}
		var scaleIndex = 0;
		var rotationIndex = 0;
		var rgbIndex = 0;
		var alphaIndex = 0;
		var transformIndex = 0;
		var numValues = 3;
		if(useScale) {
			scaleIndex = numValues;
			numValues++;
		}
		if(useRotation) {
			rotationIndex = numValues;
			numValues++;
		}
		if(useTransform) {
			transformIndex = numValues;
			numValues += 4;
		}
		if(useRGB) {
			rgbIndex = numValues;
			numValues += 3;
		}
		if(useAlpha) {
			alphaIndex = numValues;
			numValues++;
		}
		var totalCount = tileData.length;
		var itemCount = totalCount / numValues | 0;
		var index = 0;
		var rect = null;
		var center = null;
		var previousTileID = -1;
		var surface = sheet.__bitmap.___textureBuffer;
		var ctx = (function($this) {
			var $r;
			try {
				$r = $this.__surface.getContext("2d");
			} catch( e ) {
				$r = null;
			}
			return $r;
		}(this));
		if(ctx != null) while(index < totalCount) {
			var tileID = tileData[index + 2] | 0;
			if(tileID != previousTileID) {
				rect = sheet.__tileRects[tileID];
				center = sheet.__centerPoints[tileID];
				previousTileID = tileID;
			}
			if(rect != null && center != null) {
				ctx.save();
				ctx.translate(tileData[index],tileData[index + 1]);
				if(useRotation) ctx.rotate(tileData[index + rotationIndex]);
				var scale = 1.0;
				if(useScale) scale = tileData[index + scaleIndex];
				if(useTransform) ctx.transform(tileData[index + transformIndex],tileData[index + transformIndex + 1],tileData[index + transformIndex + 2],tileData[index + transformIndex + 3],0,0);
				if(useAlpha) ctx.globalAlpha = tileData[index + alphaIndex];
				ctx.drawImage(surface,rect.x,rect.y,rect.width,rect.height,-center.x * scale,-center.y * scale,rect.width * scale,rect.height * scale);
				ctx.restore();
			}
			index += numValues;
		}
	}
	,__drawEllipse: function(x,y,rx,ry) {
		this.moveTo(x + rx,y);
		this.curveTo(rx + x,-0.4142 * ry + y,0.7071 * rx + x,-0.7071 * ry + y);
		this.curveTo(0.4142 * rx + x,-ry + y,x,-ry + y);
		this.curveTo(-0.4142 * rx + x,-ry + y,-0.7071 * rx + x,-0.7071 * ry + y);
		this.curveTo(-rx + x,-0.4142 * ry + y,-rx + x,y);
		this.curveTo(-rx + x,0.4142 * ry + y,-0.7071 * rx + x,0.7071 * ry + y);
		this.curveTo(-0.4142 * rx + x,ry + y,x,ry + y);
		this.curveTo(0.4142 * rx + x,ry + y,0.7071 * rx + x,0.7071 * ry + y);
		this.curveTo(rx + x,0.4142 * ry + y,rx + x,y);
	}
	,__clearLine: function() {
		this.mCurrentLine = new flash.display.LineJob(null,-1,-1,0.0,0.0,0,1,0,256,3,3.0);
	}
	,__clearCanvas: function() {
		if(this.__surface != null) {
			var ctx = (function($this) {
				var $r;
				try {
					$r = $this.__surface.getContext("2d");
				} catch( e ) {
					$r = null;
				}
				return $r;
			}(this));
			if(ctx != null) ctx.clearRect(0,0,this.__surface.width,this.__surface.height);
		}
	}
	,__adjustSurface: function(sx,sy) {
		if(sy == null) sy = 1.0;
		if(sx == null) sx = 1.0;
		if(Reflect.field(this.__surface,"getContext") != null) {
			var width = Math.ceil((this.__extentWithFilters.width - this.__extentWithFilters.x) * sx);
			var height = Math.ceil((this.__extentWithFilters.height - this.__extentWithFilters.y) * sy);
			if(width <= 5000 && height <= 5000) {
				var dstCanvas = js.Browser.document.createElement("canvas");
				dstCanvas.width = width;
				dstCanvas.height = height;
				flash.Lib.__drawToSurface(this.__surface,dstCanvas);
				if(flash.Lib.__isOnStage(this.__surface)) {
					flash.Lib.__appendSurface(dstCanvas);
					flash.Lib.__copyStyle(this.__surface,dstCanvas);
					flash.Lib.__swapSurface(this.__surface,dstCanvas);
					flash.Lib.__removeSurface(this.__surface);
					if(this.__surface.id != null) flash.Lib.__setSurfaceId(dstCanvas,this.__surface.id);
				}
				this.__surface = dstCanvas;
			}
		}
	}
	,moveTo: function(inX,inY) {
		this.mPenX = inX;
		this.mPenY = inY;
		this.__expandStandardExtent(inX,inY);
		if(!this.mFilling) this.closePolygon(false); else {
			this.addLineSegment();
			this.mLastMoveID = this.mPoints.length;
			this.mPoints.push(new flash.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,0));
		}
	}
	,lineTo: function(inX,inY) {
		var pid = this.mPoints.length;
		if(pid == 0) {
			this.mPoints.push(new flash.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,0));
			pid++;
		}
		this.mPenX = inX;
		this.mPenY = inY;
		this.__expandStandardExtent(inX,inY,this.mCurrentLine.thickness);
		this.mPoints.push(new flash.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,1));
		if(this.mCurrentLine.grad != null || this.mCurrentLine.alpha > 0) {
			if(this.mCurrentLine.point_idx0 < 0) this.mCurrentLine.point_idx0 = pid - 1;
			this.mCurrentLine.point_idx1 = pid;
		}
		if(!this.mFilling) this.closePolygon(false);
	}
	,lineStyle: function(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit) {
		this.addLineSegment();
		if(thickness == null) {
			this.__clearLine();
			return;
		} else {
			this.mCurrentLine.grad = null;
			this.mCurrentLine.thickness = thickness;
			this.mCurrentLine.colour = color == null?0:color;
			this.mCurrentLine.alpha = alpha == null?1.0:alpha;
			this.mCurrentLine.miter_limit = miterLimit == null?3.0:miterLimit;
			this.mCurrentLine.pixel_hinting = pixelHinting == null || !pixelHinting?0:16384;
		}
		if(caps != null) {
			switch( (caps)[1] ) {
			case 1:
				this.mCurrentLine.caps = 256;
				break;
			case 2:
				this.mCurrentLine.caps = 512;
				break;
			case 0:
				this.mCurrentLine.caps = 0;
				break;
			}
		}
		this.mCurrentLine.scale_mode = 3;
		if(scaleMode != null) {
			switch( (scaleMode)[1] ) {
			case 2:
				this.mCurrentLine.scale_mode = 3;
				break;
			case 3:
				this.mCurrentLine.scale_mode = 1;
				break;
			case 0:
				this.mCurrentLine.scale_mode = 2;
				break;
			case 1:
				this.mCurrentLine.scale_mode = 0;
				break;
			}
		}
		this.mCurrentLine.joints = 0;
		if(joints != null) {
			switch( (joints)[1] ) {
			case 1:
				this.mCurrentLine.joints = 0;
				break;
			case 0:
				this.mCurrentLine.joints = 4096;
				break;
			case 2:
				this.mCurrentLine.joints = 8192;
				break;
			}
		}
	}
	,lineGradientStyle: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.mCurrentLine.grad = this.createGradient(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
	}
	,getContext: function() {
		try {
			return this.__surface.getContext("2d");
		} catch( e ) {
			return null;
		}
	}
	,flush: function() {
		this.closePolygon(true);
	}
	,endFill: function() {
		this.closePolygon(true);
	}
	,drawTiles: function(sheet,tileData,smooth,flags) {
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		this.__expandStandardExtent(flash.Lib.get_current().get_stage().get_stageWidth(),flash.Lib.get_current().get_stage().get_stageHeight());
		this.addDrawable(new flash.display.Drawable(null,null,null,null,null,null,new flash.display.TileJob(sheet,tileData,flags)));
		this.__changed = true;
	}
	,drawRoundRect: function(x,y,width,height,rx,ry) {
		if(ry == null) ry = -1;
		if(ry == -1) ry = rx;
		rx *= 0.5;
		ry *= 0.5;
		var w = width * 0.5;
		x += w;
		if(rx > w) rx = w;
		var lw = w - rx;
		var w_ = lw + rx * Math.sin(Math.PI / 4);
		var cw_ = lw + rx * Math.tan(Math.PI / 8);
		var h = height * 0.5;
		y += h;
		if(ry > h) ry = h;
		var lh = h - ry;
		var h_ = lh + ry * Math.sin(Math.PI / 4);
		var ch_ = lh + ry * Math.tan(Math.PI / 8);
		this.closePolygon(false);
		this.moveTo(x + w,y + lh);
		this.curveTo(x + w,y + ch_,x + w_,y + h_);
		this.curveTo(x + cw_,y + h,x + lw,y + h);
		this.lineTo(x - lw,y + h);
		this.curveTo(x - cw_,y + h,x - w_,y + h_);
		this.curveTo(x - w,y + ch_,x - w,y + lh);
		this.lineTo(x - w,y - lh);
		this.curveTo(x - w,y - ch_,x - w_,y - h_);
		this.curveTo(x - cw_,y - h,x - lw,y - h);
		this.lineTo(x + lw,y - h);
		this.curveTo(x + cw_,y - h,x + w_,y - h_);
		this.curveTo(x + w,y - ch_,x + w,y - lh);
		this.lineTo(x + w,y + lh);
		this.closePolygon(false);
	}
	,drawRect: function(x,y,width,height) {
		this.closePolygon(false);
		this.moveTo(x,y);
		this.lineTo(x + width,y);
		this.lineTo(x + width,y + height);
		this.lineTo(x,y + height);
		this.lineTo(x,y);
		this.closePolygon(false);
	}
	,drawGraphicsData: function(points) {
		var $it0 = ((function(_e) {
			return function() {
				return $iterator(flash._Vector.Vector_Impl_)(_e);
			};
		})(points))();
		while( $it0.hasNext() ) {
			var data = $it0.next();
			if(data == null) this.mFilling = true; else switch(data.__graphicsDataType) {
			case flash.display.GraphicsDataType.STROKE:
				var stroke = data;
				if(stroke.fill == null) this.lineStyle(stroke.thickness,0,1.,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit); else switch(stroke.fill.__graphicsFillType) {
				case flash.display.GraphicsFillType.SOLID_FILL:
					var fill = stroke.fill;
					this.lineStyle(stroke.thickness,fill.color,fill.alpha,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit);
					break;
				case flash.display.GraphicsFillType.GRADIENT_FILL:
					var fill = stroke.fill;
					this.lineGradientStyle(fill.type,fill.colors,fill.alphas,fill.ratios,fill.matrix,fill.spreadMethod,fill.interpolationMethod,fill.focalPointRatio);
					break;
				}
				break;
			case flash.display.GraphicsDataType.PATH:
				var path = data;
				var j = 0;
				var _g1 = 0, _g = flash._Vector.Vector_Impl_.get_length(path.commands);
				while(_g1 < _g) {
					var i = _g1++;
					var command = path.commands[i];
					switch(command) {
					case 1:
						this.moveTo(path.data[j],path.data[j + 1]);
						j = j + 2;
						break;
					case 2:
						this.lineTo(path.data[j],path.data[j + 1]);
						j = j + 2;
						break;
					case 3:
						this.curveTo(path.data[j],path.data[j + 1],path.data[j + 2],path.data[j + 3]);
						j = j + 4;
						break;
					}
				}
				break;
			case flash.display.GraphicsDataType.SOLID:
				var fill = data;
				this.beginFill(fill.color,fill.alpha);
				break;
			case flash.display.GraphicsDataType.GRADIENT:
				var fill = data;
				this.beginGradientFill(fill.type,fill.colors,fill.alphas,fill.ratios,fill.matrix,fill.spreadMethod,fill.interpolationMethod,fill.focalPointRatio);
				break;
			}
		}
	}
	,drawEllipse: function(x,y,rx,ry) {
		this.closePolygon(false);
		rx /= 2;
		ry /= 2;
		this.__drawEllipse(x + rx,y + ry,rx,ry);
		this.closePolygon(false);
	}
	,drawCircle: function(x,y,rad) {
		this.closePolygon(false);
		this.__drawEllipse(x,y,rad,rad);
		this.closePolygon(false);
	}
	,curveTo: function(inCX,inCY,inX,inY) {
		var pid = this.mPoints.length;
		if(pid == 0) {
			this.mPoints.push(new flash.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,0));
			pid++;
		}
		this.mPenX = inX;
		this.mPenY = inY;
		this.__expandStandardExtent(inX,inY,this.mCurrentLine.thickness);
		this.mPoints.push(new flash.display.GfxPoint(inX,inY,inCX,inCY,2));
		if(this.mCurrentLine.grad != null || this.mCurrentLine.alpha > 0) {
			if(this.mCurrentLine.point_idx0 < 0) this.mCurrentLine.point_idx0 = pid - 1;
			this.mCurrentLine.point_idx1 = pid;
		}
	}
	,createGradient: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		var points = new Array();
		var _g1 = 0, _g = colors.length;
		while(_g1 < _g) {
			var i = _g1++;
			points.push(new flash.display.GradPoint(colors[i],alphas[i],ratios[i]));
		}
		var flags = 0;
		if(type == flash.display.GradientType.RADIAL) flags |= 1;
		if(spreadMethod == flash.display.SpreadMethod.REPEAT) flags |= 2; else if(spreadMethod == flash.display.SpreadMethod.REFLECT) flags |= 4;
		if(matrix == null) {
			matrix = new flash.geom.Matrix();
			matrix.createGradientBox(25,25);
		} else matrix = matrix.clone();
		var focal = focalPointRatio == null?0:focalPointRatio;
		return new flash.display.Grad(points,matrix,flags,focal);
	}
	,createCanvasGradient: function(ctx,g) {
		var gradient;
		var matrix = g.matrix;
		if((g.flags & 1) == 0) {
			var p1 = matrix.transformPoint(new flash.geom.Point(-819.2,0));
			var p2 = matrix.transformPoint(new flash.geom.Point(819.2,0));
			gradient = ctx.createLinearGradient(p1.x,p1.y,p2.x,p2.y);
		} else {
			var p1 = matrix.transformPoint(new flash.geom.Point(g.focal * 819.2,0));
			var p2 = matrix.transformPoint(new flash.geom.Point(0,819.2));
			gradient = ctx.createRadialGradient(p1.x,p1.y,0,p2.x,p1.y,p2.y);
		}
		var _g = 0, _g1 = g.points;
		while(_g < _g1.length) {
			var point = _g1[_g];
			++_g;
			var color = this.createCanvasColor(point.col,point.alpha);
			var pos = point.ratio / 255;
			gradient.addColorStop(pos,color);
		}
		return gradient;
	}
	,createCanvasColor: function(color,alpha) {
		var r = (16711680 & color) >> 16;
		var g = (65280 & color) >> 8;
		var b = 255 & color;
		return "rgba" + "(" + r + "," + g + "," + b + "," + alpha + ")";
	}
	,closePolygon: function(inCancelFill) {
		var l = this.mPoints.length;
		if(l > 0) {
			if(l > 1) {
				if(this.mFilling && l > 2) {
					if(this.mPoints[this.mLastMoveID].x != this.mPoints[l - 1].x || this.mPoints[this.mLastMoveID].y != this.mPoints[l - 1].y) this.lineTo(this.mPoints[this.mLastMoveID].x,this.mPoints[this.mLastMoveID].y);
				}
				this.addLineSegment();
				var drawable = new flash.display.Drawable(this.mPoints,this.mFillColour,this.mFillAlpha,this.mSolidGradient,this.mBitmap,this.mLineJobs,null);
				this.addDrawable(drawable);
			}
			this.mLineJobs = [];
			this.mPoints = [];
		}
		if(inCancelFill) {
			this.mFillAlpha = 0;
			this.mSolidGradient = null;
			this.mBitmap = null;
			this.mFilling = false;
		}
		this.__changed = true;
	}
	,clear: function() {
		this.__clearLine();
		this.mPenX = 0.0;
		this.mPenY = 0.0;
		this.mDrawList = new Array();
		this.nextDrawIndex = 0;
		this.mPoints = [];
		this.mSolidGradient = null;
		this.mFilling = false;
		this.mFillColour = 0;
		this.mFillAlpha = 0.0;
		this.mLastMoveID = 0;
		this.__clearNextCycle = true;
		this.boundsDirty = true;
		this.__extent.x = 0.0;
		this.__extent.y = 0.0;
		this.__extent.width = 0.0;
		this.__extent.height = 0.0;
		this._padding = 0.0;
		this.mLineJobs = [];
	}
	,blit: function(inTexture) {
		this.closePolygon(true);
		var ctx = (function($this) {
			var $r;
			try {
				$r = $this.__surface.getContext("2d");
			} catch( e ) {
				$r = null;
			}
			return $r;
		}(this));
		if(ctx != null) ctx.drawImage(inTexture.___textureBuffer,this.mPenX,this.mPenY);
	}
	,beginGradientFill: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.closePolygon(true);
		this.mFilling = true;
		this.mBitmap = null;
		this.mSolidGradient = this.createGradient(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
	}
	,beginFill: function(color,alpha) {
		this.closePolygon(true);
		this.mFillColour = color;
		this.mFillAlpha = alpha == null?1.0:alpha;
		this.mFilling = true;
		this.mSolidGradient = null;
		this.mBitmap = null;
	}
	,beginBitmapFill: function(bitmap,matrix,in_repeat,in_smooth) {
		if(in_smooth == null) in_smooth = false;
		if(in_repeat == null) in_repeat = true;
		this.closePolygon(true);
		var repeat = in_repeat == null?true:in_repeat;
		var smooth = in_smooth == null?false:in_smooth;
		this.mFilling = true;
		this.mSolidGradient = null;
		this.__expandStandardExtent(bitmap.___textureBuffer != null?bitmap.___textureBuffer.width:0,bitmap.___textureBuffer != null?bitmap.___textureBuffer.height:0);
		this.mBitmap = { texture_buffer : bitmap.___textureBuffer, matrix : matrix == null?matrix:matrix.clone(), flags : (repeat?16:0) | (smooth?65536:0)};
	}
	,addLineSegment: function() {
		if(this.mCurrentLine.point_idx1 > 0) this.mLineJobs.push(new flash.display.LineJob(this.mCurrentLine.grad,this.mCurrentLine.point_idx0,this.mCurrentLine.point_idx1,this.mCurrentLine.thickness,this.mCurrentLine.alpha,this.mCurrentLine.colour,this.mCurrentLine.pixel_hinting,this.mCurrentLine.joints,this.mCurrentLine.caps,this.mCurrentLine.scale_mode,this.mCurrentLine.miter_limit));
		this.mCurrentLine.point_idx0 = this.mCurrentLine.point_idx1 = -1;
	}
	,addDrawable: function(inDrawable) {
		if(inDrawable == null) return;
		this.mDrawList.unshift(inDrawable);
	}
	,__class__: flash.display.Graphics
}
flash.display.Drawable = function(inPoints,inFillColour,inFillAlpha,inSolidGradient,inBitmap,inLineJobs,inTileJob) {
	this.points = inPoints;
	this.fillColour = inFillColour;
	this.fillAlpha = inFillAlpha;
	this.solidGradient = inSolidGradient;
	this.bitmap = inBitmap;
	this.lineJobs = inLineJobs;
	this.tileJob = inTileJob;
};
$hxClasses["flash.display.Drawable"] = flash.display.Drawable;
flash.display.Drawable.__name__ = ["flash","display","Drawable"];
flash.display.Drawable.prototype = {
	__class__: flash.display.Drawable
}
flash.display.GfxPoint = function(inX,inY,inCX,inCY,inType) {
	this.x = inX;
	this.y = inY;
	this.cx = inCX;
	this.cy = inCY;
	this.type = inType;
};
$hxClasses["flash.display.GfxPoint"] = flash.display.GfxPoint;
flash.display.GfxPoint.__name__ = ["flash","display","GfxPoint"];
flash.display.GfxPoint.prototype = {
	__class__: flash.display.GfxPoint
}
flash.display.Grad = function(inPoints,inMatrix,inFlags,inFocal) {
	this.points = inPoints;
	this.matrix = inMatrix;
	this.flags = inFlags;
	this.focal = inFocal;
};
$hxClasses["flash.display.Grad"] = flash.display.Grad;
flash.display.Grad.__name__ = ["flash","display","Grad"];
flash.display.Grad.prototype = {
	__class__: flash.display.Grad
}
flash.display.GradPoint = function(inCol,inAlpha,inRatio) {
	this.col = inCol;
	this.alpha = inAlpha;
	this.ratio = inRatio;
};
$hxClasses["flash.display.GradPoint"] = flash.display.GradPoint;
flash.display.GradPoint.__name__ = ["flash","display","GradPoint"];
flash.display.GradPoint.prototype = {
	__class__: flash.display.GradPoint
}
flash.display.LineJob = function(inGrad,inPoint_idx0,inPoint_idx1,inThickness,inAlpha,inColour,inPixel_hinting,inJoints,inCaps,inScale_mode,inMiter_limit) {
	this.grad = inGrad;
	this.point_idx0 = inPoint_idx0;
	this.point_idx1 = inPoint_idx1;
	this.thickness = inThickness;
	this.alpha = inAlpha;
	this.colour = inColour;
	this.pixel_hinting = inPixel_hinting;
	this.joints = inJoints;
	this.caps = inCaps;
	this.scale_mode = inScale_mode;
	this.miter_limit = inMiter_limit;
};
$hxClasses["flash.display.LineJob"] = flash.display.LineJob;
flash.display.LineJob.__name__ = ["flash","display","LineJob"];
flash.display.LineJob.prototype = {
	__class__: flash.display.LineJob
}
flash.display.PointInPathMode = $hxClasses["flash.display.PointInPathMode"] = { __ename__ : true, __constructs__ : ["USER_SPACE","DEVICE_SPACE"] }
flash.display.PointInPathMode.USER_SPACE = ["USER_SPACE",0];
flash.display.PointInPathMode.USER_SPACE.toString = $estr;
flash.display.PointInPathMode.USER_SPACE.__enum__ = flash.display.PointInPathMode;
flash.display.PointInPathMode.DEVICE_SPACE = ["DEVICE_SPACE",1];
flash.display.PointInPathMode.DEVICE_SPACE.toString = $estr;
flash.display.PointInPathMode.DEVICE_SPACE.__enum__ = flash.display.PointInPathMode;
flash.display.TileJob = function(sheet,drawList,flags) {
	this.sheet = sheet;
	this.drawList = drawList;
	this.flags = flags;
};
$hxClasses["flash.display.TileJob"] = flash.display.TileJob;
flash.display.TileJob.__name__ = ["flash","display","TileJob"];
flash.display.TileJob.prototype = {
	__class__: flash.display.TileJob
}
flash.display.IGraphicsFill = function() { }
$hxClasses["flash.display.IGraphicsFill"] = flash.display.IGraphicsFill;
flash.display.IGraphicsFill.__name__ = ["flash","display","IGraphicsFill"];
flash.display.IGraphicsFill.prototype = {
	__class__: flash.display.IGraphicsFill
}
flash.display.IGraphicsData = function() { }
$hxClasses["flash.display.IGraphicsData"] = flash.display.IGraphicsData;
flash.display.IGraphicsData.__name__ = ["flash","display","IGraphicsData"];
flash.display.IGraphicsData.prototype = {
	__class__: flash.display.IGraphicsData
}
flash.display.GraphicsGradientFill = function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
	if(focalPointRatio == null) focalPointRatio = 0;
	this.type = type;
	this.colors = colors;
	this.alphas = alphas;
	this.ratios = ratios;
	this.matrix = matrix;
	this.spreadMethod = spreadMethod;
	this.interpolationMethod = interpolationMethod;
	this.focalPointRatio = focalPointRatio;
	this.__graphicsDataType = flash.display.GraphicsDataType.GRADIENT;
	this.__graphicsFillType = flash.display.GraphicsFillType.GRADIENT_FILL;
};
$hxClasses["flash.display.GraphicsGradientFill"] = flash.display.GraphicsGradientFill;
flash.display.GraphicsGradientFill.__name__ = ["flash","display","GraphicsGradientFill"];
flash.display.GraphicsGradientFill.__interfaces__ = [flash.display.IGraphicsFill,flash.display.IGraphicsData];
flash.display.GraphicsGradientFill.prototype = {
	__class__: flash.display.GraphicsGradientFill
}
flash.display.IGraphicsPath = function() { }
$hxClasses["flash.display.IGraphicsPath"] = flash.display.IGraphicsPath;
flash.display.IGraphicsPath.__name__ = ["flash","display","IGraphicsPath"];
flash.display.GraphicsPath = function(commands,data,winding) {
	this.commands = commands;
	this.data = data;
	this.winding = winding;
	this.__graphicsDataType = flash.display.GraphicsDataType.PATH;
};
$hxClasses["flash.display.GraphicsPath"] = flash.display.GraphicsPath;
flash.display.GraphicsPath.__name__ = ["flash","display","GraphicsPath"];
flash.display.GraphicsPath.__interfaces__ = [flash.display.IGraphicsPath,flash.display.IGraphicsData];
flash.display.GraphicsPath.prototype = {
	moveTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			flash._Vector.Vector_Impl_.push(this.commands,1);
			flash._Vector.Vector_Impl_.push(this.data,x);
			flash._Vector.Vector_Impl_.push(this.data,y);
		}
	}
	,lineTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			flash._Vector.Vector_Impl_.push(this.commands,2);
			flash._Vector.Vector_Impl_.push(this.data,x);
			flash._Vector.Vector_Impl_.push(this.data,y);
		}
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		if(this.commands != null && this.data != null) {
			flash._Vector.Vector_Impl_.push(this.commands,3);
			flash._Vector.Vector_Impl_.push(this.data,anchorX);
			flash._Vector.Vector_Impl_.push(this.data,anchorY);
			flash._Vector.Vector_Impl_.push(this.data,controlX);
			flash._Vector.Vector_Impl_.push(this.data,controlY);
		}
	}
	,__class__: flash.display.GraphicsPath
}
flash.display.GraphicsPathCommand = function() { }
$hxClasses["flash.display.GraphicsPathCommand"] = flash.display.GraphicsPathCommand;
flash.display.GraphicsPathCommand.__name__ = ["flash","display","GraphicsPathCommand"];
flash.display.GraphicsPathWinding = $hxClasses["flash.display.GraphicsPathWinding"] = { __ename__ : true, __constructs__ : ["EVEN_ODD","NON_ZERO"] }
flash.display.GraphicsPathWinding.EVEN_ODD = ["EVEN_ODD",0];
flash.display.GraphicsPathWinding.EVEN_ODD.toString = $estr;
flash.display.GraphicsPathWinding.EVEN_ODD.__enum__ = flash.display.GraphicsPathWinding;
flash.display.GraphicsPathWinding.NON_ZERO = ["NON_ZERO",1];
flash.display.GraphicsPathWinding.NON_ZERO.toString = $estr;
flash.display.GraphicsPathWinding.NON_ZERO.__enum__ = flash.display.GraphicsPathWinding;
flash.display.GraphicsSolidFill = function(color,alpha) {
	if(alpha == null) alpha = 1;
	if(color == null) color = 0;
	this.alpha = alpha;
	this.color = color;
	this.__graphicsDataType = flash.display.GraphicsDataType.SOLID;
	this.__graphicsFillType = flash.display.GraphicsFillType.SOLID_FILL;
};
$hxClasses["flash.display.GraphicsSolidFill"] = flash.display.GraphicsSolidFill;
flash.display.GraphicsSolidFill.__name__ = ["flash","display","GraphicsSolidFill"];
flash.display.GraphicsSolidFill.__interfaces__ = [flash.display.IGraphicsFill,flash.display.IGraphicsData];
flash.display.GraphicsSolidFill.prototype = {
	__class__: flash.display.GraphicsSolidFill
}
flash.display.IGraphicsStroke = function() { }
$hxClasses["flash.display.IGraphicsStroke"] = flash.display.IGraphicsStroke;
flash.display.IGraphicsStroke.__name__ = ["flash","display","IGraphicsStroke"];
flash.display.GraphicsStroke = function(thickness,pixelHinting,scaleMode,caps,joints,miterLimit,fill) {
	if(miterLimit == null) miterLimit = 3;
	if(pixelHinting == null) pixelHinting = false;
	if(thickness == null) thickness = 0.0;
	this.caps = caps != null?caps:null;
	this.fill = fill;
	this.joints = joints != null?joints:null;
	this.miterLimit = miterLimit;
	this.pixelHinting = pixelHinting;
	this.scaleMode = scaleMode != null?scaleMode:null;
	this.thickness = thickness;
	this.__graphicsDataType = flash.display.GraphicsDataType.STROKE;
};
$hxClasses["flash.display.GraphicsStroke"] = flash.display.GraphicsStroke;
flash.display.GraphicsStroke.__name__ = ["flash","display","GraphicsStroke"];
flash.display.GraphicsStroke.__interfaces__ = [flash.display.IGraphicsStroke,flash.display.IGraphicsData];
flash.display.GraphicsStroke.prototype = {
	__class__: flash.display.GraphicsStroke
}
flash.display.GraphicsDataType = $hxClasses["flash.display.GraphicsDataType"] = { __ename__ : true, __constructs__ : ["STROKE","SOLID","GRADIENT","PATH"] }
flash.display.GraphicsDataType.STROKE = ["STROKE",0];
flash.display.GraphicsDataType.STROKE.toString = $estr;
flash.display.GraphicsDataType.STROKE.__enum__ = flash.display.GraphicsDataType;
flash.display.GraphicsDataType.SOLID = ["SOLID",1];
flash.display.GraphicsDataType.SOLID.toString = $estr;
flash.display.GraphicsDataType.SOLID.__enum__ = flash.display.GraphicsDataType;
flash.display.GraphicsDataType.GRADIENT = ["GRADIENT",2];
flash.display.GraphicsDataType.GRADIENT.toString = $estr;
flash.display.GraphicsDataType.GRADIENT.__enum__ = flash.display.GraphicsDataType;
flash.display.GraphicsDataType.PATH = ["PATH",3];
flash.display.GraphicsDataType.PATH.toString = $estr;
flash.display.GraphicsDataType.PATH.__enum__ = flash.display.GraphicsDataType;
flash.display.GraphicsFillType = $hxClasses["flash.display.GraphicsFillType"] = { __ename__ : true, __constructs__ : ["SOLID_FILL","GRADIENT_FILL"] }
flash.display.GraphicsFillType.SOLID_FILL = ["SOLID_FILL",0];
flash.display.GraphicsFillType.SOLID_FILL.toString = $estr;
flash.display.GraphicsFillType.SOLID_FILL.__enum__ = flash.display.GraphicsFillType;
flash.display.GraphicsFillType.GRADIENT_FILL = ["GRADIENT_FILL",1];
flash.display.GraphicsFillType.GRADIENT_FILL.toString = $estr;
flash.display.GraphicsFillType.GRADIENT_FILL.__enum__ = flash.display.GraphicsFillType;
flash.display.InterpolationMethod = $hxClasses["flash.display.InterpolationMethod"] = { __ename__ : true, __constructs__ : ["RGB","LINEAR_RGB"] }
flash.display.InterpolationMethod.RGB = ["RGB",0];
flash.display.InterpolationMethod.RGB.toString = $estr;
flash.display.InterpolationMethod.RGB.__enum__ = flash.display.InterpolationMethod;
flash.display.InterpolationMethod.LINEAR_RGB = ["LINEAR_RGB",1];
flash.display.InterpolationMethod.LINEAR_RGB.toString = $estr;
flash.display.InterpolationMethod.LINEAR_RGB.__enum__ = flash.display.InterpolationMethod;
flash.display.JointStyle = $hxClasses["flash.display.JointStyle"] = { __ename__ : true, __constructs__ : ["MITER","ROUND","BEVEL"] }
flash.display.JointStyle.MITER = ["MITER",0];
flash.display.JointStyle.MITER.toString = $estr;
flash.display.JointStyle.MITER.__enum__ = flash.display.JointStyle;
flash.display.JointStyle.ROUND = ["ROUND",1];
flash.display.JointStyle.ROUND.toString = $estr;
flash.display.JointStyle.ROUND.__enum__ = flash.display.JointStyle;
flash.display.JointStyle.BEVEL = ["BEVEL",2];
flash.display.JointStyle.BEVEL.toString = $estr;
flash.display.JointStyle.BEVEL.__enum__ = flash.display.JointStyle;
flash.display.LineScaleMode = $hxClasses["flash.display.LineScaleMode"] = { __ename__ : true, __constructs__ : ["HORIZONTAL","NONE","NORMAL","VERTICAL"] }
flash.display.LineScaleMode.HORIZONTAL = ["HORIZONTAL",0];
flash.display.LineScaleMode.HORIZONTAL.toString = $estr;
flash.display.LineScaleMode.HORIZONTAL.__enum__ = flash.display.LineScaleMode;
flash.display.LineScaleMode.NONE = ["NONE",1];
flash.display.LineScaleMode.NONE.toString = $estr;
flash.display.LineScaleMode.NONE.__enum__ = flash.display.LineScaleMode;
flash.display.LineScaleMode.NORMAL = ["NORMAL",2];
flash.display.LineScaleMode.NORMAL.toString = $estr;
flash.display.LineScaleMode.NORMAL.__enum__ = flash.display.LineScaleMode;
flash.display.LineScaleMode.VERTICAL = ["VERTICAL",3];
flash.display.LineScaleMode.VERTICAL.toString = $estr;
flash.display.LineScaleMode.VERTICAL.__enum__ = flash.display.LineScaleMode;
flash.display.Loader = function() {
	flash.display.Sprite.call(this);
	this.contentLoaderInfo = flash.display.LoaderInfo.create(this);
};
$hxClasses["flash.display.Loader"] = flash.display.Loader;
flash.display.Loader.__name__ = ["flash","display","Loader"];
flash.display.Loader.__super__ = flash.display.Sprite;
flash.display.Loader.prototype = $extend(flash.display.Sprite.prototype,{
	handleLoad: function(e) {
		e.currentTarget = this;
		this.content.__invalidateBounds();
		this.content.__render(null,null);
		this.contentLoaderInfo.removeEventListener(flash.events.Event.COMPLETE,$bind(this,this.handleLoad));
	}
	,validateBounds: function() {
		if(this.get__boundsInvalid()) {
			flash.display.Sprite.prototype.validateBounds.call(this);
			if(this.mImage != null) {
				var r = new flash.geom.Rectangle(0,0,this.mImage.get_width(),this.mImage.get_height());
				if(r.width != 0 || r.height != 0) {
					if(this.__boundsRect.width == 0 && this.__boundsRect.height == 0) this.__boundsRect = r.clone(); else this.__boundsRect.extendBounds(r);
				}
			}
			if(this.scale9Grid != null) {
				this.__boundsRect.width *= this.__scaleX;
				this.__boundsRect.height *= this.__scaleY;
				this.__width = this.__boundsRect.width;
				this.__height = this.__boundsRect.height;
			} else {
				this.__width = this.__boundsRect.width * this.__scaleX;
				this.__height = this.__boundsRect.height * this.__scaleY;
			}
		}
	}
	,toString: function() {
		return "[Loader name=" + this.name + " id=" + this.___id + "]";
	}
	,loadBytes: function(buffer) {
		var _g = this;
		try {
			this.contentLoaderInfo.addEventListener(flash.events.Event.COMPLETE,$bind(this,this.handleLoad),false,2147483647);
			flash.display.BitmapData.loadFromBytes(buffer,null,function(bmd) {
				_g.content = new flash.display.Bitmap(bmd);
				_g.contentLoaderInfo.content = _g.content;
				_g.addChild(_g.content);
				var evt = new flash.events.Event(flash.events.Event.COMPLETE);
				evt.currentTarget = _g;
				_g.contentLoaderInfo.dispatchEvent(evt);
			});
		} catch( e ) {
			console.log("Error " + Std.string(e));
			var evt = new flash.events.IOErrorEvent(flash.events.IOErrorEvent.IO_ERROR);
			evt.currentTarget = this;
			this.contentLoaderInfo.dispatchEvent(evt);
		}
	}
	,load: function(request,context) {
		var extension = "";
		var parts = request.url.split(".");
		if(parts.length > 0) extension = parts[parts.length - 1].toLowerCase();
		var transparent = true;
		this.contentLoaderInfo.url = request.url;
		if(request.contentType == null && request.contentType != "") this.contentLoaderInfo.contentType = (function($this) {
			var $r;
			switch(extension) {
			case "swf":
				$r = "application/x-shockwave-flash";
				break;
			case "jpg":case "jpeg":
				$r = (function($this) {
					var $r;
					transparent = false;
					$r = "image/jpeg";
					return $r;
				}($this));
				break;
			case "png":
				$r = "image/png";
				break;
			case "gif":
				$r = "image/gif";
				break;
			default:
				$r = "application/x-www-form-urlencoded";
			}
			return $r;
		}(this)); else this.contentLoaderInfo.contentType = request.contentType;
		this.mImage = new flash.display.BitmapData(0,0,transparent);
		try {
			this.contentLoaderInfo.addEventListener(flash.events.Event.COMPLETE,$bind(this,this.handleLoad),false,2147483647);
			this.mImage.__loadFromFile(request.url,this.contentLoaderInfo);
			this.content = new flash.display.Bitmap(this.mImage);
			this.contentLoaderInfo.content = this.content;
			this.addChild(this.content);
		} catch( e ) {
			console.log("Error " + Std.string(e));
			var evt = new flash.events.IOErrorEvent(flash.events.IOErrorEvent.IO_ERROR);
			evt.currentTarget = this;
			this.contentLoaderInfo.dispatchEvent(evt);
			return;
		}
		if(this.mShape == null) {
			this.mShape = new flash.display.Shape();
			this.addChild(this.mShape);
		}
	}
	,__class__: flash.display.Loader
});
flash.display.LoaderInfo = function() {
	flash.events.EventDispatcher.call(this);
	this.applicationDomain = flash.system.ApplicationDomain.currentDomain;
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.childAllowsParent = true;
	this.parameters = { };
};
$hxClasses["flash.display.LoaderInfo"] = flash.display.LoaderInfo;
flash.display.LoaderInfo.__name__ = ["flash","display","LoaderInfo"];
flash.display.LoaderInfo.create = function(ldr) {
	var li = new flash.display.LoaderInfo();
	if(ldr != null) li.loader = ldr; else li.url = "";
	return li;
}
flash.display.LoaderInfo.__super__ = flash.events.EventDispatcher;
flash.display.LoaderInfo.prototype = $extend(flash.events.EventDispatcher.prototype,{
	__class__: flash.display.LoaderInfo
});
flash.display.MovieClip = function() {
	flash.display.Sprite.call(this);
	this.enabled = true;
	this.__currentFrame = 0;
	this.__totalFrames = 0;
	this.loaderInfo = flash.display.LoaderInfo.create(null);
};
$hxClasses["flash.display.MovieClip"] = flash.display.MovieClip;
flash.display.MovieClip.__name__ = ["flash","display","MovieClip"];
flash.display.MovieClip.__super__ = flash.display.Sprite;
flash.display.MovieClip.prototype = $extend(flash.display.Sprite.prototype,{
	get_totalFrames: function() {
		return this.__totalFrames;
	}
	,get_framesLoaded: function() {
		return this.__totalFrames;
	}
	,get_currentFrame: function() {
		return this.__currentFrame;
	}
	,toString: function() {
		return "[MovieClip name=" + this.name + " id=" + this.___id + "]";
	}
	,stop: function() {
	}
	,prevFrame: function() {
	}
	,play: function() {
	}
	,nextFrame: function() {
	}
	,gotoAndStop: function(frame,scene) {
		if(scene == null) scene = "";
	}
	,gotoAndPlay: function(frame,scene) {
		if(scene == null) scene = "";
	}
	,__class__: flash.display.MovieClip
	,__properties__: $extend(flash.display.Sprite.prototype.__properties__,{get_currentFrame:"get_currentFrame",get_framesLoaded:"get_framesLoaded",get_totalFrames:"get_totalFrames"})
});
flash.display.PixelSnapping = $hxClasses["flash.display.PixelSnapping"] = { __ename__ : true, __constructs__ : ["NEVER","AUTO","ALWAYS"] }
flash.display.PixelSnapping.NEVER = ["NEVER",0];
flash.display.PixelSnapping.NEVER.toString = $estr;
flash.display.PixelSnapping.NEVER.__enum__ = flash.display.PixelSnapping;
flash.display.PixelSnapping.AUTO = ["AUTO",1];
flash.display.PixelSnapping.AUTO.toString = $estr;
flash.display.PixelSnapping.AUTO.__enum__ = flash.display.PixelSnapping;
flash.display.PixelSnapping.ALWAYS = ["ALWAYS",2];
flash.display.PixelSnapping.ALWAYS.toString = $estr;
flash.display.PixelSnapping.ALWAYS.__enum__ = flash.display.PixelSnapping;
flash.display.Shape = function() {
	flash.display.DisplayObject.call(this);
	this.__graphics = new flash.display.Graphics();
};
$hxClasses["flash.display.Shape"] = flash.display.Shape;
flash.display.Shape.__name__ = ["flash","display","Shape"];
flash.display.Shape.__super__ = flash.display.DisplayObject;
flash.display.Shape.prototype = $extend(flash.display.DisplayObject.prototype,{
	get_graphics: function() {
		return this.__graphics;
	}
	,__getObjectUnderPoint: function(point) {
		if(this.parent == null) return null;
		if(this.parent.mouseEnabled && flash.display.DisplayObject.prototype.__getObjectUnderPoint.call(this,point) == this) return this.parent; else return null;
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,toString: function() {
		return "[Shape name=" + this.name + " id=" + this.___id + "]";
	}
	,__class__: flash.display.Shape
	,__properties__: $extend(flash.display.DisplayObject.prototype.__properties__,{get_graphics:"get_graphics"})
});
flash.display.SpreadMethod = $hxClasses["flash.display.SpreadMethod"] = { __ename__ : true, __constructs__ : ["REPEAT","REFLECT","PAD"] }
flash.display.SpreadMethod.REPEAT = ["REPEAT",0];
flash.display.SpreadMethod.REPEAT.toString = $estr;
flash.display.SpreadMethod.REPEAT.__enum__ = flash.display.SpreadMethod;
flash.display.SpreadMethod.REFLECT = ["REFLECT",1];
flash.display.SpreadMethod.REFLECT.toString = $estr;
flash.display.SpreadMethod.REFLECT.__enum__ = flash.display.SpreadMethod;
flash.display.SpreadMethod.PAD = ["PAD",2];
flash.display.SpreadMethod.PAD.toString = $estr;
flash.display.SpreadMethod.PAD.__enum__ = flash.display.SpreadMethod;
flash.events.MouseEvent = function(type,bubbles,cancelable,localX,localY,relatedObject,ctrlKey,altKey,shiftKey,buttonDown,delta,commandKey,clickCount) {
	if(clickCount == null) clickCount = 0;
	if(commandKey == null) commandKey = false;
	if(delta == null) delta = 0;
	if(buttonDown == null) buttonDown = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this.shiftKey = shiftKey;
	this.altKey = altKey;
	this.ctrlKey = ctrlKey;
	this.bubbles = bubbles;
	this.relatedObject = relatedObject;
	this.delta = delta;
	this.localX = localX;
	this.localY = localY;
	this.buttonDown = buttonDown;
	this.commandKey = commandKey;
	this.clickCount = clickCount;
};
$hxClasses["flash.events.MouseEvent"] = flash.events.MouseEvent;
flash.events.MouseEvent.__name__ = ["flash","events","MouseEvent"];
flash.events.MouseEvent.__create = function(type,event,local,target) {
	var __mouseDown = false;
	var delta = 2;
	if(type == flash.events.MouseEvent.MOUSE_WHEEL) {
		var mouseEvent = event;
		if(mouseEvent.wheelDelta) delta = mouseEvent.wheelDelta / 120 | 0; else if(mouseEvent.detail) -mouseEvent.detail | 0;
	}
	if(type == flash.events.MouseEvent.MOUSE_DOWN) __mouseDown = event.which != null?event.which == 1:event.button != null?event.button == 0:false; else if(type == flash.events.MouseEvent.MOUSE_UP) {
		if(event.which != null) {
			if(event.which == 1) __mouseDown = false; else if(event.button != null) {
				if(event.button == 0) __mouseDown = false; else __mouseDown = false;
			}
		}
	}
	var pseudoEvent = new flash.events.MouseEvent(type,true,false,local.x,local.y,null,event.ctrlKey,event.altKey,event.shiftKey,__mouseDown,delta);
	pseudoEvent.stageX = flash.Lib.get_current().get_stage().get_mouseX();
	pseudoEvent.stageY = flash.Lib.get_current().get_stage().get_mouseY();
	pseudoEvent.target = target;
	return pseudoEvent;
}
flash.events.MouseEvent.__super__ = flash.events.Event;
flash.events.MouseEvent.prototype = $extend(flash.events.Event.prototype,{
	updateAfterEvent: function() {
	}
	,__createSimilar: function(type,related,targ) {
		var result = new flash.events.MouseEvent(type,this.bubbles,this.cancelable,this.localX,this.localY,related == null?this.relatedObject:related,this.ctrlKey,this.altKey,this.shiftKey,this.buttonDown,this.delta,this.commandKey,this.clickCount);
		if(targ != null) result.target = targ;
		return result;
	}
	,__class__: flash.events.MouseEvent
});
flash.display.Stage = function(width,height) {
	flash.display.DisplayObjectContainer.call(this);
	this.__focusObject = null;
	this.__focusObjectActivated = false;
	this.__windowWidth = width;
	this.__windowHeight = height;
	this.stageFocusRect = false;
	this.scaleMode = flash.display.StageScaleMode.SHOW_ALL;
	this.__stageMatrix = new flash.geom.Matrix();
	this.tabEnabled = true;
	this.set_frameRate(0.0);
	this.set_backgroundColor(16777215);
	this.name = "Stage";
	this.loaderInfo = flash.display.LoaderInfo.create(null);
	this.loaderInfo.parameters.width = Std.string(this.__windowWidth);
	this.loaderInfo.parameters.height = Std.string(this.__windowHeight);
	this.__pointInPathMode = flash.display.Graphics.__detectIsPointInPathMode();
	this.__mouseOverObjects = [];
	this.set_showDefaultContextMenu(true);
	this.__touchInfo = [];
	this.__uIEventsQueue = new Array(1000);
	this.__uIEventsQueueIndex = 0;
};
$hxClasses["flash.display.Stage"] = flash.display.Stage;
flash.display.Stage.__name__ = ["flash","display","Stage"];
flash.display.Stage.getOrientation = function() {
	var rotation = window.orientation;
	var orientation = flash.display.Stage.OrientationPortrait;
	switch(rotation) {
	case -90:
		orientation = flash.display.Stage.OrientationLandscapeLeft;
		break;
	case 180:
		orientation = flash.display.Stage.OrientationPortraitUpsideDown;
		break;
	case 90:
		orientation = flash.display.Stage.OrientationLandscapeRight;
		break;
	default:
		orientation = flash.display.Stage.OrientationPortrait;
	}
	return orientation;
}
flash.display.Stage.__super__ = flash.display.DisplayObjectContainer;
flash.display.Stage.prototype = $extend(flash.display.DisplayObjectContainer.prototype,{
	get_stageWidth: function() {
		return this.__windowWidth;
	}
	,get_stageHeight: function() {
		return this.__windowHeight;
	}
	,get_stage: function() {
		return flash.Lib.__getStage();
	}
	,set_showDefaultContextMenu: function(showDefaultContextMenu) {
		if(showDefaultContextMenu != this.__showDefaultContextMenu && this.__showDefaultContextMenu != null) {
			if(!showDefaultContextMenu) flash.Lib.__disableRightClick(); else flash.Lib.__enableRightClick();
		}
		this.__showDefaultContextMenu = showDefaultContextMenu;
		return showDefaultContextMenu;
	}
	,get_showDefaultContextMenu: function() {
		return this.__showDefaultContextMenu;
	}
	,set_quality: function(inQuality) {
		return this.quality = inQuality;
	}
	,get_quality: function() {
		return this.quality != null?this.quality:flash.display.StageQuality.BEST;
	}
	,get_mouseY: function() {
		return this._mouseY;
	}
	,get_mouseX: function() {
		return this._mouseX;
	}
	,get_fullScreenHeight: function() {
		return js.Browser.window.innerHeight;
	}
	,get_fullScreenWidth: function() {
		return js.Browser.window.innerWidth;
	}
	,set_frameRate: function(speed) {
		if(speed == 0) {
			var window = js.Browser.window;
			var __requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
			if(__requestAnimationFrame == null) speed = 60;
		}
		if(speed != 0) this.__interval = 1000.0 / speed | 0;
		this.__frameRate = speed;
		this.__updateNextWake();
		return speed;
	}
	,get_frameRate: function() {
		return this.__frameRate;
	}
	,set_focus: function(inObj) {
		this.__onFocus(inObj);
		return this.__focusObject;
	}
	,get_focus: function() {
		return this.__focusObject;
	}
	,set_displayState: function(displayState) {
		if(displayState != this.displayState && this.displayState != null) {
			switch( (displayState)[1] ) {
			case 0:
				flash.Lib.__disableFullScreen();
				break;
			case 1:
			case 2:
				flash.Lib.__enableFullScreen();
				break;
			}
		}
		this.displayState = displayState;
		return displayState;
	}
	,get_displayState: function() {
		return this.displayState;
	}
	,set_color: function(col) {
		return this.__backgroundColour = col;
	}
	,get_color: function() {
		return this.__backgroundColour;
	}
	,set_backgroundColor: function(col) {
		return this.__backgroundColour = col;
	}
	,get_backgroundColor: function() {
		return this.__backgroundColour;
	}
	,__onTouch: function(event,touch,type,touchInfo,isPrimaryTouchPoint) {
		var rect = flash.Lib.mMe.__scr.getBoundingClientRect();
		var point = new flash.geom.Point(touch.pageX - rect.left,touch.pageY - rect.top);
		var obj = this.__getObjectUnderPoint(point);
		this._mouseX = point.x;
		this._mouseY = point.y;
		var stack = new Array();
		if(obj != null) obj.__getInteractiveObjectStack(stack);
		if(stack.length > 0) {
			stack.reverse();
			var local = obj.globalToLocal(point);
			var evt = flash.events.TouchEvent.__create(type,event,touch,local,obj);
			evt.touchPointID = touch.identifier;
			evt.isPrimaryTouchPoint = isPrimaryTouchPoint;
			this.__checkInOuts(evt,stack,touchInfo);
			obj.__fireEvent(evt);
			var mouseType = (function($this) {
				var $r;
				switch(type) {
				case "touchBegin":
					$r = flash.events.MouseEvent.MOUSE_DOWN;
					break;
				case "touchEnd":
					$r = flash.events.MouseEvent.MOUSE_UP;
					break;
				default:
					$r = (function($this) {
						var $r;
						if($this.__dragObject != null) $this.__drag(point);
						$r = flash.events.MouseEvent.MOUSE_MOVE;
						return $r;
					}($this));
				}
				return $r;
			}(this));
			obj.__fireEvent(flash.events.MouseEvent.__create(mouseType,evt,local,obj));
		} else {
			var evt = flash.events.TouchEvent.__create(type,event,touch,point,null);
			evt.touchPointID = touch.identifier;
			evt.isPrimaryTouchPoint = isPrimaryTouchPoint;
			this.__checkInOuts(evt,stack,touchInfo);
		}
	}
	,__onResize: function(inW,inH) {
		this.__windowWidth = inW;
		this.__windowHeight = inH;
		var event = new flash.events.Event(flash.events.Event.RESIZE);
		event.target = this;
		this.__broadcast(event);
	}
	,__onMouse: function(event,type) {
		var rect = flash.Lib.mMe.__scr.getBoundingClientRect();
		var point = new flash.geom.Point(event.clientX - rect.left,event.clientY - rect.top);
		if(this.__dragObject != null) this.__drag(point);
		var obj = this.__getObjectUnderPoint(point);
		this._mouseX = point.x;
		this._mouseY = point.y;
		var stack = new Array();
		if(obj != null) obj.__getInteractiveObjectStack(stack);
		if(stack.length > 0) {
			stack.reverse();
			var local = obj.globalToLocal(point);
			var evt = flash.events.MouseEvent.__create(type,event,local,obj);
			this.__checkInOuts(evt,stack);
			if(type == flash.events.MouseEvent.MOUSE_DOWN) this.__onFocus(stack[stack.length - 1]);
			obj.__fireEvent(evt);
		} else {
			var evt = flash.events.MouseEvent.__create(type,event,point,null);
			this.__checkInOuts(evt,stack);
		}
	}
	,__onFocus: function(target) {
		if(target != this.__focusObject) {
			if(this.__focusObject != null) this.__focusObject.__fireEvent(new flash.events.FocusEvent(flash.events.FocusEvent.FOCUS_OUT,true,false,this.__focusObject,false,0));
			target.__fireEvent(new flash.events.FocusEvent(flash.events.FocusEvent.FOCUS_IN,true,false,target,false,0));
			this.__focusObject = target;
		}
	}
	,__onKey: function(code,pressed,inChar,ctrl,alt,shift,keyLocation) {
		var stack = new Array();
		if(this.__focusObject == null) this.__getInteractiveObjectStack(stack); else this.__focusObject.__getInteractiveObjectStack(stack);
		if(stack.length > 0) {
			var obj = stack[0];
			var evt = new flash.events.KeyboardEvent(pressed?flash.events.KeyboardEvent.KEY_DOWN:flash.events.KeyboardEvent.KEY_UP,true,false,inChar,code,keyLocation,ctrl,alt,shift);
			obj.__fireEvent(evt);
		}
	}
	,__handleOrientationChange: function() {
	}
	,__handleAccelerometer: function(evt) {
		flash.display.Stage.__acceleration.x = evt.accelerationIncludingGravity.x;
		flash.display.Stage.__acceleration.y = evt.accelerationIncludingGravity.y;
		flash.display.Stage.__acceleration.z = evt.accelerationIncludingGravity.z;
	}
	,__updateNextWake: function() {
		if(this.__frameRate == 0) {
			var __requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
			__requestAnimationFrame($bind(this,this.__updateNextWake));
			this.__stageRender();
		} else {
			js.Browser.window.clearInterval(this.__timer);
			this.__timer = js.Browser.window.setInterval($bind(this,this.__stageRender),this.__interval);
		}
	}
	,__stopDrag: function(sprite) {
		this.__dragBounds = null;
		this.__dragObject = null;
	}
	,__startDrag: function(sprite,lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
		this.__dragBounds = bounds == null?null:bounds.clone();
		this.__dragObject = sprite;
		if(this.__dragObject != null) {
			var mouse = new flash.geom.Point(this._mouseX,this._mouseY);
			var p = this.__dragObject.parent;
			if(p != null) mouse = p.globalToLocal(mouse);
			if(lockCenter) {
				var bounds1 = sprite.getBounds(this);
				this.__dragOffsetX = this.__dragObject.get_x() - (bounds1.width / 2 + bounds1.x);
				this.__dragOffsetY = this.__dragObject.get_y() - (bounds1.height / 2 + bounds1.y);
			} else {
				this.__dragOffsetX = this.__dragObject.get_x() - mouse.x;
				this.__dragOffsetY = this.__dragObject.get_y() - mouse.y;
			}
		}
	}
	,__stageRender: function(_) {
		if(!this.__stageActive) {
			this.__onResize(this.__windowWidth,this.__windowHeight);
			var event = new flash.events.Event(flash.events.Event.ACTIVATE);
			event.target = this;
			this.__broadcast(event);
			this.__stageActive = true;
		}
		var _g1 = 0, _g = this.__uIEventsQueueIndex;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.__uIEventsQueue[i] != null) this.__processStageEvent(this.__uIEventsQueue[i]);
		}
		this.__uIEventsQueueIndex = 0;
		var event = new flash.events.Event(flash.events.Event.ENTER_FRAME);
		this.__broadcast(event);
		if(this.__invalid) {
			var event1 = new flash.events.Event(flash.events.Event.RENDER);
			this.__broadcast(event1);
		}
		this.__renderAll();
	}
	,__renderToCanvas: function(canvas) {
		canvas.width = canvas.width;
		this.__render(canvas);
	}
	,__renderAll: function() {
		this.__render(null,null);
	}
	,__queueStageEvent: function(evt) {
		this.__uIEventsQueue[this.__uIEventsQueueIndex++] = evt;
	}
	,__processStageEvent: function(evt) {
		evt.stopPropagation();
		switch(evt.type) {
		case "resize":
			this.__onResize(flash.Lib.__getWidth(),flash.Lib.__getHeight());
			break;
		case "focus":
			this.__onFocus(this);
			if(!this.__focusObjectActivated) {
				this.__focusObjectActivated = true;
				this.dispatchEvent(new flash.events.Event(flash.events.Event.ACTIVATE));
			}
			break;
		case "blur":
			if(this.__focusObjectActivated) {
				this.__focusObjectActivated = false;
				this.dispatchEvent(new flash.events.Event(flash.events.Event.DEACTIVATE));
			}
			break;
		case "mousemove":
			this.__onMouse(evt,flash.events.MouseEvent.MOUSE_MOVE);
			break;
		case "mousedown":
			this.__onMouse(evt,flash.events.MouseEvent.MOUSE_DOWN);
			break;
		case "mouseup":
			this.__onMouse(evt,flash.events.MouseEvent.MOUSE_UP);
			break;
		case "click":
			this.__onMouse(evt,flash.events.MouseEvent.CLICK);
			break;
		case "mousewheel":
			this.__onMouse(evt,flash.events.MouseEvent.MOUSE_WHEEL);
			break;
		case "dblclick":
			this.__onMouse(evt,flash.events.MouseEvent.DOUBLE_CLICK);
			break;
		case "keydown":
			var evt1 = evt;
			var keyCode = evt1.keyCode != null?evt1.keyCode:evt1.which;
			keyCode = flash.ui.Keyboard.__convertMozillaCode(keyCode);
			this.__onKey(keyCode,true,evt1.charCode,evt1.ctrlKey,evt1.altKey,evt1.shiftKey,evt1.keyLocation);
			break;
		case "keyup":
			var evt1 = evt;
			var keyCode = evt1.keyCode != null?evt1.keyCode:evt1.which;
			keyCode = flash.ui.Keyboard.__convertMozillaCode(keyCode);
			this.__onKey(keyCode,false,evt1.charCode,evt1.ctrlKey,evt1.altKey,evt1.shiftKey,evt1.keyLocation);
			break;
		case "touchstart":
			var evt1 = evt;
			evt1.preventDefault();
			var touchInfo = new flash.display._Stage.TouchInfo();
			this.__touchInfo[evt1.changedTouches[0].identifier] = touchInfo;
			this.__onTouch(evt1,evt1.changedTouches[0],"touchBegin",touchInfo,false);
			break;
		case "touchmove":
			var evt1 = evt;
			evt1.preventDefault();
			var touchInfo = this.__touchInfo[evt1.changedTouches[0].identifier];
			this.__onTouch(evt1,evt1.changedTouches[0],"touchMove",touchInfo,true);
			break;
		case "touchend":
			var evt1 = evt;
			evt1.preventDefault();
			var touchInfo = this.__touchInfo[evt1.changedTouches[0].identifier];
			this.__onTouch(evt1,evt1.changedTouches[0],"touchEnd",touchInfo,true);
			this.__touchInfo[evt1.changedTouches[0].identifier] = null;
			break;
		case "devicemotion":
			var evt1 = evt;
			this.__handleAccelerometer(evt1);
			break;
		case "orientationchange":
			this.__handleOrientationChange();
			break;
		default:
		}
	}
	,__isOnStage: function() {
		return true;
	}
	,__drag: function(point) {
		var p = this.__dragObject.parent;
		if(p != null) point = p.globalToLocal(point);
		var x = point.x + this.__dragOffsetX;
		var y = point.y + this.__dragOffsetY;
		if(this.__dragBounds != null) {
			if(x < this.__dragBounds.x) x = this.__dragBounds.x; else if(x > this.__dragBounds.get_right()) x = this.__dragBounds.get_right();
			if(y < this.__dragBounds.y) y = this.__dragBounds.y; else if(y > this.__dragBounds.get_bottom()) y = this.__dragBounds.get_bottom();
		}
		this.__dragObject.set_x(x);
		this.__dragObject.set_y(y);
	}
	,__checkInOuts: function(event,stack,touchInfo) {
		var prev = touchInfo == null?this.__mouseOverObjects:touchInfo.touchOverObjects;
		var changeEvents = touchInfo == null?flash.display.Stage.__mouseChanges:flash.display.Stage.__touchChanges;
		var new_n = stack.length;
		var new_obj = new_n > 0?stack[new_n - 1]:null;
		var old_n = prev.length;
		var old_obj = old_n > 0?prev[old_n - 1]:null;
		if(new_obj != old_obj) {
			if(old_obj != null) old_obj.__fireEvent(event.__createSimilar(changeEvents[0],new_obj,old_obj));
			if(new_obj != null) new_obj.__fireEvent(event.__createSimilar(changeEvents[1],old_obj,new_obj));
			var common = 0;
			while(common < new_n && common < old_n && stack[common] == prev[common]) common++;
			var rollOut = event.__createSimilar(changeEvents[2],new_obj,old_obj);
			var i = old_n - 1;
			while(i >= common) {
				prev[i].dispatchEvent(rollOut);
				i--;
			}
			var rollOver = event.__createSimilar(changeEvents[3],old_obj);
			var i1 = new_n - 1;
			while(i1 >= common) {
				stack[i1].dispatchEvent(rollOver);
				i1--;
			}
			if(touchInfo == null) this.__mouseOverObjects = stack; else touchInfo.touchOverObjects = stack;
		}
	}
	,toString: function() {
		return "[Stage id=" + this.___id + "]";
	}
	,invalidate: function() {
		this.__invalid = true;
	}
	,__class__: flash.display.Stage
	,__properties__: $extend(flash.display.DisplayObjectContainer.prototype.__properties__,{set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_color:"set_color",get_color:"get_color",set_displayState:"set_displayState",get_displayState:"get_displayState",set_focus:"set_focus",get_focus:"get_focus",set_frameRate:"set_frameRate",get_frameRate:"get_frameRate",get_fullScreenHeight:"get_fullScreenHeight",get_fullScreenWidth:"get_fullScreenWidth",set_quality:"set_quality",get_quality:"get_quality",set_showDefaultContextMenu:"set_showDefaultContextMenu",get_showDefaultContextMenu:"get_showDefaultContextMenu",get_stageHeight:"get_stageHeight",get_stageWidth:"get_stageWidth"})
});
flash.display._Stage = {}
flash.display._Stage.TouchInfo = function() {
	this.touchOverObjects = [];
};
$hxClasses["flash.display._Stage.TouchInfo"] = flash.display._Stage.TouchInfo;
flash.display._Stage.TouchInfo.__name__ = ["flash","display","_Stage","TouchInfo"];
flash.display._Stage.TouchInfo.prototype = {
	__class__: flash.display._Stage.TouchInfo
}
flash.display.Stage3D = function() {
	flash.events.EventDispatcher.call(this);
};
$hxClasses["flash.display.Stage3D"] = flash.display.Stage3D;
flash.display.Stage3D.__name__ = ["flash","display","Stage3D"];
flash.display.Stage3D.__super__ = flash.events.EventDispatcher;
flash.display.Stage3D.prototype = $extend(flash.events.EventDispatcher.prototype,{
	requestContext3D: function(context3DRenderMode) {
		if(context3DRenderMode == null) context3DRenderMode = "";
		if(openfl.display.OpenGLView.get_isSupported()) {
			this.context3D = new flash.display3D.Context3D();
			this.dispatchEvent(new flash.events.Event(flash.events.Event.CONTEXT3D_CREATE));
		} else this.dispatchEvent(new flash.events.ErrorEvent(flash.events.ErrorEvent.ERROR));
	}
	,__class__: flash.display.Stage3D
});
flash.display.StageAlign = $hxClasses["flash.display.StageAlign"] = { __ename__ : true, __constructs__ : ["TOP_RIGHT","TOP_LEFT","TOP","RIGHT","LEFT","BOTTOM_RIGHT","BOTTOM_LEFT","BOTTOM"] }
flash.display.StageAlign.TOP_RIGHT = ["TOP_RIGHT",0];
flash.display.StageAlign.TOP_RIGHT.toString = $estr;
flash.display.StageAlign.TOP_RIGHT.__enum__ = flash.display.StageAlign;
flash.display.StageAlign.TOP_LEFT = ["TOP_LEFT",1];
flash.display.StageAlign.TOP_LEFT.toString = $estr;
flash.display.StageAlign.TOP_LEFT.__enum__ = flash.display.StageAlign;
flash.display.StageAlign.TOP = ["TOP",2];
flash.display.StageAlign.TOP.toString = $estr;
flash.display.StageAlign.TOP.__enum__ = flash.display.StageAlign;
flash.display.StageAlign.RIGHT = ["RIGHT",3];
flash.display.StageAlign.RIGHT.toString = $estr;
flash.display.StageAlign.RIGHT.__enum__ = flash.display.StageAlign;
flash.display.StageAlign.LEFT = ["LEFT",4];
flash.display.StageAlign.LEFT.toString = $estr;
flash.display.StageAlign.LEFT.__enum__ = flash.display.StageAlign;
flash.display.StageAlign.BOTTOM_RIGHT = ["BOTTOM_RIGHT",5];
flash.display.StageAlign.BOTTOM_RIGHT.toString = $estr;
flash.display.StageAlign.BOTTOM_RIGHT.__enum__ = flash.display.StageAlign;
flash.display.StageAlign.BOTTOM_LEFT = ["BOTTOM_LEFT",6];
flash.display.StageAlign.BOTTOM_LEFT.toString = $estr;
flash.display.StageAlign.BOTTOM_LEFT.__enum__ = flash.display.StageAlign;
flash.display.StageAlign.BOTTOM = ["BOTTOM",7];
flash.display.StageAlign.BOTTOM.toString = $estr;
flash.display.StageAlign.BOTTOM.__enum__ = flash.display.StageAlign;
flash.display.StageDisplayState = $hxClasses["flash.display.StageDisplayState"] = { __ename__ : true, __constructs__ : ["NORMAL","FULL_SCREEN","FULL_SCREEN_INTERACTIVE"] }
flash.display.StageDisplayState.NORMAL = ["NORMAL",0];
flash.display.StageDisplayState.NORMAL.toString = $estr;
flash.display.StageDisplayState.NORMAL.__enum__ = flash.display.StageDisplayState;
flash.display.StageDisplayState.FULL_SCREEN = ["FULL_SCREEN",1];
flash.display.StageDisplayState.FULL_SCREEN.toString = $estr;
flash.display.StageDisplayState.FULL_SCREEN.__enum__ = flash.display.StageDisplayState;
flash.display.StageDisplayState.FULL_SCREEN_INTERACTIVE = ["FULL_SCREEN_INTERACTIVE",2];
flash.display.StageDisplayState.FULL_SCREEN_INTERACTIVE.toString = $estr;
flash.display.StageDisplayState.FULL_SCREEN_INTERACTIVE.__enum__ = flash.display.StageDisplayState;
flash.display.StageQuality = function() { }
$hxClasses["flash.display.StageQuality"] = flash.display.StageQuality;
flash.display.StageQuality.__name__ = ["flash","display","StageQuality"];
flash.display.StageScaleMode = $hxClasses["flash.display.StageScaleMode"] = { __ename__ : true, __constructs__ : ["SHOW_ALL","NO_SCALE","NO_BORDER","EXACT_FIT"] }
flash.display.StageScaleMode.SHOW_ALL = ["SHOW_ALL",0];
flash.display.StageScaleMode.SHOW_ALL.toString = $estr;
flash.display.StageScaleMode.SHOW_ALL.__enum__ = flash.display.StageScaleMode;
flash.display.StageScaleMode.NO_SCALE = ["NO_SCALE",1];
flash.display.StageScaleMode.NO_SCALE.toString = $estr;
flash.display.StageScaleMode.NO_SCALE.__enum__ = flash.display.StageScaleMode;
flash.display.StageScaleMode.NO_BORDER = ["NO_BORDER",2];
flash.display.StageScaleMode.NO_BORDER.toString = $estr;
flash.display.StageScaleMode.NO_BORDER.__enum__ = flash.display.StageScaleMode;
flash.display.StageScaleMode.EXACT_FIT = ["EXACT_FIT",3];
flash.display.StageScaleMode.EXACT_FIT.toString = $estr;
flash.display.StageScaleMode.EXACT_FIT.__enum__ = flash.display.StageScaleMode;
flash.display3D = {}
flash.display3D.Context3D = function() {
	this.disposed = false;
	this.vertexBuffersCreated = new Array();
	this.indexBuffersCreated = new Array();
	this.programsCreated = new Array();
	this.texturesCreated = new Array();
	this.boundTextures = new haxe.ds.ObjectMap();
	this.samplerParameters = new haxe.ds.ObjectMap();
	var stage = flash.Lib.get_current().get_stage();
	this.ogl = new openfl.display.OpenGLView();
	this.ogl.set_scrollRect(new flash.geom.Rectangle(0,0,stage.get_stageWidth(),stage.get_stageHeight()));
	this.ogl.set_width(stage.get_stageWidth());
	this.ogl.set_height(stage.get_stageHeight());
	stage.addChild(this.ogl);
};
$hxClasses["flash.display3D.Context3D"] = flash.display3D.Context3D;
flash.display3D.Context3D.__name__ = ["flash","display3D","Context3D"];
flash.display3D.Context3D.prototype = {
	updateBlendStatus: function() {
		if(this.blendEnabled) {
			openfl.gl.GL.enable(3042);
			openfl.gl.GL.blendEquation(32774);
			openfl.gl.GL.blendFunc(this.blendSourceFactor,this.blendDestinationFactor);
		} else openfl.gl.GL.disable(3042);
	}
	,setGLSLVertexBufferAt: function(locationName,buffer,bufferOffset,format) {
		if(bufferOffset == null) bufferOffset = 0;
		var location = openfl.gl.GL.getAttribLocation(this.currentProgram.glProgram,locationName);
		if(buffer == null) {
			openfl.gl.GL.bindBuffer(34962,null);
			return;
		}
		openfl.gl.GL.bindBuffer(34962,buffer.glBuffer);
		var dimension = 4;
		var type = 5126;
		var numBytes = 4;
		if(format == flash.display3D.Context3DVertexBufferFormat.BYTES_4) {
			dimension = 4;
			type = 5126;
			numBytes = 4;
		} else if(format == flash.display3D.Context3DVertexBufferFormat.FLOAT_1) {
			dimension = 1;
			type = 5126;
			numBytes = 4;
		} else if(format == flash.display3D.Context3DVertexBufferFormat.FLOAT_2) {
			dimension = 2;
			type = 5126;
			numBytes = 4;
		} else if(format == flash.display3D.Context3DVertexBufferFormat.FLOAT_3) {
			dimension = 3;
			type = 5126;
			numBytes = 4;
		} else if(format == flash.display3D.Context3DVertexBufferFormat.FLOAT_4) {
			dimension = 4;
			type = 5126;
			numBytes = 4;
		} else throw "Buffer format " + Std.string(format) + " is not supported";
		openfl.gl.GL.enableVertexAttribArray(location);
		openfl.gl.GL.vertexAttribPointer(location,dimension,type,false,buffer.data32PerVertex * numBytes,bufferOffset * numBytes);
	}
	,setVertexBufferAt: function(index,buffer,bufferOffset,format) {
		if(bufferOffset == null) bufferOffset = 0;
		var locationName = "va" + index;
		this.setGLSLVertexBufferAt(locationName,buffer,bufferOffset,format);
	}
	,setGLSLTextureAt: function(locationName,texture,textureIndex) {
		var location = openfl.gl.GL.getUniformLocation(this.currentProgram.glProgram,locationName);
		if(js.Boot.__instanceof(texture,flash.display3D.textures.Texture)) {
			switch(textureIndex) {
			case 0:
				openfl.gl.GL.activeTexture(33984);
				break;
			case 1:
				openfl.gl.GL.activeTexture(33985);
				break;
			case 2:
				openfl.gl.GL.activeTexture(33986);
				break;
			case 3:
				openfl.gl.GL.activeTexture(33987);
				break;
			case 4:
				openfl.gl.GL.activeTexture(33988);
				break;
			case 5:
				openfl.gl.GL.activeTexture(33989);
				break;
			case 6:
				openfl.gl.GL.activeTexture(33990);
				break;
			case 7:
				openfl.gl.GL.activeTexture(33991);
				break;
			default:
				throw "Does not support texture8 or more";
			}
			openfl.gl.GL.bindTexture(3553,(js.Boot.__cast(texture , flash.display3D.textures.Texture)).glTexture);
		} else if(texture == null) {
			openfl.gl.GL.bindTexture(3553,null);
			return;
		} else throw "Texture of type " + Type.getClassName(Type.getClass(texture)) + " not supported yet";
		openfl.gl.GL.uniform1i(location,textureIndex);
		this.boundTextures.set(location,texture);
		if(texture != null) {
			var parameters = this.samplerParameters.h[location.__id__];
			if(parameters != null) this.setTextureParameters(texture,parameters[0],parameters[1],parameters[2]); else this.setTextureParameters(texture,flash.display3D.Context3DWrapMode.REPEAT,flash.display3D.Context3DTextureFilter.NEAREST,flash.display3D.Context3DMipFilter.MIPNONE);
		}
	}
	,setTextureAt: function(sampler,texture) {
		var locationName = "fs" + sampler;
		this.setGLSLTextureAt(locationName,texture,sampler);
	}
	,setStencilReferenceValue: function(referenceValue,readMask,writeMask) {
		if(writeMask == null) writeMask = 255;
		if(readMask == null) readMask = 255;
		this.stencilReadMask = readMask;
		this.stencilRef = referenceValue;
		openfl.gl.GL.stencilFunc(this.stencilCompareMode,this.stencilRef,this.stencilReadMask);
		openfl.gl.GL.stencilMask(writeMask);
	}
	,setStencilActions: function(triangleFace,compareMode,actionOnBothPass,actionOnDepthFail,actionOnDepthPassStencilFail) {
		this.stencilCompareMode = compareMode;
		openfl.gl.GL.stencilOp(actionOnBothPass,actionOnDepthFail,actionOnDepthPassStencilFail);
		openfl.gl.GL.stencilFunc(this.stencilCompareMode,this.stencilRef,this.stencilReadMask);
	}
	,setScissorRectangle: function(rectangle) {
		if(rectangle != null) openfl.gl.GL.scissor(rectangle.x | 0,rectangle.y | 0,rectangle.width | 0,rectangle.height | 0);
	}
	,setTextureParameters: function(texture,wrap,filter,mipfilter) {
		if(js.Boot.__instanceof(texture,flash.display3D.textures.Texture)) {
			openfl.gl.GL.bindTexture(3553,(js.Boot.__cast(texture , flash.display3D.textures.Texture)).glTexture);
			switch( (wrap)[1] ) {
			case 0:
				openfl.gl.GL.texParameteri(3553,10242,33071);
				openfl.gl.GL.texParameteri(3553,10243,33071);
				break;
			case 1:
				openfl.gl.GL.texParameteri(3553,10242,10497);
				openfl.gl.GL.texParameteri(3553,10243,10497);
				break;
			}
			switch( (filter)[1] ) {
			case 0:
				openfl.gl.GL.texParameteri(3553,10240,9729);
				break;
			case 1:
				openfl.gl.GL.texParameteri(3553,10240,9728);
				break;
			}
			switch( (mipfilter)[1] ) {
			case 0:
				openfl.gl.GL.texParameteri(3553,10241,9987);
				break;
			case 1:
				openfl.gl.GL.texParameteri(3553,10241,9984);
				break;
			case 2:
				openfl.gl.GL.texParameteri(3553,10241,9728);
				break;
			}
		} else throw "Texture of type " + Type.getClassName(Type.getClass(texture)) + " not supported yet";
	}
	,setGLSLSamplerStateAt: function(locationName,wrap,filter,mipfilter) {
		var location = openfl.gl.GL.getUniformLocation(this.currentProgram.glProgram,locationName);
		this.samplerParameters.set(location,[wrap,filter,mipfilter]);
		var texture = this.boundTextures.h[location.__id__];
		if(texture != null) this.setTextureParameters(texture,wrap,filter,mipfilter);
	}
	,setSamplerStateAt: function(sampler,wrap,filter,mipfilter) {
		var locationName = "fs" + sampler;
		this.setGLSLSamplerStateAt(locationName,wrap,filter,mipfilter);
	}
	,setRenderToTexture: function(texture,enableDepthAndStencil,antiAlias,surfaceSelector) {
		if(surfaceSelector == null) surfaceSelector = 0;
		if(antiAlias == null) antiAlias = 0;
		if(enableDepthAndStencil == null) enableDepthAndStencil = false;
		if(this.tmpFrameBuffer == null) this.tmpFrameBuffer = openfl.gl.GL.createFramebuffer();
		openfl.gl.GL.bindFramebuffer(36160,this.tmpFrameBuffer);
		openfl.gl.GL.bindTexture(3553,texture.glTexture);
		openfl.gl.GL.texParameteri(3553,10240,9728);
		openfl.gl.GL.texParameteri(3553,10241,9728);
		openfl.gl.GL.framebufferTexture2D(36160,36064,3553,texture.glTexture,0);
		var frameBufferStatus = openfl.gl.GL.checkFramebufferStatus(36160);
		switch(frameBufferStatus) {
		case 36053:
			console.log("FRAMEBUFFER_COMPLETE");
			break;
		case 36054:
			console.log("FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
			break;
		case 36057:
			console.log("FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
			break;
		case 36055:
			console.log("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
			break;
		case 36061:
			console.log("FRAMEBUFFER_UNSUPPORTED");
			break;
		default:
			console.log("frameBufferStatus " + frameBufferStatus);
		}
	}
	,setRenderToBackBuffer: function() {
		openfl.gl.GL.bindFramebuffer(36160,null);
	}
	,removeRenderMethod: function(func) {
		this.ogl.set_render(null);
	}
	,setRenderMethod: function(func) {
		this.ogl.set_render(function(rect) {
			func(null);
		});
	}
	,setGLSLProgramConstantsFromVector4: function(locationName,data,startIndex) {
		if(startIndex == null) startIndex = 0;
		var location = openfl.gl.GL.getUniformLocation(this.currentProgram.glProgram,locationName);
		openfl.gl.GL.uniform4f(location,data[startIndex],data[startIndex + 1],data[startIndex + 2],data[startIndex + 3]);
	}
	,setGLSLProgramConstantsFromMatrix: function(locationName,matrix,transposedMatrix) {
		if(transposedMatrix == null) transposedMatrix = false;
		var location = openfl.gl.GL.getUniformLocation(this.currentProgram.glProgram,locationName);
		openfl.gl.GL.uniformMatrix3D(location,!transposedMatrix,matrix);
	}
	,setGLSLProgramConstantsFromByteArray: function(locationName,data,byteArrayOffset) {
		if(byteArrayOffset == null) byteArrayOffset = -1;
		if(byteArrayOffset != -1) data.position = byteArrayOffset;
		var location = openfl.gl.GL.getUniformLocation(this.currentProgram.glProgram,locationName);
		openfl.gl.GL.uniform4f(location,data.readFloat(),data.readFloat(),data.readFloat(),data.readFloat());
	}
	,setProgramConstantsFromVector: function(programType,firstRegister,data,numRegisters) {
		if(numRegisters == null) numRegisters = -1;
		var _g = 0;
		while(_g < numRegisters) {
			var i = _g++;
			var currentIndex = i * 4;
			var locationName = this.getUniformLocationNameFromAgalRegisterIndex(programType,firstRegister + i);
			this.setGLSLProgramConstantsFromVector4(locationName,data,currentIndex);
		}
	}
	,setProgramConstantsFromMatrix: function(programType,firstRegister,matrix,transposedMatrix) {
		if(transposedMatrix == null) transposedMatrix = false;
		var locationName = this.getUniformLocationNameFromAgalRegisterIndex(programType,firstRegister);
		this.setGLSLProgramConstantsFromMatrix(locationName,matrix,transposedMatrix);
	}
	,setProgramConstantsFromByteArray: function(programType,firstRegister,numRegisters,data,byteArrayOffset) {
		data.position = byteArrayOffset;
		var _g = 0;
		while(_g < numRegisters) {
			var i = _g++;
			var locationName = this.getUniformLocationNameFromAgalRegisterIndex(programType,firstRegister + i);
			this.setGLSLProgramConstantsFromByteArray(locationName,data);
		}
	}
	,getUniformLocationNameFromAgalRegisterIndex: function(programType,firstRegister) {
		if(programType == flash.display3D.Context3DProgramType.VERTEX) return "vc" + firstRegister; else if(programType == flash.display3D.Context3DProgramType.FRAGMENT) return "fc" + firstRegister;
		throw "Program Type " + Std.string(programType) + " not supported";
	}
	,setProgram: function(program3D) {
		var glProgram = null;
		if(program3D != null) glProgram = program3D.glProgram;
		openfl.gl.GL.useProgram(glProgram);
		this.currentProgram = program3D;
	}
	,setDepthTest: function(depthMask,passCompareMode) {
		openfl.gl.GL.depthFunc(passCompareMode);
		openfl.gl.GL.depthMask(depthMask);
	}
	,setCulling: function(triangleFaceToCull) {
		if(triangleFaceToCull == 0) openfl.gl.GL.disable(2884); else {
			openfl.gl.GL.cullFace(triangleFaceToCull);
			openfl.gl.GL.enable(2884);
		}
	}
	,setColorMask: function(red,green,blue,alpha) {
		openfl.gl.GL.colorMask(red,green,blue,alpha);
	}
	,setBlendFactors: function(sourceFactor,destinationFactor) {
		this.blendEnabled = true;
		this.blendSourceFactor = sourceFactor;
		this.blendDestinationFactor = destinationFactor;
		this.updateBlendStatus();
	}
	,present: function() {
		this.drawing = false;
		openfl.gl.GL.useProgram(null);
		openfl.gl.GL.bindBuffer(34962,null);
	}
	,drawTriangles: function(indexBuffer,firstIndex,numTriangles) {
		if(numTriangles == null) numTriangles = -1;
		if(firstIndex == null) firstIndex = 0;
		if(!this.drawing) throw new flash.errors.Error("Need to clear before drawing if the buffer has not been cleared since the last present() call.");
		var numIndices;
		if(numTriangles == -1) numIndices = indexBuffer.numIndices; else numIndices = numTriangles * 3;
		var byteOffset = firstIndex * 2;
		openfl.gl.GL.bindBuffer(34963,indexBuffer.glBuffer);
		openfl.gl.GL.drawElements(4,numIndices,5123,byteOffset);
		openfl.gl.GL.flush();
	}
	,drawToBitmapData: function(destination) {
	}
	,dispose: function() {
		var _g = 0, _g1 = this.vertexBuffersCreated;
		while(_g < _g1.length) {
			var vertexBuffer = _g1[_g];
			++_g;
			vertexBuffer.dispose();
		}
		this.vertexBuffersCreated = null;
		var _g = 0, _g1 = this.indexBuffersCreated;
		while(_g < _g1.length) {
			var indexBuffer = _g1[_g];
			++_g;
			indexBuffer.dispose();
		}
		this.indexBuffersCreated = null;
		var _g = 0, _g1 = this.programsCreated;
		while(_g < _g1.length) {
			var program = _g1[_g];
			++_g;
			program.dispose();
		}
		this.programsCreated = null;
		this.boundTextures = null;
		this.samplerParameters = null;
		var _g = 0, _g1 = this.texturesCreated;
		while(_g < _g1.length) {
			var texture = _g1[_g];
			++_g;
			texture.dispose();
		}
		this.texturesCreated = null;
		if(this.tmpFrameBuffer != null) {
			openfl.gl.GL.deleteFramebuffer(this.tmpFrameBuffer);
			this.tmpFrameBuffer = null;
		}
		this.disposed = true;
	}
	,createVertexBuffer: function(numVertices,data32PerVertex) {
		var vertexBuffer = new flash.display3D.VertexBuffer3D(openfl.gl.GL.createBuffer(),numVertices,data32PerVertex);
		this.vertexBuffersCreated.push(vertexBuffer);
		return vertexBuffer;
	}
	,createTexture: function(width,height,format,optimizeForRenderToTexture,streamingLevels) {
		if(streamingLevels == null) streamingLevels = 0;
		var texture = new flash.display3D.textures.Texture(openfl.gl.GL.createTexture(),width,height);
		this.texturesCreated.push(texture);
		return texture;
	}
	,createProgram: function() {
		var program = new flash.display3D.Program3D(openfl.gl.GL.createProgram());
		this.programsCreated.push(program);
		return program;
	}
	,createIndexBuffer: function(numIndices) {
		var indexBuffer = new flash.display3D.IndexBuffer3D(openfl.gl.GL.createBuffer(),numIndices);
		this.indexBuffersCreated.push(indexBuffer);
		return indexBuffer;
	}
	,createCubeTexture: function(size,format,optimizeForRenderToTexture,streamingLevels) {
		if(streamingLevels == null) streamingLevels = 0;
		var texture = new flash.display3D.textures.CubeTexture(openfl.gl.GL.createTexture(),size);
		this.texturesCreated.push(texture);
		return texture;
	}
	,configureBackBuffer: function(width,height,antiAlias,enableDepthAndStencil) {
		if(enableDepthAndStencil == null) enableDepthAndStencil = true;
		if(enableDepthAndStencil) {
			openfl.gl.GL.enable(2929);
			openfl.gl.GL.enable(2960);
		}
		this.ogl.set_scrollRect(new flash.geom.Rectangle(0,0,width,height));
	}
	,clear: function(red,green,blue,alpha,depth,stencil,mask) {
		if(mask == null) mask = 17664;
		if(stencil == null) stencil = 0;
		if(depth == null) depth = 1;
		if(alpha == null) alpha = 1;
		if(blue == null) blue = 0;
		if(green == null) green = 0;
		if(red == null) red = 0;
		if(!this.drawing) {
			this.updateBlendStatus();
			this.drawing = true;
		}
		openfl.gl.GL.clearColor(red,green,blue,alpha);
		openfl.gl.GL.clearDepth(depth);
		openfl.gl.GL.clearStencil(stencil);
		openfl.gl.GL.clear(mask);
	}
	,__class__: flash.display3D.Context3D
}
flash.display3D.AGLSLContext3D = function() {
	flash.display3D.Context3D.call(this);
	this._yFlip = 1;
};
$hxClasses["flash.display3D.AGLSLContext3D"] = flash.display3D.AGLSLContext3D;
flash.display3D.AGLSLContext3D.__name__ = ["flash","display3D","AGLSLContext3D"];
flash.display3D.AGLSLContext3D.__super__ = flash.display3D.Context3D;
flash.display3D.AGLSLContext3D.prototype = $extend(flash.display3D.Context3D.prototype,{
	present: function() {
		this.drawing = false;
	}
	,drawTriangles: function(indexBuffer,firstIndex,numTriangles) {
		if(numTriangles == null) numTriangles = -1;
		if(firstIndex == null) firstIndex = 0;
		var location = openfl.gl.GL.getUniformLocation(this.currentProgram.glProgram,"yflip");
		openfl.gl.GL.uniform1f(location,this._yFlip);
		flash.display3D.Context3D.prototype.drawTriangles.call(this,indexBuffer,firstIndex,numTriangles);
	}
	,setProgramConstantsFromMatrix: function(programType,firstRegister,matrix,transposedMatrix) {
		if(transposedMatrix == null) transposedMatrix = false;
		var d = matrix.rawData;
		if(transposedMatrix) {
			this.setProgramConstantsFromVector(programType,firstRegister,[d[0],d[4],d[8],d[12]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 1,[d[1],d[5],d[9],d[13]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 2,[d[2],d[6],d[10],d[14]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 3,[d[3],d[7],d[11],d[15]],1);
		} else {
			this.setProgramConstantsFromVector(programType,firstRegister,[d[0],d[1],d[2],d[3]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 1,[d[4],d[5],d[6],d[7]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 2,[d[8],d[9],d[10],d[11]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 3,[d[12],d[13],d[14],d[15]],1);
		}
	}
	,setCulling: function(triangleFaceToCull) {
		flash.display3D.Context3D.prototype.setCulling.call(this,triangleFaceToCull);
		switch(triangleFaceToCull) {
		case 1029:
			this._yFlip = -1;
			break;
		case 1028:
			this._yFlip = 1;
			break;
		case 1032:
			this._yFlip = 1;
			break;
		case 0:
			this._yFlip = 1;
			break;
		default:
			throw "Unknown culling mode " + triangleFaceToCull + ".";
		}
	}
	,__class__: flash.display3D.AGLSLContext3D
});
flash.display3D._Context3DBlendFactor = {}
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_ = function() { }
$hxClasses["flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_"] = flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.__name__ = ["flash","display3D","_Context3DBlendFactor","Context3DBlendFactor_Impl_"];
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_._new = function(a) {
	return a;
}
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.fromInt = function(s) {
	return s;
}
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.toInt = function(this1) {
	return this1;
}
flash.display3D.Context3DClearMask = function() { }
$hxClasses["flash.display3D.Context3DClearMask"] = flash.display3D.Context3DClearMask;
flash.display3D.Context3DClearMask.__name__ = ["flash","display3D","Context3DClearMask"];
flash.display3D._Context3DCompareMode = {}
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_ = function() { }
$hxClasses["flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_"] = flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_;
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.__name__ = ["flash","display3D","_Context3DCompareMode","Context3DCompareMode_Impl_"];
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_._new = function(a) {
	return a;
}
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.fromInt = function(s) {
	return s;
}
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.toInt = function(this1) {
	return this1;
}
flash.display3D.Context3DMipFilter = $hxClasses["flash.display3D.Context3DMipFilter"] = { __ename__ : true, __constructs__ : ["MIPLINEAR","MIPNEAREST","MIPNONE"] }
flash.display3D.Context3DMipFilter.MIPLINEAR = ["MIPLINEAR",0];
flash.display3D.Context3DMipFilter.MIPLINEAR.toString = $estr;
flash.display3D.Context3DMipFilter.MIPLINEAR.__enum__ = flash.display3D.Context3DMipFilter;
flash.display3D.Context3DMipFilter.MIPNEAREST = ["MIPNEAREST",1];
flash.display3D.Context3DMipFilter.MIPNEAREST.toString = $estr;
flash.display3D.Context3DMipFilter.MIPNEAREST.__enum__ = flash.display3D.Context3DMipFilter;
flash.display3D.Context3DMipFilter.MIPNONE = ["MIPNONE",2];
flash.display3D.Context3DMipFilter.MIPNONE.toString = $estr;
flash.display3D.Context3DMipFilter.MIPNONE.__enum__ = flash.display3D.Context3DMipFilter;
flash.display3D.Context3DProgramType = $hxClasses["flash.display3D.Context3DProgramType"] = { __ename__ : true, __constructs__ : ["VERTEX","FRAGMENT"] }
flash.display3D.Context3DProgramType.VERTEX = ["VERTEX",0];
flash.display3D.Context3DProgramType.VERTEX.toString = $estr;
flash.display3D.Context3DProgramType.VERTEX.__enum__ = flash.display3D.Context3DProgramType;
flash.display3D.Context3DProgramType.FRAGMENT = ["FRAGMENT",1];
flash.display3D.Context3DProgramType.FRAGMENT.toString = $estr;
flash.display3D.Context3DProgramType.FRAGMENT.__enum__ = flash.display3D.Context3DProgramType;
flash.display3D.Context3DRenderMode = $hxClasses["flash.display3D.Context3DRenderMode"] = { __ename__ : true, __constructs__ : ["AUTO","SOFTWARE"] }
flash.display3D.Context3DRenderMode.AUTO = ["AUTO",0];
flash.display3D.Context3DRenderMode.AUTO.toString = $estr;
flash.display3D.Context3DRenderMode.AUTO.__enum__ = flash.display3D.Context3DRenderMode;
flash.display3D.Context3DRenderMode.SOFTWARE = ["SOFTWARE",1];
flash.display3D.Context3DRenderMode.SOFTWARE.toString = $estr;
flash.display3D.Context3DRenderMode.SOFTWARE.__enum__ = flash.display3D.Context3DRenderMode;
flash.display3D.Context3DTextureFilter = $hxClasses["flash.display3D.Context3DTextureFilter"] = { __ename__ : true, __constructs__ : ["LINEAR","NEAREST"] }
flash.display3D.Context3DTextureFilter.LINEAR = ["LINEAR",0];
flash.display3D.Context3DTextureFilter.LINEAR.toString = $estr;
flash.display3D.Context3DTextureFilter.LINEAR.__enum__ = flash.display3D.Context3DTextureFilter;
flash.display3D.Context3DTextureFilter.NEAREST = ["NEAREST",1];
flash.display3D.Context3DTextureFilter.NEAREST.toString = $estr;
flash.display3D.Context3DTextureFilter.NEAREST.__enum__ = flash.display3D.Context3DTextureFilter;
flash.display3D.Context3DTextureFormat = $hxClasses["flash.display3D.Context3DTextureFormat"] = { __ename__ : true, __constructs__ : ["BGRA","COMPRESSED","COMPRESSED_ALPHA"] }
flash.display3D.Context3DTextureFormat.BGRA = ["BGRA",0];
flash.display3D.Context3DTextureFormat.BGRA.toString = $estr;
flash.display3D.Context3DTextureFormat.BGRA.__enum__ = flash.display3D.Context3DTextureFormat;
flash.display3D.Context3DTextureFormat.COMPRESSED = ["COMPRESSED",1];
flash.display3D.Context3DTextureFormat.COMPRESSED.toString = $estr;
flash.display3D.Context3DTextureFormat.COMPRESSED.__enum__ = flash.display3D.Context3DTextureFormat;
flash.display3D.Context3DTextureFormat.COMPRESSED_ALPHA = ["COMPRESSED_ALPHA",2];
flash.display3D.Context3DTextureFormat.COMPRESSED_ALPHA.toString = $estr;
flash.display3D.Context3DTextureFormat.COMPRESSED_ALPHA.__enum__ = flash.display3D.Context3DTextureFormat;
flash.display3D._Context3DTriangleFace = {}
flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_ = function() { }
$hxClasses["flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_"] = flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_;
flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_.__name__ = ["flash","display3D","_Context3DTriangleFace","Context3DTriangleFace_Impl_"];
flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_._new = function(a) {
	return a;
}
flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_.fromInt = function(s) {
	return s;
}
flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_.toInt = function(this1) {
	return this1;
}
flash.display3D.Context3DVertexBufferFormat = $hxClasses["flash.display3D.Context3DVertexBufferFormat"] = { __ename__ : true, __constructs__ : ["BYTES_4","FLOAT_1","FLOAT_2","FLOAT_3","FLOAT_4"] }
flash.display3D.Context3DVertexBufferFormat.BYTES_4 = ["BYTES_4",0];
flash.display3D.Context3DVertexBufferFormat.BYTES_4.toString = $estr;
flash.display3D.Context3DVertexBufferFormat.BYTES_4.__enum__ = flash.display3D.Context3DVertexBufferFormat;
flash.display3D.Context3DVertexBufferFormat.FLOAT_1 = ["FLOAT_1",1];
flash.display3D.Context3DVertexBufferFormat.FLOAT_1.toString = $estr;
flash.display3D.Context3DVertexBufferFormat.FLOAT_1.__enum__ = flash.display3D.Context3DVertexBufferFormat;
flash.display3D.Context3DVertexBufferFormat.FLOAT_2 = ["FLOAT_2",2];
flash.display3D.Context3DVertexBufferFormat.FLOAT_2.toString = $estr;
flash.display3D.Context3DVertexBufferFormat.FLOAT_2.__enum__ = flash.display3D.Context3DVertexBufferFormat;
flash.display3D.Context3DVertexBufferFormat.FLOAT_3 = ["FLOAT_3",3];
flash.display3D.Context3DVertexBufferFormat.FLOAT_3.toString = $estr;
flash.display3D.Context3DVertexBufferFormat.FLOAT_3.__enum__ = flash.display3D.Context3DVertexBufferFormat;
flash.display3D.Context3DVertexBufferFormat.FLOAT_4 = ["FLOAT_4",4];
flash.display3D.Context3DVertexBufferFormat.FLOAT_4.toString = $estr;
flash.display3D.Context3DVertexBufferFormat.FLOAT_4.__enum__ = flash.display3D.Context3DVertexBufferFormat;
flash.display3D.Context3DWrapMode = $hxClasses["flash.display3D.Context3DWrapMode"] = { __ename__ : true, __constructs__ : ["CLAMP","REPEAT"] }
flash.display3D.Context3DWrapMode.CLAMP = ["CLAMP",0];
flash.display3D.Context3DWrapMode.CLAMP.toString = $estr;
flash.display3D.Context3DWrapMode.CLAMP.__enum__ = flash.display3D.Context3DWrapMode;
flash.display3D.Context3DWrapMode.REPEAT = ["REPEAT",1];
flash.display3D.Context3DWrapMode.REPEAT.toString = $estr;
flash.display3D.Context3DWrapMode.REPEAT.__enum__ = flash.display3D.Context3DWrapMode;
flash.display3D.IndexBuffer3D = function(glBuffer,numIndices) {
	this.glBuffer = glBuffer;
	this.numIndices = numIndices;
};
$hxClasses["flash.display3D.IndexBuffer3D"] = flash.display3D.IndexBuffer3D;
flash.display3D.IndexBuffer3D.__name__ = ["flash","display3D","IndexBuffer3D"];
flash.display3D.IndexBuffer3D.prototype = {
	dispose: function() {
		openfl.gl.GL.deleteBuffer(this.glBuffer);
	}
	,uploadFromVector: function(data,startOffset,count) {
		openfl.gl.GL.bindBuffer(34963,this.glBuffer);
		var indices;
		indices = new Int16Array(count * 2);
		var _g1 = startOffset, _g = startOffset + count;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i] = data[i];
		}
		openfl.gl.GL.bufferData(34963,indices,35044);
	}
	,uploadFromByteArray: function(byteArray,byteArrayOffset,startOffset,count) {
		var bytesPerIndex = 2;
		openfl.gl.GL.bindBuffer(34963,this.glBuffer);
		var length = count * bytesPerIndex;
		var offset = byteArrayOffset + startOffset * bytesPerIndex;
		var indices;
		indices = new Int16Array(length);
		byteArray.position = offset;
		var i = 0;
		while(byteArray.position < length + offset) {
			indices[i] = byteArray.readUnsignedByte();
			i++;
		}
		openfl.gl.GL.bufferData(34963,indices,35044);
	}
	,__class__: flash.display3D.IndexBuffer3D
}
flash.display3D.Program3D = function(program) {
	this.glProgram = program;
};
$hxClasses["flash.display3D.Program3D"] = flash.display3D.Program3D;
flash.display3D.Program3D.__name__ = ["flash","display3D","Program3D"];
flash.display3D.Program3D.prototype = {
	upload: function(vertexShader,fragmentShader) {
		openfl.gl.GL.attachShader(this.glProgram,vertexShader);
		openfl.gl.GL.attachShader(this.glProgram,fragmentShader);
		openfl.gl.GL.linkProgram(this.glProgram);
		if(openfl.gl.GL.getProgramParameter(this.glProgram,35714) == 0) {
			var result = openfl.gl.GL.getProgramInfoLog(this.glProgram);
			if(result != "") throw result;
		}
	}
	,dispose: function() {
		openfl.gl.GL.deleteProgram(this.glProgram);
	}
	,__class__: flash.display3D.Program3D
}
flash.display3D.VertexBuffer3D = function(glBuffer,numVertices,data32PerVertex) {
	this.glBuffer = glBuffer;
	this.numVertices = numVertices;
	this.data32PerVertex = data32PerVertex;
};
$hxClasses["flash.display3D.VertexBuffer3D"] = flash.display3D.VertexBuffer3D;
flash.display3D.VertexBuffer3D.__name__ = ["flash","display3D","VertexBuffer3D"];
flash.display3D.VertexBuffer3D.prototype = {
	uploadFromVector: function(data,startVertex,numVertices) {
		var bytesPerVertex = this.data32PerVertex * 4;
		openfl.gl.GL.bindBuffer(34962,this.glBuffer);
		var length = numVertices * this.data32PerVertex;
		var offset = startVertex;
		var float32Array;
		float32Array = new Float32Array(length * bytesPerVertex);
		var _g1 = startVertex, _g = startVertex + length;
		while(_g1 < _g) {
			var i = _g1++;
			float32Array[i] = data[i];
		}
		openfl.gl.GL.bufferData(34962,float32Array,35044);
	}
	,uploadFromByteArray: function(byteArray,byteArrayOffset,startOffset,count) {
		var bytesPerVertex = this.data32PerVertex * 4;
		openfl.gl.GL.bindBuffer(34962,this.glBuffer);
		var length = count * bytesPerVertex;
		var offset = byteArrayOffset + startOffset * bytesPerVertex;
		var float32Array;
		float32Array = new Float32Array(length);
		byteArray.position = offset;
		var i = 0;
		while(byteArray.position < length + offset) {
			float32Array[i] = byteArray.readUnsignedByte();
			i++;
		}
		openfl.gl.GL.bufferData(34962,float32Array,35044);
	}
	,dispose: function() {
		openfl.gl.GL.deleteBuffer(this.glBuffer);
	}
	,__class__: flash.display3D.VertexBuffer3D
}
flash.display3D.shaders = {}
flash.display3D.shaders.AGLSLShaderUtils = function() { }
$hxClasses["flash.display3D.shaders.AGLSLShaderUtils"] = flash.display3D.shaders.AGLSLShaderUtils;
flash.display3D.shaders.AGLSLShaderUtils.__name__ = ["flash","display3D","shaders","AGLSLShaderUtils"];
flash.display3D.shaders.AGLSLShaderUtils.compile = function(programType,source) {
	var agalMiniAssembler = new aglsl.assembler.AGALMiniAssembler();
	var data;
	var concatSource;
	switch(programType) {
	case "vertex":
		concatSource = "part vertex 1 \n" + source + "endpart";
		agalMiniAssembler.assemble(concatSource);
		data = agalMiniAssembler.r.get("vertex").data;
		break;
	case "fragment":
		concatSource = "part fragment 1 \n" + source + "endpart";
		agalMiniAssembler.assemble(concatSource);
		data = agalMiniAssembler.r.get("fragment").data;
		break;
	default:
		throw "Unknown Context3DProgramType";
	}
	return data;
}
flash.display3D.shaders.AGLSLShaderUtils.createShader = function(type,shaderSource) {
	console.log(shaderSource);
	var aglsl1 = new aglsl.AGLSLCompiler();
	var glType;
	var shaderType;
	switch( (type)[1] ) {
	case 0:
		glType = 35633;
		shaderType = "vertex";
		break;
	case 1:
		glType = 35632;
		shaderType = "fragment";
		break;
	}
	var shaderSourceString = aglsl1.compile(shaderType,shaderSource);
	var shader = openfl.gl.GL.createShader(glType);
	openfl.gl.GL.shaderSource(shader,shaderSourceString);
	openfl.gl.GL.compileShader(shader);
	if(openfl.gl.GL.getShaderParameter(shader,35713) == 0) {
		console.log("--- ERR ---\n" + shaderSourceString);
		var err = openfl.gl.GL.getShaderInfoLog(shader);
		if(err != "") throw err;
	}
	console.log("--- ERR ---\n" + shaderSourceString);
	return shader;
}
flash.display3D.textures = {}
flash.display3D.textures.TextureBase = function(glTexture) {
	flash.events.EventDispatcher.call(this);
	this.glTexture = glTexture;
};
$hxClasses["flash.display3D.textures.TextureBase"] = flash.display3D.textures.TextureBase;
flash.display3D.textures.TextureBase.__name__ = ["flash","display3D","textures","TextureBase"];
flash.display3D.textures.TextureBase.__super__ = flash.events.EventDispatcher;
flash.display3D.textures.TextureBase.prototype = $extend(flash.events.EventDispatcher.prototype,{
	dispose: function() {
		openfl.gl.GL.deleteTexture(this.glTexture);
	}
	,__class__: flash.display3D.textures.TextureBase
});
flash.display3D.textures.CubeTexture = function(glTexture,size) {
	flash.display3D.textures.TextureBase.call(this,glTexture);
	this.size = size;
};
$hxClasses["flash.display3D.textures.CubeTexture"] = flash.display3D.textures.CubeTexture;
flash.display3D.textures.CubeTexture.__name__ = ["flash","display3D","textures","CubeTexture"];
flash.display3D.textures.CubeTexture.__super__ = flash.display3D.textures.TextureBase;
flash.display3D.textures.CubeTexture.prototype = $extend(flash.display3D.textures.TextureBase.prototype,{
	uploadFromByteArray: function(data,byteArrayOffset,side,miplevel) {
		if(miplevel == null) miplevel = 0;
	}
	,uploadFromBitmapData: function(source,side,miplevel) {
		if(miplevel == null) miplevel = 0;
		var p = flash.display.BitmapData.getRGBAPixels(source);
		openfl.gl.GL.bindTexture(34067,this.glTexture);
	}
	,uploadCompressedTextureFromByteArray: function(data,byteArrayOffset,async) {
		if(async == null) async = false;
	}
	,__class__: flash.display3D.textures.CubeTexture
});
flash.display3D.textures.Texture = function(glTexture,width,height) {
	flash.display3D.textures.TextureBase.call(this,glTexture);
	this.width = width;
	this.height = height;
	openfl.gl.GL.bindTexture(3553,glTexture);
	openfl.gl.GL.texImage2D(3553,0,6408,width,height,0,6408,5121,null);
};
$hxClasses["flash.display3D.textures.Texture"] = flash.display3D.textures.Texture;
flash.display3D.textures.Texture.__name__ = ["flash","display3D","textures","Texture"];
flash.display3D.textures.Texture.__super__ = flash.display3D.textures.TextureBase;
flash.display3D.textures.Texture.prototype = $extend(flash.display3D.textures.TextureBase.prototype,{
	uploadFromByteArray: function(data,byteArrayOffset,miplevel) {
		if(miplevel == null) miplevel = 0;
		openfl.gl.GL.bindTexture(3553,this.glTexture);
		var source;
		source = new Uint8Array(data.length);
		data.position = byteArrayOffset;
		var i = 0;
		while(data.position < data.length) {
			source[i] = data.readUnsignedByte();
			i++;
		}
		openfl.gl.GL.texSubImage2D(3553,miplevel,0,0,this.width,this.height,6408,5121,source);
	}
	,uploadFromBitmapData: function(bitmapData,miplevel) {
		if(miplevel == null) miplevel = 0;
		var p = bitmapData.getPixels(new flash.geom.Rectangle(0,0,bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.width:0,bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.height:0));
		this.uploadFromByteArray(p,0,miplevel);
	}
	,uploadCompressedTextureFromByteArray: function(data,byteArrayOffset,async) {
		if(async == null) async = false;
	}
	,__class__: flash.display3D.textures.Texture
});
flash.errors.ArgumentError = function(inMessage) {
	if(inMessage == null) inMessage = "";
	flash.errors.Error.call(this,inMessage);
};
$hxClasses["flash.errors.ArgumentError"] = flash.errors.ArgumentError;
flash.errors.ArgumentError.__name__ = ["flash","errors","ArgumentError"];
flash.errors.ArgumentError.__super__ = flash.errors.Error;
flash.errors.ArgumentError.prototype = $extend(flash.errors.Error.prototype,{
	__class__: flash.errors.ArgumentError
});
flash.errors.IOError = function(message) {
	if(message == null) message = "";
	flash.errors.Error.call(this,message);
};
$hxClasses["flash.errors.IOError"] = flash.errors.IOError;
flash.errors.IOError.__name__ = ["flash","errors","IOError"];
flash.errors.IOError.__super__ = flash.errors.Error;
flash.errors.IOError.prototype = $extend(flash.errors.Error.prototype,{
	__class__: flash.errors.IOError
});
flash.events.ContextMenuEvent = function(type,bubbles,cancelable,mouseTarget,contextMenuOwner) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this.mouseTarget = mouseTarget;
	this.contextMenuOwner = contextMenuOwner;
};
$hxClasses["flash.events.ContextMenuEvent"] = flash.events.ContextMenuEvent;
flash.events.ContextMenuEvent.__name__ = ["flash","events","ContextMenuEvent"];
flash.events.ContextMenuEvent.__super__ = flash.events.Event;
flash.events.ContextMenuEvent.prototype = $extend(flash.events.Event.prototype,{
	__class__: flash.events.ContextMenuEvent
});
flash.events.TextEvent = function(type,bubbles,cancelable,text) {
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this.text = text;
};
$hxClasses["flash.events.TextEvent"] = flash.events.TextEvent;
flash.events.TextEvent.__name__ = ["flash","events","TextEvent"];
flash.events.TextEvent.__super__ = flash.events.Event;
flash.events.TextEvent.prototype = $extend(flash.events.Event.prototype,{
	__class__: flash.events.TextEvent
});
flash.events.ErrorEvent = function(type,bubbles,cancelable,text,id) {
	if(id == null) id = 0;
	flash.events.TextEvent.call(this,type,bubbles,cancelable);
	this.text = text;
	this.errorID = id;
};
$hxClasses["flash.events.ErrorEvent"] = flash.events.ErrorEvent;
flash.events.ErrorEvent.__name__ = ["flash","events","ErrorEvent"];
flash.events.ErrorEvent.__super__ = flash.events.TextEvent;
flash.events.ErrorEvent.prototype = $extend(flash.events.TextEvent.prototype,{
	__class__: flash.events.ErrorEvent
});
flash.events.Listener = function(inListener,inUseCapture,inPriority) {
	this.mListner = inListener;
	this.mUseCapture = inUseCapture;
	this.mPriority = inPriority;
	this.mID = flash.events.Listener.sIDs++;
};
$hxClasses["flash.events.Listener"] = flash.events.Listener;
flash.events.Listener.__name__ = ["flash","events","Listener"];
flash.events.Listener.prototype = {
	Is: function(inListener,inCapture) {
		return Reflect.compareMethods(this.mListner,inListener) && this.mUseCapture == inCapture;
	}
	,dispatchEvent: function(event) {
		this.mListner(event);
	}
	,__class__: flash.events.Listener
}
flash.events.FocusEvent = function(type,bubbles,cancelable,inObject,inShiftKey,inKeyCode) {
	if(inKeyCode == null) inKeyCode = 0;
	if(inShiftKey == null) inShiftKey = false;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this.keyCode = inKeyCode;
	this.shiftKey = inShiftKey == null?false:inShiftKey;
	this.target = inObject;
};
$hxClasses["flash.events.FocusEvent"] = flash.events.FocusEvent;
flash.events.FocusEvent.__name__ = ["flash","events","FocusEvent"];
flash.events.FocusEvent.__super__ = flash.events.Event;
flash.events.FocusEvent.prototype = $extend(flash.events.Event.prototype,{
	__class__: flash.events.FocusEvent
});
flash.events.HTTPStatusEvent = function(type,bubbles,cancelable,status) {
	if(status == null) status = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.status = status;
	flash.events.Event.call(this,type,bubbles,cancelable);
};
$hxClasses["flash.events.HTTPStatusEvent"] = flash.events.HTTPStatusEvent;
flash.events.HTTPStatusEvent.__name__ = ["flash","events","HTTPStatusEvent"];
flash.events.HTTPStatusEvent.__super__ = flash.events.Event;
flash.events.HTTPStatusEvent.prototype = $extend(flash.events.Event.prototype,{
	__class__: flash.events.HTTPStatusEvent
});
flash.events.IOErrorEvent = function(type,bubbles,cancelable,inText) {
	if(inText == null) inText = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this.text = inText;
};
$hxClasses["flash.events.IOErrorEvent"] = flash.events.IOErrorEvent;
flash.events.IOErrorEvent.__name__ = ["flash","events","IOErrorEvent"];
flash.events.IOErrorEvent.__super__ = flash.events.Event;
flash.events.IOErrorEvent.prototype = $extend(flash.events.Event.prototype,{
	__class__: flash.events.IOErrorEvent
});
flash.events.KeyboardEvent = function(type,bubbles,cancelable,inCharCode,inKeyCode,inKeyLocation,inCtrlKey,inAltKey,inShiftKey,controlKeyValue,commandKeyValue) {
	if(commandKeyValue == null) commandKeyValue = false;
	if(controlKeyValue == null) controlKeyValue = false;
	if(inShiftKey == null) inShiftKey = false;
	if(inAltKey == null) inAltKey = false;
	if(inCtrlKey == null) inCtrlKey = false;
	if(inKeyLocation == null) inKeyLocation = 0;
	if(inKeyCode == null) inKeyCode = 0;
	if(inCharCode == null) inCharCode = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this.altKey = inAltKey == null?false:inAltKey;
	this.charCode = inCharCode == null?0:inCharCode;
	this.ctrlKey = inCtrlKey == null?false:inCtrlKey;
	this.commandKey = commandKeyValue;
	this.controlKey = controlKeyValue;
	this.keyCode = inKeyCode;
	this.keyLocation = inKeyLocation == null?0:inKeyLocation;
	this.shiftKey = inShiftKey == null?false:inShiftKey;
};
$hxClasses["flash.events.KeyboardEvent"] = flash.events.KeyboardEvent;
flash.events.KeyboardEvent.__name__ = ["flash","events","KeyboardEvent"];
flash.events.KeyboardEvent.__super__ = flash.events.Event;
flash.events.KeyboardEvent.prototype = $extend(flash.events.Event.prototype,{
	__class__: flash.events.KeyboardEvent
});
flash.events.ProgressEvent = function(type,bubbles,cancelable,bytesLoaded,bytesTotal) {
	if(bytesTotal == null) bytesTotal = 0;
	if(bytesLoaded == null) bytesLoaded = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this.bytesLoaded = bytesLoaded;
	this.bytesTotal = bytesTotal;
};
$hxClasses["flash.events.ProgressEvent"] = flash.events.ProgressEvent;
flash.events.ProgressEvent.__name__ = ["flash","events","ProgressEvent"];
flash.events.ProgressEvent.__super__ = flash.events.Event;
flash.events.ProgressEvent.prototype = $extend(flash.events.Event.prototype,{
	__class__: flash.events.ProgressEvent
});
flash.events.SecurityErrorEvent = function(type,bubbles,cancelable,text) {
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.ErrorEvent.call(this,type,bubbles,cancelable);
	this.text = text;
};
$hxClasses["flash.events.SecurityErrorEvent"] = flash.events.SecurityErrorEvent;
flash.events.SecurityErrorEvent.__name__ = ["flash","events","SecurityErrorEvent"];
flash.events.SecurityErrorEvent.__super__ = flash.events.ErrorEvent;
flash.events.SecurityErrorEvent.prototype = $extend(flash.events.ErrorEvent.prototype,{
	__class__: flash.events.SecurityErrorEvent
});
flash.events.TimerEvent = function(type,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	flash.events.Event.call(this,type,bubbles,cancelable);
};
$hxClasses["flash.events.TimerEvent"] = flash.events.TimerEvent;
flash.events.TimerEvent.__name__ = ["flash","events","TimerEvent"];
flash.events.TimerEvent.__super__ = flash.events.Event;
flash.events.TimerEvent.prototype = $extend(flash.events.Event.prototype,{
	updateAfterEvent: function() {
	}
	,__class__: flash.events.TimerEvent
});
flash.events.TouchEvent = function(type,bubbles,cancelable,localX,localY,relatedObject,ctrlKey,altKey,shiftKey,buttonDown,delta,commandKey,clickCount) {
	if(clickCount == null) clickCount = 0;
	if(commandKey == null) commandKey = false;
	if(delta == null) delta = 0;
	if(buttonDown == null) buttonDown = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	flash.events.Event.call(this,type,bubbles,cancelable);
	this.shiftKey = shiftKey;
	this.altKey = altKey;
	this.ctrlKey = ctrlKey;
	this.bubbles = bubbles;
	this.relatedObject = relatedObject;
	this.delta = delta;
	this.localX = localX;
	this.localY = localY;
	this.buttonDown = buttonDown;
	this.commandKey = commandKey;
	this.touchPointID = 0;
	this.isPrimaryTouchPoint = true;
};
$hxClasses["flash.events.TouchEvent"] = flash.events.TouchEvent;
flash.events.TouchEvent.__name__ = ["flash","events","TouchEvent"];
flash.events.TouchEvent.__create = function(type,event,touch,local,target) {
	var evt = new flash.events.TouchEvent(type,true,false,local.x,local.y,null,event.ctrlKey,event.altKey,event.shiftKey,false,0,null,0);
	evt.stageX = flash.Lib.get_current().get_stage().get_mouseX();
	evt.stageY = flash.Lib.get_current().get_stage().get_mouseY();
	evt.target = target;
	return evt;
}
flash.events.TouchEvent.__super__ = flash.events.Event;
flash.events.TouchEvent.prototype = $extend(flash.events.Event.prototype,{
	__createSimilar: function(type,related,targ) {
		var result = new flash.events.TouchEvent(type,this.bubbles,this.cancelable,this.localX,this.localY,related == null?this.relatedObject:related,this.ctrlKey,this.altKey,this.shiftKey,this.buttonDown,this.delta,this.commandKey);
		result.touchPointID = this.touchPointID;
		result.isPrimaryTouchPoint = this.isPrimaryTouchPoint;
		if(targ != null) result.target = targ;
		return result;
	}
	,__class__: flash.events.TouchEvent
});
flash.filters = {}
flash.filters.BitmapFilter = function(inType) {
	this._mType = inType;
};
$hxClasses["flash.filters.BitmapFilter"] = flash.filters.BitmapFilter;
flash.filters.BitmapFilter.__name__ = ["flash","filters","BitmapFilter"];
flash.filters.BitmapFilter.prototype = {
	__applyFilter: function(surface,rect,refreshCache) {
		if(refreshCache == null) refreshCache = false;
	}
	,__preFilter: function(surface) {
	}
	,clone: function() {
		return new flash.filters.BitmapFilter(this._mType);
	}
	,__class__: flash.filters.BitmapFilter
}
flash.filters.DropShadowFilter = function(in_distance,in_angle,in_color,in_alpha,in_blurX,in_blurY,in_strength,in_quality,in_inner,in_knockout,in_hideObject) {
	if(in_hideObject == null) in_hideObject = false;
	if(in_knockout == null) in_knockout = false;
	if(in_inner == null) in_inner = false;
	if(in_quality == null) in_quality = 1;
	if(in_strength == null) in_strength = 1.0;
	if(in_blurY == null) in_blurY = 4.0;
	if(in_blurX == null) in_blurX = 4.0;
	if(in_alpha == null) in_alpha = 1.0;
	if(in_color == null) in_color = 0;
	if(in_angle == null) in_angle = 45.0;
	if(in_distance == null) in_distance = 4.0;
	flash.filters.BitmapFilter.call(this,"DropShadowFilter");
	this.distance = in_distance;
	this.angle = in_angle;
	this.color = in_color;
	this.alpha = in_alpha;
	this.blurX = in_blurX;
	this.blurY = in_blurX;
	this.strength = in_strength;
	this.quality = in_quality;
	this.inner = in_inner;
	this.knockout = in_knockout;
	this.hideObject = in_hideObject;
	this.___cached = false;
};
$hxClasses["flash.filters.DropShadowFilter"] = flash.filters.DropShadowFilter;
flash.filters.DropShadowFilter.__name__ = ["flash","filters","DropShadowFilter"];
flash.filters.DropShadowFilter.__super__ = flash.filters.BitmapFilter;
flash.filters.DropShadowFilter.prototype = $extend(flash.filters.BitmapFilter.prototype,{
	__applyFilter: function(surface,rect,refreshCache) {
		if(refreshCache == null) refreshCache = false;
		if(!this.___cached || refreshCache) {
			var distanceX = this.distance * Math.sin(2 * Math.PI * this.angle / 360.0);
			var distanceY = this.distance * Math.cos(2 * Math.PI * this.angle / 360.0);
			var blurRadius = Math.max(this.blurX,this.blurY);
			var context = surface.getContext("2d");
			context.shadowOffsetX = distanceX;
			context.shadowOffsetY = distanceY;
			context.shadowBlur = blurRadius;
			context.shadowColor = "rgba(" + (this.color >> 16 & 255) + "," + (this.color >> 8 & 255) + "," + (this.color & 255) + "," + this.alpha + ")";
			this.___cached = true;
		}
	}
	,clone: function() {
		return new flash.filters.DropShadowFilter(this.distance,this.angle,this.color,this.alpha,this.blurX,this.blurY,this.strength,this.quality,this.inner,this.knockout,this.hideObject);
	}
	,__class__: flash.filters.DropShadowFilter
});
flash.geom.ColorTransform = function(inRedMultiplier,inGreenMultiplier,inBlueMultiplier,inAlphaMultiplier,inRedOffset,inGreenOffset,inBlueOffset,inAlphaOffset) {
	if(inAlphaOffset == null) inAlphaOffset = 0;
	if(inBlueOffset == null) inBlueOffset = 0;
	if(inGreenOffset == null) inGreenOffset = 0;
	if(inRedOffset == null) inRedOffset = 0;
	if(inAlphaMultiplier == null) inAlphaMultiplier = 1;
	if(inBlueMultiplier == null) inBlueMultiplier = 1;
	if(inGreenMultiplier == null) inGreenMultiplier = 1;
	if(inRedMultiplier == null) inRedMultiplier = 1;
	this.redMultiplier = inRedMultiplier == null?1.0:inRedMultiplier;
	this.greenMultiplier = inGreenMultiplier == null?1.0:inGreenMultiplier;
	this.blueMultiplier = inBlueMultiplier == null?1.0:inBlueMultiplier;
	this.alphaMultiplier = inAlphaMultiplier == null?1.0:inAlphaMultiplier;
	this.redOffset = inRedOffset == null?0.0:inRedOffset;
	this.greenOffset = inGreenOffset == null?0.0:inGreenOffset;
	this.blueOffset = inBlueOffset == null?0.0:inBlueOffset;
	this.alphaOffset = inAlphaOffset == null?0.0:inAlphaOffset;
};
$hxClasses["flash.geom.ColorTransform"] = flash.geom.ColorTransform;
flash.geom.ColorTransform.__name__ = ["flash","geom","ColorTransform"];
flash.geom.ColorTransform.prototype = {
	set_color: function(value) {
		this.redOffset = value >> 16 & 255;
		this.greenOffset = value >> 8 & 255;
		this.blueOffset = value & 255;
		this.redMultiplier = 0;
		this.greenMultiplier = 0;
		this.blueMultiplier = 0;
		return this.get_color();
	}
	,get_color: function() {
		return (this.redOffset | 0) << 16 | (this.greenOffset | 0) << 8 | (this.blueOffset | 0);
	}
	,concat: function(second) {
		this.redMultiplier += second.redMultiplier;
		this.greenMultiplier += second.greenMultiplier;
		this.blueMultiplier += second.blueMultiplier;
		this.alphaMultiplier += second.alphaMultiplier;
	}
	,__class__: flash.geom.ColorTransform
	,__properties__: {set_color:"set_color",get_color:"get_color"}
}
flash.geom.Transform = function(displayObject) {
	if(displayObject == null) throw "Cannot create Transform with no DisplayObject.";
	this._displayObject = displayObject;
	this._matrix = new flash.geom.Matrix();
	this._fullMatrix = new flash.geom.Matrix();
	this.set_colorTransform(new flash.geom.ColorTransform());
};
$hxClasses["flash.geom.Transform"] = flash.geom.Transform;
flash.geom.Transform.__name__ = ["flash","geom","Transform"];
flash.geom.Transform.prototype = {
	get_pixelBounds: function() {
		return this._displayObject.getBounds(null);
	}
	,set_matrix: function(inValue) {
		this._matrix.copy(inValue);
		this._displayObject.__matrixOverridden();
		return this._matrix;
	}
	,get_matrix: function() {
		return this._matrix.clone();
	}
	,get_concatenatedMatrix: function() {
		return this.__getFullMatrix(this._matrix);
	}
	,set_colorTransform: function(inValue) {
		this.colorTransform = inValue;
		return inValue;
	}
	,__setMatrix: function(inValue) {
		this._matrix.copy(inValue);
	}
	,__setFullMatrix: function(inValue) {
		this._fullMatrix.copy(inValue);
		return this._fullMatrix;
	}
	,__getFullMatrix: function(localMatrix) {
		var m;
		if(localMatrix != null) m = localMatrix.mult(this._fullMatrix); else m = this._fullMatrix.clone();
		return m;
	}
	,__class__: flash.geom.Transform
	,__properties__: {set_colorTransform:"set_colorTransform",get_concatenatedMatrix:"get_concatenatedMatrix",set_matrix:"set_matrix",get_matrix:"get_matrix",get_pixelBounds:"get_pixelBounds"}
}
flash.media = {}
flash.media.Sound = function(stream,context) {
	flash.events.EventDispatcher.call(this,this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.id3 = null;
	this.isBuffering = false;
	this.length = 0;
	this.url = null;
	this.__soundChannels = new haxe.ds.IntMap();
	this.__soundIdx = 0;
	if(stream != null) this.load(stream,context);
};
$hxClasses["flash.media.Sound"] = flash.media.Sound;
flash.media.Sound.__name__ = ["flash","media","Sound"];
flash.media.Sound.__canPlayMime = function(mime) {
	var audio = js.Browser.document.createElement("audio");
	var playable = function(ok) {
		if(ok != "" && ok != "no") return true; else return false;
	};
	return playable(audio.canPlayType(mime,null));
}
flash.media.Sound.__canPlayType = function(extension) {
	var mime = flash.media.Sound.__mimeForExtension(extension);
	if(mime == null) return false;
	return flash.media.Sound.__canPlayMime(mime);
}
flash.media.Sound.__mimeForExtension = function(extension) {
	var mime = null;
	switch(extension) {
	case "mp3":
		mime = "audio/mpeg";
		break;
	case "ogg":
		mime = "audio/ogg; codecs=\"vorbis\"";
		break;
	case "wav":
		mime = "audio/wav; codecs=\"1\"";
		break;
	case "aac":
		mime = "audio/mp4; codecs=\"mp4a.40.2\"";
		break;
	default:
		mime = null;
	}
	return mime;
}
flash.media.Sound.__super__ = flash.events.EventDispatcher;
flash.media.Sound.prototype = $extend(flash.events.EventDispatcher.prototype,{
	__onSoundLoaded: function(evt) {
		this.__removeEventListeners();
		var evt1 = new flash.events.Event(flash.events.Event.COMPLETE);
		this.dispatchEvent(evt1);
	}
	,__onSoundLoadError: function(evt) {
		this.__removeEventListeners();
		var evt1 = new flash.events.IOErrorEvent(flash.events.IOErrorEvent.IO_ERROR);
		this.dispatchEvent(evt1);
	}
	,__removeEventListeners: function() {
		this.__soundCache.removeEventListener(flash.events.Event.COMPLETE,$bind(this,this.__onSoundLoaded),false);
		this.__soundCache.removeEventListener(flash.events.IOErrorEvent.IO_ERROR,$bind(this,this.__onSoundLoadError),false);
	}
	,__load: function(stream,context,mime) {
		if(mime == null) mime = "";
		this.__streamUrl = stream.url;
		try {
			this.__soundCache = new flash.net.URLLoader();
			this.__addEventListeners();
			this.__soundCache.load(stream);
		} catch( e ) {
		}
	}
	,__addEventListeners: function() {
		this.__soundCache.addEventListener(flash.events.Event.COMPLETE,$bind(this,this.__onSoundLoaded));
		this.__soundCache.addEventListener(flash.events.IOErrorEvent.IO_ERROR,$bind(this,this.__onSoundLoadError));
	}
	,play: function(startTime,loops,sndTransform) {
		if(loops == null) loops = 0;
		if(startTime == null) startTime = 0.0;
		if(this.__streamUrl == null) return null;
		var self = this;
		var curIdx = this.__soundIdx;
		var removeRef = function() {
			self.__soundChannels.remove(curIdx);
		};
		var channel = flash.media.SoundChannel.__create(this.__streamUrl,startTime,loops,sndTransform,removeRef);
		this.__soundChannels.set(curIdx,channel);
		this.__soundIdx++;
		var audio = channel.__audio;
		return channel;
	}
	,load: function(stream,context) {
		this.__load(stream,context);
	}
	,close: function() {
	}
	,__class__: flash.media.Sound
});
flash.media.SoundChannel = function() {
	flash.events.EventDispatcher.call(this,this);
	this.ChannelId = -1;
	this.leftPeak = 0.;
	this.position = 0.;
	this.rightPeak = 0.;
	this.__audioCurrentLoop = 1;
	this.__audioTotalLoops = 1;
};
$hxClasses["flash.media.SoundChannel"] = flash.media.SoundChannel;
flash.media.SoundChannel.__name__ = ["flash","media","SoundChannel"];
flash.media.SoundChannel.__create = function(src,startTime,loops,sndTransform,removeRef) {
	if(loops == null) loops = 0;
	if(startTime == null) startTime = 0.0;
	var channel = new flash.media.SoundChannel();
	channel.__audio = js.Browser.document.createElement("audio");
	channel.__removeRef = removeRef;
	channel.__audio.addEventListener("ended",$bind(channel,channel.__onSoundChannelFinished),false);
	channel.__audio.addEventListener("seeked",$bind(channel,channel.__onSoundSeeked),false);
	channel.__audio.addEventListener("stalled",$bind(channel,channel.__onStalled),false);
	channel.__audio.addEventListener("progress",$bind(channel,channel.__onProgress),false);
	if(loops > 0) {
		channel.__audioTotalLoops = loops;
		channel.__audio.loop = true;
	}
	channel.__startTime = startTime;
	if(startTime > 0.) {
		var onLoad = null;
		onLoad = function(_) {
			channel.__audio.currentTime = channel.__startTime;
			channel.__audio.play();
			channel.__audio.removeEventListener("canplaythrough",onLoad,false);
		};
		channel.__audio.addEventListener("canplaythrough",onLoad,false);
	} else channel.__audio.autoplay = true;
	channel.__audio.src = src;
	return channel;
}
flash.media.SoundChannel.__super__ = flash.events.EventDispatcher;
flash.media.SoundChannel.prototype = $extend(flash.events.EventDispatcher.prototype,{
	set_soundTransform: function(v) {
		this.__audio.volume = v.volume;
		return this.soundTransform = v;
	}
	,__onStalled: function(evt) {
		if(this.__audio != null) this.__audio.load();
	}
	,__onSoundSeeked: function(evt) {
		if(this.__audioCurrentLoop >= this.__audioTotalLoops) {
			this.__audio.loop = false;
			this.stop();
		} else this.__audioCurrentLoop++;
	}
	,__onSoundChannelFinished: function(evt) {
		if(this.__audioCurrentLoop >= this.__audioTotalLoops) {
			this.__audio.removeEventListener("ended",$bind(this,this.__onSoundChannelFinished),false);
			this.__audio.removeEventListener("seeked",$bind(this,this.__onSoundSeeked),false);
			this.__audio.removeEventListener("stalled",$bind(this,this.__onStalled),false);
			this.__audio.removeEventListener("progress",$bind(this,this.__onProgress),false);
			this.__audio = null;
			var evt1 = new flash.events.Event(flash.events.Event.SOUND_COMPLETE);
			evt1.target = this;
			this.dispatchEvent(evt1);
			if(this.__removeRef != null) this.__removeRef();
		} else {
			this.__audio.currentTime = this.__startTime;
			this.__audio.play();
		}
	}
	,__onProgress: function(evt) {
	}
	,stop: function() {
		if(this.__audio != null) {
			this.__audio.pause();
			this.__audio = null;
			if(this.__removeRef != null) this.__removeRef();
		}
	}
	,__class__: flash.media.SoundChannel
	,__properties__: {set_soundTransform:"set_soundTransform"}
});
flash.media.SoundLoaderContext = function(bufferTime,checkPolicyFile) {
	if(checkPolicyFile == null) checkPolicyFile = false;
	if(bufferTime == null) bufferTime = 0;
	this.bufferTime = bufferTime;
	this.checkPolicyFile = checkPolicyFile;
};
$hxClasses["flash.media.SoundLoaderContext"] = flash.media.SoundLoaderContext;
flash.media.SoundLoaderContext.__name__ = ["flash","media","SoundLoaderContext"];
flash.media.SoundLoaderContext.prototype = {
	__class__: flash.media.SoundLoaderContext
}
flash.media.SoundTransform = function(vol,panning) {
	if(panning == null) panning = 0;
	if(vol == null) vol = 1;
	this.volume = vol;
	this.pan = panning;
	this.leftToLeft = 0;
	this.leftToRight = 0;
	this.rightToLeft = 0;
	this.rightToRight = 0;
};
$hxClasses["flash.media.SoundTransform"] = flash.media.SoundTransform;
flash.media.SoundTransform.__name__ = ["flash","media","SoundTransform"];
flash.media.SoundTransform.prototype = {
	__class__: flash.media.SoundTransform
}
flash.net = {}
flash.net.URLLoader = function(request) {
	flash.events.EventDispatcher.call(this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.set_dataFormat(flash.net.URLLoaderDataFormat.TEXT);
	if(request != null) this.load(request);
};
$hxClasses["flash.net.URLLoader"] = flash.net.URLLoader;
flash.net.URLLoader.__name__ = ["flash","net","URLLoader"];
flash.net.URLLoader.__super__ = flash.events.EventDispatcher;
flash.net.URLLoader.prototype = $extend(flash.events.EventDispatcher.prototype,{
	set_dataFormat: function(inputVal) {
		if(inputVal == flash.net.URLLoaderDataFormat.BINARY && !Reflect.hasField(js.Browser.window,"ArrayBuffer")) this.dataFormat = flash.net.URLLoaderDataFormat.TEXT; else this.dataFormat = inputVal;
		return this.dataFormat;
	}
	,onStatus: function(status) {
		var evt = new flash.events.HTTPStatusEvent(flash.events.HTTPStatusEvent.HTTP_STATUS,false,false,status);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onSecurityError: function(msg) {
		var evt = new flash.events.SecurityErrorEvent(flash.events.SecurityErrorEvent.SECURITY_ERROR);
		evt.text = msg;
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onProgress: function(event) {
		var evt = new flash.events.ProgressEvent(flash.events.ProgressEvent.PROGRESS);
		evt.currentTarget = this;
		evt.bytesLoaded = event.loaded;
		evt.bytesTotal = event.total;
		this.dispatchEvent(evt);
	}
	,onOpen: function() {
		var evt = new flash.events.Event(flash.events.Event.OPEN);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onError: function(msg) {
		var evt = new flash.events.IOErrorEvent(flash.events.IOErrorEvent.IO_ERROR);
		evt.text = msg;
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onData: function(_) {
		var content = this.getData();
		var _g = this;
		switch( (_g.dataFormat)[1] ) {
		case 0:
			this.data = flash.utils.ByteArray.__ofBuffer(content);
			break;
		default:
			this.data = Std.string(content);
		}
		var evt = new flash.events.Event(flash.events.Event.COMPLETE);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,requestUrl: function(url,method,data,requestHeaders) {
		var xmlHttpRequest = new XMLHttpRequest();
		this.registerEvents(xmlHttpRequest);
		var uri = "";
		if(js.Boot.__instanceof(data,flash.utils.ByteArray)) {
			var data1 = data;
			var _g = this;
			switch( (_g.dataFormat)[1] ) {
			case 0:
				uri = data1.data.buffer;
				break;
			default:
				uri = data1.readUTFBytes(data1.length);
			}
		} else if(js.Boot.__instanceof(data,flash.net.URLVariables)) {
			var data1 = data;
			var _g = 0, _g1 = Reflect.fields(data1);
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				if(uri.length != 0) uri += "&";
				uri += StringTools.urlEncode(p) + "=" + StringTools.urlEncode(Reflect.field(data1,p));
			}
		} else if(data != null) uri = data.toString();
		try {
			if(method == "GET" && uri != null && uri != "") {
				var question = url.split("?").length <= 1;
				xmlHttpRequest.open(method,url + (question?"?":"&") + Std.string(uri),true);
				uri = "";
			} else xmlHttpRequest.open(method,url,true);
		} catch( e ) {
			this.onError(e.toString());
			return;
		}
		var _g = this;
		switch( (_g.dataFormat)[1] ) {
		case 0:
			xmlHttpRequest.responseType = "arraybuffer";
			break;
		default:
		}
		var _g1 = 0;
		while(_g1 < requestHeaders.length) {
			var header = requestHeaders[_g1];
			++_g1;
			xmlHttpRequest.setRequestHeader(header.name,header.value);
		}
		xmlHttpRequest.send(uri);
		this.onOpen();
		this.getData = function() {
			if(xmlHttpRequest.response != null) return xmlHttpRequest.response; else return xmlHttpRequest.responseText;
		};
	}
	,registerEvents: function(subject) {
		var self = this;
		if(typeof XMLHttpRequestProgressEvent != "undefined") subject.addEventListener("progress",$bind(this,this.onProgress),false);
		subject.onreadystatechange = function() {
			if(subject.readyState != 4) return;
			var s = (function($this) {
				var $r;
				try {
					$r = subject.status;
				} catch( e ) {
					$r = null;
				}
				return $r;
			}(this));
			if(s == undefined) s = null;
			if(s != null) self.onStatus(s);
			if(s != null && s >= 200 && s < 400) self.onData(subject.response); else if(s == null) self.onError("Failed to connect or resolve host"); else if(s == 12029) self.onError("Failed to connect to host"); else if(s == 12007) self.onError("Unknown host"); else if(s == 0) {
				self.onError("Unable to make request (may be blocked due to cross-domain permissions)");
				self.onSecurityError("Unable to make request (may be blocked due to cross-domain permissions)");
			} else self.onError("Http Error #" + subject.status);
		};
	}
	,load: function(request) {
		this.requestUrl(request.url,request.method,request.data,request.formatRequestHeaders());
	}
	,getData: function() {
		return null;
	}
	,close: function() {
	}
	,__class__: flash.net.URLLoader
	,__properties__: {set_dataFormat:"set_dataFormat"}
});
flash.net.URLLoaderDataFormat = $hxClasses["flash.net.URLLoaderDataFormat"] = { __ename__ : true, __constructs__ : ["BINARY","TEXT","VARIABLES"] }
flash.net.URLLoaderDataFormat.BINARY = ["BINARY",0];
flash.net.URLLoaderDataFormat.BINARY.toString = $estr;
flash.net.URLLoaderDataFormat.BINARY.__enum__ = flash.net.URLLoaderDataFormat;
flash.net.URLLoaderDataFormat.TEXT = ["TEXT",1];
flash.net.URLLoaderDataFormat.TEXT.toString = $estr;
flash.net.URLLoaderDataFormat.TEXT.__enum__ = flash.net.URLLoaderDataFormat;
flash.net.URLLoaderDataFormat.VARIABLES = ["VARIABLES",2];
flash.net.URLLoaderDataFormat.VARIABLES.toString = $estr;
flash.net.URLLoaderDataFormat.VARIABLES.__enum__ = flash.net.URLLoaderDataFormat;
flash.net.URLRequest = function(inURL) {
	if(inURL != null) this.url = inURL;
	this.requestHeaders = [];
	this.method = flash.net.URLRequestMethod.GET;
	this.contentType = null;
};
$hxClasses["flash.net.URLRequest"] = flash.net.URLRequest;
flash.net.URLRequest.__name__ = ["flash","net","URLRequest"];
flash.net.URLRequest.prototype = {
	formatRequestHeaders: function() {
		var res = this.requestHeaders;
		if(res == null) res = [];
		if(this.method == flash.net.URLRequestMethod.GET || this.data == null) return res;
		if(js.Boot.__instanceof(this.data,String) || js.Boot.__instanceof(this.data,flash.utils.ByteArray)) {
			res = res.slice();
			res.push(new flash.net.URLRequestHeader("Content-Type",this.contentType != null?this.contentType:"application/x-www-form-urlencoded"));
		}
		return res;
	}
	,__class__: flash.net.URLRequest
}
flash.net.URLRequestHeader = function(name,value) {
	if(value == null) value = "";
	if(name == null) name = "";
	this.name = name;
	this.value = value;
};
$hxClasses["flash.net.URLRequestHeader"] = flash.net.URLRequestHeader;
flash.net.URLRequestHeader.__name__ = ["flash","net","URLRequestHeader"];
flash.net.URLRequestHeader.prototype = {
	__class__: flash.net.URLRequestHeader
}
flash.net.URLRequestMethod = function() { }
$hxClasses["flash.net.URLRequestMethod"] = flash.net.URLRequestMethod;
flash.net.URLRequestMethod.__name__ = ["flash","net","URLRequestMethod"];
flash.net.URLVariables = function(inEncoded) {
	if(inEncoded != null) this.decode(inEncoded);
};
$hxClasses["flash.net.URLVariables"] = flash.net.URLVariables;
flash.net.URLVariables.__name__ = ["flash","net","URLVariables"];
flash.net.URLVariables.prototype = {
	toString: function() {
		var result = new Array();
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			result.push(StringTools.urlEncode(f) + "=" + StringTools.urlEncode(Reflect.field(this,f)));
		}
		return result.join("&");
	}
	,decode: function(inVars) {
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			Reflect.deleteField(this,f);
		}
		var fields1 = inVars.split(";").join("&").split("&");
		var _g = 0;
		while(_g < fields1.length) {
			var f = fields1[_g];
			++_g;
			var eq = f.indexOf("=");
			if(eq > 0) this[StringTools.urlDecode(HxOverrides.substr(f,0,eq))] = StringTools.urlDecode(HxOverrides.substr(f,eq + 1,null)); else if(eq != 0) this[StringTools.urlDecode(f)] = "";
		}
	}
	,__class__: flash.net.URLVariables
}
flash.system = {}
flash.system.ApplicationDomain = function(parentDomain) {
	if(parentDomain != null) this.parentDomain = parentDomain; else this.parentDomain = flash.system.ApplicationDomain.currentDomain;
};
$hxClasses["flash.system.ApplicationDomain"] = flash.system.ApplicationDomain;
flash.system.ApplicationDomain.__name__ = ["flash","system","ApplicationDomain"];
flash.system.ApplicationDomain.prototype = {
	hasDefinition: function(name) {
		return Type.resolveClass(name) != null;
	}
	,getDefinition: function(name) {
		return Type.resolveClass(name);
	}
	,__class__: flash.system.ApplicationDomain
}
flash.system.LoaderContext = function(checkPolicyFile,applicationDomain,securityDomain) {
	if(checkPolicyFile == null) checkPolicyFile = false;
	this.checkPolicyFile = checkPolicyFile;
	this.securityDomain = securityDomain;
	if(applicationDomain != null) this.applicationDomain = applicationDomain; else this.applicationDomain = flash.system.ApplicationDomain.currentDomain;
};
$hxClasses["flash.system.LoaderContext"] = flash.system.LoaderContext;
flash.system.LoaderContext.__name__ = ["flash","system","LoaderContext"];
flash.system.LoaderContext.prototype = {
	__class__: flash.system.LoaderContext
}
flash.system.SecurityDomain = function() {
};
$hxClasses["flash.system.SecurityDomain"] = flash.system.SecurityDomain;
flash.system.SecurityDomain.__name__ = ["flash","system","SecurityDomain"];
flash.system.SecurityDomain.prototype = {
	__class__: flash.system.SecurityDomain
}
flash.system.System = function() { }
$hxClasses["flash.system.System"] = flash.system.System;
flash.system.System.__name__ = ["flash","system","System"];
flash.system.System.__properties__ = {get_vmVersion:"get_vmVersion",get_totalMemory:"get_totalMemory"}
flash.system.System.exit = function(code) {
	throw "System.exit is currently not supported for HTML5";
}
flash.system.System.gc = function() {
}
flash.system.System.pause = function() {
	throw "System.pause is currently not supported for HTML5";
}
flash.system.System.resume = function() {
	throw "System.resume is currently not supported for HTML5";
}
flash.system.System.setClipboard = function(string) {
	throw "System.setClipboard is currently not supported for HTML5";
}
flash.system.System.get_totalMemory = function() {
	return 0;
}
flash.system.System.get_vmVersion = function() {
	return "openfl - tip";
}
flash.text.FontStyle = $hxClasses["flash.text.FontStyle"] = { __ename__ : true, __constructs__ : ["REGULAR","ITALIC","BOLD_ITALIC","BOLD"] }
flash.text.FontStyle.REGULAR = ["REGULAR",0];
flash.text.FontStyle.REGULAR.toString = $estr;
flash.text.FontStyle.REGULAR.__enum__ = flash.text.FontStyle;
flash.text.FontStyle.ITALIC = ["ITALIC",1];
flash.text.FontStyle.ITALIC.toString = $estr;
flash.text.FontStyle.ITALIC.__enum__ = flash.text.FontStyle;
flash.text.FontStyle.BOLD_ITALIC = ["BOLD_ITALIC",2];
flash.text.FontStyle.BOLD_ITALIC.toString = $estr;
flash.text.FontStyle.BOLD_ITALIC.__enum__ = flash.text.FontStyle;
flash.text.FontStyle.BOLD = ["BOLD",3];
flash.text.FontStyle.BOLD.toString = $estr;
flash.text.FontStyle.BOLD.__enum__ = flash.text.FontStyle;
flash.text.FontType = $hxClasses["flash.text.FontType"] = { __ename__ : true, __constructs__ : ["EMBEDDED","DEVICE"] }
flash.text.FontType.EMBEDDED = ["EMBEDDED",0];
flash.text.FontType.EMBEDDED.toString = $estr;
flash.text.FontType.EMBEDDED.__enum__ = flash.text.FontType;
flash.text.FontType.DEVICE = ["DEVICE",1];
flash.text.FontType.DEVICE.toString = $estr;
flash.text.FontType.DEVICE.__enum__ = flash.text.FontType;
flash.text.GridFitType = $hxClasses["flash.text.GridFitType"] = { __ename__ : true, __constructs__ : ["NONE","PIXEL","SUBPIXEL"] }
flash.text.GridFitType.NONE = ["NONE",0];
flash.text.GridFitType.NONE.toString = $estr;
flash.text.GridFitType.NONE.__enum__ = flash.text.GridFitType;
flash.text.GridFitType.PIXEL = ["PIXEL",1];
flash.text.GridFitType.PIXEL.toString = $estr;
flash.text.GridFitType.PIXEL.__enum__ = flash.text.GridFitType;
flash.text.GridFitType.SUBPIXEL = ["SUBPIXEL",2];
flash.text.GridFitType.SUBPIXEL.toString = $estr;
flash.text.GridFitType.SUBPIXEL.__enum__ = flash.text.GridFitType;
flash.text.TextField = function() {
	flash.display.InteractiveObject.call(this);
	this.mWidth = 100;
	this.mHeight = 20;
	this.mHTMLMode = false;
	this.multiline = false;
	this.__graphics = new flash.display.Graphics();
	this.mFace = flash.text.TextField.mDefaultFont;
	this.mAlign = flash.text.TextFormatAlign.LEFT;
	this.mParagraphs = new Array();
	this.mSelStart = -1;
	this.mSelEnd = -1;
	this.scrollH = 0;
	this.scrollV = 1;
	this.mType = flash.text.TextFieldType.DYNAMIC;
	this.set_autoSize("NONE");
	this.mTextHeight = 12;
	this.mMaxHeight = this.mTextHeight;
	this.mHTMLText = " ";
	this.mText = " ";
	this.mTextColour = 0;
	this.tabEnabled = false;
	this.mTryFreeType = true;
	this.selectable = true;
	this.mInsertPos = 0;
	this.__inputEnabled = false;
	this.mDownChar = 0;
	this.mSelectDrag = -1;
	this.mLineInfo = [];
	this.set_defaultTextFormat(new flash.text.TextFormat());
	this.set_borderColor(0);
	this.set_border(false);
	this.set_backgroundColor(16777215);
	this.set_background(false);
	this.gridFitType = flash.text.GridFitType.PIXEL;
	this.sharpness = 0;
};
$hxClasses["flash.text.TextField"] = flash.text.TextField;
flash.text.TextField.__name__ = ["flash","text","TextField"];
flash.text.TextField.__super__ = flash.display.InteractiveObject;
flash.text.TextField.prototype = $extend(flash.display.InteractiveObject.prototype,{
	set_wordWrap: function(inWordWrap) {
		this.wordWrap = inWordWrap;
		this.Rebuild();
		return this.get_wordWrap();
	}
	,get_wordWrap: function() {
		return this.wordWrap;
	}
	,set_width: function(inValue) {
		if(this.parent != null) this.parent.__invalidateBounds();
		if(this.get__boundsInvalid()) this.validateBounds();
		if(inValue != this.mWidth) {
			this.mWidth = inValue;
			this.Rebuild();
		}
		return this.mWidth;
	}
	,get_width: function() {
		return Math.max(this.mWidth,this.getBounds(this.get_stage()).width);
	}
	,set_type: function(inType) {
		this.mType = inType;
		this.__inputEnabled = this.mType == flash.text.TextFieldType.INPUT;
		if(this.mHTMLMode) {
			if(this.__inputEnabled) flash.Lib.__setContentEditable(this.__graphics.__surface,true); else flash.Lib.__setContentEditable(this.__graphics.__surface,false);
		} else if(this.__inputEnabled) {
			this.set_htmlText(StringTools.replace(this.mText,"\n","<BR />"));
			flash.Lib.__setContentEditable(this.__graphics.__surface,true);
		}
		this.tabEnabled = this.get_type() == flash.text.TextFieldType.INPUT;
		this.Rebuild();
		return inType;
	}
	,get_type: function() {
		return this.mType;
	}
	,get_textHeight: function() {
		return this.mMaxHeight;
	}
	,get_textWidth: function() {
		return this.mMaxWidth;
	}
	,set_textColor: function(inCol) {
		this.mTextColour = inCol;
		this.RebuildText();
		return inCol;
	}
	,get_textColor: function() {
		return this.mTextColour;
	}
	,set_text: function(inText) {
		this.mText = Std.string(inText);
		this.mHTMLMode = false;
		this.RebuildText();
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		return this.mText;
	}
	,get_text: function() {
		if(this.mHTMLMode) this.ConvertHTMLToText(false);
		return this.mText;
	}
	,set_scrollV: function(value) {
		return this.scrollV = value;
	}
	,get_scrollV: function() {
		return this.scrollV;
	}
	,set_scrollH: function(value) {
		return this.scrollH = value;
	}
	,get_scrollH: function() {
		return this.scrollH;
	}
	,get_numLines: function() {
		return 0;
	}
	,set_multiline: function(value) {
		return this.multiline = value;
	}
	,get_multiline: function() {
		return this.multiline;
	}
	,get_maxScrollV: function() {
		return 0;
	}
	,get_maxScrollH: function() {
		return 0;
	}
	,set_htmlText: function(inHTMLText) {
		this.mParagraphs = new Array();
		this.mHTMLText = inHTMLText;
		if(!this.mHTMLMode) {
			var domElement = js.Browser.document.createElement("div");
			if(this.background || this.border) {
				domElement.style.width = this.mWidth + "px";
				domElement.style.height = this.mHeight + "px";
			}
			if(this.background) domElement.style.backgroundColor = "#" + StringTools.hex(this.backgroundColor,6);
			if(this.border) domElement.style.border = "1px solid #" + StringTools.hex(this.borderColor,6);
			domElement.style.color = "#" + StringTools.hex(this.mTextColour,6);
			domElement.style.fontFamily = this.mFace;
			domElement.style.fontSize = this.mTextHeight + "px";
			domElement.style.textAlign = Std.string(this.mAlign);
			var wrapper = domElement;
			wrapper.innerHTML = inHTMLText;
			var destination = new flash.display.Graphics(wrapper);
			var __surface = this.__graphics.__surface;
			if(flash.Lib.__isOnStage(__surface)) {
				flash.Lib.__appendSurface(wrapper);
				flash.Lib.__copyStyle(__surface,wrapper);
				flash.Lib.__swapSurface(__surface,wrapper);
				flash.Lib.__removeSurface(__surface);
			}
			this.__graphics = destination;
			this.__graphics.__extent.width = wrapper.width;
			this.__graphics.__extent.height = wrapper.height;
		} else this.__graphics.__surface.innerHTML = inHTMLText;
		this.mHTMLMode = true;
		this.RebuildText();
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		return this.mHTMLText;
	}
	,get_htmlText: function() {
		return this.mHTMLText;
	}
	,set_height: function(inValue) {
		if(this.parent != null) this.parent.__invalidateBounds();
		if(this.get__boundsInvalid()) this.validateBounds();
		if(inValue != this.mHeight) {
			this.mHeight = inValue;
			this.Rebuild();
		}
		return this.mHeight;
	}
	,get_height: function() {
		return Math.max(this.mHeight,this.getBounds(this.get_stage()).height);
	}
	,set_defaultTextFormat: function(inFmt) {
		this.setTextFormat(inFmt);
		this._defaultTextFormat = inFmt;
		return inFmt;
	}
	,get_defaultTextFormat: function() {
		return this._defaultTextFormat;
	}
	,get_caretPos: function() {
		return this.mInsertPos;
	}
	,get_bottomScrollV: function() {
		return 0;
	}
	,set_borderColor: function(inBorderCol) {
		this.borderColor = inBorderCol;
		this.Rebuild();
		return inBorderCol;
	}
	,set_border: function(inBorder) {
		this.border = inBorder;
		this.Rebuild();
		return inBorder;
	}
	,set_backgroundColor: function(inCol) {
		this.backgroundColor = inCol;
		this.Rebuild();
		return inCol;
	}
	,set_background: function(inBack) {
		this.background = inBack;
		this.Rebuild();
		return inBack;
	}
	,set_autoSize: function(inAutoSize) {
		this.autoSize = inAutoSize;
		this.Rebuild();
		return inAutoSize;
	}
	,get_autoSize: function() {
		return this.autoSize;
	}
	,__render: function(inMask,clipRect) {
		if(!this.__combinedVisible) return;
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		if(this.__graphics.__render(inMask,this.__filters,1,1)) {
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.__applyFilters(this.__graphics.__surface);
			this.___renderFlags |= 32;
		}
		if(!this.mHTMLMode && inMask != null) {
			var m = this.getSurfaceTransform(this.__graphics);
			flash.Lib.__drawToSurface(this.__graphics.__surface,inMask,m,(this.parent != null?this.parent.__combinedAlpha:1) * this.alpha,clipRect,this.gridFitType != flash.text.GridFitType.PIXEL);
		} else {
			if((this.___renderFlags & 32) != 0) {
				var m = this.getSurfaceTransform(this.__graphics);
				flash.Lib.__setSurfaceTransform(this.__graphics.__surface,m);
				this.___renderFlags &= -33;
			}
			flash.Lib.__setSurfaceOpacity(this.__graphics.__surface,(this.parent != null?this.parent.__combinedAlpha:1) * this.alpha);
		}
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.get_visible()) return null; else if(this.mText.length > 1) {
			var local = this.globalToLocal(point);
			if(local.x < 0 || local.y < 0 || local.x > this.mMaxWidth || local.y > this.mMaxHeight) return null; else return this;
		} else return flash.display.InteractiveObject.prototype.__getObjectUnderPoint.call(this,point);
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,toString: function() {
		return "[TextField name=" + this.name + " id=" + this.___id + "]";
	}
	,setTextFormat: function(inFmt,beginIndex,endIndex) {
		if(endIndex == null) endIndex = 0;
		if(beginIndex == null) beginIndex = 0;
		if(inFmt.font != null) this.mFace = inFmt.font;
		if(inFmt.size != null) this.mTextHeight = inFmt.size | 0;
		if(inFmt.align != null) this.mAlign = inFmt.align;
		if(inFmt.color != null) this.mTextColour = inFmt.color;
		this.RebuildText();
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		return this.getTextFormat();
	}
	,setSelection: function(beginIndex,endIndex) {
	}
	,RenderRow: function(inRow,inY,inCharIdx,inAlign,inInsert) {
		if(inInsert == null) inInsert = 0;
		var h = 0;
		var w = 0;
		var _g = 0;
		while(_g < inRow.length) {
			var chr = inRow[_g];
			++_g;
			if(chr.fh > h) h = chr.fh;
			w += chr.adv;
		}
		if(w > this.mMaxWidth) this.mMaxWidth = w;
		var full_height = h * 1.2 | 0;
		var align_x = 0;
		var insert_x = 0;
		if(inInsert != null) {
			if(this.autoSize != "NONE") {
				this.scrollH = 0;
				insert_x = inInsert;
			} else {
				insert_x = inInsert - this.scrollH;
				if(insert_x < 0) this.scrollH -= (this.mLimitRenderX * 3 >> 2) - insert_x; else if(insert_x > this.mLimitRenderX) this.scrollH += insert_x - (this.mLimitRenderX * 3 >> 2);
				if(this.scrollH < 0) this.scrollH = 0;
			}
		}
		if(this.autoSize == "NONE" && w <= this.mLimitRenderX) {
			if(inAlign == flash.text.TextFormatAlign.CENTER) align_x = Math.round(this.mWidth) - w >> 1; else if(inAlign == flash.text.TextFormatAlign.RIGHT) align_x = Math.round(this.mWidth) - w;
		}
		var x_list = new Array();
		this.mLineInfo.push({ mY0 : inY, mIndex : inCharIdx - 1, mX : x_list});
		var cache_sel_font = null;
		var cache_normal_font = null;
		var x = align_x - this.scrollH;
		var x0 = x;
		var _g = 0;
		while(_g < inRow.length) {
			var chr = inRow[_g];
			++_g;
			var adv = chr.adv;
			if(x + adv > this.mLimitRenderX) break;
			x_list.push(x);
			if(x >= 0) {
				var font = chr.font;
				if(chr.sel) {
					this.__graphics.lineStyle();
					this.__graphics.beginFill(2105440);
					this.__graphics.drawRect(x,inY,adv,full_height);
					this.__graphics.endFill();
					if(cache_normal_font == chr.font) font = cache_sel_font; else {
						font = flash.text.FontInstance.CreateSolid(chr.font.GetFace(),chr.fh,16777215,1.0);
						cache_sel_font = font;
						cache_normal_font = chr.font;
					}
				}
				font.RenderChar(this.__graphics,chr.chr,x,inY + (h - chr.fh) | 0);
			}
			x += adv;
		}
		x += this.scrollH;
		return full_height;
	}
	,RebuildText: function() {
		this.mParagraphs = [];
		if(!this.mHTMLMode) {
			var font = flash.text.FontInstance.CreateSolid(this.mFace,this.mTextHeight,this.mTextColour,1.0);
			var paras = this.mText.split("\n");
			var _g = 0;
			while(_g < paras.length) {
				var paragraph = paras[_g];
				++_g;
				this.mParagraphs.push({ align : this.mAlign, spans : [{ font : font, text : paragraph + "\n"}]});
			}
		}
		this.Rebuild();
	}
	,Rebuild: function() {
		if(this.mHTMLMode) return;
		this.mLineInfo = [];
		this.__graphics.clear();
		if(this.background) {
			this.__graphics.beginFill(this.backgroundColor);
			this.__graphics.drawRect(0,0,this.get_width(),this.get_height());
			this.__graphics.endFill();
		}
		this.__graphics.lineStyle(this.mTextColour);
		var insert_x = null;
		this.mMaxWidth = 0;
		var wrap = this.mLimitRenderX = this.get_wordWrap() && !this.__inputEnabled?this.mWidth | 0:999999;
		var char_idx = 0;
		var h = 0;
		var s0 = this.mSelStart;
		var s1 = this.mSelEnd;
		var _g = 0, _g1 = this.mParagraphs;
		while(_g < _g1.length) {
			var paragraph = _g1[_g];
			++_g;
			var row = [];
			var row_width = 0;
			var last_word_break = 0;
			var last_word_break_width = 0;
			var last_word_char_idx = 0;
			var start_idx = char_idx;
			var tx = 0;
			var _g2 = 0, _g3 = paragraph.spans;
			while(_g2 < _g3.length) {
				var span = _g3[_g2];
				++_g2;
				var text = span.text;
				var font = span.font;
				var fh = font.get_height();
				last_word_break = row.length;
				last_word_break_width = row_width;
				last_word_char_idx = char_idx;
				var _g5 = 0, _g4 = text.length;
				while(_g5 < _g4) {
					var ch = _g5++;
					var g = HxOverrides.cca(text,ch);
					var adv = font.__getAdvance(g);
					if(g == 32) {
						last_word_break = row.length;
						last_word_break_width = tx;
						last_word_char_idx = char_idx;
					}
					if(tx + adv > wrap) {
						if(last_word_break > 0) {
							var row_end = row.splice(last_word_break,row.length - last_word_break);
							h += this.RenderRow(row,h,start_idx,paragraph.align);
							row = row_end;
							tx -= last_word_break_width;
							start_idx = last_word_char_idx;
							last_word_break = 0;
							last_word_break_width = 0;
							last_word_char_idx = 0;
							if(row_end.length > 0 && row_end[0].chr == 32) {
								row_end.shift();
								start_idx++;
							}
						} else {
							h += this.RenderRow(row,h,char_idx,paragraph.align);
							row = [];
							tx = 0;
							start_idx = char_idx;
						}
					}
					row.push({ font : font, chr : g, x : tx, fh : fh, sel : char_idx >= s0 && char_idx < s1, adv : adv});
					tx += adv;
					char_idx++;
				}
			}
			if(row.length > 0) {
				h += this.RenderRow(row,h,start_idx,paragraph.align,insert_x);
				insert_x = null;
			}
		}
		var w = this.mMaxWidth;
		if(h < this.mTextHeight) h = this.mTextHeight;
		this.mMaxHeight = h;
		var _g = this;
		switch(_g.autoSize) {
		case "LEFT":
			break;
		case "RIGHT":
			var x0 = this.get_x() + this.get_width();
			this.set_x(this.mWidth - x0);
			break;
		case "CENTER":
			var x0 = this.get_x() + this.get_width() / 2;
			this.set_x(this.mWidth / 2 - x0);
			break;
		default:
			if(this.get_wordWrap()) this.set_height(h);
		}
		if(this.border) {
			this.__graphics.endFill();
			this.__graphics.lineStyle(1,this.borderColor,1,true);
			this.__graphics.drawRect(.5,.5,this.get_width() - .5,this.get_height() - .5);
		}
	}
	,getTextFormat: function(beginIndex,endIndex) {
		if(endIndex == null) endIndex = 0;
		if(beginIndex == null) beginIndex = 0;
		return new flash.text.TextFormat(this.mFace,this.mTextHeight,this.mTextColour);
	}
	,getLineIndexAtPoint: function(inX,inY) {
		if(this.mLineInfo.length < 1) return -1;
		if(inY <= 0) return 0;
		var _g1 = 0, _g = this.mLineInfo.length;
		while(_g1 < _g) {
			var l = _g1++;
			if(this.mLineInfo[l].mY0 > inY) return l == 0?0:l - 1;
		}
		return this.mLineInfo.length - 1;
	}
	,getCharIndexAtPoint: function(inX,inY) {
		var li = this.getLineIndexAtPoint(inX,inY);
		if(li < 0) return -1;
		var line = this.mLineInfo[li];
		var idx = line.mIndex;
		var _g = 0, _g1 = line.mX;
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			if(x > inX) return idx;
			idx++;
		}
		return idx;
	}
	,getCharBoundaries: function(a) {
		return null;
	}
	,DecodeColour: function(col) {
		return Std.parseInt("0x" + HxOverrides.substr(col,1,null));
	}
	,ConvertHTMLToText: function(inUnSetHTML) {
		this.mText = "";
		var _g = 0, _g1 = this.mParagraphs;
		while(_g < _g1.length) {
			var paragraph = _g1[_g];
			++_g;
			var _g2 = 0, _g3 = paragraph.spans;
			while(_g2 < _g3.length) {
				var span = _g3[_g2];
				++_g2;
				this.mText += span.text;
			}
		}
		if(inUnSetHTML) {
			this.mHTMLMode = false;
			this.RebuildText();
		}
	}
	,appendText: function(newText) {
		var _g = this;
		_g.set_text(_g.get_text() + newText);
	}
	,__class__: flash.text.TextField
	,__properties__: $extend(flash.display.InteractiveObject.prototype.__properties__,{set_autoSize:"set_autoSize",set_background:"set_background",set_backgroundColor:"set_backgroundColor",set_border:"set_border",set_borderColor:"set_borderColor",get_bottomScrollV:"get_bottomScrollV",get_caretPos:"get_caretPos",set_defaultTextFormat:"set_defaultTextFormat",get_defaultTextFormat:"get_defaultTextFormat",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",get_maxScrollH:"get_maxScrollH",get_maxScrollV:"get_maxScrollV",get_numLines:"get_numLines",set_text:"set_text",get_text:"get_text",set_textColor:"set_textColor",get_textColor:"get_textColor",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_type:"set_type",get_type:"get_type",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap"})
});
flash.text.FontInstanceMode = $hxClasses["flash.text.FontInstanceMode"] = { __ename__ : true, __constructs__ : ["fimSolid"] }
flash.text.FontInstanceMode.fimSolid = ["fimSolid",0];
flash.text.FontInstanceMode.fimSolid.toString = $estr;
flash.text.FontInstanceMode.fimSolid.__enum__ = flash.text.FontInstanceMode;
flash.text.FontInstance = function(inFont,inHeight) {
	this.mFont = inFont;
	this.mHeight = inHeight;
	this.mTryFreeType = true;
	this.mGlyphs = [];
	this.mCacheAsBitmap = false;
};
$hxClasses["flash.text.FontInstance"] = flash.text.FontInstance;
flash.text.FontInstance.__name__ = ["flash","text","FontInstance"];
flash.text.FontInstance.CreateSolid = function(inFace,inHeight,inColour,inAlpha) {
	var id = "SOLID:" + inFace + ":" + inHeight + ":" + inColour + ":" + inAlpha;
	var f = flash.text.FontInstance.mSolidFonts.get(id);
	if(f != null) return f;
	var font = new flash.text.Font();
	font.__setScale(inHeight);
	font.set_fontName(inFace);
	if(font == null) return null;
	f = new flash.text.FontInstance(font,inHeight);
	f.SetSolid(inColour,inAlpha);
	flash.text.FontInstance.mSolidFonts.set(id,f);
	return f;
}
flash.text.FontInstance.prototype = {
	get_height: function() {
		return this.mHeight;
	}
	,__getAdvance: function(inChar) {
		if(this.mFont == null) return 0;
		return this.mFont.__getAdvance(inChar,this.mHeight);
	}
	,toString: function() {
		return "FontInstance:" + Std.string(this.mFont) + ":" + this.mColour + "(" + this.mGlyphs.length + ")";
	}
	,RenderChar: function(inGraphics,inGlyph,inX,inY) {
		inGraphics.__clearLine();
		inGraphics.beginFill(this.mColour,this.mAlpha);
		this.mFont.__render(inGraphics,inGlyph,inX,inY,this.mTryFreeType);
		inGraphics.endFill();
	}
	,SetSolid: function(inCol,inAlpha) {
		this.mColour = inCol;
		this.mAlpha = inAlpha;
		this.mMode = flash.text.FontInstanceMode.fimSolid;
	}
	,GetFace: function() {
		return this.mFont.fontName;
	}
	,__class__: flash.text.FontInstance
	,__properties__: {get_height:"get_height"}
}
flash.text.TextFieldAutoSize = function() { }
$hxClasses["flash.text.TextFieldAutoSize"] = flash.text.TextFieldAutoSize;
flash.text.TextFieldAutoSize.__name__ = ["flash","text","TextFieldAutoSize"];
flash.text.TextFieldType = function() { }
$hxClasses["flash.text.TextFieldType"] = flash.text.TextFieldType;
flash.text.TextFieldType.__name__ = ["flash","text","TextFieldType"];
flash.text.TextFormat = function(in_font,in_size,in_color,in_bold,in_italic,in_underline,in_url,in_target,in_align,in_leftMargin,in_rightMargin,in_indent,in_leading) {
	this.font = in_font;
	this.size = in_size;
	this.color = in_color;
	this.bold = in_bold;
	this.italic = in_italic;
	this.underline = in_underline;
	this.url = in_url;
	this.target = in_target;
	this.align = in_align;
	this.leftMargin = in_leftMargin;
	this.rightMargin = in_rightMargin;
	this.indent = in_indent;
	this.leading = in_leading;
};
$hxClasses["flash.text.TextFormat"] = flash.text.TextFormat;
flash.text.TextFormat.__name__ = ["flash","text","TextFormat"];
flash.text.TextFormat.prototype = {
	clone: function() {
		var newFormat = new flash.text.TextFormat(this.font,this.size,this.color,this.bold,this.italic,this.underline,this.url,this.target);
		newFormat.align = this.align;
		newFormat.leftMargin = this.leftMargin;
		newFormat.rightMargin = this.rightMargin;
		newFormat.indent = this.indent;
		newFormat.leading = this.leading;
		newFormat.blockIndent = this.blockIndent;
		newFormat.bullet = this.bullet;
		newFormat.display = this.display;
		newFormat.kerning = this.kerning;
		newFormat.letterSpacing = this.letterSpacing;
		newFormat.tabStops = this.tabStops;
		return newFormat;
	}
	,__class__: flash.text.TextFormat
}
flash.text.TextFormatAlign = $hxClasses["flash.text.TextFormatAlign"] = { __ename__ : true, __constructs__ : ["LEFT","RIGHT","JUSTIFY","CENTER"] }
flash.text.TextFormatAlign.LEFT = ["LEFT",0];
flash.text.TextFormatAlign.LEFT.toString = $estr;
flash.text.TextFormatAlign.LEFT.__enum__ = flash.text.TextFormatAlign;
flash.text.TextFormatAlign.RIGHT = ["RIGHT",1];
flash.text.TextFormatAlign.RIGHT.toString = $estr;
flash.text.TextFormatAlign.RIGHT.__enum__ = flash.text.TextFormatAlign;
flash.text.TextFormatAlign.JUSTIFY = ["JUSTIFY",2];
flash.text.TextFormatAlign.JUSTIFY.toString = $estr;
flash.text.TextFormatAlign.JUSTIFY.__enum__ = flash.text.TextFormatAlign;
flash.text.TextFormatAlign.CENTER = ["CENTER",3];
flash.text.TextFormatAlign.CENTER.toString = $estr;
flash.text.TextFormatAlign.CENTER.__enum__ = flash.text.TextFormatAlign;
flash.ui = {}
flash.ui.Keyboard = function() { }
$hxClasses["flash.ui.Keyboard"] = flash.ui.Keyboard;
flash.ui.Keyboard.__name__ = ["flash","ui","Keyboard"];
flash.ui.Keyboard.isAccessible = function() {
	return false;
}
flash.ui.Keyboard.__convertMozillaCode = function(code) {
	switch(code) {
	case 8:
		return 8;
	case 9:
		return 9;
	case 13:
		return 13;
	case 14:
		return 13;
	case 16:
		return 16;
	case 17:
		return 17;
	case 20:
		return 18;
	case 27:
		return 27;
	case 32:
		return 32;
	case 33:
		return 33;
	case 34:
		return 34;
	case 35:
		return 35;
	case 36:
		return 36;
	case 37:
		return 37;
	case 39:
		return 39;
	case 38:
		return 38;
	case 40:
		return 40;
	case 45:
		return 45;
	case 46:
		return 46;
	case 144:
		return 144;
	default:
		return code;
	}
}
flash.ui.Keyboard.__convertWebkitCode = function(code) {
	var _g = code.toLowerCase();
	switch(_g) {
	case "backspace":
		return 8;
	case "tab":
		return 9;
	case "enter":
		return 13;
	case "shift":
		return 16;
	case "control":
		return 17;
	case "capslock":
		return 18;
	case "escape":
		return 27;
	case "space":
		return 32;
	case "pageup":
		return 33;
	case "pagedown":
		return 34;
	case "end":
		return 35;
	case "home":
		return 36;
	case "left":
		return 37;
	case "right":
		return 39;
	case "up":
		return 38;
	case "down":
		return 40;
	case "insert":
		return 45;
	case "delete":
		return 46;
	case "numlock":
		return 144;
	case "break":
		return 19;
	}
	if(code.indexOf("U+") == 0) return Std.parseInt("0x" + HxOverrides.substr(code,3,null));
	throw "Unrecognized key code: " + code;
	return 0;
}
flash.utils = {}
flash.utils.ByteArray = function() {
	this.littleEndian = false;
	this.allocated = 0;
	this.position = 0;
	this.length = 0;
	this.___resizeBuffer(this.allocated);
};
$hxClasses["flash.utils.ByteArray"] = flash.utils.ByteArray;
flash.utils.ByteArray.__name__ = ["flash","utils","ByteArray"];
flash.utils.ByteArray.fromBytes = function(inBytes) {
	var result = new flash.utils.ByteArray();
	result.byteView = new Uint8Array(inBytes.b);
	result.set_length(result.byteView.length);
	result.allocated = result.length;
	return result;
}
flash.utils.ByteArray.__ofBuffer = function(buffer) {
	var bytes = new flash.utils.ByteArray();
	bytes.set_length(bytes.allocated = buffer.byteLength);
	bytes.data = new DataView(buffer);
	bytes.byteView = new Uint8Array(buffer);
	return bytes;
}
flash.utils.ByteArray.prototype = {
	set_length: function(value) {
		if(this.allocated < value) this.___resizeBuffer(this.allocated = Math.max(value,this.allocated * 2) | 0); else if(this.allocated > value) this.___resizeBuffer(this.allocated = value);
		this.length = value;
		return value;
	}
	,set_endian: function(endian) {
		this.littleEndian = endian == "littleEndian";
		return endian;
	}
	,get_endian: function() {
		return this.littleEndian?"littleEndian":"bigEndian";
	}
	,get_bytesAvailable: function() {
		return this.length - this.position;
	}
	,__set: function(pos,v) {
		this.data.setUint8(pos,v);
	}
	,__getBuffer: function() {
		return this.data.buffer;
	}
	,___resizeBuffer: function(len) {
		var oldByteView = this.byteView;
		var newByteView = new Uint8Array(len);
		if(oldByteView != null) {
			if(oldByteView.length <= len) newByteView.set(oldByteView); else newByteView.set(oldByteView.subarray(0,len));
		}
		this.byteView = newByteView;
		this.data = new DataView(newByteView.buffer);
	}
	,_getUTFBytesCount: function(value) {
		var count = 0;
		var _g1 = 0, _g = value.length;
		while(_g1 < _g) {
			var i = _g1++;
			var c = value.charCodeAt(i);
			if(c <= 127) count += 1; else if(c <= 2047) count += 2; else if(c <= 65535) count += 3; else count += 4;
		}
		return count;
	}
	,__get: function(pos) {
		return this.data.getUint8(pos);
	}
	,__fromBytes: function(inBytes) {
		this.byteView = new Uint8Array(inBytes.b);
		this.set_length(this.byteView.length);
		this.allocated = this.length;
	}
	,writeUTFBytes: function(value) {
		var _g1 = 0, _g = value.length;
		while(_g1 < _g) {
			var i = _g1++;
			var c = value.charCodeAt(i);
			if(c <= 127) this.writeByte(c); else if(c <= 2047) {
				this.writeByte(192 | c >> 6);
				this.writeByte(128 | c & 63);
			} else if(c <= 65535) {
				this.writeByte(224 | c >> 12);
				this.writeByte(128 | c >> 6 & 63);
				this.writeByte(128 | c & 63);
			} else {
				this.writeByte(240 | c >> 18);
				this.writeByte(128 | c >> 12 & 63);
				this.writeByte(128 | c >> 6 & 63);
				this.writeByte(128 | c & 63);
			}
		}
	}
	,writeUTF: function(value) {
		this.writeUnsignedShort(this._getUTFBytesCount(value));
		this.writeUTFBytes(value);
	}
	,writeUnsignedShort: function(value) {
		var lengthToEnsure = this.position + 2;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Math.max(lengthToEnsure,this.allocated * 2) | 0); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setUint16(this.position,value,this.littleEndian);
		this.position += 2;
	}
	,writeUnsignedInt: function(value) {
		var lengthToEnsure = this.position + 4;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Math.max(lengthToEnsure,this.allocated * 2) | 0); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setUint32(this.position,value,this.littleEndian);
		this.position += 4;
	}
	,writeShort: function(value) {
		var lengthToEnsure = this.position + 2;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Math.max(lengthToEnsure,this.allocated * 2) | 0); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setInt16(this.position,value,this.littleEndian);
		this.position += 2;
	}
	,writeInt: function(value) {
		var lengthToEnsure = this.position + 4;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Math.max(lengthToEnsure,this.allocated * 2) | 0); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setInt32(this.position,value,this.littleEndian);
		this.position += 4;
	}
	,writeFloat: function(x) {
		var lengthToEnsure = this.position + 4;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Math.max(lengthToEnsure,this.allocated * 2) | 0); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setFloat32(this.position,x,this.littleEndian);
		this.position += 4;
	}
	,writeDouble: function(x) {
		var lengthToEnsure = this.position + 8;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Math.max(lengthToEnsure,this.allocated * 2) | 0); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setFloat64(this.position,x,this.littleEndian);
		this.position += 8;
	}
	,writeBytes: function(bytes,offset,length) {
		if(offset < 0 || length < 0) throw new flash.errors.IOError("Write error - Out of bounds");
		var lengthToEnsure = this.position + length;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Math.max(lengthToEnsure,this.allocated * 2) | 0); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.byteView.set(bytes.byteView.subarray(offset,offset + length),this.position);
		this.position += length;
	}
	,writeByte: function(value) {
		var lengthToEnsure = this.position + 1;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Math.max(lengthToEnsure,this.allocated * 2) | 0); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		var data = this.data;
		data.setInt8(this.position,value);
		this.position += 1;
	}
	,writeBoolean: function(value) {
		this.writeByte(value?1:0);
	}
	,toString: function() {
		var cachePosition = this.position;
		this.position = 0;
		var value = this.readUTFBytes(this.length);
		this.position = cachePosition;
		return value;
	}
	,readUTFBytes: function(len) {
		var value = "";
		var max = this.position + len;
		while(this.position < max) {
			var data = this.data;
			var c = data.getUint8(this.position++);
			if(c < 128) {
				if(c == 0) break;
				value += String.fromCharCode(c);
			} else if(c < 224) value += String.fromCharCode((c & 63) << 6 | data.getUint8(this.position++) & 127); else if(c < 240) {
				var c2 = data.getUint8(this.position++);
				value += String.fromCharCode((c & 31) << 12 | (c2 & 127) << 6 | data.getUint8(this.position++) & 127);
			} else {
				var c2 = data.getUint8(this.position++);
				var c3 = data.getUint8(this.position++);
				value += String.fromCharCode((c & 15) << 18 | (c2 & 127) << 12 | c3 << 6 & 127 | data.getUint8(this.position++) & 127);
			}
		}
		return value;
	}
	,readUTF: function() {
		var bytesCount = this.readUnsignedShort();
		return this.readUTFBytes(bytesCount);
	}
	,readUnsignedShort: function() {
		var uShort = this.data.getUint16(this.position,this.littleEndian);
		this.position += 2;
		return uShort;
	}
	,readUnsignedInt: function() {
		var uInt = this.data.getUint32(this.position,this.littleEndian);
		this.position += 4;
		return uInt;
	}
	,readUnsignedByte: function() {
		var data = this.data;
		return data.getUint8(this.position++);
	}
	,readShort: function() {
		var $short = this.data.getInt16(this.position,this.littleEndian);
		this.position += 2;
		return $short;
	}
	,readInt: function() {
		var $int = this.data.getInt32(this.position,this.littleEndian);
		this.position += 4;
		return $int;
	}
	,readFullBytes: function(bytes,pos,len) {
		if(this.length < len) {
			if(this.allocated < len) this.___resizeBuffer(this.allocated = Math.max(len,this.allocated * 2) | 0); else if(this.allocated > len) this.___resizeBuffer(this.allocated = len);
			this.length = len;
			len;
		}
		var _g1 = pos, _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			var data = this.data;
			data.setInt8(this.position++,bytes.b[i]);
		}
	}
	,readFloat: function() {
		var $float = this.data.getFloat32(this.position,this.littleEndian);
		this.position += 4;
		return $float;
	}
	,readDouble: function() {
		var $double = this.data.getFloat64(this.position,this.littleEndian);
		this.position += 8;
		return $double;
	}
	,readBytes: function(bytes,offset,length) {
		if(offset < 0 || length < 0) throw new flash.errors.IOError("Read error - Out of bounds");
		if(offset == null) offset = 0;
		if(length == null) length = this.length;
		var lengthToEnsure = offset + length;
		if(bytes.length < lengthToEnsure) {
			if(bytes.allocated < lengthToEnsure) bytes.___resizeBuffer(bytes.allocated = Math.max(lengthToEnsure,bytes.allocated * 2) | 0); else if(bytes.allocated > lengthToEnsure) bytes.___resizeBuffer(bytes.allocated = lengthToEnsure);
			bytes.length = lengthToEnsure;
			lengthToEnsure;
		}
		bytes.byteView.set(this.byteView.subarray(this.position,this.position + length),offset);
		bytes.position = offset;
		this.position += length;
		if(bytes.position + length > bytes.length) bytes.set_length(bytes.position + length);
	}
	,readByte: function() {
		var data = this.data;
		return data.getUint8(this.position++);
	}
	,readBoolean: function() {
		return this.readByte() != 0;
	}
	,clear: function() {
		if(this.allocated < 0) this.___resizeBuffer(this.allocated = Math.max(0,this.allocated * 2) | 0); else if(this.allocated > 0) this.___resizeBuffer(this.allocated = 0);
		this.length = 0;
		0;
	}
	,__class__: flash.utils.ByteArray
	,__properties__: {get_bytesAvailable:"get_bytesAvailable",set_endian:"set_endian",get_endian:"get_endian",set_length:"set_length"}
}
flash.utils.Endian = function() { }
$hxClasses["flash.utils.Endian"] = flash.utils.Endian;
flash.utils.Endian.__name__ = ["flash","utils","Endian"];
flash.utils.Timer = function(delay,repeatCount) {
	if(repeatCount == null) repeatCount = 0;
	flash.events.EventDispatcher.call(this);
	this.running = false;
	this.set_delay(delay);
	this.set_repeatCount(repeatCount);
	this.currentCount = 0;
};
$hxClasses["flash.utils.Timer"] = flash.utils.Timer;
flash.utils.Timer.__name__ = ["flash","utils","Timer"];
flash.utils.Timer.__super__ = flash.events.EventDispatcher;
flash.utils.Timer.prototype = $extend(flash.events.EventDispatcher.prototype,{
	set_repeatCount: function(v) {
		if(this.running && v != 0 && v <= this.currentCount) this.stop();
		this.repeatCount = v;
		return v;
	}
	,set_delay: function(v) {
		if(v != this.delay) {
			var wasRunning = this.running;
			if(this.running) this.stop();
			this.delay = v;
			if(wasRunning) this.start();
		}
		return v;
	}
	,__onInterval: function() {
		this.currentCount++;
		if(this.repeatCount > 0 && this.currentCount >= this.repeatCount) {
			this.stop();
			this.dispatchEvent(new flash.events.TimerEvent("timer"));
			this.dispatchEvent(new flash.events.TimerEvent("timerComplete"));
		} else this.dispatchEvent(new flash.events.TimerEvent("timer"));
	}
	,stop: function() {
		if(this.timerId != null) {
			window.clearInterval(this.timerId);
			this.timerId = null;
		}
		this.running = false;
	}
	,start: function() {
		if(this.running) return;
		this.running = true;
		this.timerId = window.setInterval($bind(this,this.__onInterval),this.delay | 0);
	}
	,reset: function() {
		this.stop();
		this.currentCount = 0;
	}
	,__class__: flash.utils.Timer
	,__properties__: {set_delay:"set_delay",set_repeatCount:"set_repeatCount"}
});
flash.utils.Uuid = function() { }
$hxClasses["flash.utils.Uuid"] = flash.utils.Uuid;
flash.utils.Uuid.__name__ = ["flash","utils","Uuid"];
flash.utils.Uuid.random = function(size) {
	if(size == null) size = 32;
	var nchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".length;
	var uid = new StringBuf();
	var _g = 0;
	while(_g < size) {
		var i = _g++;
		uid.b += Std.string("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.random() * nchars | 0));
	}
	return uid.b;
}
flash.utils.Uuid.uuid = function() {
	return flash.utils.Uuid.random(8) + "-" + flash.utils.Uuid.random(4) + "-" + flash.utils.Uuid.random(4) + "-" + flash.utils.Uuid.random(4) + "-" + flash.utils.Uuid.random(12);
}
haxe.StackItem = $hxClasses["haxe.StackItem"] = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","Lambda"] }
haxe.StackItem.CFunction = ["CFunction",0];
haxe.StackItem.CFunction.toString = $estr;
haxe.StackItem.CFunction.__enum__ = haxe.StackItem;
haxe.StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.StackItem.Lambda = function(v) { var $x = ["Lambda",4,v]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.CallStack = function() { }
$hxClasses["haxe.CallStack"] = haxe.CallStack;
haxe.CallStack.__name__ = ["haxe","CallStack"];
haxe.CallStack.exceptionStack = function() {
	return [];
}
haxe.CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe.CallStack.itemToString(b,s);
	}
	return b.b;
}
haxe.CallStack.itemToString = function(b,s) {
	var $e = (s);
	switch( $e[1] ) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = $e[2];
		b.b += "module ";
		b.b += Std.string(m);
		break;
	case 2:
		var line = $e[4], file = $e[3], s1 = $e[2];
		if(s1 != null) {
			haxe.CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += Std.string(file);
		b.b += " line ";
		b.b += Std.string(line);
		if(s1 != null) b.b += ")";
		break;
	case 3:
		var meth = $e[3], cname = $e[2];
		b.b += Std.string(cname);
		b.b += ".";
		b.b += Std.string(meth);
		break;
	case 4:
		var n = $e[2];
		b.b += "local function #";
		b.b += Std.string(n);
		break;
	}
}
haxe.Resource = function() { }
$hxClasses["haxe.Resource"] = haxe.Resource;
haxe.Resource.__name__ = ["haxe","Resource"];
haxe.Resource.listNames = function() {
	var names = new Array();
	var _g = 0, _g1 = haxe.Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		names.push(x.name);
	}
	return names;
}
haxe.Resource.getString = function(name) {
	var _g = 0, _g1 = haxe.Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return x.str;
			var b = haxe.Unserializer.run(x.data);
			return b.toString();
		}
	}
	return null;
}
haxe._Template = {}
haxe._Template.TemplateExpr = $hxClasses["haxe._Template.TemplateExpr"] = { __ename__ : true, __constructs__ : ["OpVar","OpExpr","OpIf","OpStr","OpBlock","OpForeach","OpMacro"] }
haxe._Template.TemplateExpr.OpVar = function(v) { var $x = ["OpVar",0,v]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; }
haxe._Template.TemplateExpr.OpExpr = function(expr) { var $x = ["OpExpr",1,expr]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; }
haxe._Template.TemplateExpr.OpIf = function(expr,eif,eelse) { var $x = ["OpIf",2,expr,eif,eelse]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; }
haxe._Template.TemplateExpr.OpStr = function(str) { var $x = ["OpStr",3,str]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; }
haxe._Template.TemplateExpr.OpBlock = function(l) { var $x = ["OpBlock",4,l]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; }
haxe._Template.TemplateExpr.OpForeach = function(expr,loop) { var $x = ["OpForeach",5,expr,loop]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; }
haxe._Template.TemplateExpr.OpMacro = function(name,params) { var $x = ["OpMacro",6,name,params]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; }
haxe.Template = function(str) {
	var tokens = this.parseTokens(str);
	this.expr = this.parseBlock(tokens);
	if(!tokens.isEmpty()) throw "Unexpected '" + Std.string(tokens.first().s) + "'";
};
$hxClasses["haxe.Template"] = haxe.Template;
haxe.Template.__name__ = ["haxe","Template"];
haxe.Template.prototype = {
	run: function(e) {
		var $e = (e);
		switch( $e[1] ) {
		case 0:
			var v = $e[2];
			this.buf.b += Std.string(Std.string(this.resolve(v)));
			break;
		case 1:
			var e1 = $e[2];
			this.buf.b += Std.string(Std.string(e1()));
			break;
		case 2:
			var eelse = $e[4], eif = $e[3], e1 = $e[2];
			var v = e1();
			if(v == null || v == false) {
				if(eelse != null) this.run(eelse);
			} else this.run(eif);
			break;
		case 3:
			var str = $e[2];
			this.buf.b += Std.string(str);
			break;
		case 4:
			var l = $e[2];
			var $it0 = l.iterator();
			while( $it0.hasNext() ) {
				var e1 = $it0.next();
				this.run(e1);
			}
			break;
		case 5:
			var loop = $e[3], e1 = $e[2];
			var v = e1();
			try {
				var x = $iterator(v)();
				if(x.hasNext == null) throw null;
				v = x;
			} catch( e2 ) {
				try {
					if(v.hasNext == null) throw null;
				} catch( e3 ) {
					throw "Cannot iter on " + Std.string(v);
				}
			}
			this.stack.push(this.context);
			var v1 = v;
			while( v1.hasNext() ) {
				var ctx = v1.next();
				this.context = ctx;
				this.run(loop);
			}
			this.context = this.stack.pop();
			break;
		case 6:
			var params = $e[3], m = $e[2];
			var v = Reflect.field(this.macros,m);
			var pl = new Array();
			var old = this.buf;
			pl.push($bind(this,this.resolve));
			var $it1 = params.iterator();
			while( $it1.hasNext() ) {
				var p = $it1.next();
				var $e = (p);
				switch( $e[1] ) {
				case 0:
					var v1 = $e[2];
					pl.push(this.resolve(v1));
					break;
				default:
					this.buf = new StringBuf();
					this.run(p);
					pl.push(this.buf.b);
				}
			}
			this.buf = old;
			try {
				this.buf.b += Std.string(Std.string(v.apply(this.macros,pl)));
			} catch( e1 ) {
				var plstr = (function($this) {
					var $r;
					try {
						$r = pl.join(",");
					} catch( e2 ) {
						$r = "???";
					}
					return $r;
				}(this));
				var msg = "Macro call " + m + "(" + plstr + ") failed (" + Std.string(e1) + ")";
				throw msg;
			}
			break;
		}
	}
	,makeExpr2: function(l) {
		var p = l.pop();
		if(p == null) throw "<eof>";
		if(p.s) return this.makeConst(p.p);
		switch(p.p) {
		case "(":
			var e1 = this.makeExpr(l);
			var p1 = l.pop();
			if(p1 == null || p1.s) throw p1.p;
			if(p1.p == ")") return e1;
			var e2 = this.makeExpr(l);
			var p2 = l.pop();
			if(p2 == null || p2.p != ")") throw p2.p;
			return (function($this) {
				var $r;
				switch(p1.p) {
				case "+":
					$r = function() {
						return e1() + e2();
					};
					break;
				case "-":
					$r = function() {
						return e1() - e2();
					};
					break;
				case "*":
					$r = function() {
						return e1() * e2();
					};
					break;
				case "/":
					$r = function() {
						return e1() / e2();
					};
					break;
				case ">":
					$r = function() {
						return e1() > e2();
					};
					break;
				case "<":
					$r = function() {
						return e1() < e2();
					};
					break;
				case ">=":
					$r = function() {
						return e1() >= e2();
					};
					break;
				case "<=":
					$r = function() {
						return e1() <= e2();
					};
					break;
				case "==":
					$r = function() {
						return e1() == e2();
					};
					break;
				case "!=":
					$r = function() {
						return e1() != e2();
					};
					break;
				case "&&":
					$r = function() {
						return e1() && e2();
					};
					break;
				case "||":
					$r = function() {
						return e1() || e2();
					};
					break;
				default:
					$r = (function($this) {
						var $r;
						throw "Unknown operation " + p1.p;
						return $r;
					}($this));
				}
				return $r;
			}(this));
		case "!":
			var e = this.makeExpr(l);
			return function() {
				var v = e();
				return v == null || v == false;
			};
		case "-":
			var e3 = this.makeExpr(l);
			return function() {
				return -e3();
			};
		}
		throw p.p;
	}
	,makeExpr: function(l) {
		return this.makePath(this.makeExpr2(l),l);
	}
	,makePath: function(e,l) {
		var p = l.first();
		if(p == null || p.p != ".") return e;
		l.pop();
		var field = l.pop();
		if(field == null || !field.s) throw field.p;
		var f = field.p;
		haxe.Template.expr_trim.match(f);
		f = haxe.Template.expr_trim.matched(1);
		return this.makePath(function() {
			return Reflect.field(e(),f);
		},l);
	}
	,makeConst: function(v) {
		haxe.Template.expr_trim.match(v);
		v = haxe.Template.expr_trim.matched(1);
		if(HxOverrides.cca(v,0) == 34) {
			var str = HxOverrides.substr(v,1,v.length - 2);
			return function() {
				return str;
			};
		}
		if(haxe.Template.expr_int.match(v)) {
			var i = Std.parseInt(v);
			return function() {
				return i;
			};
		}
		if(haxe.Template.expr_float.match(v)) {
			var f = Std.parseFloat(v);
			return function() {
				return f;
			};
		}
		var me = this;
		return function() {
			return me.resolve(v);
		};
	}
	,parseExpr: function(data) {
		var l = new List();
		var expr = data;
		while(haxe.Template.expr_splitter.match(data)) {
			var p = haxe.Template.expr_splitter.matchedPos();
			var k = p.pos + p.len;
			if(p.pos != 0) l.add({ p : HxOverrides.substr(data,0,p.pos), s : true});
			var p1 = haxe.Template.expr_splitter.matched(0);
			l.add({ p : p1, s : p1.indexOf("\"") >= 0});
			data = haxe.Template.expr_splitter.matchedRight();
		}
		if(data.length != 0) l.add({ p : data, s : true});
		var e;
		try {
			e = this.makeExpr(l);
			if(!l.isEmpty()) throw l.first().p;
		} catch( s ) {
			if( js.Boot.__instanceof(s,String) ) {
				throw "Unexpected '" + s + "' in " + expr;
			} else throw(s);
		}
		return function() {
			try {
				return e();
			} catch( exc ) {
				throw "Error : " + Std.string(exc) + " in " + expr;
			}
		};
	}
	,parse: function(tokens) {
		var t = tokens.pop();
		var p = t.p;
		if(t.s) return haxe._Template.TemplateExpr.OpStr(p);
		if(t.l != null) {
			var pe = new List();
			var _g = 0, _g1 = t.l;
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				pe.add(this.parseBlock(this.parseTokens(p1)));
			}
			return haxe._Template.TemplateExpr.OpMacro(p,pe);
		}
		if(HxOverrides.substr(p,0,3) == "if ") {
			p = HxOverrides.substr(p,3,p.length - 3);
			var e = this.parseExpr(p);
			var eif = this.parseBlock(tokens);
			var t1 = tokens.first();
			var eelse;
			if(t1 == null) throw "Unclosed 'if'";
			if(t1.p == "end") {
				tokens.pop();
				eelse = null;
			} else if(t1.p == "else") {
				tokens.pop();
				eelse = this.parseBlock(tokens);
				t1 = tokens.pop();
				if(t1 == null || t1.p != "end") throw "Unclosed 'else'";
			} else {
				t1.p = HxOverrides.substr(t1.p,4,t1.p.length - 4);
				eelse = this.parse(tokens);
			}
			return haxe._Template.TemplateExpr.OpIf(e,eif,eelse);
		}
		if(HxOverrides.substr(p,0,8) == "foreach ") {
			p = HxOverrides.substr(p,8,p.length - 8);
			var e = this.parseExpr(p);
			var efor = this.parseBlock(tokens);
			var t1 = tokens.pop();
			if(t1 == null || t1.p != "end") throw "Unclosed 'foreach'";
			return haxe._Template.TemplateExpr.OpForeach(e,efor);
		}
		if(haxe.Template.expr_splitter.match(p)) return haxe._Template.TemplateExpr.OpExpr(this.parseExpr(p));
		return haxe._Template.TemplateExpr.OpVar(p);
	}
	,parseBlock: function(tokens) {
		var l = new List();
		while(true) {
			var t = tokens.first();
			if(t == null) break;
			if(!t.s && (t.p == "end" || t.p == "else" || HxOverrides.substr(t.p,0,7) == "elseif ")) break;
			l.add(this.parse(tokens));
		}
		if(l.length == 1) return l.first();
		return haxe._Template.TemplateExpr.OpBlock(l);
	}
	,parseTokens: function(data) {
		var tokens = new List();
		while(haxe.Template.splitter.match(data)) {
			var p = haxe.Template.splitter.matchedPos();
			if(p.pos > 0) tokens.add({ p : HxOverrides.substr(data,0,p.pos), s : true, l : null});
			if(HxOverrides.cca(data,p.pos) == 58) {
				tokens.add({ p : HxOverrides.substr(data,p.pos + 2,p.len - 4), s : false, l : null});
				data = haxe.Template.splitter.matchedRight();
				continue;
			}
			var parp = p.pos + p.len;
			var npar = 1;
			while(npar > 0) {
				var c = HxOverrides.cca(data,parp);
				if(c == 40) npar++; else if(c == 41) npar--; else if(c == null) throw "Unclosed macro parenthesis";
				parp++;
			}
			var params = HxOverrides.substr(data,p.pos + p.len,parp - (p.pos + p.len) - 1).split(",");
			tokens.add({ p : haxe.Template.splitter.matched(2), s : false, l : params});
			data = HxOverrides.substr(data,parp,data.length - parp);
		}
		if(data.length > 0) tokens.add({ p : data, s : true, l : null});
		return tokens;
	}
	,resolve: function(v) {
		if(Reflect.hasField(this.context,v)) return Reflect.field(this.context,v);
		var $it0 = this.stack.iterator();
		while( $it0.hasNext() ) {
			var ctx = $it0.next();
			if(Reflect.hasField(ctx,v)) return Reflect.field(ctx,v);
		}
		if(v == "__current__") return this.context;
		return Reflect.field(haxe.Template.globals,v);
	}
	,execute: function(context,macros) {
		this.macros = macros == null?{ }:macros;
		this.context = context;
		this.stack = new List();
		this.buf = new StringBuf();
		this.run(this.expr);
		return this.buf.b;
	}
	,__class__: haxe.Template
}
haxe.Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = new Array();
	this.cache = new Array();
	var r = haxe.Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = Type;
		haxe.Unserializer.DEFAULT_RESOLVER = r;
	}
	this.setResolver(r);
};
$hxClasses["haxe.Unserializer"] = haxe.Unserializer;
haxe.Unserializer.__name__ = ["haxe","Unserializer"];
haxe.Unserializer.initCodes = function() {
	var codes = new Array();
	var _g1 = 0, _g = haxe.Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe.Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
}
haxe.Unserializer.run = function(v) {
	return new haxe.Unserializer(v).unserialize();
}
haxe.Unserializer.prototype = {
	unserialize: function() {
		var _g = this.buf.charCodeAt(this.pos++);
		switch(_g) {
		case 110:
			return null;
		case 116:
			return true;
		case 102:
			return false;
		case 122:
			return 0;
		case 105:
			return this.readDigits();
		case 100:
			var p1 = this.pos;
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
			}
			return Std.parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) throw "Invalid string length";
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = StringTools.urlDecode(s);
			this.scache.push(s);
			return s;
		case 107:
			return Math.NaN;
		case 109:
			return Math.NEGATIVE_INFINITY;
		case 112:
			return Math.POSITIVE_INFINITY;
		case 97:
			var buf = this.buf;
			var a = new Array();
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else a.push(this.unserialize());
			}
			return a;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) throw "Invalid reference";
			return this.cache[n];
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) throw "Invalid string reference";
			return this.scache[n];
		case 120:
			throw this.unserialize();
			break;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw "Class not found " + name;
			var o = Type.createEmptyInstance(cl);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) throw "Enum not found " + name;
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) throw "Enum not found " + name;
			this.pos++;
			var index = this.readDigits();
			var tag = Type.getEnumConstructs(edecl)[index];
			if(tag == null) throw "Unknown enum index " + name + "@" + index;
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 98:
			var h = new haxe.ds.StringMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 113:
			var h = new haxe.ds.IntMap();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				h.set(i,this.unserialize());
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) throw "Invalid IntMap format";
			return h;
		case 77:
			var h = new haxe.ds.ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 118:
			var d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
			this.cache.push(d);
			this.pos += 19;
			return d;
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) throw "Invalid bytes length";
			var codes = haxe.Unserializer.CODES;
			if(codes == null) {
				codes = haxe.Unserializer.initCodes();
				haxe.Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i + (len - rest);
			var bytes = haxe.io.Bytes.alloc(size);
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = (c1 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = (c1 << 2 | c2 >> 4) & 255;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw "Class not found " + name;
			var o = Type.createEmptyInstance(cl);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) throw "Invalid custom data";
			return o;
		default:
		}
		this.pos--;
		throw "Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) throw "Invalid enum format";
		var nargs = this.readDigits();
		if(nargs == 0) return Type.createEnum(edecl,tag);
		var args = new Array();
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) throw "Invalid object";
			if(this.buf.charCodeAt(this.pos) == 103) break;
			var k = this.unserialize();
			if(!js.Boot.__instanceof(k,String)) throw "Invalid object key";
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) break;
			if(c == 45) {
				if(this.pos != fpos) break;
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) break;
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) k *= -1;
		return k;
	}
	,setResolver: function(r) {
		if(r == null) this.resolver = { resolveClass : function(_) {
			return null;
		}, resolveEnum : function(_) {
			return null;
		}}; else this.resolver = r;
	}
	,__class__: haxe.Unserializer
}
haxe.ds.ObjectMap = function() {
	this.h = { };
	this.h.__keys__ = { };
};
$hxClasses["haxe.ds.ObjectMap"] = haxe.ds.ObjectMap;
haxe.ds.ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe.ds.ObjectMap.__interfaces__ = [IMap];
haxe.ds.ObjectMap.prototype = {
	keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) a.push(this.h.__keys__[key]);
		}
		return HxOverrides.iter(a);
	}
	,remove: function(key) {
		var id = key.__id__;
		if(!this.h.hasOwnProperty(id)) return false;
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,set: function(key,value) {
		var id = key.__id__ != null?key.__id__:key.__id__ = ++haxe.ds.ObjectMap.count;
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe.ds.ObjectMap
}
haxe.ds.WeakMap = function() {
	throw "Not implemented for this platform";
};
$hxClasses["haxe.ds.WeakMap"] = haxe.ds.WeakMap;
haxe.ds.WeakMap.__name__ = ["haxe","ds","WeakMap"];
haxe.ds.WeakMap.__interfaces__ = [IMap];
haxe.ds.WeakMap.prototype = {
	exists: function(key) {
		return false;
	}
	,get: function(key) {
		return null;
	}
	,set: function(key,value) {
	}
	,__class__: haxe.ds.WeakMap
}
haxe.io = {}
haxe.io.Bytes = function(length,b) {
	this.length = length;
	this.b = b;
};
$hxClasses["haxe.io.Bytes"] = haxe.io.Bytes;
haxe.io.Bytes.__name__ = ["haxe","io","Bytes"];
haxe.io.Bytes.alloc = function(length) {
	var a = new Array();
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		a.push(0);
	}
	return new haxe.io.Bytes(length,a);
}
haxe.io.Bytes.prototype = {
	toString: function() {
		return this.readString(0,this.length);
	}
	,readString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) throw haxe.io.Error.OutsideBounds;
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) break;
				s += fcc(c);
			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c2 = b[i++];
				var c3 = b[i++];
				s += fcc((c & 15) << 18 | (c2 & 127) << 12 | c3 << 6 & 127 | b[i++] & 127);
			}
		}
		return s;
	}
	,__class__: haxe.io.Bytes
}
haxe.io.Eof = function() { }
$hxClasses["haxe.io.Eof"] = haxe.io.Eof;
haxe.io.Eof.__name__ = ["haxe","io","Eof"];
haxe.io.Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe.io.Eof
}
haxe.io.Error = $hxClasses["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] }
haxe.io.Error.Blocked = ["Blocked",0];
haxe.io.Error.Blocked.toString = $estr;
haxe.io.Error.Blocked.__enum__ = haxe.io.Error;
haxe.io.Error.Overflow = ["Overflow",1];
haxe.io.Error.Overflow.toString = $estr;
haxe.io.Error.Overflow.__enum__ = haxe.io.Error;
haxe.io.Error.OutsideBounds = ["OutsideBounds",2];
haxe.io.Error.OutsideBounds.toString = $estr;
haxe.io.Error.OutsideBounds.__enum__ = haxe.io.Error;
haxe.io.Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe.io.Error; $x.toString = $estr; return $x; }
var js = {}
js.Boot = function() { }
$hxClasses["js.Boot"] = js.Boot;
js.Boot.__name__ = ["js","Boot"];
js.Boot.__string_rec = function(o,s) {
	if(o == null) return "null";
	if(s.length >= 5) return "<...>";
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) return o[0];
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2, _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) str += "," + js.Boot.__string_rec(o[i],s); else str += js.Boot.__string_rec(o[i],s);
				}
				return str + ")";
			}
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g = 0;
			while(_g < l) {
				var i1 = _g++;
				str += (i1 > 0?",":"") + js.Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString) {
			var s2 = o.toString();
			if(s2 != "[object Object]") return s2;
		}
		var k = null;
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) { ;
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) str += ", \n";
		str += s + k + " : " + js.Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
}
js.Boot.__interfLoop = function(cc,cl) {
	if(cc == null) return false;
	if(cc == cl) return true;
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0, _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js.Boot.__interfLoop(i1,cl)) return true;
		}
	}
	return js.Boot.__interfLoop(cc.__super__,cl);
}
js.Boot.__instanceof = function(o,cl) {
	if(cl == null) return false;
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					if(cl == Array) return o.__enum__ == null;
					return true;
				}
				if(js.Boot.__interfLoop(o.__class__,cl)) return true;
			}
		} else return false;
		if(cl == Class && o.__name__ != null) return true;
		if(cl == Enum && o.__ename__ != null) return true;
		return o.__enum__ == cl;
	}
}
js.Boot.__cast = function(o,t) {
	if(js.Boot.__instanceof(o,t)) return o; else throw "Cannot cast " + Std.string(o) + " to " + Std.string(t);
}
js.Browser = function() { }
$hxClasses["js.Browser"] = js.Browser;
js.Browser.__name__ = ["js","Browser"];
openfl.AssetCache = function() {
	this.enabled = true;
	this.bitmapData = new haxe.ds.StringMap();
	this.font = new haxe.ds.StringMap();
	this.sound = new haxe.ds.StringMap();
};
$hxClasses["openfl.AssetCache"] = openfl.AssetCache;
openfl.AssetCache.__name__ = ["openfl","AssetCache"];
openfl.AssetCache.prototype = {
	clear: function() {
		this.bitmapData = new haxe.ds.StringMap();
		this.font = new haxe.ds.StringMap();
		this.sound = new haxe.ds.StringMap();
	}
	,__class__: openfl.AssetCache
}
openfl.Assets = function() { }
$hxClasses["openfl.Assets"] = openfl.Assets;
openfl.Assets.__name__ = ["openfl","Assets"];
openfl.Assets.exists = function(id,type) {
	openfl.Assets.initialize();
	if(type == null) type = openfl.AssetType.BINARY;
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) return library.exists(symbolName,type);
	return false;
}
openfl.Assets.getBitmapData = function(id,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.bitmapData.exists(id)) {
		var bitmapData = openfl.Assets.cache.bitmapData.get(id);
		if(openfl.Assets.isValidBitmapData(bitmapData)) return bitmapData;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.IMAGE)) {
			if(library.isLocal(symbolName,openfl.AssetType.IMAGE)) {
				var bitmapData = library.getBitmapData(symbolName);
				if(useCache && openfl.Assets.cache.enabled) openfl.Assets.cache.bitmapData.set(id,bitmapData);
				return bitmapData;
			} else console.log("[openfl.Assets] BitmapData asset \"" + id + "\" exists, but only asynchronously");
		} else console.log("[openfl.Assets] There is no BitmapData asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	return null;
}
openfl.Assets.getBytes = function(id) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.BINARY)) {
			if(library.isLocal(symbolName,openfl.AssetType.BINARY)) return library.getBytes(symbolName); else console.log("[openfl.Assets] String or ByteArray asset \"" + id + "\" exists, but only asynchronously");
		} else console.log("[openfl.Assets] There is no String or ByteArray asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	return null;
}
openfl.Assets.getFont = function(id,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.font.exists(id)) return openfl.Assets.cache.font.get(id);
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.FONT)) {
			if(library.isLocal(symbolName,openfl.AssetType.FONT)) {
				var font = library.getFont(symbolName);
				if(useCache && openfl.Assets.cache.enabled) openfl.Assets.cache.font.set(id,font);
				return font;
			} else console.log("[openfl.Assets] Font asset \"" + id + "\" exists, but only asynchronously");
		} else console.log("[openfl.Assets] There is no Font asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	return null;
}
openfl.Assets.getLibrary = function(name) {
	if(name == null || name == "") name = "default";
	return openfl.Assets.libraries.get(name);
}
openfl.Assets.getMovieClip = function(id) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.MOVIE_CLIP)) {
			if(library.isLocal(symbolName,openfl.AssetType.MOVIE_CLIP)) return library.getMovieClip(symbolName); else console.log("[openfl.Assets] MovieClip asset \"" + id + "\" exists, but only asynchronously");
		} else console.log("[openfl.Assets] There is no MovieClip asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	return null;
}
openfl.Assets.getMusic = function(id,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.sound.exists(id)) return openfl.Assets.cache.sound.get(id);
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.MUSIC)) {
			if(library.isLocal(symbolName,openfl.AssetType.MUSIC)) {
				var sound = library.getMusic(symbolName);
				if(useCache && openfl.Assets.cache.enabled) openfl.Assets.cache.sound.set(id,sound);
				return sound;
			} else console.log("[openfl.Assets] Sound asset \"" + id + "\" exists, but only asynchronously");
		} else console.log("[openfl.Assets] There is no Sound asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	return null;
}
openfl.Assets.getPath = function(id) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,null)) return library.getPath(symbolName); else console.log("[openfl.Assets] There is no asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	return null;
}
openfl.Assets.getSound = function(id,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.sound.exists(id)) {
		var sound = openfl.Assets.cache.sound.get(id);
		if(openfl.Assets.isValidSound(sound)) return sound;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.SOUND)) {
			if(library.isLocal(symbolName,openfl.AssetType.SOUND)) {
				var sound = library.getSound(symbolName);
				if(useCache && openfl.Assets.cache.enabled) openfl.Assets.cache.sound.set(id,sound);
				return sound;
			} else console.log("[openfl.Assets] Sound asset \"" + id + "\" exists, but only asynchronously");
		} else console.log("[openfl.Assets] There is no Sound asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	return null;
}
openfl.Assets.getText = function(id) {
	var bytes = openfl.Assets.getBytes(id);
	if(bytes == null) return null; else return bytes.readUTFBytes(bytes.length);
}
openfl.Assets.initialize = function() {
	if(!openfl.Assets.initialized) {
		openfl.Assets.registerLibrary("default",new DefaultAssetLibrary());
		openfl.Assets.initialized = true;
	}
}
openfl.Assets.isLocal = function(id,type,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled) {
		if(type == openfl.AssetType.IMAGE || type == null) {
			if(openfl.Assets.cache.bitmapData.exists(id)) return true;
		}
		if(type == openfl.AssetType.FONT || type == null) {
			if(openfl.Assets.cache.font.exists(id)) return true;
		}
		if(type == openfl.AssetType.SOUND || type == openfl.AssetType.MUSIC || type == null) {
			if(openfl.Assets.cache.sound.exists(id)) return true;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) return library.isLocal(symbolName,type);
	return false;
}
openfl.Assets.isValidBitmapData = function(bitmapData) {
	return true;
}
openfl.Assets.isValidSound = function(sound) {
	return true;
}
openfl.Assets.loadBitmapData = function(id,handler,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.bitmapData.exists(id)) {
		var bitmapData = openfl.Assets.cache.bitmapData.get(id);
		if(openfl.Assets.isValidBitmapData(bitmapData)) {
			handler(bitmapData);
			return;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.IMAGE)) {
			if(useCache && openfl.Assets.cache.enabled) library.loadBitmapData(symbolName,function(bitmapData) {
				openfl.Assets.cache.bitmapData.set(id,bitmapData);
				handler(bitmapData);
			}); else library.loadBitmapData(symbolName,handler);
			return;
		} else console.log("[openfl.Assets] There is no BitmapData asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	handler(null);
}
openfl.Assets.loadBytes = function(id,handler) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.BINARY)) {
			library.loadBytes(symbolName,handler);
			return;
		} else console.log("[openfl.Assets] There is no String or ByteArray asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	handler(null);
}
openfl.Assets.loadFont = function(id,handler,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.font.exists(id)) {
		handler(openfl.Assets.cache.font.get(id));
		return;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.FONT)) {
			if(useCache && openfl.Assets.cache.enabled) library.loadFont(symbolName,function(font) {
				openfl.Assets.cache.font.set(id,font);
				handler(font);
			}); else library.loadFont(symbolName,handler);
			return;
		} else console.log("[openfl.Assets] There is no Font asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	handler(null);
}
openfl.Assets.loadLibrary = function(name,handler) {
	openfl.Assets.initialize();
	var data = openfl.Assets.getText("libraries/" + name + ".dat");
	if(data != null && data != "") {
		var unserializer = new haxe.Unserializer(data);
		unserializer.setResolver({ resolveEnum : openfl.Assets.resolveEnum, resolveClass : openfl.Assets.resolveClass});
		var library = unserializer.unserialize();
		openfl.Assets.libraries.set(name,library);
		library.load(handler);
	} else console.log("[openfl.Assets] There is no asset library named \"" + name + "\"");
}
openfl.Assets.loadMusic = function(id,handler,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.sound.exists(id)) {
		handler(openfl.Assets.cache.sound.get(id));
		return;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.MUSIC)) {
			if(useCache && openfl.Assets.cache.enabled) library.loadMusic(symbolName,function(sound) {
				openfl.Assets.cache.sound.set(id,sound);
				handler(sound);
			}); else library.loadMusic(symbolName,handler);
			return;
		} else console.log("[openfl.Assets] There is no Sound asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	handler(null);
}
openfl.Assets.loadMovieClip = function(id,handler) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.MOVIE_CLIP)) {
			library.loadMovieClip(symbolName,handler);
			return;
		} else console.log("[openfl.Assets] There is no MovieClip asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	handler(null);
}
openfl.Assets.loadSound = function(id,handler,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.sound.exists(id)) {
		var sound = openfl.Assets.cache.sound.get(id);
		if(openfl.Assets.isValidSound(sound)) {
			handler(sound);
			return;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName = HxOverrides.substr(id,id.indexOf(":") + 1,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.SOUND)) {
			if(useCache && openfl.Assets.cache.enabled) library.loadSound(symbolName,function(sound) {
				openfl.Assets.cache.sound.set(id,sound);
				handler(sound);
			}); else library.loadSound(symbolName,handler);
			return;
		} else console.log("[openfl.Assets] There is no Sound asset with an ID of \"" + id + "\"");
	} else console.log("[openfl.Assets] There is no asset library named \"" + libraryName + "\"");
	handler(null);
}
openfl.Assets.loadText = function(id,handler) {
	openfl.Assets.initialize();
	var callback = function(bytes) {
		if(bytes == null) handler(null); else handler(bytes.readUTFBytes(bytes.length));
	};
	openfl.Assets.loadBytes(id,callback);
}
openfl.Assets.registerLibrary = function(name,library) {
	if(openfl.Assets.libraries.exists(name)) openfl.Assets.unloadLibrary(name);
	openfl.Assets.libraries.set(name,library);
}
openfl.Assets.resolveClass = function(name) {
	return Type.resolveClass(name);
}
openfl.Assets.resolveEnum = function(name) {
	var value = Type.resolveEnum(name);
	return value;
}
openfl.Assets.unloadLibrary = function(name) {
	openfl.Assets.initialize();
	var keys = openfl.Assets.cache.bitmapData.keys();
	while( keys.hasNext() ) {
		var key = keys.next();
		var libraryName = key.substring(0,key.indexOf(":"));
		var symbolName = HxOverrides.substr(key,key.indexOf(":") + 1,null);
		if(libraryName == name) openfl.Assets.cache.bitmapData.remove(key);
	}
	openfl.Assets.libraries.remove(name);
}
openfl.AssetData = function() {
};
$hxClasses["openfl.AssetData"] = openfl.AssetData;
openfl.AssetData.__name__ = ["openfl","AssetData"];
openfl.AssetData.prototype = {
	__class__: openfl.AssetData
}
openfl.AssetType = $hxClasses["openfl.AssetType"] = { __ename__ : true, __constructs__ : ["BINARY","FONT","IMAGE","MOVIE_CLIP","MUSIC","SOUND","TEMPLATE","TEXT"] }
openfl.AssetType.BINARY = ["BINARY",0];
openfl.AssetType.BINARY.toString = $estr;
openfl.AssetType.BINARY.__enum__ = openfl.AssetType;
openfl.AssetType.FONT = ["FONT",1];
openfl.AssetType.FONT.toString = $estr;
openfl.AssetType.FONT.__enum__ = openfl.AssetType;
openfl.AssetType.IMAGE = ["IMAGE",2];
openfl.AssetType.IMAGE.toString = $estr;
openfl.AssetType.IMAGE.__enum__ = openfl.AssetType;
openfl.AssetType.MOVIE_CLIP = ["MOVIE_CLIP",3];
openfl.AssetType.MOVIE_CLIP.toString = $estr;
openfl.AssetType.MOVIE_CLIP.__enum__ = openfl.AssetType;
openfl.AssetType.MUSIC = ["MUSIC",4];
openfl.AssetType.MUSIC.toString = $estr;
openfl.AssetType.MUSIC.__enum__ = openfl.AssetType;
openfl.AssetType.SOUND = ["SOUND",5];
openfl.AssetType.SOUND.toString = $estr;
openfl.AssetType.SOUND.__enum__ = openfl.AssetType;
openfl.AssetType.TEMPLATE = ["TEMPLATE",6];
openfl.AssetType.TEMPLATE.toString = $estr;
openfl.AssetType.TEMPLATE.__enum__ = openfl.AssetType;
openfl.AssetType.TEXT = ["TEXT",7];
openfl.AssetType.TEXT.toString = $estr;
openfl.AssetType.TEXT.__enum__ = openfl.AssetType;
openfl.display = {}
openfl.display.DirectRenderer = function(inType) {
	if(inType == null) inType = "DirectRenderer";
	flash.display.DisplayObject.call(this);
	this.__graphics = new flash.display.Graphics();
	this.__graphics.__surface.width = flash.Lib.get_current().get_stage().get_stageWidth();
	this.__graphics.__surface.height = flash.Lib.get_current().get_stage().get_stageHeight();
	if(inType == "OpenGLView" && this.__graphics != null) {
		this.__context = this.__graphics.__surface.getContext("webgl");
		if(this.__context == null) this.__context = this.__graphics.__surface.getContext("experimental-webgl");
	}
};
$hxClasses["openfl.display.DirectRenderer"] = openfl.display.DirectRenderer;
openfl.display.DirectRenderer.__name__ = ["openfl","display","DirectRenderer"];
openfl.display.DirectRenderer.__super__ = flash.display.DisplayObject;
openfl.display.DirectRenderer.prototype = $extend(flash.display.DisplayObject.prototype,{
	set_render: function(value) {
		this.__renderMethod = value;
		this.__render();
		return value;
	}
	,get_render: function() {
		return this.__renderMethod;
	}
	,__render: function(inMask,clipRect) {
		if(!this.__combinedVisible) return;
		var gfx = this.__getGraphics();
		if(gfx == null) return;
		gfx.__surface.width = this.get_stage().get_stageWidth();
		gfx.__surface.height = this.get_stage().get_stageHeight();
		if(this.__context != null) {
			openfl.gl.GL.__context = this.__context;
			var rect = null;
			if(this.get_scrollRect() == null) rect = new flash.geom.Rectangle(0,0,this.get_stage().get_stageWidth(),this.get_stage().get_stageHeight()); else rect = new flash.geom.Rectangle(this.get_x() + this.get_scrollRect().x,this.get_y() + this.get_scrollRect().y,this.get_scrollRect().width,this.get_scrollRect().height);
			if(this.get_render() != null) (this.get_render())(rect);
		}
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,__class__: openfl.display.DirectRenderer
	,__properties__: $extend(flash.display.DisplayObject.prototype.__properties__,{set_render:"set_render",get_render:"get_render"})
});
openfl.display.OpenGLView = function() {
	openfl.display.DirectRenderer.call(this,"OpenGLView");
	openfl.gl.GL.__context = this.__context;
};
$hxClasses["openfl.display.OpenGLView"] = openfl.display.OpenGLView;
openfl.display.OpenGLView.__name__ = ["openfl","display","OpenGLView"];
openfl.display.OpenGLView.__properties__ = {get_isSupported:"get_isSupported"}
openfl.display.OpenGLView.get_isSupported = function() {
	if(!window.WebGLRenderingContext) return false;
	var view = new openfl.display.OpenGLView();
	if(view.__context == null) return false;
	return true;
}
openfl.display.OpenGLView.__super__ = openfl.display.DirectRenderer;
openfl.display.OpenGLView.prototype = $extend(openfl.display.DirectRenderer.prototype,{
	__class__: openfl.display.OpenGLView
});
openfl.display.Tilesheet = function(image) {
	this.__bitmap = image;
	this.__centerPoints = new Array();
	this.__tileRects = new Array();
	this.__tileUVs = new Array();
};
$hxClasses["openfl.display.Tilesheet"] = openfl.display.Tilesheet;
openfl.display.Tilesheet.__name__ = ["openfl","display","Tilesheet"];
openfl.display.Tilesheet.prototype = {
	getTileUVs: function(index) {
		return this.__tileUVs[index];
	}
	,getTileRect: function(index) {
		return this.__tileRects[index];
	}
	,getTileCenter: function(index) {
		return this.__centerPoints[index];
	}
	,drawTiles: function(graphics,tileData,smooth,flags) {
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		graphics.drawTiles(this,tileData,smooth,flags);
	}
	,addTileRect: function(rectangle,centerPoint) {
		this.__tileRects.push(rectangle);
		if(centerPoint == null) centerPoint = new flash.geom.Point();
		this.__centerPoints.push(centerPoint);
		this.__tileUVs.push(new flash.geom.Rectangle(rectangle.get_left() / this.__bitmap.get_width(),rectangle.get_top() / this.__bitmap.get_height(),rectangle.get_right() / this.__bitmap.get_width(),rectangle.get_bottom() / this.__bitmap.get_height()));
		return this.__tileRects.length - 1;
	}
	,__class__: openfl.display.Tilesheet
}
openfl.gl = {}
openfl.gl.GL = function() { }
$hxClasses["openfl.gl.GL"] = openfl.gl.GL;
openfl.gl.GL.__name__ = ["openfl","gl","GL"];
openfl.gl.GL.__properties__ = {get_version:"get_version",get_drawingBufferWidth:"get_drawingBufferWidth",get_drawingBufferHeight:"get_drawingBufferHeight"}
openfl.gl.GL.activeTexture = function(texture) {
	openfl.gl.GL.__context.activeTexture(texture);
}
openfl.gl.GL.attachShader = function(program,shader) {
	openfl.gl.GL.__context.attachShader(program,shader);
}
openfl.gl.GL.bindAttribLocation = function(program,index,name) {
	openfl.gl.GL.__context.bindAttribLocation(program,index,name);
}
openfl.gl.GL.bindBitmapDataTexture = function(texture) {
	if(texture.__glTexture == null) {
		texture.__glTexture = openfl.gl.GL.__context.createTexture();
		openfl.gl.GL.__context.bindTexture(3553,texture.__glTexture);
		openfl.gl.GL.__context.texParameteri(3553,10242,33071);
		openfl.gl.GL.__context.texParameteri(3553,10243,33071);
		openfl.gl.GL.__context.texParameteri(3553,10241,9728);
		openfl.gl.GL.__context.texParameteri(3553,10240,9728);
		texture.lock();
		openfl.gl.GL.__context.texImage2D(3553,0,6408,6408,5121,texture.__imageData);
		texture.unlock();
	} else openfl.gl.GL.__context.bindTexture(3553,texture.__glTexture);
}
openfl.gl.GL.bindBuffer = function(target,buffer) {
	openfl.gl.GL.__context.bindBuffer(target,buffer);
}
openfl.gl.GL.bindFramebuffer = function(target,framebuffer) {
	openfl.gl.GL.__context.bindFramebuffer(target,framebuffer);
}
openfl.gl.GL.bindRenderbuffer = function(target,renderbuffer) {
	openfl.gl.GL.__context.bindRenderbuffer(target,renderbuffer);
}
openfl.gl.GL.bindTexture = function(target,texture) {
	openfl.gl.GL.__context.bindTexture(target,texture);
}
openfl.gl.GL.blendColor = function(red,green,blue,alpha) {
	openfl.gl.GL.__context.blendColor(red,green,blue,alpha);
}
openfl.gl.GL.blendEquation = function(mode) {
	openfl.gl.GL.__context.blendEquation(mode);
}
openfl.gl.GL.blendEquationSeparate = function(modeRGB,modeAlpha) {
	openfl.gl.GL.__context.blendEquationSeparate(modeRGB,modeAlpha);
}
openfl.gl.GL.blendFunc = function(sfactor,dfactor) {
	openfl.gl.GL.__context.blendFunc(sfactor,dfactor);
}
openfl.gl.GL.blendFuncSeparate = function(srcRGB,dstRGB,srcAlpha,dstAlpha) {
	openfl.gl.GL.__context.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);
}
openfl.gl.GL.bufferData = function(target,data,usage) {
	openfl.gl.GL.__context.bufferData(target,data,usage);
}
openfl.gl.GL.bufferSubData = function(target,offset,data) {
	openfl.gl.GL.__context.bufferSubData(target,offset,data);
}
openfl.gl.GL.checkFramebufferStatus = function(target) {
	return openfl.gl.GL.__context.checkFramebufferStatus(target);
}
openfl.gl.GL.clear = function(mask) {
	openfl.gl.GL.__context.clear(mask);
}
openfl.gl.GL.clearColor = function(red,green,blue,alpha) {
	openfl.gl.GL.__context.clearColor(red,green,blue,alpha);
}
openfl.gl.GL.clearDepth = function(depth) {
	openfl.gl.GL.__context.clearDepth(depth);
}
openfl.gl.GL.clearStencil = function(s) {
	openfl.gl.GL.__context.clearStencil(s);
}
openfl.gl.GL.colorMask = function(red,green,blue,alpha) {
	openfl.gl.GL.__context.colorMask(red,green,blue,alpha);
}
openfl.gl.GL.compileShader = function(shader) {
	openfl.gl.GL.__context.compileShader(shader);
}
openfl.gl.GL.compressedTexImage2D = function(target,level,internalformat,width,height,border,data) {
	openfl.gl.GL.__context.compressedTexImage2D(target,level,internalformat,width,height,border,data);
}
openfl.gl.GL.compressedTexSubImage2D = function(target,level,xoffset,yoffset,width,height,format,data) {
	openfl.gl.GL.__context.compressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,data);
}
openfl.gl.GL.copyTexImage2D = function(target,level,internalformat,x,y,width,height,border) {
	openfl.gl.GL.__context.copyTexImage2D(target,level,internalformat,x,y,width,height,border);
}
openfl.gl.GL.copyTexSubImage2D = function(target,level,xoffset,yoffset,x,y,width,height) {
	openfl.gl.GL.__context.copyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height);
}
openfl.gl.GL.createBuffer = function() {
	return openfl.gl.GL.__context.createBuffer();
}
openfl.gl.GL.createFramebuffer = function() {
	return openfl.gl.GL.__context.createFramebuffer();
}
openfl.gl.GL.createProgram = function() {
	return openfl.gl.GL.__context.createProgram();
}
openfl.gl.GL.createRenderbuffer = function() {
	return openfl.gl.GL.__context.createRenderbuffer();
}
openfl.gl.GL.createShader = function(type) {
	return openfl.gl.GL.__context.createShader(type);
}
openfl.gl.GL.createTexture = function() {
	return openfl.gl.GL.__context.createTexture();
}
openfl.gl.GL.cullFace = function(mode) {
	openfl.gl.GL.__context.cullFace(mode);
}
openfl.gl.GL.deleteBuffer = function(buffer) {
	openfl.gl.GL.__context.deleteBuffer(buffer);
}
openfl.gl.GL.deleteFramebuffer = function(framebuffer) {
	openfl.gl.GL.__context.deleteFramebuffer(framebuffer);
}
openfl.gl.GL.deleteProgram = function(program) {
	openfl.gl.GL.__context.deleteProgram(program);
}
openfl.gl.GL.deleteRenderbuffer = function(renderbuffer) {
	openfl.gl.GL.__context.deleteRenderbuffer(renderbuffer);
}
openfl.gl.GL.deleteShader = function(shader) {
	openfl.gl.GL.__context.deleteShader(shader);
}
openfl.gl.GL.deleteTexture = function(texture) {
	openfl.gl.GL.__context.deleteTexture(texture);
}
openfl.gl.GL.depthFunc = function(func) {
	openfl.gl.GL.__context.depthFunc(func);
}
openfl.gl.GL.depthMask = function(flag) {
	openfl.gl.GL.__context.depthMask(flag);
}
openfl.gl.GL.depthRange = function(zNear,zFar) {
	openfl.gl.GL.__context.depthRange(zNear,zFar);
}
openfl.gl.GL.detachShader = function(program,shader) {
	openfl.gl.GL.__context.detachShader(program,shader);
}
openfl.gl.GL.disable = function(cap) {
	openfl.gl.GL.__context.disable(cap);
}
openfl.gl.GL.disableVertexAttribArray = function(index) {
	openfl.gl.GL.__context.disableVertexAttribArray(index);
}
openfl.gl.GL.drawArrays = function(mode,first,count) {
	openfl.gl.GL.__context.drawArrays(mode,first,count);
}
openfl.gl.GL.drawElements = function(mode,count,type,offset) {
	openfl.gl.GL.__context.drawElements(mode,count,type,offset);
}
openfl.gl.GL.enable = function(cap) {
	openfl.gl.GL.__context.enable(cap);
}
openfl.gl.GL.enableVertexAttribArray = function(index) {
	openfl.gl.GL.__context.enableVertexAttribArray(index);
}
openfl.gl.GL.finish = function() {
	openfl.gl.GL.__context.finish();
}
openfl.gl.GL.flush = function() {
	openfl.gl.GL.__context.flush();
}
openfl.gl.GL.framebufferRenderbuffer = function(target,attachment,renderbuffertarget,renderbuffer) {
	openfl.gl.GL.__context.framebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer);
}
openfl.gl.GL.framebufferTexture2D = function(target,attachment,textarget,texture,level) {
	openfl.gl.GL.__context.framebufferTexture2D(target,attachment,textarget,texture,level);
}
openfl.gl.GL.frontFace = function(mode) {
	openfl.gl.GL.__context.frontFace(mode);
}
openfl.gl.GL.generateMipmap = function(target) {
	openfl.gl.GL.__context.generateMipmap(target);
}
openfl.gl.GL.getActiveAttrib = function(program,index) {
	return openfl.gl.GL.__context.getActiveAttrib(program,index);
}
openfl.gl.GL.getActiveUniform = function(program,index) {
	return openfl.gl.GL.__context.getActiveUniform(program,index);
}
openfl.gl.GL.getAttachedShaders = function(program) {
	return openfl.gl.GL.__context.getAttachedShaders(program);
}
openfl.gl.GL.getAttribLocation = function(program,name) {
	return openfl.gl.GL.__context.getAttribLocation(program,name);
}
openfl.gl.GL.getBufferParameter = function(target,pname) {
	return openfl.gl.GL.__context.getBufferParameter(target,pname);
}
openfl.gl.GL.getContextAttributes = function() {
	return openfl.gl.GL.__context.getContextAttributes();
}
openfl.gl.GL.getError = function() {
	return openfl.gl.GL.__context.getError();
}
openfl.gl.GL.getExtension = function(name) {
	return openfl.gl.GL.__context.getExtension(name);
}
openfl.gl.GL.getFramebufferAttachmentParameter = function(target,attachment,pname) {
	return openfl.gl.GL.__context.getFramebufferAttachmentParameter(target,attachment,pname);
}
openfl.gl.GL.getParameter = function(pname) {
	return openfl.gl.GL.__context.getParameter(pname);
}
openfl.gl.GL.getProgramInfoLog = function(program) {
	return openfl.gl.GL.__context.getProgramInfoLog(program);
}
openfl.gl.GL.getProgramParameter = function(program,pname) {
	return openfl.gl.GL.__context.getProgramParameter(program,pname);
}
openfl.gl.GL.getRenderbufferParameter = function(target,pname) {
	return openfl.gl.GL.__context.getRenderbufferParameter(target,pname);
}
openfl.gl.GL.getShaderInfoLog = function(shader) {
	return openfl.gl.GL.__context.getShaderInfoLog(shader);
}
openfl.gl.GL.getShaderParameter = function(shader,pname) {
	return openfl.gl.GL.__context.getShaderParameter(shader,pname);
}
openfl.gl.GL.getShaderPrecisionFormat = function(shadertype,precisiontype) {
	return null;
}
openfl.gl.GL.getShaderSource = function(shader) {
	return openfl.gl.GL.__context.getShaderSource(shader);
}
openfl.gl.GL.getSupportedExtensions = function() {
	return openfl.gl.GL.__context.getSupportedExtensions();
}
openfl.gl.GL.getTexParameter = function(target,pname) {
	return openfl.gl.GL.__context.getTexParameter(target,pname);
}
openfl.gl.GL.getUniform = function(program,location) {
	return openfl.gl.GL.__context.getUniform(program,location);
}
openfl.gl.GL.getUniformLocation = function(program,name) {
	return openfl.gl.GL.__context.getUniformLocation(program,name);
}
openfl.gl.GL.getVertexAttrib = function(index,pname) {
	return openfl.gl.GL.__context.getVertexAttrib(index,pname);
}
openfl.gl.GL.getVertexAttribOffset = function(index,pname) {
	return openfl.gl.GL.__context.getVertexAttribOffset(index,pname);
}
openfl.gl.GL.hint = function(target,mode) {
	openfl.gl.GL.__context.hint(target,mode);
}
openfl.gl.GL.isBuffer = function(buffer) {
	return openfl.gl.GL.__context.isBuffer(buffer);
}
openfl.gl.GL.isEnabled = function(cap) {
	return openfl.gl.GL.__context.isEnabled(cap);
}
openfl.gl.GL.isFramebuffer = function(framebuffer) {
	return openfl.gl.GL.__context.isFramebuffer(framebuffer);
}
openfl.gl.GL.isProgram = function(program) {
	return openfl.gl.GL.__context.isProgram(program);
}
openfl.gl.GL.isRenderbuffer = function(renderbuffer) {
	return openfl.gl.GL.__context.isRenderbuffer(renderbuffer);
}
openfl.gl.GL.isShader = function(shader) {
	return openfl.gl.GL.__context.isShader(shader);
}
openfl.gl.GL.isTexture = function(texture) {
	return openfl.gl.GL.__context.isTexture(texture);
}
openfl.gl.GL.lineWidth = function(width) {
	openfl.gl.GL.__context.lineWidth(width);
}
openfl.gl.GL.linkProgram = function(program) {
	openfl.gl.GL.__context.linkProgram(program);
}
openfl.gl.GL.pixelStorei = function(pname,param) {
	openfl.gl.GL.__context.pixelStorei(pname,param);
}
openfl.gl.GL.polygonOffset = function(factor,units) {
	openfl.gl.GL.__context.polygonOffset(factor,units);
}
openfl.gl.GL.readPixels = function(x,y,width,height,format,type,pixels) {
	openfl.gl.GL.__context.readPixels(x,y,width,height,format,type,pixels);
}
openfl.gl.GL.renderbufferStorage = function(target,internalformat,width,height) {
	openfl.gl.GL.__context.renderbufferStorage(target,internalformat,width,height);
}
openfl.gl.GL.sampleCoverage = function(value,invert) {
	openfl.gl.GL.__context.sampleCoverage(value,invert);
}
openfl.gl.GL.scissor = function(x,y,width,height) {
	openfl.gl.GL.__context.scissor(x,y,width,height);
}
openfl.gl.GL.shaderSource = function(shader,source) {
	openfl.gl.GL.__context.shaderSource(shader,source);
}
openfl.gl.GL.stencilFunc = function(func,ref,mask) {
	openfl.gl.GL.__context.stencilFunc(func,ref,mask);
}
openfl.gl.GL.stencilFuncSeparate = function(face,func,ref,mask) {
	openfl.gl.GL.__context.stencilFuncSeparate(face,func,ref,mask);
}
openfl.gl.GL.stencilMask = function(mask) {
	openfl.gl.GL.__context.stencilMask(mask);
}
openfl.gl.GL.stencilMaskSeparate = function(face,mask) {
	openfl.gl.GL.__context.stencilMaskSeparate(face,mask);
}
openfl.gl.GL.stencilOp = function(fail,zfail,zpass) {
	openfl.gl.GL.__context.stencilOp(fail,zfail,zpass);
}
openfl.gl.GL.stencilOpSeparate = function(face,fail,zfail,zpass) {
	openfl.gl.GL.__context.stencilOpSeparate(face,fail,zfail,zpass);
}
openfl.gl.GL.texImage2D = function(target,level,internalformat,width,height,border,format,type,pixels) {
	openfl.gl.GL.__context.texImage2D(target,level,internalformat,width,height,border,format,type,pixels);
}
openfl.gl.GL.texParameterf = function(target,pname,param) {
	openfl.gl.GL.__context.texParameterf(target,pname,param);
}
openfl.gl.GL.texParameteri = function(target,pname,param) {
	openfl.gl.GL.__context.texParameteri(target,pname,param);
}
openfl.gl.GL.texSubImage2D = function(target,level,xoffset,yoffset,width,height,format,type,pixels) {
	openfl.gl.GL.__context.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels);
}
openfl.gl.GL.uniform1f = function(location,x) {
	openfl.gl.GL.__context.uniform1f(location,x);
}
openfl.gl.GL.uniform1fv = function(location,x) {
	openfl.gl.GL.__context.uniform1fv(location,x);
}
openfl.gl.GL.uniform1i = function(location,x) {
	openfl.gl.GL.__context.uniform1i(location,x);
}
openfl.gl.GL.uniform1iv = function(location,v) {
	openfl.gl.GL.__context.uniform1iv(location,v);
}
openfl.gl.GL.uniform2f = function(location,x,y) {
	openfl.gl.GL.__context.uniform2f(location,x,y);
}
openfl.gl.GL.uniform2fv = function(location,v) {
	openfl.gl.GL.__context.uniform2fv(location,v);
}
openfl.gl.GL.uniform2i = function(location,x,y) {
	openfl.gl.GL.__context.uniform2i(location,x,y);
}
openfl.gl.GL.uniform2iv = function(location,v) {
	openfl.gl.GL.__context.uniform2iv(location,v);
}
openfl.gl.GL.uniform3f = function(location,x,y,z) {
	openfl.gl.GL.__context.uniform3f(location,x,y,z);
}
openfl.gl.GL.uniform3fv = function(location,v) {
	openfl.gl.GL.__context.uniform3fv(location,v);
}
openfl.gl.GL.uniform3i = function(location,x,y,z) {
	openfl.gl.GL.__context.uniform3i(location,x,y,z);
}
openfl.gl.GL.uniform3iv = function(location,v) {
	openfl.gl.GL.__context.uniform3iv(location,v);
}
openfl.gl.GL.uniform4f = function(location,x,y,z,w) {
	openfl.gl.GL.__context.uniform4f(location,x,y,z,w);
}
openfl.gl.GL.uniform4fv = function(location,v) {
	openfl.gl.GL.__context.uniform4fv(location,v);
}
openfl.gl.GL.uniform4i = function(location,x,y,z,w) {
	openfl.gl.GL.__context.uniform4i(location,x,y,z,w);
}
openfl.gl.GL.uniform4iv = function(location,v) {
	openfl.gl.GL.__context.uniform4iv(location,v);
}
openfl.gl.GL.uniformMatrix2fv = function(location,transpose,v) {
	openfl.gl.GL.__context.uniformMatrix2fv(location,transpose,v);
}
openfl.gl.GL.uniformMatrix3fv = function(location,transpose,v) {
	openfl.gl.GL.__context.uniformMatrix3fv(location,transpose,v);
}
openfl.gl.GL.uniformMatrix4fv = function(location,transpose,v) {
	openfl.gl.GL.__context.uniformMatrix4fv(location,transpose,v);
}
openfl.gl.GL.uniformMatrix3D = function(location,transpose,matrix) {
	openfl.gl.GL.__context.uniformMatrix4fv(location,transpose,new Float32Array(matrix.rawData));
}
openfl.gl.GL.useProgram = function(program) {
	openfl.gl.GL.__context.useProgram(program);
}
openfl.gl.GL.validateProgram = function(program) {
	openfl.gl.GL.__context.validateProgram(program);
}
openfl.gl.GL.vertexAttrib1f = function(indx,x) {
	openfl.gl.GL.__context.vertexAttrib1f(indx,x);
}
openfl.gl.GL.vertexAttrib1fv = function(indx,values) {
	openfl.gl.GL.__context.vertexAttrib1fv(indx,values);
}
openfl.gl.GL.vertexAttrib2f = function(indx,x,y) {
	openfl.gl.GL.__context.vertexAttrib2f(indx,x,y);
}
openfl.gl.GL.vertexAttrib2fv = function(indx,values) {
	openfl.gl.GL.__context.vertexAttrib2fv(indx,values);
}
openfl.gl.GL.vertexAttrib3f = function(indx,x,y,z) {
	openfl.gl.GL.__context.vertexAttrib3f(indx,x,y,z);
}
openfl.gl.GL.vertexAttrib3fv = function(indx,values) {
	openfl.gl.GL.__context.vertexAttrib3fv(indx,values);
}
openfl.gl.GL.vertexAttrib4f = function(indx,x,y,z,w) {
	openfl.gl.GL.__context.vertexAttrib4f(indx,x,y,z,w);
}
openfl.gl.GL.vertexAttrib4fv = function(indx,values) {
	openfl.gl.GL.__context.vertexAttrib4fv(indx,values);
}
openfl.gl.GL.vertexAttribPointer = function(indx,size,type,normalized,stride,offset) {
	openfl.gl.GL.__context.vertexAttribPointer(indx,size,type,normalized,stride,offset);
}
openfl.gl.GL.viewport = function(x,y,width,height) {
	openfl.gl.GL.__context.viewport(x,y,width,height);
}
openfl.gl.GL.get_drawingBufferHeight = function() {
	return flash.Lib.get_current().get_stage().get_stageHeight();
}
openfl.gl.GL.get_drawingBufferWidth = function() {
	return flash.Lib.get_current().get_stage().get_stageWidth();
}
openfl.gl.GL.get_version = function() {
	return 7938;
}
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; };
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; };
if(Array.prototype.indexOf) HxOverrides.remove = function(a,o) {
	var i = a.indexOf(o);
	if(i == -1) return false;
	a.splice(i,1);
	return true;
};
Math.__name__ = ["Math"];
Math.NaN = Number.NaN;
Math.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY;
Math.POSITIVE_INFINITY = Number.POSITIVE_INFINITY;
$hxClasses.Math = Math;
Math.isFinite = function(i) {
	return isFinite(i);
};
Math.isNaN = function(i) {
	return isNaN(i);
};
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
Array.prototype.__class__ = $hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
haxe.Resource.content = [{ name : "__ASSET__assets_font_simfang_ttf", data : "s104914:"},{ name : "__ASSET__font_simfang_ttf", data : "s104914:b3k0Omhhc2hxOjExMW95Njphc2NlbnRkODgweTQ6ZGF0YWFkNDYwZDgwMGQ0NjBkOTAwZDQwMGQ5NjZkMzQwZDEwMzJkMjUyZDEwMzJkMTYwZDEwMzJkMTAyZDk2NGQ0NGQ4OTZkNDRkODAwZDQ0ZDcxMmQxMDJkNjQwZDE2MGQ1NjhkMjUyZDU2OGQzNDhkNTY4ZDQwNGQ2NDBkNDYwZDcxMmQ0NjBkODAwZDEwOGQ4MDRkMTA4ZDkwOGQxNTBkOTU4ZDE5MmQxMDA4ZDI1MmQxMDA4ZDMyMGQxMDA4ZDM1OGQ5NTRkMzk2ZDkwMGQzOTZkODA0ZDM5NmQ3MDBkMzU0ZDY0NmQzMTJkNTkyZDI1MmQ1OTJkMTk2ZDU5MmQxNTJkNjQ2ZDEwOGQ3MDBkMTA4ZDgwNGh5Njpfd2lkdGhkNTEyeTQ6eE1heGQ0NjB5NDp4TWluZDQ0eTQ6eU1heGQ0NTZ5NDp5TWluZC04eTc6X2hlaWdodGQ0MTJ5NzpsZWFkaW5nZDB5NzpkZXNjZW50ZDE0NHk4OmNoYXJDb2RlaTExMXkxNTpsZWZ0c2lkZUJlYXJpbmdkNDR5MTI6YWR2YW5jZVdpZHRoZDUxMnk4OmNvbW1hbmRzYWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2hnOjIyM29SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMjNSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMTBvUjFkODgwUjJhZDI4ZDEwMjRkMjhkMTAwMGQ0OGQxMDAwZDY4ZDEwMDBkNzZkOTkyZDg0ZDk4NGQ4NGQ5NjhkODRkNjI0ZDg0ZDYxMmQ4MGQ2MDZkNzZkNjAwZDY0ZDYwMGQzMmQ2MDBkMzJkNTc2ZDYwZDU3NmQ4MGQ1NzZkOThkNTcyZDExNmQ1NjhkMTMyZDU1NmQxNDBkNTU2ZDE0MGQ2NDhkMTc2ZDYwOGQyMTJkNTg4ZDI0OGQ1NjhkMjg4ZDU2OGQzNTZkNTY4ZDM4OGQ2MDRkNDIwZDY0MGQ0MjBkNzEyZDQyMGQ5NjhkNDIwZDk4NGQ0MzBkOTkyZDQ0MGQxMDAwZDQ1NmQxMDAwZDQ3NmQxMDAwZDQ3NmQxMDI0ZDMwOGQxMDI0ZDMwOGQxMDAwZDMyOGQxMDAwZDM0OGQxMDAwZDM1NmQ5OTJkMzY0ZDk4NGQzNjRkOTY4ZDM2NGQ3MDBkMzY0ZDY1MmQzNDRkNjI2ZDMyNGQ2MDBkMjg0ZDYwMGQyNDhkNjAwZDIxMGQ2MjRkMTcyZDY0OGQxNDBkNjkyZDE0MGQ5NjhkMTQwZDk4NGQxNTBkOTkyZDE2MGQxMDAwZDE3NmQxMDAwZDE5NmQxMDAwZDE5NmQxMDI0ZDI4ZDEwMjRoUjNkNTEyUjRkNDc2UjVkMjhSNmQ0NjhSN2QwUjhkNDQwUjlkMFIxMGQxNDRSMTFpMTEwUjEyZDI4UjEzZDUxMlIxNGFpMWkyaTJpM2kzaTJpM2kzaTJpMmkyaTNpM2kyaTJpM2kzaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJpM2kzaTNpM2kyaTNpM2kyaTJpMmhnOjIyMm9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMjJSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMDlvUjFkODgwUjJhZDI0ZDU3NmQ0NGQ1NzZkNjRkNTcyZDg0ZDU2OGQ5NmQ1NjBkMTA0ZDU2MGQxMDRkNjI4ZDEyNGQ1OTZkMTQ4ZDU4MmQxNzJkNTY4ZDIwMGQ1NjhkMjM2ZDU2OGQyNTZkNTgyZDI3NmQ1OTZkMjgwZDYyOGQzMDBkNTk2ZDMyNmQ1ODJkMzUyZDU2OGQzODBkNTY4ZDQyOGQ1NjhkNDQ2ZDU5NmQ0NjRkNjI0ZDQ2NGQ2NjhkNDY0ZDk3MmQ0NjRkOTg4ZDQ3MmQ5OTRkNDgwZDEwMDBkNDk2ZDEwMDBkNTA0ZDEwMDBkNTA0ZDEwMjRkMzY4ZDEwMjRkMzY4ZDEwMDBkMzc2ZDEwMDBkMzkyZDEwMDBkNDAwZDk5NGQ0MDhkOTg4ZDQwOGQ5NzJkNDA4ZDY3MmQ0MDhkNjI4ZDM5OGQ2MTRkMzg4ZDYwMGQzNjhkNjAwZDM0MGQ2MDBkMzE4ZDYyMGQyOTZkNjQwZDI4NGQ2NzZkMjg0ZDk3MmQyODRkOTg4ZDI5MmQ5OTRkMzAwZDEwMDBkMzE2ZDEwMDBkMzI0ZDEwMDBkMzI0ZDEwMjRkMTg4ZDEwMjRkMTg4ZDEwMDBkMTk2ZDEwMDBkMjEyZDEwMDBkMjIwZDk5NGQyMjhkOTg4ZDIyOGQ5NzJkMjI4ZDY3MmQyMjhkNjM2ZDIyMGQ2MThkMjEyZDYwMGQxODhkNjAwZDE2MGQ2MDBkMTM4ZDYyMGQxMTZkNjQwZDEwNGQ2ODBkMTA0ZDk3MmQxMDRkOTg4ZDExMmQ5OTRkMTIwZDEwMDBkMTM2ZDEwMDBkMTQ0ZDEwMDBkMTQ0ZDEwMjRkOGQxMDI0ZDhkMTAwMGQxNmQxMDAwZDMyZDEwMDBkNDBkOTk0ZDQ4ZDk4OGQ0OGQ5NzJkNDhkNjI0ZDQ4ZDYxMmQ0NGQ2MDZkNDBkNjAwZDI4ZDYwMGQxMmQ2MDBkMTJkNTc2ZDI0ZDU3NmhSM2Q1MTJSNGQ1MDRSNWQ4UjZkNDY0UjdkMFI4ZDQ1NlI5ZDBSMTBkMTQ0UjExaTEwOVIxMmQ4UjEzZDUxMlIxNGFpMWkzaTNpMmkyaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJpM2kzaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJpM2kzaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJpM2kzaTJpMmkyaGc6MjIxb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTIyMVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjEwOG9SMWQ4ODBSMmFkMTQ0ZDM0MGQxODBkMzQwZDIxMmQzMzJkMjQ0ZDMyNGQyNzJkMzA4ZDI4MGQzMDhkMjgwZDk2OGQyODBkOTg0ZDI5MGQ5OTJkMzAwZDEwMDBkMzE2ZDEwMDBkNDA4ZDEwMDBkNDA4ZDEwMjRkOTZkMTAyNGQ5NmQxMDAwZDE4OGQxMDAwZDIwOGQxMDAwZDIxNmQ5OTJkMjI0ZDk4NGQyMjRkOTY4ZDIyNGQzOTZkMjI0ZDM4MGQyMTZkMzcyZDIwOGQzNjRkMTg4ZDM2NGQxMDBkMzY0ZDEwMGQzNDBkMTQ0ZDM0MGhSM2Q1MTJSNGQ0MDhSNWQ5NlI2ZDcxNlI3ZDBSOGQ2MjBSOWQwUjEwZDE0NFIxMWkxMDhSMTJkOTZSMTNkNTEyUjE0YWkxaTNpM2kyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkzaTNpMmkyaTJoZzoyMjBvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjIwUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTA3b1IxZDg4MFIyYWQyNjRkNzM2ZDQxNmQ5NzJkNDI4ZDk4OGQ0MzhkOTk0ZDQ0OGQxMDAwZDQ2MGQxMDAwZDQ3NmQxMDAwZDQ3NmQxMDI0ZDMxMmQxMDI0ZDMxMmQxMDAwZDMyNGQxMDAwZDM0NGQxMDAwZDM1MmQ5OTRkMzYwZDk4OGQzNDhkOTcyZDIyNGQ3NzZkMTQ0ZDg2MGQxNDRkOTY4ZDE0NGQ5ODRkMTU0ZDk5MmQxNjRkMTAwMGQxODBkMTAwMGQyMDBkMTAwMGQyMDBkMTAyNGQzMmQxMDI0ZDMyZDEwMDBkNTJkMTAwMGQ3MmQxMDAwZDgwZDk5MmQ4OGQ5ODRkODhkOTY4ZDg4ZDM5NmQ4OGQzODBkODBkMzcyZDcyZDM2NGQ1MmQzNjRkMjhkMzY0ZDI4ZDM0MGQ2NGQzNDBkODhkMzQwZDEwNmQzMzJkMTI0ZDMyNGQxMzZkMzA4ZDE0NGQzMDhkMTQ0ZDgxNmQzMTJkNjM2ZDMyMGQ2MjBkMzE4ZDYxMGQzMTZkNjAwZDMwMGQ2MDBkMjc2ZDYwMGQyNzZkNTc2ZDQ0NGQ1NzZkNDQ0ZDYwMGQ0MjRkNjAwZDQxMmQ2MDBkMzk0ZDYwNmQzNzZkNjEyZDM2MGQ2MjhkMjY0ZDczNmhSM2Q1MTJSNGQ0NzZSNWQyOFI2ZDcxNlI3ZDBSOGQ2ODhSOWQwUjEwZDE0NFIxMWkxMDdSMTJkMjhSMTNkNTEyUjE0YWkxaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkzaTNpMmkyaTJpM2kzaTJpMmkyaTNpM2kyaTJpMmkyaTJpM2kzaTJoZzoyMTlvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjE5UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTA2b1IxZDg4MFIyYWQzOTJkOTg0ZDM5MmQxMDc2ZDMzNmQxMTI0ZDI4MGQxMTcyZDIwMGQxMTcyZDEzNmQxMTcyZDEwNmQxMTUyZDc2ZDExMzJkNzZkMTEwNGQ3NmQxMDg4ZDg2ZDEwNzhkOTZkMTA2OGQxMTZkMTA2OGQxMzZkMTA2OGQxNDJkMTA4MGQxNDhkMTA5MmQxNTJkMTEwNGQxNjBkMTEyOGQxNzJkMTEzNGQxODRkMTE0MGQyMTJkMTE0MGQyNzZkMTE0MGQzMDZkMTEwNmQzMzZkMTA3MmQzMzZkMTAwMGQzMzZkNjM2ZDMzNmQ2MjBkMzI4ZDYxMGQzMjBkNjAwZDMwMGQ2MDBkMjIwZDYwMGQyMjBkNTc2ZDI1NmQ1NzZkMjkyZDU3NmQzMjRkNTcwZDM1NmQ1NjRkMzg0ZDU0OGQzOTJkNTQ4ZDM5MmQ5ODRkNDE2ZDM4OGQ0MTZkNDEyZDQwMGQ0MjhkMzg0ZDQ0NGQzNjBkNDQ0ZDMzNmQ0NDRkMzIwZDQyOGQzMDRkNDEyZDMwNGQzODhkMzA0ZDM2NGQzMjBkMzQ4ZDMzNmQzMzJkMzYwZDMzMmQzODRkMzMyZDQwMGQzNDhkNDE2ZDM2NGQ0MTZkMzg4aFIzZDUxMlI0ZDQxNlI1ZDc2UjZkNjkyUjdkLTE0OFI4ZDYxNlI5ZDBSMTBkMTQ0UjExaTEwNlIxMmQ3NlIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpMmkyaTJpM2kzaTJpMmkxaTNpM2kzaTNpM2kzaTNpM2hnOjIxOG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMThSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMDVvUjFkODgwUjJhZDIyNGQ2MzZkMjI0ZDYyMGQyMTZkNjEwZDIwOGQ2MDBkMTg4ZDYwMGQxMDRkNjAwZDEwNGQ1NzZkMTQ0ZDU3NmQxODBkNTc2ZDIxMmQ1NzBkMjQ0ZDU2NGQyNzJkNTQ4ZDI4MGQ1NDhkMjgwZDk2OGQyODBkOTg0ZDI5MGQ5OTJkMzAwZDEwMDBkMzE2ZDEwMDBkNDAwZDEwMDBkNDAwZDEwMjRkMTA0ZDEwMjRkMTA0ZDEwMDBkMTg4ZDEwMDBkMjA4ZDEwMDBkMjE2ZDk5MmQyMjRkOTg0ZDIyNGQ5NjhkMjI0ZDYzNmQzMDhkMzg4ZDMwOGQ0MTJkMjkyZDQyOGQyNzZkNDQ0ZDI1MmQ0NDRkMjI4ZDQ0NGQyMTJkNDI4ZDE5NmQ0MTJkMTk2ZDM4OGQxOTZkMzY0ZDIxMmQzNDhkMjI4ZDMzMmQyNTJkMzMyZDI3NmQzMzJkMjkyZDM0OGQzMDhkMzY0ZDMwOGQzODhoUjNkNTEyUjRkNDAwUjVkMTA0UjZkNjkyUjdkMFI4ZDU4OFI5ZDBSMTBkMTQ0UjExaTEwNVIxMmQxMDRSMTNkNTEyUjE0YWkxaTNpM2kyaTJpMmkzaTNpMmkyaTNpM2kyaTJpMmkyaTJpM2kzaTJpMWkzaTNpM2kzaTNpM2kzaTNoZzoyMTdvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjE3UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTA0b1IxZDg4MFIyYWQyOGQxMDI0ZDI4ZDEwMDBkNDhkMTAwMGQ2OGQxMDAwZDc2ZDk5MmQ4NGQ5ODRkODRkOTY4ZDg0ZDM5NmQ4NGQzODBkNzZkMzcyZDY4ZDM2NGQ0OGQzNjRkMjRkMzY0ZDI0ZDM0MGQ2OGQzNDBkODRkMzQwZDEwMGQzMzJkMTE2ZDMyNGQxMzJkMzA4ZDE0MGQzMDhkMTQwZDY0OGQxNzZkNjA0ZDIxNGQ1ODZkMjUyZDU2OGQyOTZkNTY4ZDM1NmQ1NjhkMzg4ZDYwMmQ0MjBkNjM2ZDQyMGQ3MDhkNDIwZDk2OGQ0MjBkOTg0ZDQzMGQ5OTJkNDQwZDEwMDBkNDU2ZDEwMDBkNDc2ZDEwMDBkNDc2ZDEwMjRkMzA4ZDEwMjRkMzA4ZDEwMDBkMzI4ZDEwMDBkMzQ4ZDEwMDBkMzU2ZDk5MmQzNjRkOTg0ZDM2NGQ5NjhkMzY0ZDcxNmQzNjRkNjQ4ZDM0MmQ2MjZkMzIwZDYwNGQyODRkNjA0ZDI1MmQ2MDRkMjE0ZDYyNGQxNzZkNjQ0ZDE0MGQ2OTJkMTQwZDk2OGQxNDBkOTg0ZDE1MGQ5OTJkMTYwZDEwMDBkMTc2ZDEwMDBkMTk2ZDEwMDBkMTk2ZDEwMjRkMjhkMTAyNGhSM2Q1MTJSNGQ0NzZSNWQyNFI2ZDcxNlI3ZDBSOGQ2OTJSOWQwUjEwZDE0NFIxMWkxMDRSMTJkMjRSMTNkNTEyUjE0YWkxaTJpMmkzaTNpMmkzaTNpMmkyaTJpM2kzaTJpMmkzaTNpM2kzaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkzaTNpM2kzaTJpM2kzaTJpMmkyaGc6MjE2b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTIxNlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjEwM29SMWQ4ODBSMmFkMTM2ZDcyNGQxMzZkNzcyZDE2NGQ4MDZkMTkyZDg0MGQyNDBkODQwZDI5MmQ4NDBkMzE4ZDgxMGQzNDRkNzgwZDM0NGQ3MjRkMzQ0ZDY1NmQzMTRkNjI2ZDI4NGQ1OTZkMjQwZDU5NmQxOTZkNTk2ZDE2NmQ2MjZkMTM2ZDY1NmQxMzZkNzI0ZDMzMmQ5NDBkMzkyZDk0OGQ0MjBkOTc0ZDQ0OGQxMDAwZDQ0OGQxMDQ0ZDQ0OGQxMTA0ZDM5OGQxMTQwZDM0OGQxMTc2ZDI0MGQxMTc2ZDE1NmQxMTc2ZDEwNGQxMTQyZDUyZDExMDhkNTJkMTA2NGQ1MmQxMDM2ZDcyZDEwMDhkOTJkOTgwZDEzNmQ5NjRkMTEyZDk1MmQ5OGQ5MzhkODRkOTI0ZDg0ZDkwNGQ4NGQ4ODBkMTAwZDg2MmQxMTZkODQ0ZDE0MGQ4MzJkMTE2ZDgxMmQ5OGQ3ODRkODBkNzU2ZDgwZDcyNGQ4MGQ2NjRkMTIyZDYxOGQxNjRkNTcyZDI0MGQ1NzJkMjcyZDU3MmQzMDJkNTgwZDMzMmQ1ODhkMzUyZDYwOGQzODBkNTg4ZDQwMmQ1NzhkNDI0ZDU2OGQ0NDBkNTY4ZDQ2MGQ1NjhkNDY4ZDU4MmQ0NzZkNTk2ZDQ3NmQ2MDhkNDc2ZDYyNGQ0NzBkNjM0ZDQ2NGQ2NDRkNDQ4ZDY0NGQ0MzZkNjQ0ZDQyOGQ2MzhkNDIwZDYzMmQ0MTZkNjIwZDQxMmQ2MDhkMzk4ZDYxMGQzODRkNjEyZDM2OGQ2MjRkMzg0ZDY0MGQzOTJkNjY4ZDQwMGQ2OTZkNDAwZDcyNGQ0MDBkNzcyZDM2MmQ4MThkMzI0ZDg2NGQyNDBkODY0ZDIxNmQ4NjRkMTk2ZDg1OGQxNzZkODUyZDE2NGQ4NDRkMTQ4ZDg1MmQxNDBkODY0ZDEzMmQ4NzZkMTMyZDg4NGQxMzJkOTAwZDE0MGQ5MDhkMTQ4ZDkxNmQxNjRkOTE2ZDIxNmQ5MjRkMjU4ZDkzMGQzMDBkOTM2ZDMzMmQ5NDBkMTY4ZDk3MmQxMzJkOTg4ZDExOGQxMDEwZDEwNGQxMDMyZDEwNGQxMDY0ZDEwNGQxMDk2ZDE0MGQxMTI0ZDE3NmQxMTUyZDI0OGQxMTUyZDMxNmQxMTUyZDM1NmQxMTMwZDM5NmQxMTA4ZDM5NmQxMDY0ZDM5NmQxMDM2ZDM4NmQxMDIwZDM3NmQxMDA0ZDM1NmQxMDAwZDMxNmQ5OTJkMjY4ZDk4NmQyMjBkOTgwZDE2OGQ5NzJoUjNkNTEyUjRkNDc2UjVkNTJSNmQ0NTZSN2QtMTUyUjhkNDA0UjlkMFIxMGQxNDRSMTFpMTAzUjEyZDUyUjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjIxNW9SMWQ4ODBSMmFkNTEyZDYyNGQ3ODhkMzM2ZDgyNGQzNjhkNTQ0ZDY1NmQ4MzJkOTQwZDc5NmQ5NzZkNTEyZDY4OGQyMjRkOTc2ZDE5MmQ5NDRkNDgwZDY1NmQxOTJkMzY4ZDIyNGQzMzZkNTEyZDYyNGhSM2QxMDI0UjRkODMyUjVkMTkyUjZkNjg4UjdkNDhSOGQ0OTZSOWQwUjEwZDE0NFIxMWkyMTVSMTJkMTkyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkyaTJpMmkyaTJpMmkyaTJoZzoxMDJvUjFkODgwUjJhZDE3NmQ1MDhkMTc2ZDQyNGQyMjhkMzgyZDI4MGQzNDBkMzQ0ZDM0MGQ0MTJkMzQwZDQ0NmQzNjRkNDgwZDM4OGQ0ODBkNDIwZDQ4MGQ0MzZkNDcyZDQ0OGQ0NjRkNDYwZDQ0MGQ0NjBkNDI0ZDQ2MGQ0MTRkNDUyZDQwNGQ0NDRkNDA0ZDQyNGQ0MDRkNDIwZDQwNmQ0MTJkNDA4ZDQwNGQ0MDhkNDAwZDQwOGQzODRkMzk2ZDM3NGQzODRkMzY0ZDM0MGQzNjRkMjkyZDM2NGQyNjJkMzk0ZDIzMmQ0MjRkMjMyZDQ5NmQyMzJkNTc2ZDQwMGQ1NzZkNDAwZDYwMGQyMzJkNjAwZDIzMmQ5NjhkMjMyZDk4NGQyNDJkOTkyZDI1MmQxMDAwZDI2OGQxMDAwZDM2NGQxMDAwZDM2NGQxMDI0ZDcyZDEwMjRkNzJkMTAwMGQxNDBkMTAwMGQxNjBkMTAwMGQxNjhkOTkyZDE3NmQ5ODRkMTc2ZDk2OGQxNzZkNjAwZDUyZDYwMGQ1MmQ1NzZkMTc2ZDU3NmQxNzZkNTA4aFIzZDUxMlI0ZDQ4MFI1ZDUyUjZkNjg0UjdkMFI4ZDYzMlI5ZDBSMTBkMTQ0UjExaTEwMlIxMmQ1MlIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpMmkyaTJoZzoyMTRvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjE0UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTAxb1IxZDg4MFIyYWQzODBkNzc2ZDM4NGQ2ODhkMzUwZDY0MmQzMTZkNTk2ZDI2MGQ1OTZkMjAwZDU5NmQxNjJkNjQ0ZDEyNGQ2OTJkMTI0ZDc3NmQzODBkNzc2ZDEyNGQ4MDBkMTI0ZDkwOGQxNjZkOTU0ZDIwOGQxMDAwZDI3NmQxMDAwZDMyOGQxMDAwZDM2NGQ5NzBkNDAwZDk0MGQ0MTZkODk2ZDQzNmQ5MDRkNDI0ZDk0OGQzODJkOTkwZDM0MGQxMDMyZDI2OGQxMDMyZDE3NmQxMDMyZDExOGQ5NzJkNjBkOTEyZDYwZDgwMGQ2MGQ3MDBkMTE4ZDYzNGQxNzZkNTY4ZDI2MGQ1NjhkMzM2ZDU2OGQzOTJkNjIwZDQ0OGQ2NzJkNDQ4ZDgwMGQxMjRkODAwaFIzZDUxMlI0ZDQ0OFI1ZDYwUjZkNDU2UjdkLThSOGQzOTZSOWQwUjEwZDE0NFIxMWkxMDFSMTJkNjBSMTNkNTEyUjE0YWkxaTNpM2kzaTNpMmkxaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmhnOjIxM29SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMTNSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMDBvUjFkODgwUjJhZDM2NGQ2NjRkMzQ0ZDYzMmQzMTJkNjE4ZDI4MGQ2MDRkMjQ4ZDYwNGQxODhkNjA0ZDE1NGQ2NjBkMTIwZDcxNmQxMjBkODA4ZDEyMGQ5MDRkMTUyZDk1MGQxODRkOTk2ZDI0NGQ5OTZkMjg4ZDk5NmQzMThkOTY4ZDM0OGQ5NDBkMzY0ZDg4NGQzNjRkNjY0ZDIzMmQxMDI4ZDE2MGQxMDI4ZDEwOGQ5NzBkNTZkOTEyZDU2ZDgwMGQ1NmQ2OTZkMTEyZDYzNGQxNjhkNTcyZDI0NGQ1NzJkMjc2ZDU3MmQzMTBkNTg2ZDM0NGQ2MDBkMzY0ZDYyOGQzNjRkNDEyZDM2NGQzODhkMzU2ZDM3NmQzNDhkMzY0ZDMyOGQzNjRkMjk2ZDM2NGQyOTZkMzQwZDM0MGQzNDBkMzYwZDM0MGQzODBkMzMyZDQwMGQzMjRkNDIwZDMwOGQ0MjBkOTQwZDQyMGQ5NjBkNDI4ZDk2OGQ0MzZkOTc2ZDQ1MmQ5NzZkNDgwZDk3NmQ0ODBkMTAwMGQ0NTZkMTAwMGQ0NDBkMTAwMGQ0MThkMTAwNmQzOTZkMTAxMmQzNzJkMTAyNGQzNjRkMTAyNGQzNjRkOTQ4ZDM0NGQ5ODRkMzEwZDEwMDZkMjc2ZDEwMjhkMjMyZDEwMjhoUjNkNTEyUjRkNDgwUjVkNTZSNmQ3MTZSN2QtNFI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTEwMFIxMmQ1NlIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTNpM2kyaTNpM2kyaTJpMmkzaTNpMmkzaTNpMmkyaTJpM2kzaTJpMmkzaTNoZzoyMTJvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjEyUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6OTlvUjFkODgwUjJhZDM0MGQ2ODRkMzQwZDY3MmQzNDJkNjY4ZDM0NGQ2NjRkMzQ4ZDY1MmQzNTJkNjM2ZDMzMmQ2MTRkMzEyZDU5MmQyNjRkNTkyZDIwNGQ1OTJkMTYyZDY1MGQxMjBkNzA4ZDEyMGQ4MDRkMTIwZDg5MmQxNTZkOTQ2ZDE5MmQxMDAwZDI3NmQxMDAwZDMzMmQxMDAwZDM3MGQ5NjRkNDA4ZDkyOGQ0MjRkODgwZDQ0NGQ4ODhkNDI4ZDk0OGQzODRkOTkwZDM0MGQxMDMyZDI2NGQxMDMyZDE2OGQxMDMyZDExMmQ5NzJkNTZkOTEyZDU2ZDgwMGQ1NmQ3MDBkMTE2ZDYzNGQxNzZkNTY4ZDI3MmQ1NjhkMzQwZDU2OGQzNzhkNjA0ZDQxNmQ2NDBkNDE2ZDY3NmQ0MTZkNzAwZDQwNmQ3MTBkMzk2ZDcyMGQzNzZkNzIwZDM2MGQ3MjBkMzUwZDcxMGQzNDBkNzAwZDM0MGQ2ODRoUjNkNTEyUjRkNDQ0UjVkNTZSNmQ0NTZSN2QtOFI4ZDQwMFI5ZDBSMTBkMTQ0UjExaTk5UjEyZDU2UjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNoZzoyMTFvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjExUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6OThvUjFkODgwUjJhZDEzNmQ2NjhkMTU2ZDYyNGQyMDBkNTk4ZDI0NGQ1NzJkMjg0ZDU3MmQzNjhkNTcyZDQxMGQ2MzBkNDUyZDY4OGQ0NTJkODAwZDQ1MmQ5MTJkMzk4ZDk3MGQzNDRkMTAyOGQyNjRkMTAyOGQyMjRkMTAyOGQxOTBkMTAxNGQxNTZkMTAwMGQxMzJkOTc2ZDk2ZDEwMjRkODBkMTAyNGQ4MGQzOTZkODBkMzgwZDcyZDM3MmQ2NGQzNjRkNDRkMzY0ZDIwZDM2NGQyMGQzNDBkNTZkMzQwZDc2ZDM0MGQ5NmQzMzJkMTE2ZDMyNGQxMzZkMzA4ZDEzNmQ2NjhkMTM2ZDg5MmQxMzZkOTM2ZDE2NmQ5NjhkMTk2ZDEwMDBkMjU2ZDEwMDBkMzI4ZDEwMDBkMzU4ZDk1MGQzODhkOTAwZDM4OGQ4MDBkMzg4ZDcwNGQzNjJkNjU0ZDMzNmQ2MDRkMjgwZDYwNGQyMzJkNjA0ZDE5NmQ2MzJkMTYwZDY2MGQxMzZkNzMyZDEzNmQ4OTJoUjNkNTEyUjRkNDUyUjVkMjBSNmQ3MTZSN2QtNFI4ZDY5NlI5ZDBSMTBkMTQ0UjExaTk4UjEyZDIwUjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMmkyaTJpM2kzaTJpMmkyaTNpM2kyaTFpM2kzaTNpM2kzaTNpM2kzaTJoZzoyMTBvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjEwUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6OTdvUjFkODgwUjJhZDE5MmQxMDI4ZDEyMGQxMDI4ZDgwZDk5NGQ0MGQ5NjBkNDBkOTE2ZDQwZDg0NGQxMDJkNzk4ZDE2NGQ3NTJkMzQ4ZDczMmQzNDhkNjg0ZDM0OGQ2NDRkMzMwZDYxOGQzMTJkNTkyZDI0OGQ1OTJkMTgwZDU5MmQxNTJkNjE0ZDEyNGQ2MzZkMTMyZDY2MGQxNDBkNjc2ZDEzMmQ2OTJkMTI0ZDcwOGQxMDBkNzA4ZDg0ZDcwOGQ3NGQ2OThkNjRkNjg4ZDY0ZDY2OGQ2NGQ2MzJkMTE2ZDYwMGQxNjhkNTY4ZDI0NGQ1NjhkMzI0ZDU2OGQzNjRkNTk4ZDQwNGQ2MjhkNDA0ZDY4NGQ0MDRkOTQ4ZDQwNGQ5ODBkNDEwZDk4NmQ0MTZkOTkyZDQzMmQ5OTJkNDUyZDk5MmQ0NjBkOTc0ZDQ2OGQ5NTZkNDY4ZDkyNGQ0ODhkOTI0ZDQ4OGQ5ODBkNDY4ZDEwMDJkNDQ4ZDEwMjRkNDE2ZDEwMjRkMzg4ZDEwMjRkMzcyZDEwMTJkMzU2ZDEwMDBkMzQ4ZDk3MmQzMDhkMTAwMGQyNzRkMTAxNGQyNDBkMTAyOGQxOTJkMTAyOGQxMDhkOTA0ZDEwOGQ5NDBkMTMwZDk3MGQxNTJkMTAwMGQyMDBkMTAwMGQyMzZkMTAwMGQyNzJkOTg2ZDMwOGQ5NzJkMzQ4ZDk0NGQzNDhkNzU2ZDIxMmQ3NzJkMTYwZDgxMGQxMDhkODQ4ZDEwOGQ5MDRoUjNkNTEyUjRkNDg4UjVkNDBSNmQ0NTZSN2QtNFI4ZDQxNlI5ZDBSMTBkMTQ0UjExaTk3UjEyZDQwUjEzZDUxMlIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTJpM2kzaGc6MjA5b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTIwOVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjk2b1IxZDg4MFIyYWQxOTZkMjEyZDI4NGQzMDBkMjgwZDMxNmQ4MGQyMjRkODhkMjEyZDE5NmQyMTJoUjNkNTEyUjRkMjg0UjVkODBSNmQ4MTJSN2Q3MDhSOGQ3MzJSOWQwUjEwZDE0NFIxMWk5NlIxMmQ4MFIxM2Q1MTJSMTRhaTFpMmkyaTJpMmkyaGc6MjA4b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTIwOFIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjk1b1IxZDg4MFIyYWQwZDExNjBkMGQxMTM2ZDUwNGQxMTM2ZDUwNGQxMTYwZDBkMTE2MGhSM2Q1MTJSNGQ1MDRSNWQwUjZkLTExMlI3ZC0xMzZSOGQtMTEyUjlkMFIxMGQxNDRSMTFpOTVSMTJkMFIxM2Q1MTJSMTRhaTFpMmkyaTJpMmhnOjIwN29SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMDdSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo5NG9SMWQ4ODBSMmFkMzAwZDIxMmQzODRkMzIwZDM3NmQzMjhkMjUyZDI0OGQxMjRkMzI4ZDExNmQzMjBkMjA0ZDIxMmQzMDBkMjEyaFIzZDUxMlI0ZDM4NFI1ZDExNlI2ZDgxMlI3ZDY5NlI4ZDY5NlI5ZDBSMTBkMTQ0UjExaTk0UjEyZDExNlIxM2Q1MTJSMTRhaTFpMmkyaTJpMmkyaTJpMmhnOjIwNm9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMDZSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo5M29SMWQ4ODBSMmFkMzA0ZDEwOTZkNjRkMTA5NmQ2NGQxMDYwZDI2NGQxMDYwZDI2NGQyNDRkNjRkMjQ0ZDY0ZDIwOGQzMDRkMjA4ZDMwNGQxMDk2aFIzZDUxMlI0ZDMwNFI1ZDY0UjZkODE2UjdkLTcyUjhkNzUyUjlkMFIxMGQxNDRSMTFpOTNSMTJkNjRSMTNkNTEyUjE0YWkxaTJpMmkyaTJpMmkyaTJpMmhnOjIwNW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMDVSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo5Mm9SMWQ4ODBSMmFkNzJkMjM2ZDEyMGQyMzZkNDYwZDEwODhkNDEyZDEwODhkNzJkMjM2aFIzZDUxMlI0ZDQ2MFI1ZDcyUjZkNzg4UjdkLTY0UjhkNzE2UjlkMFIxMGQxNDRSMTFpOTJSMTJkNzJSMTNkNTEyUjE0YWkxaTJpMmkyaTJoZzoyMDRvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjA0UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6OTFvUjFkODgwUjJhZDQzNmQyMDhkNDM2ZDI0NGQyMzZkMjQ0ZDIzNmQxMDYwZDQzNmQxMDYwZDQzNmQxMDk2ZDE5NmQxMDk2ZDE5NmQyMDhkNDM2ZDIwOGhSM2Q1MTJSNGQ0MzZSNWQxOTZSNmQ4MTZSN2QtNzJSOGQ2MjBSOWQwUjEwZDE0NFIxMWk5MVIxMmQxOTZSMTNkNTEyUjE0YWkxaTJpMmkyaTJpMmkyaTJpMmhnOjIwM29SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMDNSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo5MG9SMWQ4ODBSMmFkMjg0ZDEwMDBkMzM2ZDEwMDBkMzc0ZDk2NmQ0MTJkOTMyZDQzNmQ4NjRkNDYwZDg2OGQ0MTZkMTAyNGQzMmQxMDI0ZDM4NGQzNjRkMjQ0ZDM2NGQxOTJkMzY0ZDE1MGQzOTRkMTA4ZDQyNGQ3NmQ0ODRkNTJkNDc2ZDEwMGQzNDBkNDY0ZDM0MGQxMTJkMTAwMGQyODRkMTAwMGhSM2Q1MTJSNGQ0NjRSNWQzMlI2ZDY4NFI3ZDBSOGQ2NTJSOWQwUjEwZDE0NFIxMWk5MFIxMmQzMlIxM2Q1MTJSMTRhaTFpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTJpMmkyaGc6MjAyb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTIwMlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjg5b1IxZDg4MFIyYWQzNzZkNDEyZDM4MGQzODhkMzcwZDM3NmQzNjBkMzY0ZDMzMmQzNjRkMzI0ZDM2NGQzMjRkMzQwZDQ4MGQzNDBkNDgwZDM2NGQ0NjhkMzY0ZDQ0OGQzNjRkNDMyZDM3OGQ0MTZkMzkyZDQwNGQ0MjBkMjgwZDczNmQyODBkOTY4ZDI4MGQ5ODRkMjkwZDk5MmQzMDBkMTAwMGQzMTZkMTAwMGQzNTJkMTAwMGQzNTJkMTAyNGQxNDRkMTAyNGQxNDRkMTAwMGQxODBkMTAwMGQyMDBkMTAwMGQyMDhkOTkyZDIxNmQ5ODRkMjE2ZDk2OGQyMTZkNzYwZDgwZDQwOGQ3MmQzODhkNjBkMzc2ZDQ4ZDM2NGQyOGQzNjRkMjBkMzY0ZDIwZDM0MGQxOTZkMzQwZDE5NmQzNjRkMTcyZDM2NGQxNDhkMzY0ZDE0NGQzNzZkMTQwZDM4OGQxNDhkNDEyZDI1NmQ3MDhkMjY0ZDcwOGQzNzZkNDEyaFIzZDUxMlI0ZDQ4MFI1ZDIwUjZkNjg0UjdkMFI4ZDY2NFI5ZDBSMTBkMTQ0UjExaTg5UjEyZDIwUjEzZDUxMlIxNGFpMWkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTNpM2kyaTJpMmkyaTJpM2kzaTJpMmkyaGc6MjAxb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTIwMVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjg4b1IxZDg4MFIyYWQyNzZkNjU2ZDQxNmQ5NTZkNDI4ZDk4MGQ0NDJkOTkwZDQ1NmQxMDAwZDQ3MmQxMDAwZDQ4NGQxMDAwZDQ4NGQxMDI0ZDMxMmQxMDI0ZDMxMmQxMDAwZDMyOGQxMDAwZDM0OGQxMDAwZDM1NGQ5OTBkMzYwZDk4MGQzNTJkOTY0ZDI0NGQ3MjhkMTUyZDkyMGQxNDRkOTQwZDEzOGQ5NTRkMTMyZDk2OGQxMzJkOTcyZDEzMmQ5ODhkMTQyZDk5NGQxNTJkMTAwMGQxNjhkMTAwMGQxNzZkMTAwMGQxNzZkMTAyNGQyNGQxMDI0ZDI0ZDEwMDBkNDBkMTAwMGQ2MGQxMDAwZDc2ZDk4OGQ5MmQ5NzZkMTAwZDk2MGQyMjhkNjg4ZDkyZDM5MmQ4OGQzODBkNzhkMzcyZDY4ZDM2NGQ1MmQzNjRkMzZkMzY0ZDM2ZDM0MGQyMDBkMzQwZDIwMGQzNjRkMTg4ZDM2NGQxNjRkMzY0ZDE2MGQzNzZkMTU2ZDM4OGQxNjRkNDEyZDI2MGQ2MjRkMzU2ZDQyMGQzNjhkMzkyZDM2NGQzNzhkMzYwZDM2NGQzMzZkMzY0ZDMxMmQzNjRkMzEyZDM0MGQ0NjhkMzQwZDQ2OGQzNjRkNDQ0ZDM2NGQ0MzZkMzY0ZDQyNGQzNzJkNDEyZDM4MGQ0MDBkMzk2ZDI3NmQ2NTZoUjNkNTEyUjRkNDg0UjVkMjRSNmQ2ODRSN2QwUjhkNjYwUjlkMFIxMGQxNDRSMTFpODhSMTJkMjRSMTNkNTEyUjE0YWkxaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTNpM2kzaTNpMmkyaTJpMmkyaTNpM2kyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTNpM2kyaTJpMmkyaTJpM2kzaTJoZzoyMDBvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjAwUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6ODdvUjFkODgwUjJhZDUwMGQzNDBkNTAwZDM2NGQ0ODRkMzY0ZDQ3NmQzNjRkNDY2ZDM3MmQ0NTZkMzgwZDQ1MmQ0MDBkMzQ0ZDEwMjRkMzIwZDEwMjRkMjU2ZDYwMGQyNDhkNjAwZDE2NGQxMDI0ZDE0MGQxMDI0ZDQ0ZDM5NmQ0NGQzODBkMzhkMzcyZDMyZDM2NGQyMGQzNjRkNGQzNjRkNGQzNDBkMTQ0ZDM0MGQxNDRkMzY0ZDEzMmQzNjRkMTE2ZDM2NGQxMDhkMzcyZDEwMGQzODBkMTAwZDM5NmQxNjRkODM2ZDE3MmQ4MzZkMjQwZDUwNGQyMjhkMzk2ZDIyOGQzODBkMjE4ZDM3MmQyMDhkMzY0ZDIwMGQzNjRkMTg4ZDM2NGQxODhkMzQwZDMyNGQzNDBkMzI0ZDM2NGQzMTJkMzY0ZDI5NmQzNjRkMjkwZDM3MmQyODRkMzgwZDI4NGQzOTZkMzQ0ZDgyNGQzNTJkODI0ZDQyNGQ0MDRkNDI4ZDM4NGQ0MThkMzc0ZDQwOGQzNjRkMzkyZDM2NGQzODBkMzY0ZDM4MGQzNDBkNTAwZDM0MGhSM2Q1MTJSNGQ1MDBSNWQ0UjZkNjg0UjdkMFI4ZDY4MFI5ZDBSMTBkMTQ0UjExaTg3UjEyZDRSMTNkNTEyUjE0YWkxaTJpMmkzaTNpMmkyaTJpMmkyaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpMmkyaTNpM2kyaTJpMmkyaTJpM2kzaTJpMmkyaTNpM2kyaTJpMmhnOjE5OW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxOTlSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo4Nm9SMWQ4ODBSMmFkMzM2ZDM2NGQzMzZkMzQwZDQ4MGQzNDBkNDgwZDM2NGQ0NjRkMzY0ZDQ0OGQzNjRkNDM0ZDM3NmQ0MjBkMzg4ZDQxMmQ0MjBkMjQ4ZDEwMjRkMjI0ZDEwMjRkNzZkNDIwZDcyZDM5MmQ2MmQzNzhkNTJkMzY0ZDMyZDM2NGQxMmQzNjRkMTJkMzQwZDE4NGQzNDBkMTg0ZDM2NGQxNjhkMzY0ZDE0OGQzNjRkMTQyZDM3NmQxMzZkMzg4ZDE0MGQ0MDhkMjUyZDg3NmQyNjBkODc2ZDM4MGQ0MjBkMzg4ZDM5MmQzODBkMzc4ZDM3MmQzNjRkMzQ4ZDM2NGQzMzZkMzY0aFIzZDUxMlI0ZDQ4MFI1ZDEyUjZkNjg0UjdkMFI4ZDY3MlI5ZDBSMTBkMTQ0UjExaTg2UjEyZDEyUjEzZDUxMlIxNGFpMWkyaTJpMmkyaTNpM2kyaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpMmkzaTNpMmhnOjE5OG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxOThSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo4NW9SMWQ4ODBSMmFkMjU2ZDEwMDBkMzE2ZDEwMDBkMzU4ZDk2MGQ0MDBkOTIwZDQwMGQ4NjBkNDAwZDM5NmQ0MDBkMzgwZDM5MmQzNzJkMzg0ZDM2NGQzNjRkMzY0ZDM0MGQzNjRkMzQwZDM0MGQ0ODRkMzQwZDQ4NGQzNjRkNDYwZDM2NGQ0NDRkMzY0ZDQzNGQzNzJkNDI0ZDM4MGQ0MjRkMzk2ZDQyNGQ4NjBkNDI0ZDk0MGQzNzBkOTg2ZDMxNmQxMDMyZDI0OGQxMDMyZDE3NmQxMDMyZDEyMmQ5OTJkNjhkOTUyZDY4ZDg2NGQ2OGQzOTZkNjhkMzgwZDYwZDM3MmQ1MmQzNjRkMzJkMzY0ZDEyZDM2NGQxMmQzNDBkMTg4ZDM0MGQxODhkMzY0ZDE2OGQzNjRkMTUyZDM2NGQxNDJkMzcyZDEzMmQzODBkMTMyZDM5NmQxMzJkODY0ZDEzMmQ5NDRkMTY2ZDk3MmQyMDBkMTAwMGQyNTZkMTAwMGhSM2Q1MTJSNGQ0ODRSNWQxMlI2ZDY4NFI3ZC04UjhkNjcyUjlkMFIxMGQxNDRSMTFpODVSMTJkMTJSMTNkNTEyUjE0YWkxaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJpM2kzaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJpM2kzaGc6MTk3b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE5N1IxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjg0b1IxZDg4MFIyYWQzNTJkMTAyNGQxNDRkMTAyNGQxNDRkMTAwMGQxODBkMTAwMGQyMDBkMTAwMGQyMDhkOTkyZDIxNmQ5ODRkMjE2ZDk2OGQyMTZkNDA4ZDIxNmQzNzZkMjEyZDM3MmQyMDhkMzY4ZDE4MGQzNjhkMTI0ZDM2OGQxMDJkMzg4ZDgwZDQwOGQ0OGQ0OTZkMjRkNDkyZDYwZDM0MGQ0NDBkMzQwZDQ3MmQ0OTJkNDUyZDQ5NmQ0MjBkNDEyZDQwMmQzOTBkMzg0ZDM2OGQzMjhkMzY4ZDI4OGQzNjhkMjg0ZDM3MmQyODBkMzc2ZDI4MGQ0MTJkMjgwZDk2OGQyODBkOTg0ZDI5MGQ5OTJkMzAwZDEwMDBkMzE2ZDEwMDBkMzUyZDEwMDBkMzUyZDEwMjRoUjNkNTEyUjRkNDcyUjVkMjRSNmQ2ODRSN2QwUjhkNjYwUjlkMFIxMGQxNDRSMTFpODRSMTJkMjRSMTNkNTEyUjE0YWkxaTJpMmkyaTNpM2kyaTNpM2kzaTNpMmkyaTJpMmkyaTNpM2kzaTNpMmkzaTNpMmkyaGc6MTk2b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE5NlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjgzb1IxZDg4MFIyYWQyMzZkNjk2ZDEyOGQ2NDhkODhkNjEyZDQ4ZDU3NmQ0OGQ1MDBkNDhkNDQwZDk4ZDM4NmQxNDhkMzMyZDI0MGQzMzJkMjgwZDMzMmQzMTZkMzQ2ZDM1MmQzNjBkMzY4ZDM2MGQzODBkMzYwZDM5MGQzNTRkNDAwZDM0OGQ0MDhkMzMyZDQyNGQ0OTZkNDA0ZDUwNGQzNjhkNDIwZDMzMGQzOTBkMjkyZDM2MGQyMzJkMzYwZDE1NmQzNjBkMTI4ZDQwMmQxMDBkNDQ0ZDEwMGQ0OTJkMTAwZDUzNmQxMjZkNTYyZDE1MmQ1ODhkMjY4ZDY0MGQzNjRkNjgwZDQwNmQ3MzBkNDQ4ZDc4MGQ0NDhkODQ4ZDQ0OGQ5MjBkMzk4ZDk3NmQzNDhkMTAzMmQyNTJkMTAzMmQyMTJkMTAzMmQxNzhkMTAxOGQxNDRkMTAwNGQxMjRkMTAwNGQxMTJkMTAwNGQxMDBkMTAxMmQ4OGQxMDIwZDcyZDEwMzJkNDBkODM2ZDY0ZDgyOGQ5MmQ5MjhkMTQyZDk2NmQxOTJkMTAwNGQyNTZkMTAwNGQzMjRkMTAwNGQzNThkOTY0ZDM5MmQ5MjRkMzkyZDg0OGQzOTJkODA4ZDM1NGQ3NzBkMzE2ZDczMmQyMzZkNjk2aFIzZDUxMlI0ZDQ0OFI1ZDQwUjZkNjkyUjdkLThSOGQ2NTJSOWQwUjEwZDE0NFIxMWk4M1IxMmQ0MFIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTJpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkyaTNpM2kzaTNpM2kzaGc6MTk1b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE5NVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjgyb1IxZDg4MFIyYWQ0NDhkNTAwZDQ0OGQ1ODBkNDA0ZDYyNGQzNjBkNjY4ZDMwNGQ2NzZkNDI0ZDk3MmQ0MzJkOTg4ZDQ0MmQ5OTRkNDUyZDEwMDBkNDY0ZDEwMDBkNDg4ZDEwMDBkNDg4ZDEwMjRkMzc2ZDEwMjRkMjQ0ZDY4MGQxNTJkNjgwZDE1MmQ5NjhkMTUyZDk4NGQxNjJkOTkyZDE3MmQxMDAwZDE4OGQxMDAwZDIxMmQxMDAwZDIxMmQxMDI0ZDI4ZDEwMjRkMjhkMTAwMGQ1MmQxMDAwZDcyZDEwMDBkODBkOTkyZDg4ZDk4NGQ4OGQ5NjhkODhkMzk2ZDg4ZDM4MGQ4MGQzNzJkNzJkMzY0ZDUyZDM2NGQyOGQzNjRkMjhkMzQwZDI1NmQzNDBkMzQ4ZDM0MGQzOThkMzgwZDQ0OGQ0MjBkNDQ4ZDUwMGQxNTJkNjU2ZDI0MGQ2NTZkMzAwZDY1NmQzNDBkNjIwZDM4MGQ1ODRkMzgwZDUwOGQzODBkNDQwZDM0NGQ0MDJkMzA4ZDM2NGQyMzJkMzY0ZDE4OGQzNjRkMTcyZDM2NGQxNjJkMzcyZDE1MmQzODBkMTUyZDM5NmQxNTJkNjU2aFIzZDUxMlI0ZDQ4OFI1ZDI4UjZkNjg0UjdkMFI4ZDY1NlI5ZDBSMTBkMTQ0UjExaTgyUjEyZDI4UjEzZDUxMlIxNGFpMWkzaTNpMmkzaTNpMmkyaTJpMmkyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkzaTNpMmkyaTJpM2kzaTFpMmkzaTNpM2kzaTJpM2kzaTJoZzoxOTRvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTk0UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6ODFvUjFkODgwUjJhZDI5MmQ5OTZkMjgwZDkzNmQyNjRkODk4ZDI0OGQ4NjBkMjE2ZDg2MGQyMDBkODYwZDE3OGQ4NzZkMTU2ZDg5MmQxNTZkOTI4ZDE1NmQ5NTZkMTg0ZDk3OGQyMTJkMTAwMGQyNTJkMTAwMGQyNjhkMTAwMGQyNzhkMTAwMGQyODhkMTAwMGQyOTJkOTk2ZDIyNGQ4MjBkMjcyZDgyMGQyOThkODU0ZDMyNGQ4ODhkMzQ0ZDk1NmQzNzJkOTM2ZDM4NmQ4NjZkNDAwZDc5NmQ0MDBkNjgwZDQwMGQ1MjRkMzY2ZDQ0MmQzMzJkMzYwZDI1MmQzNjBkMTg0ZDM2MGQxNDRkNDQwZDEwNGQ1MjBkMTA0ZDY4MGQxMDRkNzYwZDExMGQ4MTRkMTE2ZDg2OGQxMjhkODkyZDE0NGQ4NTZkMTY0ZDgzOGQxODRkODIwZDIyNGQ4MjBkMjUyZDEwMjhkMTY0ZDEwMjhkOTZkOTQ4ZDI4ZDg2OGQyOGQ2ODBkMjhkNTIwZDg4ZDQyNmQxNDhkMzMyZDI1MmQzMzJkMzQ4ZDMzMmQ0MTJkNDIyZDQ3NmQ1MTJkNDc2ZDY4MGQ0NzZkODIwZDQ0MmQ4OTJkNDA4ZDk2NGQzNjBkMTAwMGQzNjhkMTAyOGQzODBkMTA0MGQzOTJkMTA1MmQ0MDRkMTA1MmQ0MjBkMTA1MmQ0MzJkMTA0NGQ0NDRkMTAzNmQ0NDhkMTAxNmQ0NjRkMTAyNGQ0NTJkMTA3MmQ0MzJkMTA5NGQ0MTJkMTExNmQzODRkMTExNmQzNjRkMTExNmQzNDZkMTEwNGQzMjhkMTA5MmQzMDBkMTAyNGQyOTZkMTAyOGQyODRkMTAyOGQyNzJkMTAyOGQyNTJkMTAyOGhSM2Q1MTJSNGQ0NzZSNWQyOFI2ZDY5MlI3ZC05MlI4ZDY2NFI5ZDBSMTBkMTQ0UjExaTgxUjEyZDI4UjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNoZzoxOTNvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTkzUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6ODBvUjFkODgwUjJhZDE0OGQ3MDRkMTQ4ZDk2OGQxNDhkOTg0ZDE1OGQ5OTJkMTY4ZDEwMDBkMTg0ZDEwMDBkMjEyZDEwMDBkMjEyZDEwMjRkMjBkMTAyNGQyMGQxMDAwZDQ4ZDEwMDBkNjhkMTAwMGQ3NmQ5OTJkODRkOTg0ZDg0ZDk2OGQ4NGQzOTZkODRkMzgwZDc2ZDM3MmQ2OGQzNjRkNDhkMzY0ZDI0ZDM2NGQyNGQzNDBkMjYwZDM0MGQzNjBkMzQwZDQxNGQzOTBkNDY4ZDQ0MGQ0NjhkNTE2ZDQ2OGQ2MDhkNDEwZDY1NmQzNTJkNzA0ZDI3MmQ3MDRkMTQ4ZDcwNGQyNDhkNjgwZDMwOGQ2ODBkMzU0ZDY0NGQ0MDBkNjA4ZDQwMGQ1MjBkNDAwZDQ0MGQzNjJkNDAyZDMyNGQzNjRkMjQwZDM2NGQxODRkMzY0ZDE2OGQzNjRkMTU4ZDM3MmQxNDhkMzgwZDE0OGQzOTZkMTQ4ZDY4MGQyNDhkNjgwaFIzZDUxMlI0ZDQ2OFI1ZDIwUjZkNjg0UjdkMFI4ZDY2NFI5ZDBSMTBkMTQ0UjExaTgwUjEyZDIwUjEzZDUxMlIxNGFpMWkyaTNpM2kyaTJpMmkyaTJpM2kzaTJpM2kzaTJpMmkyaTNpM2kzaTNpMmkxaTNpM2kzaTNpMmkzaTNpMmkyaGc6MTkyb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE5MlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjc5b1IxZDg4MFIyYWQxMDhkNjgwZDEwOGQ4NTJkMTUwZDkzMGQxOTJkMTAwOGQyNTZkMTAwOGQzMjRkMTAwOGQzNjRkOTM0ZDQwNGQ4NjBkNDA0ZDY4MGQ0MDRkNTM2ZDM3MGQ0NDhkMzM2ZDM2MGQyNTZkMzYwZDE4OGQzNjBkMTQ4ZDQ0MGQxMDhkNTIwZDEwOGQ2ODBkNDgwZDY4MGQ0ODBkODQ0ZDQxNmQ5MzhkMzUyZDEwMzJkMjU2ZDEwMzJkMTY0ZDEwMzJkOThkOTM2ZDMyZDg0MGQzMmQ2ODBkMzJkNTI0ZDk0ZDQyOGQxNTZkMzMyZDI1NmQzMzJkMzYwZDMzMmQ0MjBkNDM0ZDQ4MGQ1MzZkNDgwZDY4MGhSM2Q1MTJSNGQ0ODBSNWQzMlI2ZDY5MlI3ZC04UjhkNjYwUjlkMFIxMGQxNDRSMTFpNzlSMTJkMzJSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2hnOjE5MW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxOTFSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo3OG9SMWQ4ODBSMmFkNDAwZDg2NGQ0MDhkODY0ZDQwOGQzOTZkNDA4ZDM4MGQ0MDBkMzcyZDM5MmQzNjRkMzcyZDM2NGQzNDBkMzY0ZDM0MGQzNDBkNTAwZDM0MGQ1MDBkMzY0ZDQ2OGQzNjRkNDUyZDM2NGQ0NDJkMzcyZDQzMmQzODBkNDMyZDM5NmQ0MzJkMTAyNGQ0MDhkMTAyNGQxMDRkNDI4ZDk2ZDQyOGQ5NmQ5NjhkOTZkOTg0ZDEwNmQ5OTJkMTE2ZDEwMDBkMTMyZDEwMDBkMTY0ZDEwMDBkMTY0ZDEwMjRkNGQxMDI0ZDRkMTAwMGQzNmQxMDAwZDU2ZDEwMDBkNjRkOTkyZDcyZDk4NGQ3MmQ5NjhkNzJkMzk2ZDcyZDM4MGQ2NGQzNzJkNTZkMzY0ZDM2ZDM2NGQxMmQzNjRkMTJkMzQwZDEyOGQzNDBkNDAwZDg2NGhSM2Q1MTJSNGQ1MDBSNWQ0UjZkNjg0UjdkMFI4ZDY4MFI5ZDBSMTBkMTQ0UjExaTc4UjEyZDRSMTNkNTEyUjE0YWkxaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpMmkyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkzaTNpMmkyaTJpMmhnOjE5MG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxOTBSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo3N29SMWQ4ODBSMmFkNDQ0ZDk2OGQ0NDRkOTg0ZDQ1NGQ5OTJkNDY0ZDEwMDBkNDgwZDEwMDBkNDk2ZDEwMDBkNDk2ZDEwMjRkMzI0ZDEwMjRkMzI0ZDEwMDBkMzQ0ZDEwMDBkMzY0ZDEwMDBkMzcyZDk5MmQzODBkOTg0ZDM4MGQ5NjhkMzgwZDQ0NGQzNzJkNDQ0ZDIzNmQxMDI0ZDIxMmQxMDI0ZDg4ZDQ1NmQ4MGQ0NTZkODBkOTY4ZDgwZDk4NGQ5MGQ5OTJkMTAwZDEwMDBkMTE2ZDEwMDBkMTI4ZDEwMDBkMTI4ZDEwMjRkOGQxMDI0ZDhkMTAwMGQyMGQxMDAwZDQwZDEwMDBkNDhkOTkyZDU2ZDk4NGQ1NmQ5NjhkNTZkMzk2ZDU2ZDM4MGQ0OGQzNzJkNDBkMzY0ZDIwZDM2NGQ0ZDM2NGQ0ZDM0MGQxMjBkMzQwZDIzNmQ4NzZkMjQ0ZDg3NmQzNjhkMzQwZDQ5NmQzNDBkNDk2ZDM2NGQ0ODBkMzY0ZDQ2NGQzNjRkNDU0ZDM3MmQ0NDRkMzgwZDQ0NGQzOTZkNDQ0ZDk2OGhSM2Q1MTJSNGQ0OTZSNWQ0UjZkNjg0UjdkMFI4ZDY4MFI5ZDBSMTBkMTQ0UjExaTc3UjEyZDRSMTNkNTEyUjE0YWkxaTNpM2kyaTJpMmkyaTJpM2kzaTJpMmkyaTJpMmkyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkzaTNpMmkyaTJpMmkyaTJpMmkyaTJpM2kzaTJoZzoxODlvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTg5UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NzZvUjFkODgwUjJhZDE1NmQ5NjhkMTU2ZDk4NGQxNjZkOTkyZDE3NmQxMDAwZDE5MmQxMDAwZDMwMGQxMDAwZDM1NmQxMDAwZDM5NmQ5NjZkNDM2ZDkzMmQ0NTZkODYwZDQ3NmQ4NjhkNDQwZDEwMjRkMjhkMTAyNGQyOGQxMDAwZDU2ZDEwMDBkNzZkMTAwMGQ4NGQ5OTJkOTJkOTg0ZDkyZDk2OGQ5MmQzOTZkOTJkMzgwZDg0ZDM3MmQ3NmQzNjRkNTZkMzY0ZDMyZDM2NGQzMmQzNDBkMjIwZDM0MGQyMjBkMzY0ZDE5MmQzNjRkMTc2ZDM2NGQxNjZkMzcyZDE1NmQzODBkMTU2ZDM5NmQxNTZkOTY4aFIzZDUxMlI0ZDQ3NlI1ZDI4UjZkNjg0UjdkMFI4ZDY1NlI5ZDBSMTBkMTQ0UjExaTc2UjEyZDI4UjEzZDUxMlIxNGFpMWkzaTNpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJoZzoxODhvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTg4UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NzVvUjFkODgwUjJhZDQ4OGQxMDI0ZDMxNmQxMDI0ZDMxNmQxMDAwZDMyOGQxMDAwZDM1MmQxMDAwZDM1NmQ5ODRkMzYwZDk2OGQzNDRkOTQwZDIwOGQ2NDhkMTQ0ZDc0MGQxNDRkOTY4ZDE0NGQ5ODRkMTU0ZDk5MmQxNjRkMTAwMGQxODBkMTAwMGQyMDRkMTAwMGQyMDRkMTAyNGQyMGQxMDI0ZDIwZDEwMDBkNDRkMTAwMGQ2NGQxMDAwZDcyZDk5MmQ4MGQ5ODRkODBkOTY4ZDgwZDM5NmQ4MGQzODBkNzJkMzcyZDY0ZDM2NGQ0NGQzNjRkMjBkMzY0ZDIwZDM0MGQyMDRkMzQwZDIwNGQzNjRkMTgwZDM2NGQxNjRkMzY0ZDE1NGQzNzJkMTQ0ZDM4MGQxNDRkMzk2ZDE0NGQ2ODhkMzMyZDQyMGQzNTJkMzkyZDM0NGQzNzhkMzM2ZDM2NGQzMDhkMzY0ZDI5MmQzNjRkMjkyZDM0MGQ0NjRkMzQwZDQ2NGQzNjRkNDU2ZDM2NGQ0MzZkMzY0ZDQxNmQzNzZkMzk2ZDM4OGQzNzZkNDEyZDI0OGQ1ODhkNDIwZDk1NmQ0MzJkOTgwZDQ0NmQ5OTBkNDYwZDEwMDBkNDY4ZDEwMDBkNDg4ZDEwMDBkNDg4ZDEwMjRoUjNkNTEyUjRkNDg4UjVkMjBSNmQ2ODRSN2QwUjhkNjY0UjlkMFIxMGQxNDRSMTFpNzVSMTJkMjBSMTNkNTEyUjE0YWkxaTJpMmkyaTNpM2kyaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpM2kzaTJpMmhnOjE4N29SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxODdSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo3NG9SMWQ4ODBSMmFkMjkyZDQxNmQyOTJkMzg0ZDI4NmQzNzRkMjgwZDM2NGQyNTZkMzY0ZDE2MGQzNjRkMTYwZDM0MGQ0ODhkMzQwZDQ4OGQzNjRkMzkyZDM2NGQzNzZkMzY0ZDM2NmQzNzJkMzU2ZDM4MGQzNTZkMzk2ZDM1NmQ4MzZkMzU2ZDkyNGQzMDBkOTc0ZDI0NGQxMDI0ZDE3NmQxMDI0ZDExNmQxMDI0ZDg0ZDEwMDBkNTJkOTc2ZDUyZDk0NGQ1MmQ5MjBkNjZkOTA4ZDgwZDg5NmQ5NmQ4OTZkMTE2ZDg5NmQxMjhkOTEwZDE0MGQ5MjRkMTQwZDk0NGQxNDBkOTUyZDEzOGQ5NThkMTM2ZDk2NGQxMjhkOTcyZDEzNmQ5ODRkMTUyZDk5MGQxNjhkOTk2ZDE3NmQ5OTZkMjI4ZDk5NmQyNjBkOTYyZDI5MmQ5MjhkMjkyZDgzNmQyOTJkNDE2aFIzZDUxMlI0ZDQ4OFI1ZDUyUjZkNjg0UjdkMFI4ZDYzMlI5ZDBSMTBkMTQ0UjExaTc0UjEyZDUyUjEzZDUxMlIxNGFpMWkzaTNpMmkyaTJpMmkyaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaGc6MTg2b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE4NlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjczb1IxZDg4MFIyYWQ5MmQzNjRkOTJkMzQwZDQxMmQzNDBkNDEyZDM2NGQzMjBkMzY0ZDMwNGQzNjRkMjk0ZDM3MmQyODRkMzgwZDI4NGQzOTZkMjg0ZDk2OGQyODRkOTg0ZDI5NGQ5OTJkMzA0ZDEwMDBkMzIwZDEwMDBkNDEyZDEwMDBkNDEyZDEwMjRkOTJkMTAyNGQ5MmQxMDAwZDE4NGQxMDAwZDIwNGQxMDAwZDIxMmQ5OTJkMjIwZDk4NGQyMjBkOTY4ZDIyMGQzOTZkMjIwZDM4MGQyMTJkMzcyZDIwNGQzNjRkMTg0ZDM2NGQ5MmQzNjRoUjNkNTEyUjRkNDEyUjVkOTJSNmQ2ODRSN2QwUjhkNTkyUjlkMFIxMGQxNDRSMTFpNzNSMTJkOTJSMTNkNTEyUjE0YWkxaTJpMmkyaTJpM2kzaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkzaTNpMmhnOjE4NW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxODVSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo3Mm9SMWQ4ODBSMmFkNDMyZDk2OGQ0MzJkOTg0ZDQ0MmQ5OTJkNDUyZDEwMDBkNDY4ZDEwMDBkNDg4ZDEwMDBkNDg4ZDEwMjRkMzEyZDEwMjRkMzEyZDEwMDBkMzMyZDEwMDBkMzUyZDEwMDBkMzYwZDk5MmQzNjhkOTg0ZDM2OGQ5NjhkMzY4ZDY3NmQxMzJkNjc2ZDEzMmQ5NjhkMTMyZDk4NGQxNDJkOTkyZDE1MmQxMDAwZDE2OGQxMDAwZDE4OGQxMDAwZDE4OGQxMDI0ZDEyZDEwMjRkMTJkMTAwMGQzMmQxMDAwZDUyZDEwMDBkNjBkOTkyZDY4ZDk4NGQ2OGQ5NjhkNjhkMzk2ZDY4ZDM4MGQ2MGQzNzJkNTJkMzY0ZDMyZDM2NGQxNmQzNjRkMTZkMzQwZDE4NGQzNDBkMTg0ZDM2NGQxNjhkMzY0ZDE1MmQzNjRkMTQyZDM3MmQxMzJkMzgwZDEzMmQzOTZkMTMyZDY1MmQzNjhkNjUyZDM2OGQzOTZkMzY4ZDM4MGQzNjBkMzcyZDM1MmQzNjRkMzMyZDM2NGQzMTZkMzY0ZDMxNmQzNDBkNDg0ZDM0MGQ0ODRkMzY0ZDQ2OGQzNjRkNDUyZDM2NGQ0NDJkMzcyZDQzMmQzODBkNDMyZDM5NmQ0MzJkOTY4aFIzZDUxMlI0ZDQ4OFI1ZDEyUjZkNjg0UjdkMFI4ZDY3MlI5ZDBSMTBkMTQ0UjExaTcyUjEyZDEyUjEzZDUxMlIxNGFpMWkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJpMmkyaTNpM2kyaTJpMmkyaTJpM2kzaTJoZzoxODRvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTg0UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NzFvUjFkODgwUjJhZDI1NmQzNjBkMTk2ZDM2MGQxNDZkNDQyZDk2ZDUyNGQ5NmQ2OTJkOTZkODA0ZDEzNGQ5MDRkMTcyZDEwMDRkMjYwZDEwMDRkMzA0ZDEwMDRkMzMwZDk4NmQzNTZkOTY4ZDM2MGQ5MzJkMzYwZDc5NmQzNjBkNzcyZDM0OGQ3NjBkMzM2ZDc0OGQzMTJkNzQ4ZDI4OGQ3NDhkMjg4ZDcyNGQ0ODhkNzI0ZDQ4OGQ3NDhkNDY4ZDc0OGQ0NDhkNzQ4ZDQzNmQ3NjBkNDI0ZDc3MmQ0MjRkNzkyZDQyNGQ5OTJkNDE2ZDk4OGQ0MTBkOTg2ZDQwNGQ5ODRkMzk2ZDk4NGQzODhkOTg0ZDM4MGQ5ODZkMzcyZDk4OGQzNjRkOTk2ZDM0MGQxMDE2ZDMxNGQxMDI0ZDI4OGQxMDMyZDI1NmQxMDMyZDEzNmQxMDMyZDgwZDkyNmQyNGQ4MjBkMjRkNjkyZDI0ZDU0NGQ5MGQ0MzhkMTU2ZDMzMmQyNTZkMzMyZDI4MGQzMzJkMzEyZDM0NGQzNDRkMzU2ZDM1MmQzNTZkMzY0ZDM1NmQzNzZkMzUwZDM4OGQzNDRkMzk2ZDMzMmQ0MjhkNTEyZDQwNGQ1MjBkMzgwZDQzNmQzNDRkMzk4ZDMwOGQzNjBkMjU2ZDM2MGhSM2Q1MTJSNGQ0ODhSNWQyNFI2ZDY5MlI3ZC04UjhkNjY4UjlkMFIxMGQxNDRSMTFpNzFSMTJkMjRSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkyaTNpM2hnOjE4M29SMWQ4ODBSMmFkNDI0ZDU3NmQ0NjBkNTQwZDUxMmQ1NDBkNTY0ZDU0MGQ2MDBkNTc2ZDYyOGQ2MDhkNjI4ZDY1MmQ2MjhkNjk2ZDYwMGQ3MzJkNTY0ZDc2OGQ1MTJkNzY4ZDQ2MGQ3NjhkNDI0ZDczMmQzOTZkNjk2ZDM5NmQ2NTJkMzk2ZDYwOGQ0MjRkNTc2aFIzZDEwMjRSNGQ2MjhSNWQzOTZSNmQ0ODRSN2QyNTZSOGQ4OFI5ZDBSMTBkMTQ0UjExaTE4M1IxMmQzOTZSMTNkMTAyNFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNoZzo3MG9SMWQ4ODBSMmFkMjEyZDEwMDBkMjEyZDEwMjRkMjBkMTAyNGQyMGQxMDAwZDQ4ZDEwMDBkNjhkMTAwMGQ3NmQ5OTJkODRkOTg0ZDg0ZDk2OGQ4NGQzOTZkODRkMzgwZDc2ZDM3MmQ2OGQzNjRkNDhkMzY0ZDI0ZDM2NGQyNGQzNDBkNDQwZDM0MGQ0ODhkNDg0ZDQ2OGQ0OTJkNDM2ZDQyOGQzOTJkMzk2ZDM0OGQzNjRkMjk2ZDM2NGQxODRkMzY0ZDE2OGQzNjRkMTU4ZDM3MmQxNDhkMzgwZDE0OGQzOTZkMTQ4ZDY1MmQyODBkNjUyZDMyMGQ2NTJkMzM4ZDYzNGQzNTZkNjE2ZDM1NmQ1NzZkMzU2ZDU1NmQzODBkNTU2ZDM4MGQ3ODhkMzU2ZDc4OGQzNTZkNzcyZDM1NmQ3MjRkMzM4ZDcwMGQzMjBkNjc2ZDI4MGQ2NzZkMTQ4ZDY3NmQxNDhkOTY4ZDE0OGQ5ODRkMTU4ZDk5MmQxNjhkMTAwMGQxODRkMTAwMGQyMTJkMTAwMGhSM2Q1MTJSNGQ0ODhSNWQyMFI2ZDY4NFI3ZDBSOGQ2NjRSOWQwUjEwZDE0NFIxMWk3MFIxMmQyMFIxM2Q1MTJSMTRhaTFpMmkyaTJpMmkzaTNpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTNpM2kyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTNpM2kyaGc6MTgyb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE4MlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjY5b1IxZDg4MFIyYWQyOGQzNjRkMjhkMzQwZDQyMGQzNDBkNDY0ZDQ3NmQ0NDRkNDg0ZDQxMmQ0MjRkMzc2ZDM5NGQzNDBkMzY0ZDI5NmQzNjRkMTg0ZDM2NGQxNjhkMzY0ZDE1OGQzNzJkMTQ4ZDM4MGQxNDhkMzk2ZDE0OGQ2NDRkMjY0ZDY0NGQzMDRkNjQ0ZDMyMmQ2MjRkMzQwZDYwNGQzNDBkNTY0ZDM0MGQ1NDBkMzY0ZDU0MGQzNjRkNzc2ZDM0MGQ3NzZkMzQwZDc2MGQzNDBkNzE2ZDMyMmQ2OTJkMzA0ZDY2OGQyNjRkNjY4ZDE0OGQ2NjhkMTQ4ZDk2OGQxNDhkOTg0ZDE1OGQ5OTJkMTY4ZDEwMDBkMTg0ZDEwMDBkMjg4ZDEwMDBkMzQ4ZDEwMDBkMzkwZDk2NmQ0MzJkOTMyZDQ1NmQ4NjBkNDc2ZDg2OGQ0MzJkMTAyNGQyNGQxMDI0ZDI0ZDEwMDBkNDhkMTAwMGQ2OGQxMDAwZDc2ZDk5MmQ4NGQ5ODRkODRkOTY4ZDg0ZDM5NmQ4NGQzODBkNzZkMzcyZDY4ZDM2NGQ0OGQzNjRkMjhkMzY0aFIzZDUxMlI0ZDQ3NlI1ZDI0UjZkNjg0UjdkMFI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTY5UjEyZDI0UjEzZDUxMlIxNGFpMWkyaTJpMmkyaTNpM2kyaTNpM2kyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTNpM2kyaTNpM2kyaTJpMmkyaTJpM2kzaTJpM2kzaTJoZzoxODFvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTgxUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NjhvUjFkODgwUjJhZDM5NmQ2NzZkMzk2ZDUwNGQzNDRkNDM0ZDI5MmQzNjRkMjAwZDM2NGQxNzJkMzY0ZDE1OGQzNzJkMTQ0ZDM4MGQxNDRkMzk2ZDE0NGQ5NjhkMTQ0ZDk4NGQxNTZkOTkyZDE2OGQxMDAwZDE4OGQxMDAwZDI3NmQxMDAwZDMzNmQ5MzRkMzk2ZDg2OGQzOTZkNjc2ZDgwZDM5NmQ4MGQzODBkNzJkMzcyZDY0ZDM2NGQ0NGQzNjRkMjBkMzY0ZDIwZDM0MGQyMDBkMzQwZDMyNGQzNDBkMzk4ZDQyMGQ0NzJkNTAwZDQ3MmQ2NjhkNDcyZDg1MmQ0MDBkOTM4ZDMyOGQxMDI0ZDE4OGQxMDI0ZDE2ZDEwMjRkMTZkMTAwMGQ0NGQxMDAwZDY0ZDEwMDBkNzJkOTkyZDgwZDk4NGQ4MGQ5NjhkODBkMzk2aFIzZDUxMlI0ZDQ3MlI1ZDE2UjZkNjg0UjdkMFI4ZDY2OFI5ZDBSMTBkMTQ0UjExaTY4UjEyZDE2UjEzZDUxMlIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kxaTNpM2kyaTJpMmkzaTNpM2kzaTJpMmkyaTNpM2kyaGc6MTgwb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE4MFIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjY3b1IxZDg4MFIyYWQyNzJkMTAzNmQxNjBkMTAzNmQ5NGQ5NTJkMjhkODY4ZDI4ZDY4OGQyOGQ1MzZkOThkNDM2ZDE2OGQzMzZkMjg4ZDMzNmQzMTZkMzM2ZDM0NGQzNDZkMzcyZDM1NmQzOTJkMzU2ZDQwOGQzNTZkNDE4ZDM1MmQ0MjhkMzQ4ZDQzNmQzMzZkNDcyZDUxMmQ0NDhkNTIwZDQyNGQ0NDRkMzg0ZDQwNGQzNDRkMzY0ZDI4MGQzNjRkMTk2ZDM2NGQxNTBkNDU2ZDEwNGQ1NDhkMTA0ZDY4NGQxMDRkODMyZDE0NGQ5MTZkMTg0ZDEwMDBkMjc2ZDEwMDBkMzQwZDEwMDBkMzg2ZDk1NGQ0MzJkOTA4ZDQ0OGQ4MzJkNDcyZDg0NGQ0NTJkOTI4ZDM5OGQ5ODJkMzQ0ZDEwMzZkMjcyZDEwMzZoUjNkNTEyUjRkNDcyUjVkMjhSNmQ2ODhSN2QtMTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWk2N1IxMmQyOFIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTJpMmkzaTNpM2kzaTNpM2kzaTNpMmkzaTNoZzoxNzlvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTc5UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NjZvUjFkODgwUjJhZDEyZDEwMjRkMTJkMTAwMGQ0NGQxMDAwZDY0ZDEwMDBkNzJkOTkyZDgwZDk4NGQ4MGQ5NjhkODBkMzk2ZDgwZDM4MGQ3MmQzNzJkNjRkMzY0ZDQ0ZDM2NGQyMGQzNjRkMjBkMzQwZDI1MmQzNDBkMzQ4ZDM0MGQzOTRkMzc4ZDQ0MGQ0MTZkNDQwZDQ5NmQ0NDBkNTUyZDQxNmQ1ODhkMzkyZDYyNGQzMTZkNjUyZDQwOGQ2ODBkNDQwZDczMmQ0NzJkNzg0ZDQ3MmQ4NDhkNDcyZDkyOGQ0MTZkOTc2ZDM2MGQxMDI0ZDI2NGQxMDI0ZDEyZDEwMjRkMjUyZDEwMDBkMzIwZDEwMDBkMzU4ZDk1OGQzOTZkOTE2ZDM5NmQ4NDBkMzk2ZDc1MmQzNTZkNzEwZDMxNmQ2NjhkMjM2ZDY2OGQxNDRkNjY4ZDE0NGQ5NjhkMTQ0ZDk4NGQxNTRkOTkyZDE2NGQxMDAwZDE4MGQxMDAwZDI1MmQxMDAwZDM3MmQ0OTZkMzcyZDQyNGQzMzJkMzk0ZDI5MmQzNjRkMjI4ZDM2NGQxODBkMzY0ZDE2NGQzNjRkMTU0ZDM3MmQxNDRkMzgwZDE0NGQzOTZkMTQ0ZDY0NGQyNDhkNjQ0ZDI5MmQ2NDRkMzMyZDYwOGQzNzJkNTcyZDM3MmQ0OTZoUjNkNTEyUjRkNDcyUjVkMTJSNmQ2ODRSN2QwUjhkNjcyUjlkMFIxMGQxNDRSMTFpNjZSMTJkMTJSMTNkNTEyUjE0YWkxaTJpMmkzaTNpMmkzaTNpMmkyaTJpM2kzaTNpM2kzaTNpM2kzaTJpMWkzaTNpM2kzaTJpMmkzaTNpMmkxaTNpM2kyaTNpM2kyaTJpM2kzaGc6MTc4b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE3OFIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjY1b1IxZDg4MFIyYWQzMjBkNzY4ZDE0MGQ3NjhkMTA0ZDkyMGQ5NmQ5NTZkMTA0ZDk3OGQxMTJkMTAwMGQxNDBkMTAwMGQxNTJkMTAwMGQxNTJkMTAyNGQ0ZDEwMjRkNGQxMDAwZDE2ZDEwMDBkMzJkMTAwMGQ0NGQ5OTBkNTZkOTgwZDYwZDk1NmQyMTZkMzQ0ZDI3NmQzMjRkNDI4ZDk1NmQ0MzZkOTgwZDQ0OGQ5OTBkNDYwZDEwMDBkNDc2ZDEwMDBkNDg4ZDEwMDBkNDg4ZDEwMjRkMzE2ZDEwMjRkMzE2ZDEwMDBkMzMyZDEwMDBkMzU2ZDEwMDBkMzYyZDk4NmQzNjhkOTcyZDM2MGQ5NDRkMzIwZDc2OGQyMzZkNDEyZDIzMmQ0MTJkMTQ4ZDc0NGQzMTZkNzQ0ZDIzNmQ0MTJoUjNkNTEyUjRkNDg4UjVkNFI2ZDcwMFI3ZDBSOGQ2OTZSOWQwUjEwZDE0NFIxMWk2NVIxMmQ0UjEzZDUxMlIxNGFpMWkyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkxaTJpMmkyaTJoZzoxNzdvUjFkODgwUjJhZDg2MGQxMDEyZDg2MGQxMDYwZDE2MGQxMDYwZDE2MGQxMDEyZDg2MGQxMDEyZDUyOGQyODhkNTI4ZDYwNGQ4NjBkNjA0ZDg2MGQ2NTJkNTI4ZDY1MmQ1MjhkOTI4ZDQ4MGQ5MjhkNDgwZDY1MmQxNjBkNjUyZDE2MGQ2MDRkNDgwZDYwNGQ0ODBkMjg4ZDUyOGQyODhoUjNkMTAyNFI0ZDg2MFI1ZDE2MFI2ZDczNlI3ZC0zNlI4ZDU3NlI5ZDBSMTBkMTQ0UjExaTE3N1IxMmQxNjBSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmkyaTJpMmkyaTJpMmkyaTJoZzo2NG9SMWQ4ODBSMmFkMjE2ZDg3MmQxOTJkODcyZDE3MGQ4NDBkMTQ4ZDgwOGQxNDhkNzQ0ZDE0OGQ2NTZkMTk2ZDU1OGQyNDRkNDYwZDMwNGQ0NjBkMzIwZDQ2MGQzMzBkNDY4ZDM0MGQ0NzZkMzQ0ZDQ5MmQzNTJkNDU2ZDM5NmQ0NTZkMzYwZDcwOGQzNTZkNzQwZDM1MmQ3NjRkMzQ4ZDc4OGQzNDhkODAwZDM0OGQ4MTZkMzU0ZDgyNGQzNjBkODMyZDM2OGQ4MzJkNDAwZDgzMmQ0MjRkNzc2ZDQ0OGQ3MjBkNDQ4ZDYyNGQ0NDhkNDY0ZDM5NGQ0MTJkMzQwZDM2MGQyODBkMzYwZDIwOGQzNjBkMTUwZDQzNGQ5MmQ1MDhkOTJkNjg4ZDkyZDg0NGQxNDBkOTIyZDE4OGQxMDAwZDI2OGQxMDAwZDMyOGQxMDAwZDM3NGQ5NjhkNDIwZDkzNmQ0NTJkODcyZDQ4MGQ4ODBkNDQwZDk2MGQzODhkOTk2ZDMzNmQxMDMyZDI2OGQxMDMyZDE2NGQxMDMyZDEwMGQ5MzRkMzZkODM2ZDM2ZDY4OGQzNmQ1MjRkMTA4ZDQyOGQxODBkMzMyZDI4MGQzMzJkMzY0ZDMzMmQ0MjRkNDAwZDQ4NGQ0NjhkNDg0ZDYyMGQ0ODRkNzQwZDQ0NGQ4MDZkNDA0ZDg3MmQzNTZkODcyZDMzNmQ4NzJkMzIyZDg1NmQzMDhkODQwZDMwNGQ4MDRkMjg4ZDg0MGQyNjZkODU2ZDI0NGQ4NzJkMjE2ZDg3MmQyMzJkODQwZDI1NmQ4NDBkMjc2ZDgxMmQyOTZkNzg0ZDMwOGQ3MjhkMzM2ZDUzMmQzNDBkNTA4ZDMzMGQ0OTZkMzIwZDQ4NGQzMDRkNDg0ZDI3NmQ0ODRkMjM4ZDU2NmQyMDBkNjQ4ZDIwMGQ3NzJkMjAwZDgwOGQyMDhkODI0ZDIxNmQ4NDBkMjMyZDg0MGhSM2Q1MTJSNGQ0ODRSNWQzNlI2ZDY5MlI3ZC04UjhkNjU2UjlkMFIxMGQxNDRSMTFpNjRSMTJkMzZSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTJpMmkyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kyaTNpM2kzaTNpM2kzaGc6MTc2b1IxZDg4MFIyYWQxNjRkMzM2ZDIwMGQzMDBkMjUyZDMwMGQzMDRkMzAwZDM0MGQzMzZkMzY4ZDM2OGQzNjhkNDEyZDM2OGQ0NTZkMzQwZDQ5MmQzMDRkNTI4ZDI1MmQ1MjhkMjAwZDUyOGQxNjRkNDkyZDEzNmQ0NTZkMTM2ZDQxMmQxMzZkMzY4ZDE2NGQzMzZkMTcyZDQxMmQxNzJkNDQ0ZDE5MmQ0NjhkMjE2ZDQ5MmQyNTJkNDkyZDI4OGQ0OTJkMzEyZDQ2OGQzMzJkNDQ0ZDMzMmQ0MTJkMzMyZDM4NGQzMTJkMzYwZDI4OGQzMzZkMjUyZDMzNmQyMTZkMzM2ZDE5MmQzNjBkMTcyZDM4NGQxNzJkNDEyaFIzZDEwMjRSNGQzNjhSNWQxMzZSNmQ3MjRSN2Q0OTZSOGQ1ODhSOWQwUjEwZDE0NFIxMWkxNzZSMTJkMTM2UjEzZDEwMjRSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaGc6NjNvUjFkODgwUjJhZDEwNGQ1ODRkODBkNTg0ZDY0ZDU2OGQ0OGQ1NTJkNDhkNTA4ZDQ4ZDQzNmQxMDhkMzc4ZDE2OGQzMjBkMjU2ZDMyMGQzNDRkMzIwZDQwMGQzNzJkNDU2ZDQyNGQ0NTZkNTA4ZDQ1NmQ1NTJkNDQwZDU5MGQ0MjRkNjI4ZDM2OGQ2NjBkMzA4ZDY5NmQyODJkNzE4ZDI1NmQ3NDBkMjU2ZDc4NGQyNTZkODU2ZDIyNGQ4NTZkMjI0ZDc3NmQyMjRkNzMyZDIzOGQ3MDZkMjUyZDY4MGQyODhkNjU2ZDM0OGQ2MTZkMzY2ZDU4NGQzODRkNTUyZDM4NGQ1MDRkMzg0ZDQyOGQzNTBkMzkyZDMxNmQzNTZkMjQ4ZDM1NmQxNzZkMzU2ZDEzNmQzOTRkOTZkNDMyZDk2ZDQ2OGQ5NmQ0ODBkMTAyZDQ4NmQxMDhkNDkyZDEyMGQ1MDBkMTM2ZDUwOGQxNDJkNTIwZDE0OGQ1MzJkMTQ4ZDU0OGQxNDhkNTY4ZDEzNmQ1NzZkMTI0ZDU4NGQxMDRkNTg0ZDMwMGQ5ODBkMzAwZDEwMDRkMjg0ZDEwMjBkMjY4ZDEwMzZkMjQ0ZDEwMzZkMjIwZDEwMzZkMjA0ZDEwMjBkMTg4ZDEwMDRkMTg4ZDk4MGQxODhkOTU2ZDIwNGQ5NDBkMjIwZDkyNGQyNDRkOTI0ZDI2OGQ5MjRkMjg0ZDk0MGQzMDBkOTU2ZDMwMGQ5ODBoUjNkNTEyUjRkNDU2UjVkNDhSNmQ3MDRSN2QtMTJSOGQ2NTZSOWQwUjEwZDE0NFIxMWk2M1IxMmQ0OFIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTJpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNoZzoxNzVvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTc1UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NjJvUjFkODgwUjJhZDQ0NGQ2NzJkODhkMTAyOGQ2NGQxMDA0ZDM5NmQ2NzJkNjRkMzQwZDg4ZDMxNmQ0NDRkNjcyaFIzZDUxMlI0ZDQ0NFI1ZDY0UjZkNzA4UjdkLTRSOGQ2NDRSOWQwUjEwZDE0NFIxMWk2MlIxMmQ2NFIxM2Q1MTJSMTRhaTFpMmkyaTJpMmkyaTJoZzoxNzRvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTc0UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NjFvUjFkODgwUjJhZDI4ZDU4OGQyOGQ1NTJkNDcyZDU1MmQ0NzJkNTg4ZDI4ZDU4OGQyOGQ3OTJkMjhkNzU2ZDQ3MmQ3NTZkNDcyZDc5MmQyOGQ3OTJoUjNkNTEyUjRkNDcyUjVkMjhSNmQ0NzJSN2QyMzJSOGQ0NDRSOWQwUjEwZDE0NFIxMWk2MVIxMmQyOFIxM2Q1MTJSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxNzNvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTczUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NjBvUjFkODgwUjJhZDYwZDY3MmQ0MTZkMzE2ZDQ0MGQzNDBkMTA4ZDY3MmQ0NDBkMTAwNGQ0MTZkMTAyOGQ2MGQ2NzJoUjNkNTEyUjRkNDQwUjVkNjBSNmQ3MDhSN2QtNFI4ZDY0OFI5ZDBSMTBkMTQ0UjExaTYwUjEyZDYwUjEzZDUxMlIxNGFpMWkyaTJpMmkyaTJpMmhnOjE3Mm9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNzJSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo1OW9SMWQ4ODBSMmFkMjU2ZDcwMGQyNTZkNzI0ZDI0MGQ3NDBkMjI0ZDc1NmQyMDBkNzU2ZDE3NmQ3NTZkMTYwZDc0MGQxNDRkNzI0ZDE0NGQ3MDBkMTQ0ZDY3NmQxNjBkNjYwZDE3NmQ2NDRkMjAwZDY0NGQyMjRkNjQ0ZDI0MGQ2NjBkMjU2ZDY3NmQyNTZkNzAwZDE3MGQxMDAwZDE1MmQ5OTJkMTQ2ZDk3NGQxNDBkOTU2ZDE0MGQ5NDJkMTQwZDkyOGQxNTBkOTE0ZDE2MGQ5MDBkMTc2ZDg5NGQxOTJkODg4ZDIxOGQ4OTZkMjQ0ZDkwNGQyNTJkOTMyZDI2MGQ5NjBkMjU2ZDk4NmQyNTJkMTAxMmQyNDBkMTAzNmQyMjhkMTA2MGQyMDZkMTA3OGQxODRkMTA5NmQxNjBkMTEwOGQxNDhkMTA5MmQxNzJkMTA3NmQxODZkMTA1OGQyMDBkMTA0MGQyMDhkMTAwMGQxODhkMTAwOGQxNzBkMTAwMGhSM2Q1MTJSNGQyNjBSNWQxNDBSNmQzODBSN2QtODRSOGQyNDBSOWQwUjEwZDE0NFIxMWk1OVIxMmQxNDBSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2hnOjE3MW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNzFSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo1OG9SMWQ4ODBSMmFkMjU2ZDk4MGQyNTZkMTAwNGQyNDBkMTAyMGQyMjRkMTAzNmQyMDBkMTAzNmQxNzZkMTAzNmQxNjBkMTAyMGQxNDRkMTAwNGQxNDRkOTgwZDE0NGQ5NTZkMTYwZDk0MGQxNzZkOTI0ZDIwMGQ5MjRkMjI0ZDkyNGQyNDBkOTQwZDI1NmQ5NTZkMjU2ZDk4MGQyNTZkNzAwZDI1NmQ3MjRkMjQwZDc0MGQyMjRkNzU2ZDIwMGQ3NTZkMTc2ZDc1NmQxNjBkNzQwZDE0NGQ3MjRkMTQ0ZDcwMGQxNDRkNjc2ZDE2MGQ2NjBkMTc2ZDY0NGQyMDBkNjQ0ZDIyNGQ2NDRkMjQwZDY2MGQyNTZkNjc2ZDI1NmQ3MDBoUjNkNTEyUjRkMjU2UjVkMTQ0UjZkMzgwUjdkLTEyUjhkMjM2UjlkMFIxMGQxNDRSMTFpNThSMTJkMTQ0UjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNoZzoxNzBvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTcwUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NTdvUjFkODgwUjJhZDEwOGQ1NTJkMTA4ZDY0MGQxNDJkNjg2ZDE3NmQ3MzJkMjI4ZDczMmQyODhkNzMyZDMzMmQ2NzZkMzc2ZDYyMGQzNzZkNTcyZDM3NmQ0NzZkMzQ0ZDQxOGQzMTJkMzYwZDI0MGQzNjBkMTcyZDM2MGQxNDBkNDE0ZDEwOGQ0NjhkMTA4ZDU1MmQyMTZkNzY4ZDEzNmQ3NjhkODhkNzE4ZDQwZDY2OGQ0MGQ1NTZkNDBkNDYwZDkyZDM5NmQxNDRkMzMyZDI0MGQzMzJkMzQwZDMzMmQzOTZkNDEyZDQ1MmQ0OTJkNDUyZDY0NGQ0NTJkODEyZDM4NmQ5MjJkMzIwZDEwMzJkMjA0ZDEwMzJkMTUyZDEwMzJkMTE0ZDEwMDhkNzZkOTg0ZDc2ZDk0NGQ3NmQ5MjhkODZkOTEyZDk2ZDg5NmQxMjBkODk2ZDE0NGQ4OTZkMTUyZDkxNGQxNjBkOTMyZDE2MGQ5NTZkMTYwZDk3MmQxNjRkOTgyZDE2OGQ5OTJkMTcyZDk5NmQxNzZkMTAwMGQxODZkMTAwMmQxOTZkMTAwNGQyMDhkMTAwNGQyODBkMTAwNGQzMjRkOTI0ZDM2OGQ4NDRkMzc2ZDY1NmQzNTZkNzA0ZDMxNmQ3MzZkMjc2ZDc2OGQyMTZkNzY4aFIzZDUxMlI0ZDQ1MlI1ZDQwUjZkNjkyUjdkLThSOGQ2NTJSOWQwUjEwZDE0NFIxMWk1N1IxMmQ0MFIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjE2OW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNjlSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo1Nm9SMWQ4ODBSMmFkOTZkODYwZDk2ZDkyNGQxMzhkOTY0ZDE4MGQxMDA0ZDI0NGQxMDA0ZDMyMGQxMDA0ZDM1NGQ5NjRkMzg4ZDkyNGQzODhkODY0ZDM4OGQ4MTJkMzQwZDc2NGQyOTJkNzE2ZDE5NmQ2NzZkMTQ4ZDcwOGQxMjJkNzU2ZDk2ZDgwNGQ5NmQ4NjBkNDQ4ZDg1MmQ0NDhkOTI4ZDM5MmQ5ODBkMzM2ZDEwMzJkMjQ0ZDEwMzJkMTYwZDEwMzJkMTAwZDk4MGQ0MGQ5MjhkNDBkODYwZDQwZDc5MmQ3NGQ3NDRkMTA4ZDY5NmQxNzJkNjYwZDExNmQ2MzJkODZkNTkwZDU2ZDU0OGQ1NmQ0OTZkNTZkNDI4ZDEwOGQzODBkMTYwZDMzMmQyNTJkMzMyZDMzNmQzMzJkMzg4ZDM4MGQ0NDBkNDI4ZDQ0MGQ0OTZkNDQwZDU0NGQ0MTBkNTg2ZDM4MGQ2MjhkMzE2ZDY2MGQzODRkNzAwZDQxNmQ3NDhkNDQ4ZDc5NmQ0NDhkODUyZDM4NGQ1MDBkMzg0ZDQ0NGQzNTJkNDAyZDMyMGQzNjBkMjUyZDM2MGQxNzZkMzYwZDE0NGQ0MDBkMTEyZDQ0MGQxMTJkNDg0ZDExMmQ1MjhkMTU4ZDU3MGQyMDRkNjEyZDI4OGQ2NDRkMzM2ZDYyMGQzNjBkNTg0ZDM4NGQ1NDhkMzg0ZDUwMGhSM2Q1MTJSNGQ0NDhSNWQ0MFI2ZDY5MlI3ZC04UjhkNjUyUjlkMFIxMGQxNDRSMTFpNTZSMTJkNDBSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNoZzoxNjhvUjFkODgwUjJhZDQyNGQzNzZkNDI0ZDQwMGQ0MDhkNDE2ZDM5MmQ0MzJkMzY4ZDQzMmQzNDRkNDMyZDMyOGQ0MTZkMzEyZDQwMGQzMTJkMzc2ZDMxMmQzNTJkMzI4ZDMzNmQzNDRkMzIwZDM2OGQzMjBkMzkyZDMyMGQ0MDhkMzM2ZDQyNGQzNTJkNDI0ZDM3NmQ3MTJkMzc2ZDcxMmQ0MDBkNjk2ZDQxNmQ2ODBkNDMyZDY1NmQ0MzJkNjMyZDQzMmQ2MTZkNDE2ZDYwMGQ0MDBkNjAwZDM3NmQ2MDBkMzUyZDYxNmQzMzZkNjMyZDMyMGQ2NTZkMzIwZDY4MGQzMjBkNjk2ZDMzNmQ3MTJkMzUyZDcxMmQzNzZoUjNkMTAyNFI0ZDcxMlI1ZDMxMlI2ZDcwNFI3ZDU5MlI4ZDM5MlI5ZDBSMTBkMTQ0UjExaTE2OFIxMmQzMTJSMTNkMTAyNFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNoZzo1NW9SMWQ4ODBSMmFkNDQ4ZDM2OGQzNjRkNTA0ZDMxNGQ2MzRkMjY0ZDc2NGQyNjRkODYwZDI2NGQ4NzZkMjY2ZDkwNmQyNjhkOTM2ZDI2OGQ5NzZkMjY4ZDEwMDhkMjU4ZDEwMjBkMjQ4ZDEwMzJkMjI0ZDEwMzJkMjA0ZDEwMzJkMTkwZDEwMThkMTc2ZDEwMDRkMTc2ZDk2OGQxNzZkODkyZDIxMGQ3ODBkMjQ0ZDY2OGQzOTJkNDAwZDE5MmQ0MDBkMTQ4ZDQwMGQxMjJkNDI4ZDk2ZDQ1NmQ4NGQ1MTJkNjBkNTA4ZDg4ZDM0MGQ0NDhkMzQwZDQ0OGQzNjhoUjNkNTEyUjRkNDQ4UjVkNjBSNmQ2ODRSN2QtOFI4ZDYyNFI5ZDBSMTBkMTQ0UjExaTU1UjEyZDYwUjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTJpMmkyaTJoZzoxNjdvUjFkODgwUjJhZDM3OGQzODhkMzcyZDM0MGQzOTBkMzA2ZDQwOGQyNzJkNDU2ZDI1OGQ1MDRkMjQ0ZDU2MGQyNTJkNjE2ZDI2MGQ2NDZkMjgyZDY3NmQzMDRkNjc4ZDMyNGQ2ODBkMzQ0ZDY3MGQzNTZkNjYwZDM2OGQ2NDZkMzcyZDYzMmQzNzZkNjE4ZDM2OGQ2MDRkMzYwZDYwMGQzNDhkNTk2ZDMzNmQ2MDBkMzI2ZDYwNGQzMTZkNTk4ZDMwMmQ1OTJkMjg4ZDU0OGQyODBkNTA0ZDI3MmQ0NjJkMjkyZDQyMGQzMTJkNDIyZDM1MmQ0MjRkMzkyZDQ5NmQ0NTRkNTY4ZDUxNmQ2MTBkNTU0ZDY1MmQ1OTJkNjc4ZDY0MmQ3MDRkNjkyZDY5OGQ3NDBkNjkyZDc4OGQ2NTJkODE4ZDYxMmQ4NDhkNTQ4ZDg0NGQ2NTZkOTQ0ZDY1OGQ5OTZkNjYwZDEwNDhkNjIwZDEwNzhkNTgwZDExMDhkNDk0ZDExMDRkNDA4ZDExMDBkMzc2ZDEwNzZkMzQ0ZDEwNTJkMzQyZDEwMjRkMzQwZDk5NmQzNTZkOTgyZDM3MmQ5NjhkMzg4ZDk3MmQ0MDRkOTc2ZDQxNGQ5ODhkNDI0ZDEwMDBkNDI0ZDEwMDhkNDI0ZDEwMTZkNDE2ZDEwMzBkNDA4ZDEwNDRkNDIwZDEwNTZkNDMyZDEwNjhkNDY4ZDEwNzRkNTA0ZDEwODBkNTQ4ZDEwNjZkNTkyZDEwNTJkNTkwZDEwMThkNTg4ZDk4NGQ1MDZkOTA0ZDQyNGQ4MjRkMzcwZDc0NGQzMTZkNjY0ZDM0NmQ2MDZkMzc2ZDU0OGQ0OTJkNTQ0ZDM4NGQ0MzZkMzc4ZDM4OGQ2MDZkODAwZDYyOGQ3ODBkNjMyZDc1MmQ2MzZkNzI0ZDYxMGQ2NzRkNTg0ZDYyNGQ1MTZkNTcyZDQ2NGQ1NjhkNDMwZDU4MGQzOTZkNTkyZDM4NmQ2MjBkMzc2ZDY0OGQ0MzBkNzEwZDQ4NGQ3NzJkNTI4ZDgyMGQ1ODRkODIwZDYwNmQ4MDBoUjNkMTAyNFI0ZDcwNFI1ZDMxNlI2ZDc4MFI3ZC04NFI4ZDQ2NFI5ZDBSMTBkMTQ0UjExaTE2N1IxMmQzMTZSMTNkMTAyNFIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2hnOjU0b1IxZDg4MFIyYWQxMjBkNzUyZDEyMGQ4NzJkMTYyZDkzOGQyMDRkMTAwNGQyNjRkMTAwNGQzMjRkMTAwNGQzNTZkOTYwZDM4OGQ5MTZkMzg4ZDc5NmQzODhkNzE2ZDM1NGQ2NzJkMzIwZDYyOGQyNzJkNjI4ZDIyOGQ2MjhkMTkwZDY1NGQxNTJkNjgwZDEyMGQ3NTJkMjc2ZDU4OGQzNzJkNTg4ZDQxNGQ2NTJkNDU2ZDcxNmQ0NTZkNzk2ZDQ1NmQ5MTZkMzk4ZDk3NGQzNDBkMTAzMmQyNjRkMTAzMmQxNTZkMTAzMmQxMDBkOTUwZDQ0ZDg2OGQ0NGQ3MTJkNDRkNTI4ZDExMmQ0MzBkMTgwZDMzMmQyOTZkMzMyZDM1MmQzMzJkMzg2ZDM2NGQ0MjBkMzk2ZDQyMGQ0MjBkNDIwZDQ0NGQ0MTBkNDU2ZDQwMGQ0NjhkMzc2ZDQ2OGQzNTZkNDY4ZDM0NmQ0NThkMzM2ZDQ0OGQzMzZkNDI4ZDMzNmQ0MjBkMzM4ZDQxMmQzNDBkNDA0ZDM0MGQzOTZkMzQwZDM4MGQzMjhkMzcwZDMxNmQzNjBkMjg0ZDM2MGQyMTZkMzYwZDE2OGQ0MjJkMTIwZDQ4NGQxMjBkNjkyZDE0NGQ2NDBkMTg2ZDYxNGQyMjhkNTg4ZDI3NmQ1ODhoUjNkNTEyUjRkNDU2UjVkNDRSNmQ2OTJSN2QtOFI4ZDY0OFI5ZDBSMTBkMTQ0UjExaTU0UjEyZDQ0UjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaGc6MTY2b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE2NlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjUzb1IxZDg4MFIyYWQyNzJkNTg0ZDM0OGQ1ODRkMzk2ZDY0MmQ0NDRkNzAwZDQ0NGQ3OTZkNDQ0ZDkwNGQzOTRkOTY4ZDM0NGQxMDMyZDI0MGQxMDMyZDE2OGQxMDMyZDExMmQ5OTBkNTZkOTQ4ZDU2ZDg4OGQ1NmQ4NjRkNzBkODQ2ZDg0ZDgyOGQxMDhkODI4ZDEzMmQ4MjhkMTQwZDg0NGQxNDhkODYwZDE0OGQ4NzJkMTQ4ZDg5NmQxMzZkOTEwZDEyNGQ5MjRkMTI0ZDk0MGQxMjRkOTcyZDE2MmQ5ODhkMjAwZDEwMDRkMjQ0ZDEwMDRkMzA4ZDEwMDRkMzQyZDk1MmQzNzZkOTAwZDM3NmQ4MDRkMzc2ZDcyNGQzNDZkNjc0ZDMxNmQ2MjRkMjU2ZDYyNGQyMTJkNjI0ZDE4MGQ2NDBkMTQ4ZDY1NmQxMjBkNzA4ZDg0ZDcwNGQxMDRkMzQwZDQzMmQzNDBkNDIwZDQwMGQxMzJkNDAwZDExNmQ2NjRkMTU2ZDYwOGQxOTRkNTk2ZDIzMmQ1ODRkMjcyZDU4NGhSM2Q1MTJSNGQ0NDRSNWQ1NlI2ZDY4NFI3ZC04UjhkNjI4UjlkMFIxMGQxNDRSMTFpNTNSMTJkNTZSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTJpMmkyaTJpMmkzaTNoZzoxNjVvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTY1UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NTJvUjFkODgwUjJhZDM2NGQ5NDhkMzY0ZDk3NmQzODBkOTg4ZDM5NmQxMDAwZDQyNGQxMDAwZDQ2MGQxMDAwZDQ2MGQxMDI0ZDE5NmQxMDI0ZDE5NmQxMDAwZDI0MGQxMDAwZDI3MmQxMDAwZDI4NmQ5ODhkMzAwZDk3NmQzMDBkOTQ4ZDMwMGQ4MTZkMzJkODE2ZDMyZDc5NmQzMjRkMzMyZDM2NGQzMzJkMzY0ZDc5MmQ0NzJkNzkyZDQ3MmQ4MTZkMzY0ZDgxNmQzNjRkOTQ4ZDI5NmQ0MzJkNjhkNzkyZDMwMGQ3OTJkMzAwZDQzMmQyOTZkNDMyaFIzZDUxMlI0ZDQ3MlI1ZDMyUjZkNjkyUjdkMFI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTUyUjEyZDMyUjEzZDUxMlIxNGFpMWkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpMmkyaTJpMmkyaTJpMmkyaTFpMmkyaTJpMmhnOjE2NG9SMWQ4ODBSMmFkNDg0ZDEwNDZkMzQ0ZDEwNDBkMjUyZDk2MGQxMzJkMTA4MGQ5NmQxMDQ4ZDIyMGQ5MjRkMTMyZDgxNmQxMjhkNjc2ZDEyNGQ1MzZkMjI0ZDQyNGQ5NmQyOTZkMTI4ZDI2MGQyNTZkMzg4ZDM1NmQzMDBkNTA2ZDMwMGQ2NTZkMzAwZDc2MGQzODhkODkyZDI1NmQ5MjhkMjkyZDc5NmQ0MjRkODkyZDU0MGQ4ODZkNjg0ZDg4MGQ4MjhkNzk2ZDkyNGQ5MTZkMTA0NGQ4ODBkMTA4MGQ3NjBkOTYwZDYyNGQxMDUyZDQ4NGQxMDQ2ZDgzNGQ2ODJkODQwZDU2MGQ3NTRkNDU2ZDY2OGQzNTJkNTA2ZDM1MmQzNDRkMzUyZDI2MmQ0NTZkMTgwZDU2MGQxODBkNjc0ZDE4MGQ3ODhkMjQ0ZDg3MmQzMDhkOTU2ZDM5NGQ5ODRkNDgwZDEwMTJkNTg2ZDk4OGQ2OTJkOTY0ZDc2MGQ4ODRkODI4ZDgwNGQ4MzRkNjgyaFIzZDEwMjRSNGQ5MjhSNWQ5NlI2ZDc2OFI3ZC01NlI4ZDY3MlI5ZDBSMTBkMTQ0UjExaTE2NFIxMmQ5NlIxM2QxMDI0UjE0YWkxaTNpMmkyaTJpM2kzaTJpMmkyaTNpM2kyaTJpMmkzaTNpMmkyaTJpM2kxaTNpM2kzaTNpM2kzaTNpM2kzaGc6NTFvUjFkODgwUjJhZDQ0NGQ4NDBkNDQ0ZDkxNmQzODhkOTc0ZDMzMmQxMDMyZDIzMmQxMDMyZDE2MGQxMDMyZDEwOGQ5OTJkNTZkOTUyZDU2ZDkwMGQ1NmQ4NzZkNzJkODU4ZDg4ZDg0MGQxMDRkODQwZDEyOGQ4NDBkMTM4ZDg1OGQxNDhkODc2ZDE0OGQ4ODhkMTQ4ZDkwOGQxNDBkOTIyZDEzMmQ5MzZkMTMyZDk0OGQxMzJkOTcyZDE2MmQ5ODhkMTkyZDEwMDRkMjI4ZDEwMDRkMzAwZDEwMDRkMzM2ZDk2MmQzNzJkOTIwZDM3MmQ4MzJkMzcyZDc2MGQzMzRkNzE2ZDI5NmQ2NzJkMTkyZDY3MmQxOTJkNjQ0ZDI3MmQ2NDRkMzEwZDYwNmQzNDhkNTY4ZDM0OGQ1MDBkMzQ4ZDQ0NGQzMThkNDAyZDI4OGQzNjBkMjI0ZDM2MGQxOTZkMzYwZDE2NGQzNzRkMTMyZDM4OGQxMzJkNDIwZDEzMmQ0NTJkMTQwZDQ2MGQxNDhkNDY4ZDE0OGQ0ODBkMTQ4ZDUwMGQxNDBkNTEyZDEzMmQ1MjRkMTEyZDUyNGQ5NmQ1MjRkODJkNTEyZDY4ZDUwMGQ2OGQ0NjhkNjhkNDA4ZDEyMGQzNzBkMTcyZDMzMmQyNDBkMzMyZDMyMGQzMzJkMzY4ZDM4MmQ0MTZkNDMyZDQxNmQ0ODhkNDE2ZDU0OGQzODZkNTkwZDM1NmQ2MzJkMjkyZDY1MmQzODBkNjg0ZDQxMmQ3MzZkNDQ0ZDc4OGQ0NDRkODQwaFIzZDUxMlI0ZDQ0NFI1ZDU2UjZkNjkyUjdkLThSOGQ2MzZSOWQwUjEwZDE0NFIxMWk1MVIxMmQ1NlIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjE2M29SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNjNSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo1MG9SMWQ4ODBSMmFkMzY4ZDUwOGQzNjhkNDM2ZDMzNmQzOThkMzA0ZDM2MGQyNDBkMzYwZDE5MmQzNjBkMTU4ZDM4NmQxMjRkNDEyZDEyNGQ0NTJkMTI0ZDQ3NmQxMzhkNDkyZDE1MmQ1MDhkMTUyZDUyNGQxNTJkNTQ0ZDE0MmQ1NTRkMTMyZDU2NGQxMTJkNTY0ZDg4ZDU2NGQ3NGQ1NTBkNjBkNTM2ZDYwZDUwNGQ2MGQ0MjBkMTIwZDM3NmQxODBkMzMyZDI0OGQzMzJkMzQ0ZDMzMmQzOTBkMzgwZDQzNmQ0MjhkNDM2ZDUwMGQ0MzZkNTQ4ZDQxNGQ1OTZkMzkyZDY0NGQzNDRkNjg4ZDIyOGQ4MDBkMTY2ZDg3MGQxMDRkOTQwZDkyZDk2NGQzMjhkOTY0ZDM2NGQ5NjRkMzg4ZDkzNmQ0MTJkOTA4ZDQyMGQ4NTJkNDQ0ZDg1MmQ0MjBkMTAyNGQ0OGQxMDI0ZDQ4ZDk3MmQ2OGQ5MzZkMTE0ZDg4MGQxNjBkODI0ZDIzNmQ3NDhkMzA0ZDY4MGQzMzZkNjIwZDM2OGQ1NjBkMzY4ZDUwOGhSM2Q1MTJSNGQ0NDRSNWQ0OFI2ZDY5MlI3ZDBSOGQ2NDRSOWQwUjEwZDE0NFIxMWk1MFIxMmQ0OFIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpMmkyaTJpMmkzaTNpM2kzaGc6MTYyb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE2MlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjQ5b1IxZDg4MFIyYWQyODhkMzI4ZDI4OGQ5MzZkMjg4ZDk2OGQzMDhkOTg0ZDMyOGQxMDAwZDM2NGQxMDAwZDQwNGQxMDAwZDQwNGQxMDI0ZDExMmQxMDI0ZDExMmQxMDAwZDE0OGQxMDAwZDE4OGQxMDAwZDIwNmQ5ODRkMjI0ZDk2OGQyMjRkOTM2ZDIyNGQ0NTJkMjI0ZDQzNmQyMTRkNDI2ZDIwNGQ0MTZkMTg0ZDQxNmQxMTJkNDE2ZDExMmQzOTJkMTQ4ZDM5MmQxOTZkMzkyZDIyNmQzNzZkMjU2ZDM2MGQyNzJkMzI4ZDI4OGQzMjhoUjNkNTEyUjRkNDA0UjVkMTEyUjZkNjk2UjdkMFI4ZDU4NFI5ZDBSMTBkMTQ0UjExaTQ5UjEyZDExMlIxM2Q1MTJSMTRhaTFpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTNpM2kyaTJpMmkzaTNpMmhnOjE2MW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNjFSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo0OG9SMWQ4ODBSMmFkMjUyZDM2NGQxOTZkMzY0ZDE1OGQ0NTBkMTIwZDUzNmQxMjBkNjgwZDEyMGQ4MzJkMTU4ZDkxNmQxOTZkMTAwMGQyNTJkMTAwMGQzMTJkMTAwMGQzNDZkOTE2ZDM4MGQ4MzJkMzgwZDY4MGQzODBkNTM2ZDM0OGQ0NTBkMzE2ZDM2NGQyNTJkMzY0ZDI1MmQxMDMyZDE2NGQxMDMyZDEwNGQ5NDBkNDRkODQ4ZDQ0ZDY4MGQ0NGQ1MjRkMTAyZDQyOGQxNjBkMzMyZDI1MmQzMzJkMzQwZDMzMmQzOThkNDI0ZDQ1NmQ1MTZkNDU2ZDY4MGQ0NTZkODQ0ZDM5OGQ5MzhkMzQwZDEwMzJkMjUyZDEwMzJoUjNkNTEyUjRkNDU2UjVkNDRSNmQ2OTJSN2QtOFI4ZDY0OFI5ZDBSMTBkMTQ0UjExaTQ4UjEyZDQ0UjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNoZzoxNjBvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTYwUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NDdvUjFkODgwUjJhZDYwZDExMTZkMzJkMTEwMGQ0NDBkMjQ0ZDQ2OGQyNjBkNjBkMTExNmhSM2Q1MTJSNGQ0NjhSNWQzMlI2ZDc4MFI3ZC05MlI4ZDc0OFI5ZDBSMTBkMTQ0UjExaTQ3UjEyZDMyUjEzZDUxMlIxNGFpMWkyaTJpMmkyaGc6MTU5b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE1OVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjQ2b1IxZDg4MFIyYWQxODBkOTgwZDE4MGQxMDA0ZDE2NGQxMDIwZDE0OGQxMDM2ZDEyNGQxMDM2ZDEwMGQxMDM2ZDg0ZDEwMjBkNjhkMTAwNGQ2OGQ5ODBkNjhkOTU2ZDg0ZDk0MGQxMDBkOTI0ZDEyNGQ5MjRkMTQ4ZDkyNGQxNjRkOTQwZDE4MGQ5NTZkMTgwZDk4MGhSM2Q1MTJSNGQxODBSNWQ2OFI2ZDEwMFI3ZC0xMlI4ZDMyUjlkMFIxMGQxNDRSMTFpNDZSMTJkNjhSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2hnOjE1OG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNThSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo0NW9SMWQ4ODBSMmFkMjhkNjg0ZDI4ZDY0OGQ0NzJkNjQ4ZDQ3MmQ2ODRkMjhkNjg0aFIzZDUxMlI0ZDQ3MlI1ZDI4UjZkMzc2UjdkMzQwUjhkMzQ4UjlkMFIxMGQxNDRSMTFpNDVSMTJkMjhSMTNkNTEyUjE0YWkxaTJpMmkyaTJoZzoxNTdvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTU3UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NDRvUjFkODgwUjJhZDE3NmQxMDEyZDE2MGQxMDA0ZDE1NGQ5ODZkMTQ4ZDk2OGQxNDhkOTU0ZDE0OGQ5NDBkMTU4ZDkyNmQxNjhkOTEyZDE4NGQ5MDZkMjAwZDkwMGQyMjhkOTA4ZDI1NmQ5MTZkMjY0ZDk0NGQyNzJkOTcyZDI2NmQxMDAwZDI2MGQxMDI4ZDI0NGQxMDU2ZDIyOGQxMDg0ZDIxMGQxMTAwZDE5MmQxMTE2ZDE2NGQxMTMyZDE1MmQxMTE2ZDE3NmQxMDk2ZDE5MGQxMDc0ZDIwNGQxMDUyZDIxMmQxMDEyZDE5MmQxMDIwZDE3NmQxMDEyaFIzZDUxMlI0ZDI3MlI1ZDE0OFI2ZDEyNFI3ZC0xMDhSOGQtMjRSOWQwUjEwZDE0NFIxMWk0NFIxMmQxNDhSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpM2hnOjE1Nm9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNTZSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo0M29SMWQ4ODBSMmFkMjQwZDY0OGQyNDBkNDIwZDI3NmQ0MjBkMjc2ZDY0OGQ0NzZkNjQ4ZDQ3NmQ2ODRkMjc2ZDY4NGQyNzZkOTEyZDI0MGQ5MTJkMjQwZDY4NGQ0MGQ2ODRkNDBkNjQ4ZDI0MGQ2NDhoUjNkNTEyUjRkNDc2UjVkNDBSNmQ2MDRSN2QxMTJSOGQ1NjRSOWQwUjEwZDE0NFIxMWk0M1IxMmQ0MFIxM2Q1MTJSMTRhaTFpMmkyaTJpMmkyaTJpMmkyaTJpMmkyaTJoZzoxNTVvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTU1UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6NDJvUjFkODgwUjJhZDIyOGQ2ODBkOTZkNjQwZDY0ZDYxMGQzMmQ1ODBkNTJkNTU2ZDY4ZDUyNGQxMTBkNTQyZDE1MmQ1NjBkMjQ4ZDY0OGQyMTJkNTE2ZDIyNGQ0NzZkMjM2ZDQzNmQyNjRkNDM2ZDI5NmQ0MzZkMzA4ZDQ3NmQzMjBkNTE2ZDI4OGQ2NDhkMzg0ZDU1MmQ0MjZkNTM4ZDQ2OGQ1MjRkNDgwZDU1MmQ0OTZkNTgwZDQ2NmQ2MDhkNDM2ZDYzNmQzMDRkNjgwZDQ0NGQ3MjBkNDcyZDc0NmQ1MDBkNzcyZDQ4NGQ4MDRkNDY0ZDgzMmQ0MjhkODE4ZDM5MmQ4MDRkMjg4ZDcxMmQzMjBkODU2ZDMwOGQ4ODhkMjk2ZDkyMGQyNjRkOTIwZDIzNmQ5MjBkMjI0ZDg4OGQyMTJkODU2ZDI0OGQ3MTJkMTQ4ZDgwOGQxMTJkODIyZDc2ZDgzNmQ1MmQ4MDhkNDBkNzc2ZDY4ZDc0OGQ5NmQ3MjBkMjI4ZDY4MGhSM2Q1MTJSNGQ1MDBSNWQzMlI2ZDU4OFI3ZDEwNFI4ZDU1NlI5ZDBSMTBkMTQ0UjExaTQyUjEyZDMyUjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjE1NG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNTRSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzo0MW9SMWQ4ODBSMmFkNDBkMjM2ZDYwZDIxNmQxNzJkMzIwZDIyOGQ0MzRkMjg0ZDU0OGQyODRkNjcyZDI4NGQ4MDBkMjI4ZDkxNGQxNzJkMTAyOGQ2MGQxMTI4ZDQwZDExMDhkMTMyZDEwMTJkMTc4ZDkwNGQyMjRkNzk2ZDIyNGQ2NzJkMjI0ZDU1MmQxNzhkNDQyZDEzMmQzMzJkNDBkMjM2aFIzZDUxMlI0ZDI4NFI1ZDQwUjZkODA4UjdkLTEwNFI4ZDc2OFI5ZDBSMTBkMTQ0UjExaTQxUjEyZDQwUjEzZDUxMlIxNGFpMWkyaTNpM2kzaTNpMmkzaTNpM2kzaGc6MTUzb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE1M1IxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjQwb1IxZDg4MFIyYWQ0NjBkMjM2ZDM2OGQzMzJkMzIyZDQ0MmQyNzZkNTUyZDI3NmQ2NzJkMjc2ZDc5NmQzMjJkOTA0ZDM2OGQxMDEyZDQ2MGQxMTA4ZDQ0MGQxMTI4ZDMyOGQxMDI4ZDI3MmQ5MTRkMjE2ZDgwMGQyMTZkNjcyZDIxNmQ1NDhkMjcyZDQzNGQzMjhkMzIwZDQ0MGQyMTZkNDYwZDIzNmhSM2Q1MTJSNGQ0NjBSNWQyMTZSNmQ4MDhSN2QtMTA0UjhkNTkyUjlkMFIxMGQxNDRSMTFpNDBSMTJkMjE2UjEzZDUxMlIxNGFpMWkzaTNpM2kzaTJpM2kzaTNpM2kyaGc6MTUyb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE1MlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjM5b1IxZDg4MFIyYWQyMDRkMjI4ZDIyNGQyMTZkMjQyZDIyNGQyNjBkMjMyZDI2OGQyNDBkMjcyZDI0OGQyNzRkMjU4ZDI3NmQyNjhkMjcyZDI4MGQyMjhkNTA0ZDIyOGQ1MTJkMjIyZDUxNGQyMTZkNTE2ZDIwOGQ1MDRkMTg0ZDI3NmQxODRkMjYwZDE5MGQyNDZkMTk2ZDIzMmQyMDRkMjI4aFIzZDUxMlI0ZDI3NlI1ZDE4NFI2ZDgwOFI3ZDUwOFI4ZDYyNFI5ZDBSMTBkMTQ0UjExaTM5UjEyZDE4NFIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kyaTNpM2kyaTNpM2hnOjE1MW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNTFSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzozOG9SMWQ4ODBSMmFkMzA0ZDg4NGQzMjRkODUyZDMzNGQ4MDZkMzQ0ZDc2MGQzNDRkNzA0ZDM0NGQ2ODRkMzM2ZDY3NGQzMjhkNjY0ZDMwOGQ2NjRkMjg4ZDY2NGQyODhkNjQwZDQ0OGQ2NDBkNDQ4ZDY2NGQ0MzJkNjY0ZDQxMmQ2NjRkNDAwZDY3NmQzODhkNjg4ZDM4NGQ3MTJkMzcyZDc4MGQzNThkODMyZDM0NGQ4ODRkMzI0ZDkxMmQzNTJkOTQ4ZDM3NGQ5NjZkMzk2ZDk4NGQ0MTZkOTg0ZDQzNmQ5ODRkNDUwZDk2OGQ0NjRkOTUyZDQ3NmQ5MjBkNDkyZDkyOGQ0ODRkOTgwZDQ1OGQxMDA2ZDQzMmQxMDMyZDM4OGQxMDMyZDM2OGQxMDMyZDM0NGQxMDE2ZDMyMGQxMDAwZDI4OGQ5NjRkMjYwZDEwMDBkMjI2ZDEwMTZkMTkyZDEwMzJkMTU2ZDEwMzJkMTAwZDEwMzJkNTRkOTgwZDhkOTI4ZDhkODUyZDhkNzkyZDM0ZDc0MmQ2MGQ2OTJkMTEyZDY1MmQxMDBkNjEyZDkyZDU2OGQ4NGQ1MjRkODRkNDg0ZDg0ZDQxMmQxMjBkMzcyZDE1NmQzMzJkMjAwZDMzMmQyNjBkMzMyZDI4NGQzNjhkMzA4ZDQwNGQzMDhkNDUyZDMwOGQ1MTZkMjc2ZDU2NmQyNDRkNjE2ZDE3NmQ2NDRkMjA0ZDcyMGQyMzZkNzgyZDI2OGQ4NDRkMzA0ZDg4NGQ2OGQ4MjBkNjhkOTA4ZDEwMGQ5NDhkMTMyZDk4OGQxODhkOTg4ZDIxMmQ5ODhkMjMyZDk3OGQyNTJkOTY4ZDI2OGQ5NDRkMjI0ZDg5MmQxODZkODIyZDE0OGQ3NTJkMTIwZDY3NmQ5NmQ3MDBkODJkNzM2ZDY4ZDc3MmQ2OGQ4MjBkMjUyZDQ0OGQyNTJkNDAwZDI0MmQzNzhkMjMyZDM1NmQyMDBkMzU2ZDE4MGQzNTZkMTU4ZDM3OGQxMzZkNDAwZDEzNmQ0NjBkMTM2ZDUwMGQxNDRkNTQyZDE1MmQ1ODRkMTY4ZDYyMGQyMTJkNjAwZDIzMmQ1NTRkMjUyZDUwOGQyNTJkNDQ4aFIzZDUxMlI0ZDQ5MlI1ZDhSNmQ2OTJSN2QtOFI4ZDY4NFI5ZDBSMTBkMTQ0UjExaTM4UjEyZDhSMTNkNTEyUjE0YWkxaTNpM2kzaTNpMmkyaTJpMmkyaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2hnOjE1MG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNTBSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzozN29SMWQ4ODBSMmFkMTE2ZDM2MGQ5MmQzNjBkNzZkMzkyZDYwZDQyNGQ2MGQ1MTJkNjBkNjEyZDc4ZDY0MmQ5NmQ2NzJkMTE2ZDY3MmQxNDRkNjcyZDE1OGQ2MzZkMTcyZDYwMGQxNzJkNTEyZDE3MmQ0NDBkMTYyZDQwMGQxNTJkMzYwZDExNmQzNjBkMjI0ZDUxNmQyMjRkNTg4ZDIwMGQ2NDJkMTc2ZDY5NmQxMTZkNjk2ZDY4ZDY5NmQzOGQ2NDhkOGQ2MDBkOGQ1MTZkOGQ0MjhkNDBkMzgwZDcyZDMzMmQxMTZkMzMyZDE2NGQzMzJkMTk0ZDM4MmQyMjRkNDMyZDIyNGQ1MTZkNDMyZDg0OGQ0MzJkNzgwZDQyMGQ3MzZkNDA4ZDY5MmQzNzZkNjkyZDM1MmQ2OTJkMzM2ZDczMGQzMjBkNzY4ZDMyMGQ4NDhkMzIwZDk0OGQzMzhkOTc2ZDM1NmQxMDA0ZDM3NmQxMDA0ZDQwNGQxMDA0ZDQxOGQ5NzBkNDMyZDkzNmQ0MzJkODQ4ZDQ4NGQ4NTJkNDg0ZDkzMmQ0NTZkOTgyZDQyOGQxMDMyZDM3NmQxMDMyZDMzMmQxMDMyZDMwMGQ5ODJkMjY4ZDkzMmQyNjhkODUyZDI2OGQ3NjRkMzAwZDcxNGQzMzJkNjY0ZDM3NmQ2NjRkNDI0ZDY2NGQ0NTRkNzE2ZDQ4NGQ3NjhkNDg0ZDg1MmQ0MDBkMzQ0ZDExMmQxMDMyZDg4ZDEwMjBkMzcyZDMzMmQ0MDBkMzQ0aFIzZDUxMlI0ZDQ4NFI1ZDhSNmQ2OTJSN2QtOFI4ZDY4NFI5ZDBSMTBkMTQ0UjExaTM3UjEyZDhSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTJpMmkyaTJoZzoxNDlvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTQ5UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MzZvUjFkODgwUjJhZDI3MmQxMTMyZDIzNmQxMTMyZDIzNmQxMDI4ZDE2OGQxMDI4ZDExNmQ5ODhkNjRkOTQ4ZDY0ZDg4MGQ2NGQ4NjBkNzhkODQyZDkyZDgyNGQxMTZkODI0ZDE0MGQ4MjRkMTUwZDgzNmQxNjBkODQ4ZDE2MGQ4NzJkMTYwZDg5NmQxNDhkOTA4ZDEzNmQ5MjBkMTM2ZDk0NGQxMzZkOTY4ZDE2NmQ5ODRkMTk2ZDEwMDBkMjM2ZDEwMDBkMjM2ZDY5NmQxMjRkNjEyZDEwNGQ1NzBkODRkNTI4ZDg0ZDQ5NmQ4NGQ0MzZkMTMwZDM5MGQxNzZkMzQ0ZDIzNmQzMzZkMjM2ZDI2NGQyNzJkMjY0ZDI3MmQzMzZkMzMyZDMzNmQzNzRkMzc0ZDQxNmQ0MTJkNDE2ZDQ1NmQ0MTZkNDkyZDQwMmQ1MDhkMzg4ZDUyNGQzNjRkNTI0ZDM0NGQ1MjRkMzM0ZDUxNmQzMjRkNTA4ZDMyNGQ0ODhkMzI0ZDQ3MmQzMzZkNDYyZDM0OGQ0NTJkMzQ4ZDQyNGQzNDhkNDA4ZDMzMGQzODZkMzEyZDM2NGQyNzJkMzY0ZDI3MmQ2MjRkMzQwZDY4MGQzODJkNzMyZDQyNGQ3ODRkNDI0ZDg0NGQ0MjRkOTM2ZDM3NGQ5NzhkMzI0ZDEwMjBkMjcyZDEwMjhkMjcyZDExMzJkMjcyZDk5NmQzMDRkOTk2ZDMzNGQ5NzBkMzY0ZDk0NGQzNjRkODcyZDM2NGQ4MzJkMzQyZDc5NGQzMjBkNzU2ZDI3MmQ3MjBkMjcyZDk5NmQxNDRkNDc2ZDE0NGQ1MDhkMTY2ZDUzOGQxODhkNTY4ZDIzNmQ2MDRkMjM2ZDM2NGQyMDBkMzcyZDE3MmQzOThkMTQ0ZDQyNGQxNDRkNDc2aFIzZDUxMlI0ZDQyNFI1ZDY0UjZkNzYwUjdkLTEwOFI4ZDY5NlI5ZDBSMTBkMTQ0UjExaTM2UjEyZDY0UjEzZDUxMlIxNGFpMWkyaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkyaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kzaTNpMmkxaTNpM2kzaTNpMmkxaTNpM2kyaTNpM2hnOjE0OG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNDhSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzozNW9SMWQ4ODBSMmFkMzI4ZDg1NmQxNDRkODU2ZDEzMmQxMDMyZDk2ZDEwMzJkMTA4ZDg1NmQzMmQ4NTZkMzJkNzgwZDExMmQ3ODBkMTMyZDU3MmQzMmQ1NzJkMzJkNDk2ZDEzNmQ0OTZkMTQ4ZDMzMmQxODRkMzMyZDE3MmQ0OTZkMzU2ZDQ5NmQzNjhkMzMyZDQwNGQzMzJkMzkyZDQ5NmQ0NjhkNDk2ZDQ2OGQ1NzJkMzg4ZDU3MmQzNjhkNzgwZDQ2OGQ3ODBkNDY4ZDg1NmQzNjRkODU2ZDM1MmQxMDMyZDMxNmQxMDMyZDMyOGQ4NTZkMTQ4ZDc4MGQzMzJkNzgwZDM1MmQ1NzJkMTY4ZDU3MmQxNDhkNzgwaFIzZDUxMlI0ZDQ2OFI1ZDMyUjZkNjkyUjdkLThSOGQ2NjBSOWQwUjEwZDE0NFIxMWkzNVIxMmQzMlIxM2Q1MTJSMTRhaTFpMmkyaTJpMmkyaTJpMmkyaTJpMmkyaTJpMmkyaTJpMmkyaTJpMmkyaTJpMmkyaTJpMmkyaTJpMmkxaTJpMmkyaTJoZzoxNDdvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTQ3UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MzRvUjFkODgwUjJhZDE1MmQzMDhkMTUyZDI4OGQxNTZkMjcyZDE2MGQyNTZkMTY4ZDI1MmQxOTJkMjM2ZDIwOGQyNDZkMjI0ZDI1NmQyMzJkMjY0ZDIzNmQyNjhkMjM4ZDI3OGQyNDBkMjg4ZDI0MGQzMDBkMjAwZDUyOGQyMDBkNTM2ZDE5NGQ1MzhkMTg4ZDU0MGQxODBkNTI4ZDE1MmQzMDhkMzEyZDI0OGQzMzJkMjM2ZDM1MGQyNDRkMzY4ZDI1MmQzNzZkMjYwZDM4MGQyNjhkMzgyZDI3OGQzODRkMjg4ZDM4MGQzMDBkMzI4ZDUyNGQzMjhkNTMyZDMyMmQ1MzRkMzE2ZDUzNmQzMDhkNTI0ZDI5MmQyOTZkMjkyZDI4MGQyOThkMjY2ZDMwNGQyNTJkMzEyZDI0OGhSM2Q1MTJSNGQzODRSNWQxNTJSNmQ3ODhSN2Q0ODRSOGQ2MzZSOWQwUjEwZDE0NFIxMWkzNFIxMmQxNTJSMTNkNTEyUjE0YWkxaTNpM2kzaTNpM2kzaTJpM2kzaTJpMWkzaTNpM2kzaTJpM2kzaTJpM2kzaGc6MTQ2b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE0NlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjMzb1IxZDg4MFIyYWQyNjRkNzY4ZDI2NGQ4MDhkMjMyZDgwOGQyMzJkNzY4ZDIzMmQ2NjBkMjE4ZDU1MGQyMDRkNDQwZDIwNGQzODhkMjA0ZDM1NmQyMTRkMzM4ZDIyNGQzMjBkMjQ4ZDMyMGQyNzZkMzIwZDI4NGQzNDBkMjkyZDM2MGQyOTJkMzg4ZDI5MmQ0NDBkMjc4ZDU1MGQyNjRkNjYwZDI2NGQ3NjhkMzA0ZDk4MGQzMDRkMTAwNGQyODhkMTAyMGQyNzJkMTAzNmQyNDhkMTAzNmQyMjRkMTAzNmQyMDhkMTAyMGQxOTJkMTAwNGQxOTJkOTgwZDE5MmQ5NTZkMjA4ZDk0MGQyMjRkOTI0ZDI0OGQ5MjRkMjcyZDkyNGQyODhkOTQwZDMwNGQ5NTZkMzA0ZDk4MGhSM2Q1MTJSNGQzMDRSNWQxOTJSNmQ3MDRSN2QtMTJSOGQ1MTJSOWQwUjEwZDE0NFIxMWkzM1IxMmQxOTJSMTNkNTEyUjE0YWkxaTJpMmkyaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2hnOjE0NW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNDVSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzozMm9SMWQ4ODBSMmFoUjNkNTEyUjRkMFI1ZDBSNmQwUjdkMFI4ZDBSOWQwUjEwZDE0NFIxMWkzMlIxMmQwUjEzZDUxMlIxNGFoZzoxNDRvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTQ0UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTQzb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE0M1IxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjI1NW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyNTVSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxNDJvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTQyUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MjU0b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTI1NFIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjE0MW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxNDFSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoyNTNvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjUzUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTQwb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTE0MFIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjI1Mm9SMWQ4ODBSMmFkNDg4ZDk4NGQ1MzZkOTg0ZDU3MGQ5NjBkNjA0ZDkzNmQ2MjBkODg0ZDYyMGQ2MzJkNjIwZDYxNmQ2MTJkNjA2ZDYwNGQ1OTZkNTg0ZDU5NmQ1NjBkNTk2ZDU2MGQ1NzJkNTg0ZDU3MmQ2MDhkNTcyZDYyOGQ1NjhkNjQ4ZDU2NGQ2NjhkNTQ4ZDY3NmQ1NDhkNjc2ZDk0MGQ2NzZkOTU2ZDY4NmQ5NjRkNjk2ZDk3MmQ3MTJkOTcyZDczNmQ5NzJkNzM2ZDk5NmQ3MTJkOTk2ZDY5MmQ5OTZkNjcyZDEwMDJkNjUyZDEwMDhkNjI4ZDEwMjBkNjIwZDEwMjBkNjIwZDkzNmQ2MDBkOTgwZDU2MGQxMDAyZDUyMGQxMDI0ZDQ2OGQxMDI0ZDQwNGQxMDI0ZDM3MmQ5ODhkMzQwZDk1MmQzNDBkODcyZDM0MGQ2MzJkMzQwZDYxNmQzMzJkNjA2ZDMyNGQ1OTZkMzA0ZDU5NmQyODBkNTk2ZDI4MGQ1NzJkMzA0ZDU3MmQzMjhkNTcyZDM0OGQ1NjhkMzY4ZDU2NGQzODhkNTQ4ZDM5NmQ1NDhkMzk2ZDg4MGQzOTZkOTM2ZDQyMGQ5NjBkNDQ0ZDk4NGQ0ODhkOTg0ZDQ1MmQ0NzZkNDUyZDQ5NmQ0MzZkNTEyZDQyNGQ1MjRkNDA0ZDUyNGQzODBkNTI0ZDM2OGQ1MTJkMzUyZDQ5NmQzNTJkNDc2ZDM1MmQ0NTZkMzY4ZDQ0MGQzODBkNDI4ZDQwNGQ0MjhkNDI0ZDQyOGQ0MzZkNDQwZDQ1MmQ0NTZkNDUyZDQ3NmQ2NjBkNDc2ZDY2MGQ0OTZkNjQ0ZDUxMmQ2MzJkNTI0ZDYxMmQ1MjRkNTg4ZDUyNGQ1NzZkNTEyZDU2MGQ0OTZkNTYwZDQ3NmQ1NjBkNDU2ZDU3NmQ0NDBkNTg4ZDQyOGQ2MTJkNDI4ZDYzMmQ0MjhkNjQ0ZDQ0MGQ2NjBkNDU2ZDY2MGQ0NzZoUjNkMTAyNFI0ZDczNlI1ZDI4MFI2ZDU5NlI3ZDBSOGQzMTZSOWQwUjEwZDE0NFIxMWkyNTJSMTJkMjgwUjEzZDEwMjRSMTRhaTFpM2kzaTJpM2kzaTJpMmkyaTNpM2kyaTJpM2kzaTJpMmkyaTNpM2kyaTJpM2kzaTNpM2kyaTNpM2kyaTJpMmkzaTNpMmkyaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2hnOjEzOW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxMzlSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoyNTFvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjUxUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTM4b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTEzOFIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjI1MG9SMWQ4ODBSMmFkNjEyZDM2MGQ2MzJkMzYwZDU2MGQ0OTZkNTQyZDUxMGQ1MjRkNTI0ZDUwMmQ1MTZkNDgwZDUwOGQ0ODBkNDg2ZDQ4MGQ0NjRkNjEyZDM2MGQ0ODhkOTg0ZDUzNmQ5ODRkNTcwZDk2MGQ2MDRkOTM2ZDYyMGQ4ODRkNjIwZDYzMmQ2MjBkNjE2ZDYxMmQ2MDZkNjA0ZDU5NmQ1ODRkNTk2ZDU2MGQ1OTZkNTYwZDU3MmQ1ODRkNTcyZDYwOGQ1NzJkNjI4ZDU2OGQ2NDhkNTY0ZDY2OGQ1NDhkNjc2ZDU0OGQ2NzZkOTQwZDY3NmQ5NTZkNjg2ZDk2NGQ2OTZkOTcyZDcxMmQ5NzJkNzM2ZDk3MmQ3MzZkOTk2ZDcxMmQ5OTZkNjkyZDk5NmQ2NzJkMTAwMmQ2NTJkMTAwOGQ2MjhkMTAyMGQ2MjBkMTAyMGQ2MjBkOTM2ZDYwMGQ5ODBkNTYwZDEwMDJkNTIwZDEwMjRkNDY4ZDEwMjRkNDA0ZDEwMjRkMzcyZDk4OGQzNDBkOTUyZDM0MGQ4NzJkMzQwZDYzMmQzNDBkNjE2ZDMzMmQ2MDZkMzI0ZDU5NmQzMDRkNTk2ZDI4MGQ1OTZkMjgwZDU3MmQzMDRkNTcyZDMyOGQ1NzJkMzQ4ZDU2OGQzNjhkNTY0ZDM4OGQ1NDhkMzk2ZDU0OGQzOTZkODgwZDM5NmQ5MzZkNDIwZDk2MGQ0NDRkOTg0ZDQ4OGQ5ODRoUjNkMTAyNFI0ZDczNlI1ZDI4MFI2ZDY2NFI3ZDBSOGQzODRSOWQwUjEwZDE0NFIxMWkyNTBSMTJkMjgwUjEzZDEwMjRSMTRhaTFpMmkzaTNpM2kzaTFpM2kzaTJpM2kzaTJpMmkyaTNpM2kyaTJpM2kzaTJpMmkyaTNpM2kyaTJpM2kzaTNpM2kyaTNpM2kyaTJpMmkzaTNpMmkyaTNpM2hnOjEzN29SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxMzdSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoyNDlvUjFkODgwUjJhZDU0NGQ1MTZkNTI0ZDUyMGQ0MTJkNDI0ZDQxMmQzOTZkNDEyZDM2OGQ0MzZkMzYwZDQ2MGQzNTJkNDgwZDM3MmQ1MDBkMzkyZDU0NGQ1MTZkNDg4ZDk4NGQ1MzZkOTg0ZDU3MGQ5NjBkNjA0ZDkzNmQ2MjBkODg0ZDYyMGQ2MzJkNjIwZDYxNmQ2MTJkNjA2ZDYwNGQ1OTZkNTg0ZDU5NmQ1NjBkNTk2ZDU2MGQ1NzJkNTg0ZDU3MmQ2MDhkNTcyZDYyOGQ1NjhkNjQ4ZDU2NGQ2NjhkNTQ4ZDY3NmQ1NDhkNjc2ZDk0MGQ2NzZkOTU2ZDY4NmQ5NjRkNjk2ZDk3MmQ3MTJkOTcyZDczNmQ5NzJkNzM2ZDk5NmQ3MTJkOTk2ZDY5MmQ5OTZkNjcyZDEwMDJkNjUyZDEwMDhkNjI4ZDEwMjBkNjIwZDEwMjBkNjIwZDkzNmQ2MDBkOTgwZDU2MGQxMDAyZDUyMGQxMDI0ZDQ2OGQxMDI0ZDQwNGQxMDI0ZDM3MmQ5ODhkMzQwZDk1MmQzNDBkODcyZDM0MGQ2MzJkMzQwZDYxNmQzMzJkNjA2ZDMyNGQ1OTZkMzA0ZDU5NmQyODBkNTk2ZDI4MGQ1NzJkMzA0ZDU3MmQzMjhkNTcyZDM0OGQ1NjhkMzY4ZDU2NGQzODhkNTQ4ZDM5NmQ1NDhkMzk2ZDg4MGQzOTZkOTM2ZDQyMGQ5NjBkNDQ0ZDk4NGQ0ODhkOTg0aFIzZDEwMjRSNGQ3MzZSNWQyODBSNmQ2NzJSN2QwUjhkMzkyUjlkMFIxMGQxNDRSMTFpMjQ5UjEyZDI4MFIxM2QxMDI0UjE0YWkxaTJpM2kzaTNpM2kxaTNpM2kyaTNpM2kyaTJpMmkzaTNpMmkyaTNpM2kyaTJpMmkzaTNpMmkyaTNpM2kzaTNpMmkzaTNpMmkyaTJpM2kzaTJpMmkzaTNoZzoxMzZvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTM2UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MjQ4b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTI0OFIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjEzNW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxMzVSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoyNDdvUjFkODgwUjJhZDg3NmQ2MzJkODc2ZDY4MGQxNDRkNjgwZDE0NGQ2MzJkODc2ZDYzMmQ0NTZkMzUyZDQ4MGQzMzJkNTEyZDMzMmQ1NDhkMzMyZDU2OGQzNTZkNTg4ZDM3NmQ1ODhkNDA0ZDU4OGQ0MzZkNTY4ZDQ1NmQ1NDhkNDgwZDUxMmQ0ODBkNDgwZDQ4MGQ0NTZkNDU2ZDQzNmQ0MzZkNDM2ZDQwNGQ0MzZkMzc2ZDQ1NmQzNTJkNDU2ZDg1NmQ0ODBkODM2ZDUxMmQ4MzZkNTQ4ZDgzNmQ1NjhkODYwZDU4OGQ4ODBkNTg4ZDkwOGQ1ODhkOTQwZDU2OGQ5NjBkNTQ4ZDk4NGQ1MTJkOTg0ZDQ4MGQ5ODRkNDU2ZDk2MGQ0MzZkOTQwZDQzNmQ5MDhkNDM2ZDg4MGQ0NTZkODU2aFIzZDEwMjRSNGQ4NzZSNWQxNDRSNmQ2OTJSN2Q0MFI4ZDU0OFI5ZDBSMTBkMTQ0UjExaTI0N1IxMmQxNDRSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpM2kzaTNpM2kzaTNpM2kzaTFpM2kzaTNpM2kzaTNpM2kzaGc6MTM0b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTEzNFIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjI0Nm9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyNDZSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMzNvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTMzUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MjQ1b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTI0NVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjEzMm9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxMzJSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoyNDRvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjQ0UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTMxb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTEzMVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjI0M29SMWQ4ODBSMmFkNjA4ZDM2OGQ2MjhkMzY4ZDU1NmQ1MDRkNTM4ZDUxOGQ1MjBkNTMyZDQ5OGQ1MjRkNDc2ZDUxNmQ0NzZkNDk0ZDQ3NmQ0NzJkNjA4ZDM2OGQ3MTZkNzkyZDcxNmQ4OTJkNjU2ZDk1OGQ1OTZkMTAyNGQ1MDhkMTAyNGQ0MTZkMTAyNGQzNThkOTU2ZDMwMGQ4ODhkMzAwZDc5MmQzMDBkNzA0ZDM1OGQ2MzJkNDE2ZDU2MGQ1MDhkNTYwZDYwNGQ1NjBkNjYwZDYzMmQ3MTZkNzA0ZDcxNmQ3OTJkMzY0ZDc5NmQzNjRkOTAwZDQwNmQ5NTBkNDQ4ZDEwMDBkNTA4ZDEwMDBkNTc2ZDEwMDBkNjE0ZDk0NmQ2NTJkODkyZDY1MmQ3OTZkNjUyZDY5MmQ2MTBkNjM4ZDU2OGQ1ODRkNTA4ZDU4NGQ0NTJkNTg0ZDQwOGQ2MzhkMzY0ZDY5MmQzNjRkNzk2aFIzZDEwMjRSNGQ3MTZSNWQzMDBSNmQ2NTZSN2QwUjhkMzU2UjlkMFIxMGQxNDRSMTFpMjQzUjEyZDMwMFIxM2QxMDI0UjE0YWkxaTJpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2hnOjEzMG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxMzBSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoyNDJvUjFkODgwUjJhZDUzMmQ1MjBkNTEyZDUyNGQ0MDBkNDI4ZDQwMGQ0MDBkNDAwZDM3MmQ0MjRkMzY0ZDQ0OGQzNTZkNDY4ZDM3NmQ0ODhkMzk2ZDUzMmQ1MjBkNzE2ZDc5MmQ3MTZkODkyZDY1NmQ5NThkNTk2ZDEwMjRkNTA4ZDEwMjRkNDE2ZDEwMjRkMzU4ZDk1NmQzMDBkODg4ZDMwMGQ3OTJkMzAwZDcwNGQzNThkNjMyZDQxNmQ1NjBkNTA4ZDU2MGQ2MDRkNTYwZDY2MGQ2MzJkNzE2ZDcwNGQ3MTZkNzkyZDM2NGQ3OTZkMzY0ZDkwMGQ0MDZkOTUwZDQ0OGQxMDAwZDUwOGQxMDAwZDU3NmQxMDAwZDYxNGQ5NDZkNjUyZDg5MmQ2NTJkNzk2ZDY1MmQ2OTJkNjEwZDYzOGQ1NjhkNTg0ZDUwOGQ1ODRkNDUyZDU4NGQ0MDhkNjM4ZDM2NGQ2OTJkMzY0ZDc5NmhSM2QxMDI0UjRkNzE2UjVkMzAwUjZkNjY4UjdkMFI4ZDM2OFI5ZDBSMTBkMTQ0UjExaTI0MlIxMmQzMDBSMTNkMTAyNFIxNGFpMWkyaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTNoZzoxMjlvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMTI5UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MjQxb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTI0MVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjEyOG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkxMjhSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoyNDBvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjQwUjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTI3b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTEyN1IxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjIzOW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMzlSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMjZvUjFkODgwUjJhZDIxNmQyNjBkMTk2ZDI0MGQxODBkMjI0ZDE2NGQyMDhkMTQwZDIwOGQxMDhkMjA4ZDg4ZDIzOGQ2OGQyNjhkNTZkMzE2ZDM2ZDMwOGQ1NmQyMzJkODZkMjA0ZDExNmQxNzZkMTUyZDE3NmQxNjhkMTc2ZDE4OGQxODBkMjA4ZDE4NGQyMjhkMjA0ZDI0NGQyMTZkMjY0ZDI0MGQyODRkMjY0ZDMwMGQyODBkMzIwZDMwMGQzMzhkMzE0ZDM1NmQzMjhkMzcyZDMyOGQ0MDRkMzI4ZDQyNGQzMDBkNDQ0ZDI3MmQ0NTZkMjI0ZDQ3NmQyMzJkNDU2ZDMwNGQ0MjZkMzM0ZDM5NmQzNjRkMzYwZDM2NGQzNDRkMzY0ZDMyNmQzNThkMzA4ZDM1MmQyODhkMzM2ZDI3NmQzMjRkMjU2ZDMwMmQyMzZkMjgwZDIxNmQyNjBoUjNkNTEyUjRkNDc2UjVkMzZSNmQ4NDhSN2Q2NjBSOGQ4MTJSOWQwUjEwZDE0NFIxMWkxMjZSMTJkMzZSMTNkNTEyUjE0YWkxaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTJpM2kzaTNpM2kzaTNoZzoyMzhvUjFkODgwUjJhZDg5NmQxMDc2ZDExMmQxMDc2ZDExMmQyNTJkODk2ZDI1MmQ4OTZkMTA3NmQ4NjRkMjgwZDE0MGQyODBkMTQwZDEwNDhkODY0ZDEwNDhkODY0ZDI4MGhSM2QxMDI0UjRkODk2UjVkMTEyUjZkNzcyUjdkLTUyUjhkNjYwUjlkMFIxMGQxNDRSMTFpMjM4UjEyZDExMlIxM2QxMDI0UjE0YWkxaTJpMmkyaTJpMWkyaTJpMmkyaGc6MTI1b1IxZDg4MFIyYWQyOTJkNjY4ZDI0MGQ2NzJkMjIyZDcwMmQyMDRkNzMyZDIwNGQ3ODBkMjA0ZDk1MmQyMDRkMTA0MGQxNzJkMTA3NGQxNDBkMTEwOGQ3MmQxMTA4ZDcyZDEwODBkMTI4ZDEwODBkMTQ4ZDEwNTBkMTY4ZDEwMjBkMTY4ZDk2OGQxNjhkNzcyZDE2OGQ3MTZkMTk0ZDY4OGQyMjBkNjYwZDI1NmQ2NjBkMjU2ZDY1MmQyMjRkNjUyZDE5NmQ2MjhkMTY4ZDYwNGQxNjhkNTQwZDE2OGQzNDRkMTY4ZDI4OGQxNDhkMjYwZDEyOGQyMzJkNzJkMjMyZDcyZDIwNGQxNDBkMjA0ZDE3MmQyMzhkMjA0ZDI3MmQyMDRkMzYwZDIwNGQ1MzJkMjA0ZDU4OGQyMjRkNjEyZDI0NGQ2MzZkMjkyZDY0NGQyOTJkNjY4aFIzZDUxMlI0ZDI5MlI1ZDcyUjZkODIwUjdkLTg0UjhkNzQ4UjlkMFIxMGQxNDRSMTFpMTI1UjEyZDcyUjEzZDUxMlIxNGFpMWkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmhnOjIzN29SMWQ4ODBSMmFkNjIwZDM2NGQ2NDBkMzY0ZDU2OGQ1MDBkNTUwZDUxNGQ1MzJkNTI4ZDUxMGQ1MjBkNDg4ZDUxMmQ0ODhkNDkwZDQ4OGQ0NjhkNjIwZDM2NGQ1MjBkNjM2ZDUyMGQ2MjBkNTEyZDYxMGQ1MDRkNjAwZDQ4NGQ2MDBkNDAwZDYwMGQ0MDBkNTc2ZDQ0MGQ1NzZkNDc2ZDU3NmQ1MDhkNTcwZDU0MGQ1NjRkNTY4ZDU0OGQ1NzZkNTQ4ZDU3NmQ5NjhkNTc2ZDk4NGQ1ODZkOTkyZDU5NmQxMDAwZDYxMmQxMDAwZDY5NmQxMDAwZDY5NmQxMDI0ZDQwMGQxMDI0ZDQwMGQxMDAwZDQ4NGQxMDAwZDUwNGQxMDAwZDUxMmQ5OTJkNTIwZDk4NGQ1MjBkOTY4ZDUyMGQ2MzZoUjNkMTAyNFI0ZDY5NlI1ZDQwMFI2ZDY2MFI3ZDBSOGQyNjBSOWQwUjEwZDE0NFIxMWkyMzdSMTJkNDAwUjEzZDEwMjRSMTRhaTFpMmkzaTNpM2kzaTFpM2kzaTJpMmkyaTNpM2kyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmhnOjEyNG9SMWQ4ODBSMmFkMjM2ZDExNjBkMjM2ZDE0NGQyNjBkMTQ0ZDI2MGQxMTYwZDIzNmQxMTYwaFIzZDUxMlI0ZDI2MFI1ZDIzNlI2ZDg4MFI3ZC0xMzZSOGQ2NDRSOWQwUjEwZDE0NFIxMWkxMjRSMTJkMjM2UjEzZDUxMlIxNGFpMWkyaTJpMmkyaGc6MjM2b1IxZDg4MFIyYWQ1NjBkNTE2ZDU0MGQ1MjBkNDI4ZDQyNGQ0MjhkMzk2ZDQyOGQzNjhkNDU0ZDM2MmQ0ODBkMzU2ZDQ5OGQzNzRkNTE2ZDM5MmQ1NjBkNTE2ZDUyMGQ2MzZkNTIwZDYyMGQ1MTJkNjEwZDUwNGQ2MDBkNDg0ZDYwMGQ0MDBkNjAwZDQwMGQ1NzZkNDQwZDU3NmQ0NzZkNTc2ZDUwOGQ1NzBkNTQwZDU2NGQ1NjhkNTQ4ZDU3NmQ1NDhkNTc2ZDk2OGQ1NzZkOTg0ZDU4NmQ5OTJkNTk2ZDEwMDBkNjEyZDEwMDBkNjk2ZDEwMDBkNjk2ZDEwMjRkNDAwZDEwMjRkNDAwZDEwMDBkNDg0ZDEwMDBkNTA0ZDEwMDBkNTEyZDk5MmQ1MjBkOTg0ZDUyMGQ5NjhkNTIwZDYzNmhSM2QxMDI0UjRkNjk2UjVkNDAwUjZkNjY4UjdkMFI4ZDI2OFI5ZDBSMTBkMTQ0UjExaTIzNlIxMmQ0MDBSMTNkMTAyNFIxNGFpMWkyaTNpM2kzaTNpMWkzaTNpMmkyaTJpM2kzaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaGc6MTIzb1IxZDg4MFIyYWQzMzZkOTY4ZDMzNmQxMDIwZDM1OGQxMDUwZDM4MGQxMDgwZDQzMmQxMDgwZDQzMmQxMTA4ZDM2NGQxMTA4ZDMzMmQxMDc0ZDMwMGQxMDQwZDMwMGQ5NTJkMzAwZDc4MGQzMDBkNzMyZDI4NGQ3MDJkMjY4ZDY3MmQyMTJkNjY4ZDIxMmQ2NDRkMjY0ZDYzNmQyODJkNjEyZDMwMGQ1ODhkMzAwZDUzMmQzMDBkMzYwZDMwMGQyNzJkMzMyZDIzOGQzNjRkMjA0ZDQzMmQyMDRkNDMyZDIzMmQzODBkMjMyZDM1OGQyNjBkMzM2ZDI4OGQzMzZkMzQ0ZDMzNmQ1NDBkMzM2ZDYwNGQzMDhkNjI4ZDI4MGQ2NTJkMjQ4ZDY1MmQyNDhkNjYwZDI4NGQ2NjBkMzEwZDY4OGQzMzZkNzE2ZDMzNmQ3NzJkMzM2ZDk2OGhSM2Q1MTJSNGQ0MzJSNWQyMTJSNmQ4MjBSN2QtODRSOGQ2MDhSOWQwUjEwZDE0NFIxMWkxMjNSMTJkMjEyUjEzZDUxMlIxNGFpMWkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmkzaTNpMmhnOjIzNW9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMzVSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMjJvUjFkODgwUjJhZDQzNmQ4NjhkNDA4ZDEwMjRkNjRkMTAyNGQ2NGQxMDA0ZDM0MGQ2MDBkMTkyZDYwMGQxNTZkNjAwZDEzMmQ2MjZkMTA4ZDY1MmQ5MmQ3MTZkNjhkNzEyZDg0ZDU3NmQ0MTJkNTc2ZDQxMmQ1ODhkMTMyZDEwMDBkMjg0ZDEwMDBkMzM2ZDEwMDBkMzY2ZDk2OGQzOTZkOTM2ZDQxMmQ4NjRkNDM2ZDg2OGhSM2Q1MTJSNGQ0MzZSNWQ2NFI2ZDQ0OFI3ZDBSOGQzODRSOWQwUjEwZDE0NFIxMWkxMjJSMTJkNjRSMTNkNTEyUjE0YWkxaTJpMmkyaTJpMmkzaTNpMmkyaTJpMmkyaTJpM2kzaTJoZzoyMzRvUjFkODgwUjJhZDY0NGQ1MjRkNjI0ZDUyNGQ0ODhkNDIwZDM1MmQ1MjRkMzMyZDUyNGQ0NDBkMzYwZDQ1OGQzNTZkNDc2ZDM1MmQ0ODhkMzUyZDUwMGQzNTJkNTIwZDM2MGQ1NDBkMzY4ZDY0NGQ1MjRkNjIwZDc2OGQ2MjRkNjgwZDU5MGQ2MzRkNTU2ZDU4OGQ1MDBkNTg4ZDQ0MGQ1ODhkNDAyZDYzNmQzNjRkNjg0ZDM2NGQ3NjhkNjIwZDc2OGQzNjRkNzkyZDM2NGQ5MDBkNDA2ZDk0NmQ0NDhkOTkyZDUxNmQ5OTJkNTY4ZDk5MmQ2MDRkOTYyZDY0MGQ5MzJkNjU2ZDg4OGQ2NzZkODk2ZDY2NGQ5NDBkNjIyZDk4MmQ1ODBkMTAyNGQ1MDhkMTAyNGQ0MTZkMTAyNGQzNThkOTY0ZDMwMGQ5MDRkMzAwZDc5MmQzMDBkNjkyZDM1OGQ2MjZkNDE2ZDU2MGQ1MDBkNTYwZDU3NmQ1NjBkNjMyZDYxMmQ2ODhkNjY0ZDY4OGQ3OTJkMzY0ZDc5MmhSM2QxMDI0UjRkNjg4UjVkMzAwUjZkNjcyUjdkMFI4ZDM3MlI5ZDBSMTBkMTQ0UjExaTIzNFIxMmQzMDBSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTNpM2kzaTNpMWkzaTNpM2kzaTJpMWkzaTNpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJoZzoxMjFvUjFkODgwUjJhZDI2MGQ5MTJkMjY4ZDkxMmQzNTZkNjQ0ZDM2NGQ2MjRkMzU0ZDYxMmQzNDRkNjAwZDMyOGQ2MDBkMzA0ZDYwMGQzMDRkNTc2ZDQ3MmQ1NzZkNDcyZDYwMGQ0NDhkNjAwZDQzMmQ2MDBkNDE2ZDYxMmQ0MDBkNjI0ZDM5MmQ2NDRkMjU2ZDEwNDBkMjM2ZDExMDRkMjA2ZDExMzhkMTc2ZDExNzJkMTI4ZDExNzZkMTA0ZDExNzZkODZkMTE2NGQ2OGQxMTUyZDY4ZDExMzJkNjhkMTExNmQ3OGQxMTA0ZDg4ZDEwOTJkMTA4ZDEwOTJkMTI0ZDEwOTJkMTM0ZDExMDhkMTQ0ZDExMjRkMTY4ZDExMThkMTkyZDExMTJkMjAwZDEwOTJkMjA4ZDEwODBkMjIwZDEwNTBkMjMyZDEwMjBkMjQwZDk4OGQxMDRkNjM2ZDEwMGQ2MjBkODZkNjEwZDcyZDYwMGQ1NmQ2MDBkNDBkNjAwZDQwZDU3NmQyMDhkNTc2ZDIwOGQ2MDBkMTkyZDYwMGQxNzZkNjAwZDE2OGQ2MTBkMTYwZDYyMGQxNjRkNjQwZDI2MGQ5MTJoUjNkNTEyUjRkNDcyUjVkNDBSNmQ0NDhSN2QtMTUyUjhkNDA4UjlkMFIxMGQxNDRSMTFpMTIxUjEyZDQwUjEzZDUxMlIxNGFpMWkyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaGc6MjMzb1IxZDg4MFIyYWQ1OTJkMzY0ZDYxMmQzNjRkNTQwZDUwMGQ1MjJkNTE0ZDUwNGQ1MjhkNDgyZDUyMGQ0NjBkNTEyZDQ2MGQ0OTBkNDYwZDQ2OGQ1OTJkMzY0ZDYyMGQ3NjhkNjI0ZDY4MGQ1OTBkNjM0ZDU1NmQ1ODhkNTAwZDU4OGQ0NDBkNTg4ZDQwMmQ2MzZkMzY0ZDY4NGQzNjRkNzY4ZDYyMGQ3NjhkMzY0ZDc5MmQzNjRkOTAwZDQwNmQ5NDZkNDQ4ZDk5MmQ1MTZkOTkyZDU2OGQ5OTJkNjA0ZDk2MmQ2NDBkOTMyZDY1NmQ4ODhkNjc2ZDg5NmQ2NjRkOTQwZDYyMmQ5ODJkNTgwZDEwMjRkNTA4ZDEwMjRkNDE2ZDEwMjRkMzU4ZDk2NGQzMDBkOTA0ZDMwMGQ3OTJkMzAwZDY5MmQzNThkNjI2ZDQxNmQ1NjBkNTAwZDU2MGQ1NzZkNTYwZDYzMmQ2MTJkNjg4ZDY2NGQ2ODhkNzkyZDM2NGQ3OTJoUjNkMTAyNFI0ZDY4OFI1ZDMwMFI2ZDY2MFI3ZDBSOGQzNjBSOWQwUjEwZDE0NFIxMWkyMzNSMTJkMzAwUjEzZDEwMjRSMTRhaTFpMmkzaTNpM2kzaTFpM2kzaTNpM2kyaTFpM2kzaTNpM2kyaTNpM2kzaTNpM2kzaTNpM2kyaGc6MTIwb1IxZDg4MFIyYWQyNjRkNzQ4ZDMzNmQ2NDBkMzQ4ZDYyNGQzNDZkNjEyZDM0NGQ2MDBkMzE2ZDYwMGQyOTJkNjAwZDI5MmQ1NzZkNDQ4ZDU3NmQ0NDhkNjAwZDQyOGQ2MDBkNDIwZDYwMGQ0MDhkNjAyZDM5NmQ2MDRkMzg4ZDYxNmQyODBkNzc2ZDM5MmQ5NjBkNDA0ZDk4MGQ0MjJkOTkwZDQ0MGQxMDAwZDQ0OGQxMDAwZDQ2NGQxMDAwZDQ2NGQxMDI0ZDI4OGQxMDI0ZDI4OGQxMDAwZDMxMmQxMDAwZDMzNmQxMDAwZDMzOGQ5ODhkMzQwZDk3NmQzMzJkOTYwZDI0OGQ4MjRkMTUyZDk2NGQxNDhkOTg0ZDE1NGQ5OTJkMTYwZDEwMDBkMTc2ZDEwMDBkMTg4ZDEwMDBkMTg4ZDEwMjRkMzJkMTAyNGQzMmQxMDAwZDU2ZDEwMDBkNzJkMTAwMGQ5MmQ5ODhkMTEyZDk3NmQxMjRkOTUyZDIyOGQ3OTZkMTI0ZDYyOGQxMjBkNjIwZDEwOGQ2MTBkOTZkNjAwZDc2ZDYwMGQ1NmQ2MDBkNTZkNTc2ZDIyOGQ1NzZkMjI4ZDYwMGQyMTZkNjAwZDE5NmQ2MDBkMTkyZDYxMmQxODhkNjI0ZDE5NmQ2NDBkMjY0ZDc0OGhSM2Q1MTJSNGQ0NjRSNWQzMlI2ZDQ0OFI3ZDBSOGQ0MTZSOWQwUjEwZDE0NFIxMWkxMjBSMTJkMzJSMTNkNTEyUjE0YWkxaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTNpM2kyaTJpMmkyaTJpM2kzaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmhnOjIzMm9SMWQ4ODBSMmFkNTI4ZDUxNmQ1MDhkNTIwZDM5NmQ0MjRkMzk2ZDM5NmQzOTZkMzY4ZDQyMmQzNjJkNDQ4ZDM1NmQ0NjZkMzc0ZDQ4NGQzOTJkNTI4ZDUxNmQ2MjBkNzY4ZDYyNGQ2ODBkNTkwZDYzNGQ1NTZkNTg4ZDUwMGQ1ODhkNDQwZDU4OGQ0MDJkNjM2ZDM2NGQ2ODRkMzY0ZDc2OGQ2MjBkNzY4ZDM2NGQ3OTJkMzY0ZDkwMGQ0MDZkOTQ2ZDQ0OGQ5OTJkNTE2ZDk5MmQ1NjhkOTkyZDYwNGQ5NjJkNjQwZDkzMmQ2NTZkODg4ZDY3NmQ4OTZkNjY0ZDk0MGQ2MjJkOTgyZDU4MGQxMDI0ZDUwOGQxMDI0ZDQxNmQxMDI0ZDM1OGQ5NjRkMzAwZDkwNGQzMDBkNzkyZDMwMGQ2OTJkMzU4ZDYyNmQ0MTZkNTYwZDUwMGQ1NjBkNTc2ZDU2MGQ2MzJkNjEyZDY4OGQ2NjRkNjg4ZDc5MmQzNjRkNzkyaFIzZDEwMjRSNGQ2ODhSNWQzMDBSNmQ2NjhSN2QwUjhkMzY4UjlkMFIxMGQxNDRSMTFpMjMyUjEyZDMwMFIxM2QxMDI0UjE0YWkxaTJpM2kzaTNpM2kxaTNpM2kzaTNpMmkxaTNpM2kzaTNpMmkzaTNpM2kzaTNpM2kzaTNpMmhnOjExOW9SMWQ4ODBSMmFkMzY4ZDU3NmQ1MDRkNTc2ZDUwNGQ2MDBkNDg4ZDYwMGQ0NzJkNjAwZDQ2MGQ2MTJkNDQ4ZDYyNGQ0NDBkNjUyZDM0NGQxMDI4ZDMyMGQxMDI4ZDI0OGQ3MjRkMTcyZDEwMjhkMTQ4ZDEwMjhkNTZkNjYwZDUyZDYzMmQ0MGQ2MTZkMjhkNjAwZDE2ZDYwMGQwZDYwMGQwZDU3NmQxNDRkNTc2ZDE0NGQ2MDBkMTI4ZDYwMGQxMTJkNjAwZDEwOGQ2MTRkMTA0ZDYyOGQxMDhkNjUyZDE2OGQ5MTJkMTc2ZDkxMmQyMzZkNjcyZDIzMmQ2MzZkMjIwZDYxOGQyMDhkNjAwZDE5MmQ2MDBkMTgwZDYwMGQxODBkNTc2ZDMxNmQ1NzZkMzE2ZDYwMGQzMDRkNjAwZDI4OGQ2MDBkMjg0ZDYxNGQyODBkNjI4ZDI4NGQ2NTJkMzQ0ZDkxMmQzNDhkOTEyZDQxNmQ2MzJkNDIwZDYxNmQ0MTJkNjA4ZDQwNGQ2MDBkMzg4ZDYwMGQzNjhkNjAwZDM2OGQ1NzZoUjNkNTEyUjRkNTA0UjVkMFI2ZDQ0OFI3ZC00UjhkNDQ4UjlkMFIxMGQxNDRSMTFpMTE5UjEyZDBSMTNkNTEyUjE0YWkxaTJpMmkyaTNpM2kyaTJpMmkyaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTJpMmkzaTNpMmkyaGc6MjMxb1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTIzMVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjExOG9SMWQ4ODBSMmFkMjU2ZDEwMjhkMjMyZDEwMjhkOTZkNjM2ZDkyZDYyMGQ4MGQ2MTBkNjhkNjAwZDUyZDYwMGQzMmQ2MDBkMzJkNTc2ZDIwNGQ1NzZkMjA0ZDYwMGQxODhkNjAwZDE2NGQ2MDBkMTU4ZDYxMmQxNTJkNjI0ZDE2MGQ2NTJkMjU2ZDkzMmQyNjRkOTMyZDM2MGQ2NTZkMzcyZDYyOGQzNjJkNjE0ZDM1MmQ2MDBkMzI4ZDYwMGQzMjBkNjAwZDMyMGQ1NzZkNDY0ZDU3NmQ0NjRkNjAwZDQ1NmQ2MDBkNDMyZDYwMGQ0MThkNjE0ZDQwNGQ2MjhkMzkyZDY1NmQyNTZkMTAyOGhSM2Q1MTJSNGQ0NjRSNWQzMlI2ZDQ0OFI3ZC00UjhkNDE2UjlkMFIxMGQxNDRSMTFpMTE4UjEyZDMyUjEzZDUxMlIxNGFpMWkyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmkyaTJpM2kzaTJpMmkyaTJpMmkzaTNpMmhnOjIzMG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMzBSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMTdvUjFkODgwUjJhZDIyOGQ5ODhkMjc2ZDk4OGQzMTBkOTY0ZDM0NGQ5NDBkMzYwZDg4OGQzNjBkNjM2ZDM2MGQ2MjBkMzUyZDYxMGQzNDRkNjAwZDMyNGQ2MDBkMzAwZDYwMGQzMDBkNTc2ZDMyNGQ1NzZkMzQ4ZDU3NmQzNjhkNTcyZDM4OGQ1NjhkNDA4ZDU1MmQ0MTZkNTUyZDQxNmQ5NDRkNDE2ZDk2MGQ0MjZkOTY4ZDQzNmQ5NzZkNDUyZDk3NmQ0NzZkOTc2ZDQ3NmQxMDAwZDQ1MmQxMDAwZDQzMmQxMDAwZDQxMmQxMDA2ZDM5MmQxMDEyZDM2OGQxMDI0ZDM2MGQxMDI0ZDM2MGQ5NDBkMzQwZDk4NGQzMDBkMTAwNmQyNjBkMTAyOGQyMDhkMTAyOGQxNDRkMTAyOGQxMTJkOTkyZDgwZDk1NmQ4MGQ4NzZkODBkNjM2ZDgwZDYyMGQ3MmQ2MTBkNjRkNjAwZDQ0ZDYwMGQyMGQ2MDBkMjBkNTc2ZDQ0ZDU3NmQ2OGQ1NzZkODhkNTcyZDEwOGQ1NjhkMTI4ZDU1MmQxMzZkNTUyZDEzNmQ4ODRkMTM2ZDk0MGQxNjBkOTY0ZDE4NGQ5ODhkMjI4ZDk4OGhSM2Q1MTJSNGQ0NzZSNWQyMFI2ZDQ3MlI3ZC00UjhkNDUyUjlkMFIxMGQxNDRSMTFpMTE3UjEyZDIwUjEzZDUxMlIxNGFpMWkzaTNpMmkzaTNpMmkyaTJpM2kzaTJpMmkzaTNpMmkyaTJpM2kzaTJpMmkzaTNpM2kzaTJpM2kzaTJpMmkyaTNpM2kyaTJpM2kzaGc6MjI5b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTIyOVIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjExNm9SMWQ4ODBSMmFkMjM2ZDg5NmQyMzZkOTUyZDI1NmQ5NzJkMjc2ZDk5MmQzMTZkOTkyZDM1NmQ5OTJkMzgwZDk2NmQ0MDRkOTQwZDQxMmQ4OTJkNDMyZDkwMGQ0MjRkOTU2ZDM5MGQ5OTJkMzU2ZDEwMjhkMzAwZDEwMjhkMjQwZDEwMjhkMjEwZDk5MmQxODBkOTU2ZDE4MGQ4ODBkMTgwZDYwMGQ2MGQ2MDBkNjBkNTc2ZDkyZDU3NmQxNDBkNTc2ZDE3MGQ1NDZkMjAwZDUxNmQyMDhkNDUyZDIxMmQ0MjBkMjM2ZDQyMGQyMzZkNTc2ZDM5NmQ1NzZkMzk2ZDYwMGQyMzZkNjAwZDIzNmQ4OTZoUjNkNTEyUjRkNDMyUjVkNjBSNmQ2MDRSN2QtNFI4ZDU0NFI5ZDBSMTBkMTQ0UjExaTExNlIxMmQ2MFIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kyaTNpM2kzaTNpMmkyaTJpMmkzaTNpMmkyaTJpMmkyaTJpMmhnOjIyOG9SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMjhSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMTVvUjFkODgwUjJhZDk2ZDY5MmQ5NmQ2MzJkMTQyZDYwMGQxODhkNTY4ZDI1MmQ1NjhkMjg4ZDU2OGQzMjBkNTc4ZDM1MmQ1ODhkMzY0ZDU4OGQzNzZkNTg4ZDM4NGQ1ODRkMzkyZDU4MGQ0MDRkNTY4ZDQyMGQ3MDBkMzk2ZDcwNGQzODBkNjUyZDM0MmQ2MjJkMzA0ZDU5MmQyNTZkNTkyZDIwNGQ1OTJkMTc0ZDYxMmQxNDRkNjMyZDE0NGQ2NjhkMTQ0ZDcwMGQxNThkNzE4ZDE3MmQ3MzZkMjA4ZDc0NGQyMzZkNzU2ZDI3OGQ3NzBkMzIwZDc4NGQzNTZkODAwZDM4OGQ4MTZkNDEwZDg0MmQ0MzJkODY4ZDQzMmQ5MDBkNDMyZDk2MGQzOTBkOTk0ZDM0OGQxMDI4ZDI2OGQxMDI4ZDIxNmQxMDI4ZDE5MGQxMDE4ZDE2NGQxMDA4ZDE0OGQxMDA4ZDEzNmQxMDA4ZDEyMmQxMDE0ZDEwOGQxMDIwZDkyZDEwMjhkODBkODgwZDEwNGQ4NzZkMTE2ZDk0MGQxNTZkOTcyZDE5NmQxMDA0ZDI2OGQxMDA0ZDMyNGQxMDA0ZDM1NGQ5ODRkMzg0ZDk2NGQzODRkOTI0ZDM4NGQ4OTZkMzY4ZDg3OGQzNTJkODYwZDMzNmQ4NTJkMjk2ZDgzNmQyNDhkODE4ZDIwMGQ4MDBkMTY0ZDc4NGQxMjhkNzY4ZDExMmQ3NDRkOTZkNzIwZDk2ZDY5MmhSM2Q1MTJSNGQ0MzJSNWQ4MFI2ZDQ1NlI3ZC00UjhkMzc2UjlkMFIxMGQxNDRSMTFpMTE1UjEyZDgwUjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpM2kyaTJpM2kzaTNpM2kzaTNpM2kzaTNpM2hnOjIyN29SMWQ4ODBSMmFkODk2ZDEwNzZkMTEyZDEwNzZkMTEyZDI1MmQ4OTZkMjUyZDg5NmQxMDc2ZDg2NGQyODBkMTQwZDI4MGQxNDBkMTA0OGQ4NjRkMTA0OGQ4NjRkMjgwaFIzZDEwMjRSNGQ4OTZSNWQxMTJSNmQ3NzJSN2QtNTJSOGQ2NjBSOWQwUjEwZDE0NFIxMWkyMjdSMTJkMTEyUjEzZDEwMjRSMTRhaTFpMmkyaTJpMmkxaTJpMmkyaTJoZzoxMTRvUjFkODgwUjJhZDIwMGQ3MDBkMjQwZDYzNmQyODZkNjAyZDMzMmQ1NjhkMzgwZDU2OGQ0MjBkNTY4ZDQ0MmQ1ODZkNDY0ZDYwNGQ0NjRkNjI4ZDQ2NGQ2NDhkNDU0ZDY2MGQ0NDRkNjcyZDQyNGQ2NzJkNDA0ZDY3MmQzOTRkNjYwZDM4NGQ2NDhkMzg4ZDYyOGQzODhkNjE2ZDM4NGQ2MDhkMzgwZDYwMGQzNjBkNjAwZDMyOGQ2MDBkMjgyZDY0MGQyMzZkNjgwZDIwMGQ3NTJkMjAwZDk2OGQyMDBkOTg0ZDIxMGQ5OTJkMjIwZDEwMDBkMjM2ZDEwMDBkMzI0ZDEwMDBkMzI0ZDEwMjRkMjhkMTAyNGQyOGQxMDAwZDEwOGQxMDAwZDEyOGQxMDAwZDEzNmQ5OTJkMTQ0ZDk4NGQxNDRkOTY4ZDE0NGQ2MzZkMTQ0ZDYyMGQxMzZkNjEwZDEyOGQ2MDBkMTA4ZDYwMGQzMmQ2MDBkMzJkNTc2ZDY0ZDU3NmQ5MmQ1NzZkMTMwZDU3MGQxNjhkNTY0ZDE4OGQ1NTZkMjAwZDU1NmQyMDBkNzAwaFIzZDUxMlI0ZDQ2NFI1ZDI4UjZkNDY4UjdkMFI4ZDQ0MFI5ZDBSMTBkMTQ0UjExaTExNFIxMmQyOFIxM2Q1MTJSMTRhaTFpM2kzaTNpM2kzaTNpM2kzaTNpM2kzaTNpMmkzaTNpMmkyaTJpMmkyaTNpM2kyaTNpM2kyaTJpMmkzaTNpMmkyaGc6MjI2b1IxZDg4MFIyYWQ4OTZkMTA3NmQxMTJkMTA3NmQxMTJkMjUyZDg5NmQyNTJkODk2ZDEwNzZkODY0ZDI4MGQxNDBkMjgwZDE0MGQxMDQ4ZDg2NGQxMDQ4ZDg2NGQyODBoUjNkMTAyNFI0ZDg5NlI1ZDExMlI2ZDc3MlI3ZC01MlI4ZDY2MFI5ZDBSMTBkMTQ0UjExaTIyNlIxMmQxMTJSMTNkMTAyNFIxNGFpMWkyaTJpMmkyaTFpMmkyaTJpMmhnOjExM29SMWQ4ODBSMmFkMzYwZDY4MGQzNDRkNjQ0ZDMxNmQ2MjJkMjg4ZDYwMGQyNDhkNjAwZDE5MmQ2MDBkMTUyZDY0OGQxMTJkNjk2ZDExMmQ4MTJkMTEyZDkxMmQxNDZkOTU0ZDE4MGQ5OTZkMjMyZDk5NmQyNzZkOTk2ZDMxMGQ5NzZkMzQ0ZDk1NmQzNjBkOTA4ZDM2MGQ2ODBkNDE2ZDExMTJkNDE2ZDExMzJkNDI2ZDExNDBkNDM2ZDExNDhkNDUyZDExNDhkNDc2ZDExNDhkNDc2ZDExNzJkMjkyZDExNzJkMjkyZDExNDhkMzI0ZDExNDhkMzQ0ZDExNDhkMzUyZDExNDBkMzYwZDExMzJkMzYwZDExMTJkMzYwZDk2NGQzMzZkOTk2ZDMwMmQxMDEyZDI2OGQxMDI4ZDIyMGQxMDI4ZDE1MmQxMDI4ZDEwMGQ5NzBkNDhkOTEyZDQ4ZDgwMGQ0OGQ2OTJkMTA4ZDYzMmQxNjhkNTcyZDIzNmQ1NzJkMjgwZDU3MmQzMTBkNTg4ZDM0MGQ2MDRkMzY0ZDYyOGQ0MDBkNTc2ZDQxNmQ1NzZkNDE2ZDExMTJoUjNkNTEyUjRkNDc2UjVkNDhSNmQ0NTJSN2QtMTQ4UjhkNDA0UjlkMFIxMGQxNDRSMTFpMTEzUjEyZDQ4UjEzZDUxMlIxNGFpMWkzaTNpM2kzaTNpM2kzaTNpMmkxaTNpM2kyaTJpMmkyaTJpM2kzaTJpM2kzaTNpM2kzaTNpM2kzaTJpMmkyaGc6MjI1b1IxZDg4MFIyYWQ2MzZkNTY0ZDY0OGQ1NjRkNjQ4ZDkzNmQ2NDhkOTg4ZDY3NmQ5OTZkNjc2ZDEwMjBkNjQ4ZDEwMjBkNTkyZDEwMjBkNTkyZDk2NGQ1OTJkOTQ4ZDU2OGQ5OTZkNTIwZDEwMTRkNDcyZDEwMzJkNDE2ZDEwMjBkMzYwZDEwMDhkMzIwZDk0OGQyODBkODg4ZDI4MGQ3OThkMjgwZDcwOGQzMzJkNjQ2ZDM4NGQ1ODRkNDM0ZDU3MmQ0ODRkNTYwZDUyNmQ1NzJkNTY4ZDU4NGQ1OTZkNjI4ZDYxMmQ1OTZkNjM2ZDU2NGQ1OTJkNjcyZDU2NGQ2MDhkNDkyZDYxMGQ0MjBkNjEyZDM4NGQ2NjJkMzQ4ZDcxMmQzNDhkNzk0ZDM0OGQ4NzZkMzY2ZDkxNGQzODRkOTUyZDQxOGQ5NzBkNDUyZDk4OGQ1MDZkOTc4ZDU2MGQ5NjhkNTkyZDkwMGQ1OTJkNjcyZDU1NmQzNjRkNTc2ZDM2NGQ1MDRkNTAwZDQ4NmQ1MTRkNDY4ZDUyOGQ0NDZkNTIwZDQyNGQ1MTJkNDI0ZDQ5MGQ0MjRkNDY4ZDU1NmQzNjRoUjNkMTAyNFI0ZDY3NlI1ZDI4MFI2ZDY2MFI3ZC04UjhkMzgwUjlkMFIxMGQxNDRSMTFpMjI1UjEyZDI4MFIxM2QxMDI0UjE0YWkxaTJpMmkzaTJpMmkzaTJpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTJpMWkyaTNpM2kzaTNoZzoxMTJvUjFkODgwUjJhZDE4MGQxMTQ4ZDIwOGQxMTQ4ZDIwOGQxMTcyZDI0ZDExNzJkMjRkMTE0OGQ0OGQxMTQ4ZDY4ZDExNDhkNzZkMTE0MGQ4NGQxMTMyZDg0ZDExMTJkODRkNjQwZDg0ZDYyNGQ3NmQ2MTRkNjhkNjA0ZDQ4ZDYwNGQyNGQ2MDRkMjRkNTgwZDYwZDU4MGQ4MGQ1ODBkOThkNTc2ZDExNmQ1NzJkMTMyZDU2MGQxNDBkNTYwZDE0MGQ2NTJkMTY4ZDYxMmQyMDJkNTkyZDIzNmQ1NzJkMjc2ZDU3MmQzNTZkNTcyZDQwOGQ2MjZkNDYwZDY4MGQ0NjBkNzk2ZDQ2MGQ5MDhkNDA0ZDk2OGQzNDhkMTAyOGQyNzJkMTAyOGQyMjhkMTAyOGQxOThkMTAxNGQxNjhkMTAwMGQxNDBkOTcyZDE0MGQxMTEyZDE0MGQxMTMyZDE1MmQxMTQwZDE2NGQxMTQ4ZDE4MGQxMTQ4ZDE0MGQ5MjBkMTYwZDk2MGQxOTBkOTgwZDIyMGQxMDAwZDI2MGQxMDAwZDMxNmQxMDAwZDM1NmQ5NTBkMzk2ZDkwMGQzOTZkNzk2ZDM5NmQ3MDBkMzY2ZDY1MmQzMzZkNjA0ZDI3NmQ2MDRkMjQwZDYwNGQyMDRkNjI2ZDE2OGQ2NDhkMTQwZDY5NmQxNDBkOTIwaFIzZDUxMlI0ZDQ2MFI1ZDI0UjZkNDY0UjdkLTE0OFI4ZDQ0MFI5ZDBSMTBkMTQ0UjExaTExMlIxMmQyNFIxM2Q1MTJSMTRhaTFpMmkyaTJpMmkyaTNpM2kyaTNpM2kyaTJpMmkzaTNpMmkyaTNpM2kzaTNpM2kzaTNpM2kyaTNpM2kxaTNpM2kzaTNpM2kzaTNpM2kyaGc6MjI0b1IxZDg4MFIyYWQ1MjBkNTIwZDUwMGQ1MjRkMzg4ZDQyOGQzOTBkNDAwZDM5MmQzNzJkNDEyZDM2NmQ0MzJkMzYwZDQ1MmQzNzJkNDcyZDM4NGQ1MjBkNTIwZDYzNmQ1NjRkNjQ4ZDU2NGQ2NDhkOTM2ZDY0OGQ5ODhkNjc2ZDk5NmQ2NzZkMTAyMGQ2NDhkMTAyMGQ1OTJkMTAyMGQ1OTJkOTY0ZDU5MmQ5NDhkNTY4ZDk5NmQ1MjBkMTAxNGQ0NzJkMTAzMmQ0MTZkMTAyMGQzNjBkMTAwOGQzMjBkOTQ4ZDI4MGQ4ODhkMjgwZDc5OGQyODBkNzA4ZDMzMmQ2NDZkMzg0ZDU4NGQ0MzRkNTcyZDQ4NGQ1NjBkNTI2ZDU3MmQ1NjhkNTg0ZDU5NmQ2MjhkNjEyZDU5NmQ2MzZkNTY0ZDU5MmQ2NzJkNTY0ZDYwOGQ0OTJkNjEwZDQyMGQ2MTJkMzg0ZDY2MmQzNDhkNzEyZDM0OGQ3OTRkMzQ4ZDg3NmQzNjZkOTE0ZDM4NGQ5NTJkNDE4ZDk3MGQ0NTJkOTg4ZDUwNmQ5NzhkNTYwZDk2OGQ1OTJkOTAwZDU5MmQ2NzJoUjNkMTAyNFI0ZDY3NlI1ZDI4MFI2ZDY2NFI3ZC04UjhkMzg0UjlkMFIxMGQxNDRSMTFpMjI0UjEyZDI4MFIxM2QxMDI0UjE0YWkxaTJpM2kzaTNpM2kxaTJpMmkzaTJpMmkzaTJpM2kzaTNpM2kzaTNpM2kzaTNpMWkzaTNpM2kzaTNpM2kzaTJoZ2h5ODpmb250TmFtZXk4OkZhbmdTb25nZw"}];
flash.display.DisplayObject.GRAPHICS_INVALID = 2;
flash.display.DisplayObject.MATRIX_INVALID = 4;
flash.display.DisplayObject.MATRIX_CHAIN_INVALID = 8;
flash.display.DisplayObject.MATRIX_OVERRIDDEN = 16;
flash.display.DisplayObject.TRANSFORM_INVALID = 32;
flash.display.DisplayObject.BOUNDS_INVALID = 64;
flash.display.DisplayObject.RENDER_VALIDATE_IN_PROGRESS = 1024;
flash.display.DisplayObject.ALL_RENDER_FLAGS = 98;
DefaultAssetLibrary.className = new haxe.ds.StringMap();
DefaultAssetLibrary.path = new haxe.ds.StringMap();
DefaultAssetLibrary.type = new haxe.ds.StringMap();
flash.text.Font.DEFAULT_FONT_DATA = "q:55oy6:ascentd950.5y4:dataad84d277.5d564d277.5d564d320.5d293d1024d187.5d1024d442.5d362.5d84d362.5d84d277.5hy6:_widthd651.5y4:xMaxd564y4:xMind84y4:yMaxd746.5y4:yMind0y7:_heightd662.5y7:leadingd168y7:descentd241.5y8:charCodei55y15:leftsideBearingd84y12:advanceWidthd651.5y8:commandsai1i2i2i2i2i2i2i2hg:111oR0d950.5R1ad313.5d528.5d239.5d528.5d196.5d586.25d153.5d644d153.5d744.5d153.5d845d196.25d902.75d239d960.5d313.5d960.5d387d960.5d430d902.5d473d844.5d473d744.5d473d645d430d586.75d387d528.5d313.5d528.5d313.5d450.5d433.5d450.5d502d528.5d570.5d606.5d570.5d744.5d570.5d882d502d960.25d433.5d1038.5d313.5d1038.5d193d1038.5d124.75d960.25d56.5d882d56.5d744.5d56.5d606.5d124.75d528.5d193d450.5d313.5d450.5hR2d626.5R3d570.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i111R11d56.5R12d626.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:54oR0d950.5R1ad338d610.5d270d610.5d230.25d657d190.5d703.5d190.5d784.5d190.5d865d230.25d911.75d270d958.5d338d958.5d406d958.5d445.75d911.75d485.5d865d485.5d784.5d485.5d703.5d445.75d657d406d610.5d338d610.5d538.5d294d538.5d386d500.5d368d461.75d358.5d423d349d385d349d285d349d232.25d416.5d179.5d484d172d620.5d201.5d577d246d553.75d290.5d530.5d344d530.5d456.5d530.5d521.75d598.75d587d667d587d784.5d587d899.5d519d969d451d1038.5d338d1038.5d208.5d1038.5d140d939.25d71.5d840d71.5d651.5d71.5d474.5d155.5d369.25d239.5d264d381d264d419d264d457.75d271.5d496.5d279d538.5d294hR2d651.5R3d587R4d71.5R5d760R6d-14.5R7d688.5R8d168R9d241.5R10i54R11d71.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3hg:110oR0d950.5R1ad562d686d562d1024d470d1024d470d689d470d609.5d439d570d408d530.5d346d530.5d271.5d530.5d228.5d578d185.5d625.5d185.5d707.5d185.5d1024d93d1024d93d464d185.5d464d185.5d551d218.5d500.5d263.25d475.5d308d450.5d366.5d450.5d463d450.5d512.5d510.25d562d570d562d686hR2d649R3d562R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i110R11d93R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:53oR0d950.5R1ad110.5d277.5d507d277.5d507d362.5d203d362.5d203d545.5d225d538d247d534.25d269d530.5d291d530.5d416d530.5d489d599d562d667.5d562d784.5d562d905d487d971.75d412d1038.5d275.5d1038.5d228.5d1038.5d179.75d1030.5d131d1022.5d79d1006.5d79d905d124d929.5d172d941.5d220d953.5d273.5d953.5d360d953.5d410.5d908d461d862.5d461d784.5d461d706.5d410.5d661d360d615.5d273.5d615.5d233d615.5d192.75d624.5d152.5d633.5d110.5d652.5d110.5d277.5hR2d651.5R3d562R4d79R5d746.5R6d-14.5R7d667.5R8d168R9d241.5R10i53R11d79R12d651.5R13ai1i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3i2hg:109oR0d950.5R1ad532.5d571.5d567d509.5d615d480d663d450.5d728d450.5d815.5d450.5d863d511.75d910.5d573d910.5d686d910.5d1024d818d1024d818d689d818d608.5d789.5d569.5d761d530.5d702.5d530.5d631d530.5d589.5d578d548d625.5d548d707.5d548d1024d455.5d1024d455.5d689d455.5d608d427d569.25d398.5d530.5d339d530.5d268.5d530.5d227d578.25d185.5d626d185.5d707.5d185.5d1024d93d1024d93d464d185.5d464d185.5d551d217d499.5d261d475d305d450.5d365.5d450.5d426.5d450.5d469.25d481.5d512d512.5d532.5d571.5hR2d997.5R3d910.5R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i109R11d93R12d997.5R13ai1i3i3i3i3i2i2i2i3i3i3i3i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:52oR0d950.5R1ad387d365.5d132d764d387d764d387d365.5d360.5d277.5d487.5d277.5d487.5d764d594d764d594d848d487.5d848d487.5d1024d387d1024d387d848d50d848d50d750.5d360.5d277.5hR2d651.5R3d594R4d50R5d746.5R6d0R7d696.5R8d168R9d241.5R10i52R11d50R12d651.5R13ai1i2i2i2i1i2i2i2i2i2i2i2i2i2i2i2hg:108oR0d950.5R1ad96.5d246d188.5d246d188.5d1024d96.5d1024d96.5d246hR2d284.5R3d188.5R4d96.5R5d778R6d0R7d681.5R8d168R9d241.5R10i108R11d96.5R12d284.5R13ai1i2i2i2i2hg:51oR0d950.5R1ad415.5d621.5d488d637d528.75d686d569.5d735d569.5d807d569.5d917.5d493.5d978d417.5d1038.5d277.5d1038.5d230.5d1038.5d180.75d1029.25d131d1020d78d1001.5d78d904d120d928.5d170d941d220d953.5d274.5d953.5d369.5d953.5d419.25d916d469d878.5d469d807d469d741d422.75d703.75d376.5d666.5d294d666.5d207d666.5d207d583.5d298d583.5d372.5d583.5d412d553.75d451.5d524d451.5d468d451.5d410.5d410.75d379.75d370d349d294d349d252.5d349d205d358d157.5d367d100.5d386d100.5d296d158d280d208.25d272d258.5d264d303d264d418d264d485d316.25d552d368.5d552d457.5d552d519.5d516.5d562.25d481d605d415.5d621.5hR2d651.5R3d569.5R4d78R5d760R6d-14.5R7d682R8d168R9d241.5R10i51R11d78R12d651.5R13ai1i3i3i3i3i3i3i2i3i3i3i3i3i3i2i2i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:107oR0d950.5R1ad93d246d185.5d246d185.5d705.5d460d464d577.5d464d280.5d726d590d1024d470d1024d185.5d750.5d185.5d1024d93d1024d93d246hR2d593R3d590R4d93R5d778R6d0R7d685R8d168R9d241.5R10i107R11d93R12d593R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:50oR0d950.5R1ad196.5d939d549d939d549d1024d75d1024d75d939d132.5d879.5d231.75d779.25d331d679d356.5d650d405d595.5d424.25d557.75d443.5d520d443.5d483.5d443.5d424d401.75d386.5d360d349d293d349d245.5d349d192.75d365.5d140d382d80d415.5d80d313.5d141d289d194d276.5d247d264d291d264d407d264d476d322d545d380d545d477d545d523d527.75d564.25d510.5d605.5d465d661.5d452.5d676d385.5d745.25d318.5d814.5d196.5d939hR2d651.5R3d549R4d75R5d760R6d0R7d685R8d168R9d241.5R10i50R11d75R12d651.5R13ai1i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:106oR0d950.5R1ad96.5d464d188.5d464d188.5d1034d188.5d1141d147.75d1189d107d1237d16.5d1237d-18.5d1237d-18.5d1159d6d1159d58.5d1159d77.5d1134.75d96.5d1110.5d96.5d1034d96.5d464d96.5d246d188.5d246d188.5d362.5d96.5d362.5d96.5d246hR2d284.5R3d188.5R4d-18.5R5d778R6d-213R7d796.5R8d168R9d241.5R10i106R11d-18.5R12d284.5R13ai1i2i2i3i3i2i2i2i3i3i2i1i2i2i2i2hg:49oR0d950.5R1ad127d939d292d939d292d369.5d112.5d405.5d112.5d313.5d291d277.5d392d277.5d392d939d557d939d557d1024d127d1024d127d939hR2d651.5R3d557R4d112.5R5d746.5R6d0R7d634R8d168R9d241.5R10i49R11d112.5R12d651.5R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:105oR0d950.5R1ad96.5d464d188.5d464d188.5d1024d96.5d1024d96.5d464d96.5d246d188.5d246d188.5d362.5d96.5d362.5d96.5d246hR2d284.5R3d188.5R4d96.5R5d778R6d0R7d681.5R8d168R9d241.5R10i105R11d96.5R12d284.5R13ai1i2i2i2i2i1i2i2i2i2hg:48oR0d950.5R1ad325.5d344d247.5d344d208.25d420.75d169d497.5d169d651.5d169d805d208.25d881.75d247.5d958.5d325.5d958.5d404d958.5d443.25d881.75d482.5d805d482.5d651.5d482.5d497.5d443.25d420.75d404d344d325.5d344d325.5d264d451d264d517.25d363.25d583.5d462.5d583.5d651.5d583.5d840d517.25d939.25d451d1038.5d325.5d1038.5d200d1038.5d133.75d939.25d67.5d840d67.5d651.5d67.5d462.5d133.75d363.25d200d264d325.5d264hR2d651.5R3d583.5R4d67.5R5d760R6d-14.5R7d692.5R8d168R9d241.5R10i48R11d67.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:104oR0d950.5R1ad562d686d562d1024d470d1024d470d689d470d609.5d439d570d408d530.5d346d530.5d271.5d530.5d228.5d578d185.5d625.5d185.5d707.5d185.5d1024d93d1024d93d246d185.5d246d185.5d551d218.5d500.5d263.25d475.5d308d450.5d366.5d450.5d463d450.5d512.5d510.25d562d570d562d686hR2d649R3d562R4d93R5d778R6d0R7d685R8d168R9d241.5R10i104R11d93R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:47oR0d950.5R1ad260d277.5d345d277.5d85d1119d0d1119d260d277.5hR2d345R3d345R4d0R5d746.5R6d-95R7d746.5R8d168R9d241.5R10i47R11d0R12d345R13ai1i2i2i2i2hg:103oR0d950.5R1ad465d737.5d465d637.5d423.75d582.5d382.5d527.5d308d527.5d234d527.5d192.75d582.5d151.5d637.5d151.5d737.5d151.5d837d192.75d892d234d947d308d947d382.5d947d423.75d892d465d837d465d737.5d557d954.5d557d1097.5d493.5d1167.25d430d1237d299d1237d250.5d1237d207.5d1229.75d164.5d1222.5d124d1207.5d124d1118d164.5d1140d204d1150.5d243.5d1161d284.5d1161d375d1161d420d1113.75d465d1066.5d465d971d465d925.5d436.5d975d392d999.5d347.5d1024d285.5d1024d182.5d1024d119.5d945.5d56.5d867d56.5d737.5d56.5d607.5d119.5d529d182.5d450.5d285.5d450.5d347.5d450.5d392d475d436.5d499.5d465d549d465d464d557d464d557d954.5hR2d650R3d557R4d56.5R5d573.5R6d-213R7d517R8d168R9d241.5R10i103R11d56.5R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i2i3i3i3i3i2i3i3i3i3i3i3i3i3i2i2i2hg:46oR0d950.5R1ad109.5d897d215d897d215d1024d109.5d1024d109.5d897hR2d325.5R3d215R4d109.5R5d127R6d0R7d17.5R8d168R9d241.5R10i46R11d109.5R12d325.5R13ai1i2i2i2i2hg:102oR0d950.5R1ad380d246d380d322.5d292d322.5d242.5d322.5d223.25d342.5d204d362.5d204d414.5d204d464d355.5d464d355.5d535.5d204d535.5d204d1024d111.5d1024d111.5d535.5d23.5d535.5d23.5d464d111.5d464d111.5d425d111.5d331.5d155d288.75d198.5d246d293d246d380d246hR2d360.5R3d380R4d23.5R5d778R6d0R7d754.5R8d168R9d241.5R10i102R11d23.5R12d360.5R13ai1i2i2i3i3i2i2i2i2i2i2i2i2i2i2i2i3i3i2hg:45oR0d950.5R1ad50d702.5d319.5d702.5d319.5d784.5d50d784.5d50d702.5hR2d369.5R3d319.5R4d50R5d321.5R6d239.5R7d271.5R8d168R9d241.5R10i45R11d50R12d369.5R13ai1i2i2i2i2hg:101oR0d950.5R1ad575.5d721d575.5d766d152.5d766d158.5d861d209.75d910.75d261d960.5d352.5d960.5d405.5d960.5d455.25d947.5d505d934.5d554d908.5d554d995.5d504.5d1016.5d452.5d1027.5d400.5d1038.5d347d1038.5d213d1038.5d134.75d960.5d56.5d882.5d56.5d749.5d56.5d612d130.75d531.25d205d450.5d331d450.5d444d450.5d509.75d523.25d575.5d596d575.5d721d483.5d694d482.5d618.5d441.25d573.5d400d528.5d332d528.5d255d528.5d208.75d572d162.5d615.5d155.5d694.5d483.5d694hR2d630R3d575.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i101R11d56.5R12d630R13ai1i2i2i3i3i3i3i2i3i3i3i3i3i3i3i3i1i3i3i3i3i2hg:44oR0d950.5R1ad120d897d225.5d897d225.5d983d143.5d1143d79d1143d120d983d120d897hR2d325.5R3d225.5R4d79R5d127R6d-119R7d48R8d168R9d241.5R10i44R11d79R12d325.5R13ai1i2i2i2i2i2i2hg:100oR0d950.5R1ad465d549d465d246d557d246d557d1024d465d1024d465d940d436d990d391.75d1014.25d347.5d1038.5d285.5d1038.5d184d1038.5d120.25d957.5d56.5d876.5d56.5d744.5d56.5d612.5d120.25d531.5d184d450.5d285.5d450.5d347.5d450.5d391.75d474.75d436d499d465d549d151.5d744.5d151.5d846d193.25d903.75d235d961.5d308d961.5d381d961.5d423d903.75d465d846d465d744.5d465d643d423d585.25d381d527.5d308d527.5d235d527.5d193.25d585.25d151.5d643d151.5d744.5hR2d650R3d557R4d56.5R5d778R6d-14.5R7d721.5R8d168R9d241.5R10i100R11d56.5R12d650R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:43oR0d950.5R1ad471d382d471d660.5d749.5d660.5d749.5d745.5d471d745.5d471d1024d387d1024d387d745.5d108.5d745.5d108.5d660.5d387d660.5d387d382d471d382hR2d858R3d749.5R4d108.5R5d642R6d0R7d533.5R8d168R9d241.5R10i43R11d108.5R12d858R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:99oR0d950.5R1ad499.5d485.5d499.5d571.5d460.5d550d421.25d539.25d382d528.5d342d528.5d252.5d528.5d203d585.25d153.5d642d153.5d744.5d153.5d847d203d903.75d252.5d960.5d342d960.5d382d960.5d421.25d949.75d460.5d939d499.5d917.5d499.5d1002.5d461d1020.5d419.75d1029.5d378.5d1038.5d332d1038.5d205.5d1038.5d131d959d56.5d879.5d56.5d744.5d56.5d607.5d131.75d529d207d450.5d338d450.5d380.5d450.5d421d459.25d461.5d468d499.5d485.5hR2d563R3d499.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i99R11d56.5R12d563R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:42oR0d950.5R1ad481.5d400.5d302d497.5d481.5d595d452.5d644d284.5d542.5d284.5d731d227.5d731d227.5d542.5d59.5d644d30.5d595d210d497.5d30.5d400.5d59.5d351d227.5d452.5d227.5d264d284.5d264d284.5d452.5d452.5d351d481.5d400.5hR2d512R3d481.5R4d30.5R5d760R6d293R7d729.5R8d168R9d241.5R10i42R11d30.5R12d512R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2hg:98oR0d950.5R1ad498.5d744.5d498.5d643d456.75d585.25d415d527.5d342d527.5d269d527.5d227.25d585.25d185.5d643d185.5d744.5d185.5d846d227.25d903.75d269d961.5d342d961.5d415d961.5d456.75d903.75d498.5d846d498.5d744.5d185.5d549d214.5d499d258.75d474.75d303d450.5d364.5d450.5d466.5d450.5d530.25d531.5d594d612.5d594d744.5d594d876.5d530.25d957.5d466.5d1038.5d364.5d1038.5d303d1038.5d258.75d1014.25d214.5d990d185.5d940d185.5d1024d93d1024d93d246d185.5d246d185.5d549hR2d650R3d594R4d93R5d778R6d-14.5R7d685R8d168R9d241.5R10i98R11d93R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i2i2hg:41oR0d950.5R1ad82d247d162d247d237d365d274.25d478d311.5d591d311.5d702.5d311.5d814.5d274.25d928d237d1041.5d162d1159d82d1159d148.5d1044.5d181.25d931.25d214d818d214d702.5d214d587d181.25d474.5d148.5d362d82d247hR2d399.5R3d311.5R4d82R5d777R6d-135R7d695R8d168R9d241.5R10i41R11d82R12d399.5R13ai1i2i3i3i3i3i2i3i3i3i3hg:97oR0d950.5R1ad351d742.5d239.5d742.5d196.5d768d153.5d793.5d153.5d855d153.5d904d185.75d932.75d218d961.5d273.5d961.5d350d961.5d396.25d907.25d442.5d853d442.5d763d442.5d742.5d351d742.5d534.5d704.5d534.5d1024d442.5d1024d442.5d939d411d990d364d1014.25d317d1038.5d249d1038.5d163d1038.5d112.25d990.25d61.5d942d61.5d861d61.5d766.5d124.75d718.5d188d670.5d313.5d670.5d442.5d670.5d442.5d661.5d442.5d598d400.75d563.25d359d528.5d283.5d528.5d235.5d528.5d190d540d144.5d551.5d102.5d574.5d102.5d489.5d153d470d200.5d460.25d248d450.5d293d450.5d414.5d450.5d474.5d513.5d534.5d576.5d534.5d704.5hR2d627.5R3d534.5R4d61.5R5d573.5R6d-14.5R7d512R8d168R9d241.5R10i97R11d61.5R12d627.5R13ai1i3i3i3i3i3i3i2i2i1i2i2i2i3i3i3i3i3i3i2i2i3i3i3i3i2i3i3i3i3hg:40oR0d950.5R1ad317.5d247d250.5d362d218d474.5d185.5d587d185.5d702.5d185.5d818d218.25d931.25d251d1044.5d317.5d1159d237.5d1159d162.5d1041.5d125.25d928d88d814.5d88d702.5d88d591d125d478d162d365d237.5d247d317.5d247hR2d399.5R3d317.5R4d88R5d777R6d-135R7d689R8d168R9d241.5R10i40R11d88R12d399.5R13ai1i3i3i3i3i2i3i3i3i3i2hg:96oR0d950.5R1ad183.5d205d324.5d392d248d392d85d205d183.5d205hR2d512R3d324.5R4d85R5d819R6d632R7d734R8d168R9d241.5R10i96R11d85R12d512R13ai1i2i2i2i2hg:39oR0d950.5R1ad183.5d277.5d183.5d555d98.5d555d98.5d277.5d183.5d277.5hR2d281.5R3d183.5R4d98.5R5d746.5R6d469R7d648R8d168R9d241.5R10i39R11d98.5R12d281.5R13ai1i2i2i2i2hg:95oR0d950.5R1ad522d1194d522d1265.5d-10d1265.5d-10d1194d522d1194hR2d512R3d522R4d-10R5d-170R6d-241.5R7d-160R8d168R9d241.5R10i95R11d-10R12d512R13ai1i2i2i2i2hg:38oR0d950.5R1ad249d622.5d203.5d663d182.25d703.25d161d743.5d161d787.5d161d860.5d214d909d267d957.5d347d957.5d394.5d957.5d436d941.75d477.5d926d514d894d249d622.5d319.5d566.5d573.5d826.5d603d782d619.5d731.25d636d680.5d639d623.5d732d623.5d726d689.5d700d754d674d818.5d627.5d881.5d767d1024d641d1024d569.5d950.5d517.5d995d460.5d1016.75d403.5d1038.5d338d1038.5d217.5d1038.5d141d969.75d64.5d901d64.5d793.5d64.5d729.5d98d673.25d131.5d617d198.5d567.5d174.5d536d162d504.75d149.5d473.5d149.5d443.5d149.5d362.5d205d313.25d260.5d264d352.5d264d394d264d435.25d273d476.5d282d519d300d519d391d475.5d367.5d436d355.25d396.5d343d362.5d343d310d343d277.25d370.75d244.5d398.5d244.5d442.5d244.5d468d259.25d493.75d274d519.5d319.5d566.5hR2d798.5R3d767R4d64.5R5d760R6d-14.5R7d695.5R8d168R9d241.5R10i38R11d64.5R12d798.5R13ai1i3i3i3i3i3i3i2i1i2i3i3i2i3i3i2i2i2i3i3i3i3i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3hg:94oR0d950.5R1ad478d277.5d749.5d556d649d556d429d358.5d209d556d108.5d556d380d277.5d478d277.5hR2d858R3d749.5R4d108.5R5d746.5R6d468R7d638R8d168R9d241.5R10i94R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:37oR0d950.5R1ad744.5d695.5d701d695.5d676.25d732.5d651.5d769.5d651.5d835.5d651.5d900.5d676.25d937.75d701d975d744.5d975d787d975d811.75d937.75d836.5d900.5d836.5d835.5d836.5d770d811.75d732.75d787d695.5d744.5d695.5d744.5d632d823.5d632d870d687d916.5d742d916.5d835.5d916.5d929d869.75d983.75d823d1038.5d744.5d1038.5d664.5d1038.5d618d983.75d571.5d929d571.5d835.5d571.5d741.5d618.25d686.75d665d632d744.5d632d228.5d327.5d185.5d327.5d160.75d364.75d136d402d136d467d136d533d160.5d570d185d607d228.5d607d272d607d296.75d570d321.5d533d321.5d467d321.5d402.5d296.5d365d271.5d327.5d228.5d327.5d680d264d760d264d293d1038.5d213d1038.5d680d264d228.5d264d307.5d264d354.5d318.75d401.5d373.5d401.5d467d401.5d561.5d354.75d616d308d670.5d228.5d670.5d149d670.5d102.75d615.75d56.5d561d56.5d467d56.5d374d103d319d149.5d264d228.5d264hR2d973R3d916.5R4d56.5R5d760R6d-14.5R7d703.5R8d168R9d241.5R10i37R11d56.5R12d973R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i1i2i2i2i2i1i3i3i3i3i3i3i3i3hg:93oR0d950.5R1ad311.5d246d311.5d1159d99.5d1159d99.5d1087.5d219d1087.5d219d317.5d99.5d317.5d99.5d246d311.5d246hR2d399.5R3d311.5R4d99.5R5d778R6d-135R7d678.5R8d168R9d241.5R10i93R11d99.5R12d399.5R13ai1i2i2i2i2i2i2i2i2hg:36oR0d950.5R1ad346d1174.5d296d1174.5d295.5d1024d243d1023d190.5d1011.75d138d1000.5d85d978d85d888d136d920d188.25d936.25d240.5d952.5d296d953d296d725d185.5d707d135.25d664d85d621d85d546d85d464.5d139.5d417.5d194d370.5d296d363.5d296d246d346d246d346d362d392.5d364d436d371.75d479.5d379.5d521d393d521d480.5d479.5d459.5d435.75d448d392d436.5d346d434.5d346d648d459.5d665.5d513d710.5d566.5d755.5d566.5d833.5d566.5d918d509.75d966.75d453d1015.5d346d1023d346d1174.5d296d639d296d434d238d440.5d207.5d467d177d493.5d177d537.5d177d580.5d205.25d604.5d233.5d628.5d296d639d346d735d346d951.5d409.5d943d441.75d915.5d474d888d474d843d474d799d443.25d773d412.5d747d346d735hR2d651.5R3d566.5R4d85R5d778R6d-150.5R7d693R8d168R9d241.5R10i36R11d85R12d651.5R13ai1i2i2i3i3i2i3i3i2i3i3i3i3i2i2i2i3i3i2i3i3i2i3i3i3i3i2i1i2i3i3i3i3i1i2i3i3i3i3hg:92oR0d950.5R1ad85d277.5d345d1119d260d1119d0d277.5d85d277.5hR2d345R3d345R4d0R5d746.5R6d-95R7d746.5R8d168R9d241.5R10i92R11d0R12d345R13ai1i2i2i2i2hg:35oR0d950.5R1ad523.5d573.5d378d573.5d336d740.5d482.5d740.5d523.5d573.5d448.5d289d396.5d496.5d542.5d496.5d595d289d675d289d623.5d496.5d779.5d496.5d779.5d573.5d604d573.5d563d740.5d722d740.5d722d817d543.5d817d491.5d1024d411.5d1024d463d817d316.5d817d265d1024d184.5d1024d236.5d817d79d817d79d740.5d255d740.5d297d573.5d136d573.5d136d496.5d316.5d496.5d367.5d289d448.5d289hR2d858R3d779.5R4d79R5d735R6d0R7d656R8d168R9d241.5R10i35R11d79R12d858R13ai1i2i2i2i2i1i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2hg:91oR0d950.5R1ad88d246d300d246d300d317.5d180d317.5d180d1087.5d300d1087.5d300d1159d88d1159d88d246hR2d399.5R3d300R4d88R5d778R6d-135R7d690R8d168R9d241.5R10i91R11d88R12d399.5R13ai1i2i2i2i2i2i2i2i2hg:34oR0d950.5R1ad183.5d277.5d183.5d555d98.5d555d98.5d277.5d183.5d277.5d372.5d277.5d372.5d555d287.5d555d287.5d277.5d372.5d277.5hR2d471R3d372.5R4d98.5R5d746.5R6d469R7d648R8d168R9d241.5R10i34R11d98.5R12d471R13ai1i2i2i2i2i1i2i2i2i2hg:90oR0d950.5R1ad57.5d277.5d644d277.5d644d354.5d172d939d655.5d939d655.5d1024d46d1024d46d947d518d362.5d57.5d362.5d57.5d277.5hR2d701.5R3d655.5R4d46R5d746.5R6d0R7d700.5R8d168R9d241.5R10i90R11d46R12d701.5R13ai1i2i2i2i2i2i2i2i2i2i2hg:33oR0d950.5R1ad154.5d897d256d897d256d1024d154.5d1024d154.5d897d154.5d277.5d256d277.5d256d605d246d783.5d165d783.5d154.5d605d154.5d277.5hR2d410.5R3d256R4d154.5R5d746.5R6d0R7d592R8d168R9d241.5R10i33R11d154.5R12d410.5R13ai1i2i2i2i2i1i2i2i2i2i2i2hg:89oR0d950.5R1ad-2d277.5d106.5d277.5d313.5d584.5d519d277.5d627.5d277.5d363.5d668.5d363.5d1024d262d1024d262d668.5d-2d277.5hR2d625.5R3d627.5R4d-2R5d746.5R6d0R7d748.5R8d168R9d241.5R10i89R11d-2R12d625.5R13ai1i2i2i2i2i2i2i2i2i2hg:32oR0d950.5R1ahR2d325.5R3d0R4d0R5d0R6d0R7d0R8d168R9d241.5R10i32R11d0R12d325.5R13ahg:88oR0d950.5R1ad64.5d277.5d173d277.5d358.5d555d545d277.5d653.5d277.5d413.5d636d669.5d1024d561d1024d351d706.5d139.5d1024d30.5d1024d297d625.5d64.5d277.5hR2d701.5R3d669.5R4d30.5R5d746.5R6d0R7d716R8d168R9d241.5R10i88R11d30.5R12d701.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:87oR0d950.5R1ad34d277.5d136d277.5d293d908.5d449.5d277.5d563d277.5d720d908.5d876.5d277.5d979d277.5d791.5d1024d664.5d1024d507d376d348d1024d221d1024d34d277.5hR2d1012.5R3d979R4d34R5d746.5R6d0R7d712.5R8d168R9d241.5R10i87R11d34R12d1012.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:86oR0d950.5R1ad293d1024d8d277.5d113.5d277.5d350d906d587d277.5d692d277.5d407.5d1024d293d1024hR2d700.5R3d692R4d8R5d746.5R6d0R7d738.5R8d168R9d241.5R10i86R11d8R12d700.5R13ai1i2i2i2i2i2i2i2hg:85oR0d950.5R1ad89d277.5d190.5d277.5d190.5d731d190.5d851d234d903.75d277.5d956.5d375d956.5d472d956.5d515.5d903.75d559d851d559d731d559d277.5d660.5d277.5d660.5d743.5d660.5d889.5d588.25d964d516d1038.5d375d1038.5d233.5d1038.5d161.25d964d89d889.5d89d743.5d89d277.5hR2d749.5R3d660.5R4d89R5d746.5R6d-14.5R7d657.5R8d168R9d241.5R10i85R11d89R12d749.5R13ai1i2i2i3i3i3i3i2i2i2i3i3i3i3i2hg:84oR0d950.5R1ad-3d277.5d628.5d277.5d628.5d362.5d363.5d362.5d363.5d1024d262d1024d262d362.5d-3d362.5d-3d277.5hR2d625.5R3d628.5R4d-3R5d746.5R6d0R7d749.5R8d168R9d241.5R10i84R11d-3R12d625.5R13ai1i2i2i2i2i2i2i2i2hg:83oR0d950.5R1ad548d302d548d400.5d490.5d373d439.5d359.5d388.5d346d341d346d258.5d346d213.75d378d169d410d169d469d169d518.5d198.75d543.75d228.5d569d311.5d584.5d372.5d597d485.5d618.5d539.25d672.75d593d727d593d818d593d926.5d520.25d982.5d447.5d1038.5d307d1038.5d254d1038.5d194.25d1026.5d134.5d1014.5d70.5d991d70.5d887d132d921.5d191d939d250d956.5d307d956.5d393.5d956.5d440.5d922.5d487.5d888.5d487.5d825.5d487.5d770.5d453.75d739.5d420d708.5d343d693d281.5d681d168.5d658.5d118d610.5d67.5d562.5d67.5d477d67.5d378d137.25d321d207d264d329.5d264d382d264d436.5d273.5d491d283d548d302hR2d650R3d593R4d67.5R5d760R6d-14.5R7d692.5R8d168R9d241.5R10i83R11d67.5R12d650R13ai1i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:82oR0d950.5R1ad454.5d674d487d685d517.75d721d548.5d757d579.5d820d682d1024d573.5d1024d478d832.5d441d757.5d406.25d733d371.5d708.5d311.5d708.5d201.5d708.5d201.5d1024d100.5d1024d100.5d277.5d328.5d277.5d456.5d277.5d519.5d331d582.5d384.5d582.5d492.5d582.5d563d549.75d609.5d517d656d454.5d674d201.5d360.5d201.5d625.5d328.5d625.5d401.5d625.5d438.75d591.75d476d558d476d492.5d476d427d438.75d393.75d401.5d360.5d328.5d360.5d201.5d360.5hR2d711.5R3d682R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i82R11d100.5R12d711.5R13ai1i3i3i2i2i2i3i3i2i2i2i2i2i3i3i3i3i1i2i2i3i3i3i3i2hg:81oR0d950.5R1ad403.5d346d293.5d346d228.75d428d164d510d164d651.5d164d792.5d228.75d874.5d293.5d956.5d403.5d956.5d513.5d956.5d577.75d874.5d642d792.5d642d651.5d642d510d577.75d428d513.5d346d403.5d346d545d1010.5d678d1156d556d1156d445.5d1036.5d429d1037.5d420.25d1038d411.5d1038.5d403.5d1038.5d246d1038.5d151.75d933.25d57.5d828d57.5d651.5d57.5d474.5d151.75d369.25d246d264d403.5d264d560.5d264d654.5d369.25d748.5d474.5d748.5d651.5d748.5d781.5d696.25d874d644d966.5d545d1010.5hR2d806R3d748.5R4d57.5R5d760R6d-132R7d702.5R8d168R9d241.5R10i81R11d57.5R12d806R13ai1i3i3i3i3i3i3i3i3i1i2i2i2i3i3i3i3i3i3i3i3i3i3hg:80oR0d950.5R1ad201.5d360.5d201.5d641d328.5d641d399d641d437.5d604.5d476d568d476d500.5d476d433.5d437.5d397d399d360.5d328.5d360.5d201.5d360.5d100.5d277.5d328.5d277.5d454d277.5d518.25d334.25d582.5d391d582.5d500.5d582.5d611d518.25d667.5d454d724d328.5d724d201.5d724d201.5d1024d100.5d1024d100.5d277.5hR2d617.5R3d582.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i80R11d100.5R12d617.5R13ai1i2i2i3i3i3i3i2i1i2i3i3i3i3i2i2i2i2hg:79oR0d950.5R1ad403.5d346d293.5d346d228.75d428d164d510d164d651.5d164d792.5d228.75d874.5d293.5d956.5d403.5d956.5d513.5d956.5d577.75d874.5d642d792.5d642d651.5d642d510d577.75d428d513.5d346d403.5d346d403.5d264d560.5d264d654.5d369.25d748.5d474.5d748.5d651.5d748.5d828d654.5d933.25d560.5d1038.5d403.5d1038.5d246d1038.5d151.75d933.5d57.5d828.5d57.5d651.5d57.5d474.5d151.75d369.25d246d264d403.5d264hR2d806R3d748.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i79R11d57.5R12d806R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:78oR0d950.5R1ad100.5d277.5d236.5d277.5d567.5d902d567.5d277.5d665.5d277.5d665.5d1024d529.5d1024d198.5d399.5d198.5d1024d100.5d1024d100.5d277.5hR2d766R3d665.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i78R11d100.5R12d766R13ai1i2i2i2i2i2i2i2i2i2i2hg:77oR0d950.5R1ad100.5d277.5d251d277.5d441.5d785.5d633d277.5d783.5d277.5d783.5d1024d685d1024d685d368.5d492.5d880.5d391d880.5d198.5d368.5d198.5d1024d100.5d1024d100.5d277.5hR2d883.5R3d783.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i77R11d100.5R12d883.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:76oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d939d565d939d565d1024d100.5d1024d100.5d277.5hR2d570.5R3d565R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i76R11d100.5R12d570.5R13ai1i2i2i2i2i2i2hg:75oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d593d536.5d277.5d666.5d277.5d296d625.5d693d1024d560d1024d201.5d664.5d201.5d1024d100.5d1024d100.5d277.5hR2d671.5R3d693R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i75R11d100.5R12d671.5R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:74oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d972d201.5d1107d150.25d1168d99d1229d-14.5d1229d-53d1229d-53d1144d-21.5d1144d45.5d1144d73d1106.5d100.5d1069d100.5d972d100.5d277.5hR2d302R3d201.5R4d-53R5d746.5R6d-205R7d799.5R8d168R9d241.5R10i74R11d-53R12d302R13ai1i2i2i3i3i2i2i2i3i3i2hg:73oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d1024d100.5d1024d100.5d277.5hR2d302R3d201.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i73R11d100.5R12d302R13ai1i2i2i2i2hg:72oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d583.5d568.5d583.5d568.5d277.5d669.5d277.5d669.5d1024d568.5d1024d568.5d668.5d201.5d668.5d201.5d1024d100.5d1024d100.5d277.5hR2d770R3d669.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i72R11d100.5R12d770R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:71oR0d950.5R1ad609.5d917.5d609.5d717d444.5d717d444.5d634d709.5d634d709.5d954.5d651d996d580.5d1017.25d510d1038.5d430d1038.5d255d1038.5d156.25d936.25d57.5d834d57.5d651.5d57.5d468.5d156.25d366.25d255d264d430d264d503d264d568.75d282d634.5d300d690d335d690d442.5d634d395d571d371d508d347d438.5d347d301.5d347d232.75d423.5d164d500d164d651.5d164d802.5d232.75d879d301.5d955.5d438.5d955.5d492d955.5d534d946.25d576d937d609.5d917.5hR2d793.5R3d709.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i71R11d57.5R12d793.5R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:70oR0d950.5R1ad100.5d277.5d529.5d277.5d529.5d362.5d201.5d362.5d201.5d582.5d497.5d582.5d497.5d667.5d201.5d667.5d201.5d1024d100.5d1024d100.5d277.5hR2d589R3d529.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i70R11d100.5R12d589R13ai1i2i2i2i2i2i2i2i2i2i2hg:126oR0d950.5R1ad749.5d615.5d749.5d704.5d697d744d652.25d761d607.5d778d559d778d504d778d431d748.5d425.5d746.5d423d745.5d419.5d744d412d741.5d334.5d710.5d287.5d710.5d243.5d710.5d200.5d729.75d157.5d749d108.5d790.5d108.5d701.5d161d662d205.75d644.75d250.5d627.5d299d627.5d354d627.5d427.5d657.5d432.5d659.5d435d660.5d439d662d446d664.5d523.5d695.5d570.5d695.5d613.5d695.5d655.75d676.5d698d657.5d749.5d615.5hR2d858R3d749.5R4d108.5R5d408.5R6d233.5R7d300R8d168R9d241.5R10i126R11d108.5R12d858R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:69oR0d950.5R1ad100.5d277.5d572.5d277.5d572.5d362.5d201.5d362.5d201.5d583.5d557d583.5d557d668.5d201.5d668.5d201.5d939d581.5d939d581.5d1024d100.5d1024d100.5d277.5hR2d647R3d581.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i69R11d100.5R12d647R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:125oR0d950.5R1ad128d1119d163d1119d233d1119d254.25d1097.5d275.5d1076d275.5d1004.5d275.5d880.5d275.5d802.5d298d767d320.5d731.5d376d718d320.5d705.5d298d670d275.5d634.5d275.5d556d275.5d432d275.5d361d254.25d339.25d233d317.5d163d317.5d128d317.5d128d246d159.5d246d284d246d325.75d282.75d367.5d319.5d367.5d430d367.5d550d367.5d624.5d394.5d653.25d421.5d682d492.5d682d523.5d682d523.5d753.5d492.5d753.5d421.5d753.5d394.5d782.5d367.5d811.5d367.5d887d367.5d1006.5d367.5d1117d325.75d1154d284d1191d159.5d1191d128d1191d128d1119hR2d651.5R3d523.5R4d128R5d778R6d-167R7d650R8d168R9d241.5R10i125R11d128R12d651.5R13ai1i2i3i3i2i3i3i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2hg:68oR0d950.5R1ad201.5d360.5d201.5d941d323.5d941d478d941d549.75d871d621.5d801d621.5d650d621.5d500d549.75d430.25d478d360.5d323.5d360.5d201.5d360.5d100.5d277.5d308d277.5d525d277.5d626.5d367.75d728d458d728d650d728d843d626d933.5d524d1024d308d1024d100.5d1024d100.5d277.5hR2d788.5R3d728R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i68R11d100.5R12d788.5R13ai1i2i2i3i3i3i3i2i1i2i3i3i3i3i2i2hg:124oR0d950.5R1ad215d241.5d215d1265.5d130d1265.5d130d241.5d215d241.5hR2d345R3d215R4d130R5d782.5R6d-241.5R7d652.5R8d168R9d241.5R10i124R11d130R12d345R13ai1i2i2i2i2hg:67oR0d950.5R1ad659.5d335d659.5d441.5d608.5d394d550.75d370.5d493d347d428d347d300d347d232d425.25d164d503.5d164d651.5d164d799d232d877.25d300d955.5d428d955.5d493d955.5d550.75d932d608.5d908.5d659.5d861d659.5d966.5d606.5d1002.5d547.25d1020.5d488d1038.5d422d1038.5d252.5d1038.5d155d934.75d57.5d831d57.5d651.5d57.5d471.5d155d367.75d252.5d264d422d264d489d264d548.25d281.75d607.5d299.5d659.5d335hR2d715R3d659.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i67R11d57.5R12d715R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:123oR0d950.5R1ad523.5d1119d523.5d1191d492.5d1191d368d1191d325.75d1154d283.5d1117d283.5d1006.5d283.5d887d283.5d811.5d256.5d782.5d229.5d753.5d158.5d753.5d128d753.5d128d682d158.5d682d230d682d256.75d653.25d283.5d624.5d283.5d550d283.5d430d283.5d319.5d325.75d282.75d368d246d492.5d246d523.5d246d523.5d317.5d489.5d317.5d419d317.5d397.5d339.5d376d361.5d376d432d376d556d376d634.5d353.25d670d330.5d705.5d275.5d718d331d731.5d353.5d767d376d802.5d376d880.5d376d1004.5d376d1075d397.5d1097d419d1119d489.5d1119d523.5d1119hR2d651.5R3d523.5R4d128R5d778R6d-167R7d650R8d168R9d241.5R10i123R11d128R12d651.5R13ai1i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i3i3i2i3i3i2hg:66oR0d950.5R1ad201.5d667.5d201.5d941d363.5d941d445d941d484.25d907.25d523.5d873.5d523.5d804d523.5d734d484.25d700.75d445d667.5d363.5d667.5d201.5d667.5d201.5d360.5d201.5d585.5d351d585.5d425d585.5d461.25d557.75d497.5d530d497.5d473d497.5d416.5d461.25d388.5d425d360.5d351d360.5d201.5d360.5d100.5d277.5d358.5d277.5d474d277.5d536.5d325.5d599d373.5d599d462d599d530.5d567d571d535d611.5d473d621.5d547.5d637.5d588.75d688.25d630d739d630d815d630d915d562d969.5d494d1024d368.5d1024d100.5d1024d100.5d277.5hR2d702.5R3d630R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i66R11d100.5R12d702.5R13ai1i2i2i3i3i3i3i2i1i2i2i3i3i3i3i2i1i2i3i3i3i3i3i3i3i3i2i2hg:122oR0d950.5R1ad56.5d464d493.5d464d493.5d548d147.5d950.5d493.5d950.5d493.5d1024d44d1024d44d940d390d537.5d56.5d537.5d56.5d464hR2d537.5R3d493.5R4d44R5d560R6d0R7d516R8d168R9d241.5R10i122R11d44R12d537.5R13ai1i2i2i2i2i2i2i2i2i2i2hg:65oR0d950.5R1ad350d377d213d748.5d487.5d748.5d350d377d293d277.5d407.5d277.5d692d1024d587d1024d519d832.5d182.5d832.5d114.5d1024d8d1024d293d277.5hR2d700.5R3d692R4d8R5d746.5R6d0R7d738.5R8d168R9d241.5R10i65R11d8R12d700.5R13ai1i2i2i2i1i2i2i2i2i2i2i2i2hg:121oR0d950.5R1ad329.5d1076d290.5d1176d253.5d1206.5d216.5d1237d154.5d1237d81d1237d81d1160d135d1160d173d1160d194d1142d215d1124d240.5d1057d257d1015d30.5d464d128d464d303d902d478d464d575.5d464d329.5d1076hR2d606R3d575.5R4d30.5R5d560R6d-213R7d529.5R8d168R9d241.5R10i121R11d30.5R12d606R13ai1i3i3i2i2i2i3i3i2i2i2i2i2i2i2hg:64oR0d950.5R1ad381d755.5d381d827d416.5d867.75d452d908.5d514d908.5d575.5d908.5d610.75d867.5d646d826.5d646d755.5d646d685.5d610d644.25d574d603d513d603d452.5d603d416.75d644d381d685d381d755.5d653.5d905d623.5d943.5d584.75d961.75d546d980d494.5d980d408.5d980d354.75d917.75d301d855.5d301d755.5d301d655.5d355d593d409d530.5d494.5d530.5d546d530.5d585d549.25d624d568d653.5d606d653.5d540.5d725d540.5d725d908.5d798d897.5d839.25d841.75d880.5d786d880.5d697.5d880.5d644d864.75d597d849d550d817d510d765d444.5d690.25d409.75d615.5d375d527.5d375d466d375d409.5d391.25d353d407.5d305d439.5d226.5d490.5d182.25d573.25d138d656d138d752.5d138d832d166.75d901.5d195.5d971d250d1024d302.5d1076d371.5d1103.25d440.5d1130.5d519d1130.5d583.5d1130.5d645.75d1108.75d708d1087d760d1046.5d805d1102d742.5d1150.5d668.75d1176.25d595d1202d519d1202d426.5d1202d344.5d1169.25d262.5d1136.5d198.5d1074d134.5d1011.5d101d929.25d67.5d847d67.5d752.5d67.5d661.5d101.5d579d135.5d496.5d198.5d434d263d370.5d347.5d336.75d432d303d526.5d303d632.5d303d723.25d346.5d814d390d875.5d470d913d519d932.75d576.5d952.5d634d952.5d695.5d952.5d827d873d903d793.5d979d653.5d982d653.5d905hR2d1024R3d952.5R4d67.5R5d721R6d-178R7d653.5R8d168R9d241.5R10i64R11d67.5R12d1024R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i2hg:120oR0d950.5R1ad562d464d359.5d736.5d572.5d1024d464d1024d301d804d138d1024d29.5d1024d247d731d48d464d156.5d464d305d663.5d453.5d464d562d464hR2d606R3d572.5R4d29.5R5d560R6d0R7d530.5R8d168R9d241.5R10i120R11d29.5R12d606R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:63oR0d950.5R1ad195.5d897d297d897d297d1024d195.5d1024d195.5d897d294d823.5d198.5d823.5d198.5d746.5d198.5d696d212.5d663.5d226.5d631d271.5d588d316.5d543.5d345d517d357.75d493.5d370.5d470d370.5d445.5d370.5d401d337.75d373.5d305d346d251d346d211.5d346d166.75d363.5d122d381d73.5d414.5d73.5d320.5d120.5d292d168.75d278d217d264d268.5d264d360.5d264d416.25d312.5d472d361d472d440.5d472d478.5d454d512.75d436d547d391d590d347d633d323.5d656.5d313.75d669.75d304d683d300d695.5d297d706d295.5d721d294d736d294d762d294d823.5hR2d543.5R3d472R4d73.5R5d760R6d0R7d686.5R8d168R9d241.5R10i63R11d73.5R12d543.5R13ai1i2i2i2i2i1i2i2i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i2hg:119oR0d950.5R1ad43d464d135d464d250d901d364.5d464d473d464d588d901d702.5d464d794.5d464d648d1024d539.5d1024d419d565d298d1024d189.5d1024d43d464hR2d837.5R3d794.5R4d43R5d560R6d0R7d517R8d168R9d241.5R10i119R11d43R12d837.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:62oR0d950.5R1ad108.5d520d108.5d429d749.5d661.5d749.5d744.5d108.5d977d108.5d886d623.5d703.5d108.5d520hR2d858R3d749.5R4d108.5R5d595R6d47R7d486.5R8d168R9d241.5R10i62R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:118oR0d950.5R1ad30.5d464d128d464d303d934d478d464d575.5d464d365.5d1024d240.5d1024d30.5d464hR2d606R3d575.5R4d30.5R5d560R6d0R7d529.5R8d168R9d241.5R10i118R11d30.5R12d606R13ai1i2i2i2i2i2i2i2hg:61oR0d950.5R1ad108.5d559d749.5d559d749.5d643d108.5d643d108.5d559d108.5d763d749.5d763d749.5d848d108.5d848d108.5d763hR2d858R3d749.5R4d108.5R5d465R6d176R7d356.5R8d168R9d241.5R10i61R11d108.5R12d858R13ai1i2i2i2i2i1i2i2i2i2hg:117oR0d950.5R1ad87d803d87d464d179d464d179d799.5d179d879d210d918.75d241d958.5d303d958.5d377.5d958.5d420.75d911d464d863.5d464d781.5d464d464d556d464d556d1024d464d1024d464d938d430.5d989d386.25d1013.75d342d1038.5d283.5d1038.5d187d1038.5d137d978.5d87d918.5d87d803hR2d649R3d556R4d87R5d560R6d-14.5R7d473R8d168R9d241.5R10i117R11d87R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:60oR0d950.5R1ad749.5d520d233.5d703.5d749.5d886d749.5d977d108.5d744.5d108.5d661.5d749.5d429d749.5d520hR2d858R3d749.5R4d108.5R5d595R6d47R7d486.5R8d168R9d241.5R10i60R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:116oR0d950.5R1ad187.5d305d187.5d464d377d464d377d535.5d187.5d535.5d187.5d839.5d187.5d908d206.25d927.5d225d947d282.5d947d377d947d377d1024d282.5d1024d176d1024d135.5d984.25d95d944.5d95d839.5d95d535.5d27.5d535.5d27.5d464d95d464d95d305d187.5d305hR2d401.5R3d377R4d27.5R5d719R6d0R7d691.5R8d168R9d241.5R10i116R11d27.5R12d401.5R13ai1i2i2i2i2i2i3i3i2i2i2i3i3i2i2i2i2i2i2hg:59oR0d950.5R1ad120d494.5d225.5d494.5d225.5d621.5d120d621.5d120d494.5d120d897d225.5d897d225.5d983d143.5d1143d79d1143d120d983d120d897hR2d345R3d225.5R4d79R5d529.5R6d-119R7d450.5R8d168R9d241.5R10i59R11d79R12d345R13ai1i2i2i2i2i1i2i2i2i2i2i2hg:115oR0d950.5R1ad453.5d480.5d453.5d567.5d414.5d547.5d372.5d537.5d330.5d527.5d285.5d527.5d217d527.5d182.75d548.5d148.5d569.5d148.5d611.5d148.5d643.5d173d661.75d197.5d680d271.5d696.5d303d703.5d401d724.5d442.25d762.75d483.5d801d483.5d869.5d483.5d947.5d421.75d993d360d1038.5d252d1038.5d207d1038.5d158.25d1029.75d109.5d1021d55.5d1003.5d55.5d908.5d106.5d935d156d948.25d205.5d961.5d254d961.5d319d961.5d354d939.25d389d917d389d876.5d389d839d363.75d819d338.5d799d253d780.5d221d773d135.5d755d97.5d717.75d59.5d680.5d59.5d615.5d59.5d536.5d115.5d493.5d171.5d450.5d274.5d450.5d325.5d450.5d370.5d458d415.5d465.5d453.5d480.5hR2d533.5R3d483.5R4d55.5R5d573.5R6d-14.5R7d518R8d168R9d241.5R10i115R11d55.5R12d533.5R13ai1i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:58oR0d950.5R1ad120d897d225.5d897d225.5d1024d120d1024d120d897d120d494.5d225.5d494.5d225.5d621.5d120d621.5d120d494.5hR2d345R3d225.5R4d120R5d529.5R6d0R7d409.5R8d168R9d241.5R10i58R11d120R12d345R13ai1i2i2i2i2i1i2i2i2i2hg:114oR0d950.5R1ad421d550d405.5d541d387.25d536.75d369d532.5d347d532.5d269d532.5d227.25d583.25d185.5d634d185.5d729d185.5d1024d93d1024d93d464d185.5d464d185.5d551d214.5d500d261d475.25d307.5d450.5d374d450.5d383.5d450.5d395d451.75d406.5d453d420.5d455.5d421d550hR2d421R3d421R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i114R11d93R12d421R13ai1i3i3i3i3i2i2i2i2i2i3i3i3i3i2hg:57oR0d950.5R1ad112.5d1008.5d112.5d916.5d150.5d934.5d189.5d944d228.5d953.5d266d953.5d366d953.5d418.75d886.25d471.5d819d479d682d450d725d405.5d748d361d771d307d771d195d771d129.75d703.25d64.5d635.5d64.5d518d64.5d403d132.5d333.5d200.5d264d313.5d264d443d264d511.25d363.25d579.5d462.5d579.5d651.5d579.5d828d495.75d933.25d412d1038.5d270.5d1038.5d232.5d1038.5d193.5d1031d154.5d1023.5d112.5d1008.5d313.5d692d381.5d692d421.25d645.5d461d599d461d518d461d437.5d421.25d390.75d381.5d344d313.5d344d245.5d344d205.75d390.75d166d437.5d166d518d166d599d205.75d645.5d245.5d692d313.5d692hR2d651.5R3d579.5R4d64.5R5d760R6d-14.5R7d695.5R8d168R9d241.5R10i57R11d64.5R12d651.5R13ai1i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:113oR0d950.5R1ad151.5d744.5d151.5d846d193.25d903.75d235d961.5d308d961.5d381d961.5d423d903.75d465d846d465d744.5d465d643d423d585.25d381d527.5d308d527.5d235d527.5d193.25d585.25d151.5d643d151.5d744.5d465d940d436d990d391.75d1014.25d347.5d1038.5d285.5d1038.5d184d1038.5d120.25d957.5d56.5d876.5d56.5d744.5d56.5d612.5d120.25d531.5d184d450.5d285.5d450.5d347.5d450.5d391.75d474.75d436d499d465d549d465d464d557d464d557d1237d465d1237d465d940hR2d650R3d557R4d56.5R5d573.5R6d-213R7d517R8d168R9d241.5R10i113R11d56.5R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i2i2hg:56oR0d950.5R1ad325.5d669.5d253.5d669.5d212.25d708d171d746.5d171d814d171d881.5d212.25d920d253.5d958.5d325.5d958.5d397.5d958.5d439d919.75d480.5d881d480.5d814d480.5d746.5d439.25d708d398d669.5d325.5d669.5d224.5d626.5d159.5d610.5d123.25d566d87d521.5d87d457.5d87d368d150.75d316d214.5d264d325.5d264d437d264d500.5d316d564d368d564d457.5d564d521.5d527.75d566d491.5d610.5d427d626.5d500d643.5d540.75d693d581.5d742.5d581.5d814d581.5d922.5d515.25d980.5d449d1038.5d325.5d1038.5d202d1038.5d135.75d980.5d69.5d922.5d69.5d814d69.5d742.5d110.5d693d151.5d643.5d224.5d626.5d187.5d467d187.5d525d223.75d557.5d260d590d325.5d590d390.5d590d427.25d557.5d464d525d464d467d464d409d427.25d376.5d390.5d344d325.5d344d260d344d223.75d376.5d187.5d409d187.5d467hR2d651.5R3d581.5R4d69.5R5d760R6d-14.5R7d690.5R8d168R9d241.5R10i56R11d69.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:112oR0d950.5R1ad185.5d940d185.5d1237d93d1237d93d464d185.5d464d185.5d549d214.5d499d258.75d474.75d303d450.5d364.5d450.5d466.5d450.5d530.25d531.5d594d612.5d594d744.5d594d876.5d530.25d957.5d466.5d1038.5d364.5d1038.5d303d1038.5d258.75d1014.25d214.5d990d185.5d940d498.5d744.5d498.5d643d456.75d585.25d415d527.5d342d527.5d269d527.5d227.25d585.25d185.5d643d185.5d744.5d185.5d846d227.25d903.75d269d961.5d342d961.5d415d961.5d456.75d903.75d498.5d846d498.5d744.5hR2d650R3d594R4d93R5d573.5R6d-213R7d480.5R8d168R9d241.5R10i112R11d93R12d650R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hgh";
flash.text.Font.DEFAULT_FONT_SCALE = 9.0;
flash.text.Font.DEFAULT_FONT_NAME = "Bitstream_Vera_Sans";
flash.text.Font.DEFAULT_CLASS_NAME = "flash.text.Font";
flash.text.Font.__registeredFonts = new Array();
OpenFLStage3D.stage3Ds = [];
aglsl.Context3D.enableErrorChecking = false;
aglsl.Context3D.resources = [];
aglsl.Context3D.driverInfo = "Call getter function instead";
aglsl.Context3D.maxvertexconstants = 128;
aglsl.Context3D.maxfragconstants = 28;
aglsl.Context3D.maxtemp = 8;
aglsl.Context3D.maxstreams = 8;
aglsl.Context3D.maxtextures = 8;
aglsl.Context3D.defaultsampler = new aglsl.Sampler();
away3d.library.assets.NamedAssetBase.DEFAULT_NAMESPACE = "default";
flash.events.Event.ACTIVATE = "activate";
flash.events.Event.ADDED = "added";
flash.events.Event.ADDED_TO_STAGE = "addedToStage";
flash.events.Event.CANCEL = "cancel";
flash.events.Event.CHANGE = "change";
flash.events.Event.CLOSE = "close";
flash.events.Event.COMPLETE = "complete";
flash.events.Event.CONNECT = "connect";
flash.events.Event.CONTEXT3D_CREATE = "context3DCreate";
flash.events.Event.DEACTIVATE = "deactivate";
flash.events.Event.ENTER_FRAME = "enterFrame";
flash.events.Event.ID3 = "id3";
flash.events.Event.INIT = "init";
flash.events.Event.MOUSE_LEAVE = "mouseLeave";
flash.events.Event.OPEN = "open";
flash.events.Event.REMOVED = "removed";
flash.events.Event.REMOVED_FROM_STAGE = "removedFromStage";
flash.events.Event.RENDER = "render";
flash.events.Event.RESIZE = "resize";
flash.events.Event.SCROLL = "scroll";
flash.events.Event.SELECT = "select";
flash.events.Event.TAB_CHILDREN_CHANGE = "tabChildrenChange";
flash.events.Event.TAB_ENABLED_CHANGE = "tabEnabledChange";
flash.events.Event.TAB_INDEX_CHANGE = "tabIndexChange";
flash.events.Event.UNLOAD = "unload";
flash.events.Event.SOUND_COMPLETE = "soundComplete";
away3d.events.MouseEvent3D.MOUSE_OVER = "mouseOver3d";
away3d.events.MouseEvent3D.MOUSE_OUT = "mouseOut3d";
away3d.events.MouseEvent3D.MOUSE_UP = "mouseUp3d";
away3d.events.MouseEvent3D.MOUSE_DOWN = "mouseDown3d";
away3d.events.MouseEvent3D.MOUSE_MOVE = "mouseMove3d";
away3d.events.MouseEvent3D.CLICK = "click3d";
away3d.events.MouseEvent3D.DOUBLE_CLICK = "doubleClick3d";
away3d.events.MouseEvent3D.MOUSE_WHEEL = "mouseWheel3d";
flash.events.EventPhase.CAPTURING_PHASE = 0;
flash.events.EventPhase.AT_TARGET = 1;
flash.events.EventPhase.BUBBLING_PHASE = 2;
away3d.core.managers.Mouse3DManager._viewCount = 0;
away3d.core.managers.Mouse3DManager._queuedEvents = flash._Vector.Vector_Impl_._new();
away3d.core.managers.Mouse3DManager._mouseUp = new away3d.events.MouseEvent3D(away3d.events.MouseEvent3D.MOUSE_UP);
away3d.core.managers.Mouse3DManager._mouseClick = new away3d.events.MouseEvent3D(away3d.events.MouseEvent3D.CLICK);
away3d.core.managers.Mouse3DManager._mouseOut = new away3d.events.MouseEvent3D(away3d.events.MouseEvent3D.MOUSE_OUT);
away3d.core.managers.Mouse3DManager._mouseDown = new away3d.events.MouseEvent3D(away3d.events.MouseEvent3D.MOUSE_DOWN);
away3d.core.managers.Mouse3DManager._mouseMove = new away3d.events.MouseEvent3D(away3d.events.MouseEvent3D.MOUSE_MOVE);
away3d.core.managers.Mouse3DManager._mouseOver = new away3d.events.MouseEvent3D(away3d.events.MouseEvent3D.MOUSE_OVER);
away3d.core.managers.Mouse3DManager._mouseWheel = new away3d.events.MouseEvent3D(away3d.events.MouseEvent3D.MOUSE_WHEEL);
away3d.core.managers.Mouse3DManager._mouseDoubleClick = new away3d.events.MouseEvent3D(away3d.events.MouseEvent3D.DOUBLE_CLICK);
away3d.core.managers.Mouse3DManager._previousCollidingView = -1;
away3d.core.managers.Mouse3DManager._collidingView = -1;
away3d.core.managers.Stage3DManager._numStageProxies = 0;
away3d.core.managers.Touch3DManager._collidingObjectFromTouchId = new haxe.ds.IntMap();
away3d.core.managers.Touch3DManager._previousCollidingObjectFromTouchId = new haxe.ds.IntMap();
away3d.core.managers.Touch3DManager._queuedEvents = flash._Vector.Vector_Impl_._new();
away3d.core.math.MathConsts.Infinity = 100000;
away3d.core.math.MathConsts.MAX_VALUE = 100000;
away3d.core.math.MathConsts.POSITIVE_INFINITY = 100000;
away3d.core.math.MathConsts.NEGATIVE_INFINITY = -100000;
away3d.core.math.MathConsts.RADIANS_TO_DEGREES = 180 / Math.PI;
away3d.core.math.MathConsts.DEGREES_TO_RADIANS = Math.PI / 180;
away3d.core.math.Matrix3DUtils.RAW_DATA_CONTAINER = flash._Vector.Vector_Impl_._new(16);
away3d.core.math.Matrix3DUtils.CALCULATION_MATRIX = new flash.geom.Matrix3D();
away3d.core.math.Plane3D.ALIGN_ANY = 0;
away3d.core.math.Plane3D.ALIGN_XY_AXIS = 1;
away3d.core.math.Plane3D.ALIGN_YZ_AXIS = 2;
away3d.core.math.Plane3D.ALIGN_XZ_AXIS = 3;
away3d.core.math.PlaneClassification.BACK = 0;
away3d.core.math.PlaneClassification.FRONT = 1;
away3d.core.math.PlaneClassification.IN = 0;
away3d.core.math.PlaneClassification.OUT = 1;
away3d.core.math.PlaneClassification.INTERSECT = 2;
away3d.core.traverse.PartitionTraverser._collectionMark = 0;
away3d.core.pick.ShaderPicker.MOUSE_SCISSOR_RECT = new flash.geom.Rectangle(0,0,1,1);
away3d.core.pick.PickingType.SHADER = new away3d.core.pick.ShaderPicker();
away3d.core.pick.PickingType.RAYCAST_FIRST_ENCOUNTERED = new away3d.core.pick.RaycastPicker(false);
away3d.core.pick.PickingType.RAYCAST_BEST_HIT = new away3d.core.pick.RaycastPicker(true);
away3d.core.render.DefaultRenderer.RTT_PASSES = 1;
away3d.core.render.DefaultRenderer.SCREEN_PASSES = 2;
away3d.core.render.DefaultRenderer.ALL_PASSES = 3;
away3d.debug.AwayStats._WIDTH = 125;
away3d.debug.AwayStats._MAX_HEIGHT = 85;
away3d.debug.AwayStats._MIN_HEIGHT = 51;
away3d.debug.AwayStats._UPPER_Y = -1;
away3d.debug.AwayStats._MID_Y = 9;
away3d.debug.AwayStats._LOWER_Y = 19;
away3d.debug.AwayStats._DIAG_HEIGHT = away3d.debug.AwayStats._MAX_HEIGHT - 50;
away3d.debug.AwayStats._BOTTOM_BAR_HEIGHT = 31;
away3d.debug.AwayStats._POLY_COL = 16763904;
away3d.debug.AwayStats._MEM_COL = 16711884;
away3d.debug.Debug.active = false;
away3d.debug.Debug.warningsAsErrors = false;
flash.errors.Error.DEFAULT_TO_STRING = "Error";
away3d.events.AssetEvent.ASSET_COMPLETE = "assetComplete";
away3d.events.AssetEvent.ENTITY_COMPLETE = "entityComplete";
away3d.events.AssetEvent.SKYBOX_COMPLETE = "skyboxComplete";
away3d.events.AssetEvent.CAMERA_COMPLETE = "cameraComplete";
away3d.events.AssetEvent.MESH_COMPLETE = "meshComplete";
away3d.events.AssetEvent.GEOMETRY_COMPLETE = "geometryComplete";
away3d.events.AssetEvent.SKELETON_COMPLETE = "skeletonComplete";
away3d.events.AssetEvent.SKELETON_POSE_COMPLETE = "skeletonPoseComplete";
away3d.events.AssetEvent.CONTAINER_COMPLETE = "containerComplete";
away3d.events.AssetEvent.TEXTURE_COMPLETE = "textureComplete";
away3d.events.AssetEvent.TEXTURE_PROJECTOR_COMPLETE = "textureProjectorComplete";
away3d.events.AssetEvent.MATERIAL_COMPLETE = "materialComplete";
away3d.events.AssetEvent.ANIMATOR_COMPLETE = "animatorComplete";
away3d.events.AssetEvent.ANIMATION_SET_COMPLETE = "animationSetComplete";
away3d.events.AssetEvent.ANIMATION_STATE_COMPLETE = "animationStateComplete";
away3d.events.AssetEvent.ANIMATION_NODE_COMPLETE = "animationNodeComplete";
away3d.events.AssetEvent.STATE_TRANSITION_COMPLETE = "stateTransitionComplete";
away3d.events.AssetEvent.SEGMENT_SET_COMPLETE = "segmentSetComplete";
away3d.events.AssetEvent.LIGHT_COMPLETE = "lightComplete";
away3d.events.AssetEvent.LIGHTPICKER_COMPLETE = "lightPickerComplete";
away3d.events.AssetEvent.EFFECTMETHOD_COMPLETE = "effectMethodComplete";
away3d.events.AssetEvent.SHADOWMAPMETHOD_COMPLETE = "shadowMapMethodComplete";
away3d.events.AssetEvent.ASSET_RENAME = "assetRename";
away3d.events.AssetEvent.ASSET_CONFLICT_RESOLVED = "assetConflictResolved";
away3d.events.AssetEvent.TEXTURE_SIZE_ERROR = "textureSizeError";
away3d.events.CameraEvent.LENS_CHANGED = "lensChanged";
away3d.events.GeometryEvent.SUB_GEOMETRY_ADDED = "SubGeometryAdded";
away3d.events.GeometryEvent.SUB_GEOMETRY_REMOVED = "SubGeometryRemoved";
away3d.events.GeometryEvent.BOUNDS_INVALID = "BoundsInvalid";
away3d.events.LensEvent.MATRIX_CHANGED = "matrixChanged";
away3d.events.LightEvent.CASTS_SHADOW_CHANGE = "castsShadowChange";
away3d.events.Object3DEvent.VISIBLITY_UPDATED = "visiblityUpdated";
away3d.events.Object3DEvent.SCENETRANSFORM_CHANGED = "scenetransformChanged";
away3d.events.Object3DEvent.SCENE_CHANGED = "sceneChanged";
away3d.events.Object3DEvent.POSITION_CHANGED = "positionChanged";
away3d.events.Object3DEvent.ROTATION_CHANGED = "rotationChanged";
away3d.events.Object3DEvent.SCALE_CHANGED = "scaleChanged";
away3d.events.Scene3DEvent.ADDED_TO_SCENE = "addedToScene";
away3d.events.Scene3DEvent.REMOVED_FROM_SCENE = "removedFromScene";
away3d.events.Scene3DEvent.PARTITION_CHANGED = "partitionChanged";
away3d.events.ShadingMethodEvent.SHADER_INVALIDATED = "ShaderInvalidated";
away3d.events.Stage3DEvent.CONTEXT3D_CREATED = "Context3DCreated";
away3d.events.Stage3DEvent.CONTEXT3D_DISPOSED = "Context3DDisposed";
away3d.events.Stage3DEvent.CONTEXT3D_RECREATED = "Context3DRecreated";
away3d.events.Stage3DEvent.VIEWPORT_UPDATED = "ViewportUpdated";
away3d.events.TouchEvent3D.TOUCH_END = "touchEnd3d";
away3d.events.TouchEvent3D.TOUCH_BEGIN = "touchBegin3d";
away3d.events.TouchEvent3D.TOUCH_MOVE = "touchMove3d";
away3d.events.TouchEvent3D.TOUCH_OUT = "touchOut3d";
away3d.events.TouchEvent3D.TOUCH_OVER = "touchOver3d";
away3d.library.assets.AssetType.ENTITY = "entity";
away3d.library.assets.AssetType.SKYBOX = "skybox";
away3d.library.assets.AssetType.CAMERA = "camera";
away3d.library.assets.AssetType.SEGMENT_SET = "segmentSet";
away3d.library.assets.AssetType.MESH = "mesh";
away3d.library.assets.AssetType.GEOMETRY = "geometry";
away3d.library.assets.AssetType.SKELETON = "skeleton";
away3d.library.assets.AssetType.SKELETON_POSE = "skeletonPose";
away3d.library.assets.AssetType.CONTAINER = "container";
away3d.library.assets.AssetType.TEXTURE = "texture";
away3d.library.assets.AssetType.TEXTURE_PROJECTOR = "textureProjector";
away3d.library.assets.AssetType.MATERIAL = "material";
away3d.library.assets.AssetType.ANIMATION_SET = "animationSet";
away3d.library.assets.AssetType.ANIMATION_STATE = "animationState";
away3d.library.assets.AssetType.ANIMATION_NODE = "animationNode";
away3d.library.assets.AssetType.ANIMATOR = "animator";
away3d.library.assets.AssetType.STATE_TRANSITION = "stateTransition";
away3d.library.assets.AssetType.LIGHT = "light";
away3d.library.assets.AssetType.LIGHT_PICKER = "lightPicker";
away3d.library.assets.AssetType.SHADOW_MAP_METHOD = "shadowMapMethod";
away3d.library.assets.AssetType.EFFECTS_METHOD = "effectsMethod";
away3d.materials.MaterialBase.MATERIAL_ID_COUNT = 0;
away3d.materials.LightSources.LIGHTS = 1;
away3d.materials.LightSources.PROBES = 2;
away3d.materials.LightSources.ALL = 3;
away3d.materials.compilation.RegisterPool._regPool = new haxe.ds.StringMap();
away3d.materials.compilation.RegisterPool._regCompsPool = new haxe.ds.StringMap();
away3d.materials.compilation.ShaderRegisterElement.COMPONENTS = ["x","y","z","w"];
away3d.materials.passes.MaterialPassBase._previousUsedStreams = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[0,0,0,0,0,0,0,0]);
away3d.materials.passes.MaterialPassBase._previousUsedTexs = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[0,0,0,0,0,0,0,0]);
away3d.materials.passes.SegmentPass.ONE_VECTOR = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[1,1,1,1]);
away3d.materials.passes.SegmentPass.FRONT_VECTOR = flash._Vector.Vector_Impl_.concat(flash._Vector.Vector_Impl_._new(),[0,0,-1,0]);
away3d.materials.utils.MipmapGenerator._matrix = new flash.geom.Matrix();
away3d.materials.utils.MipmapGenerator._rect = new flash.geom.Rectangle();
away3d.textures.BitmapTexture._mipMaps = [];
away3d.textures.BitmapTexture._mipMapUses = [];
away3d.tools.utils.TextureUtils.MAX_SIZE = 4096;
flash.Lib.HTML_ACCELEROMETER_EVENT_TYPE = "devicemotion";
flash.Lib.HTML_ORIENTATION_EVENT_TYPE = "orientationchange";
flash.Lib.DEFAULT_HEIGHT = 500;
flash.Lib.DEFAULT_WIDTH = 500;
flash.Lib.HTML_DIV_EVENT_TYPES = ["resize","mouseover","mouseout","mousewheel","dblclick","click"];
flash.Lib.HTML_TOUCH_EVENT_TYPES = ["touchstart","touchmove","touchend"];
flash.Lib.HTML_TOUCH_ALT_EVENT_TYPES = ["mousedown","mousemove","mouseup"];
flash.Lib.HTML_WINDOW_EVENT_TYPES = ["keyup","keypress","keydown","resize","blur","focus"];
flash.Lib.NME_IDENTIFIER = "haxe:openfl";
flash.Lib.VENDOR_HTML_TAG = "data-";
flash.Lib.starttime = haxe.Timer.stamp();
flash.display._BitmapData.MinstdGenerator.a = 16807;
flash.display._BitmapData.MinstdGenerator.m = -2147483648 - 1;
flash.display.BitmapDataChannel.ALPHA = 8;
flash.display.BitmapDataChannel.BLUE = 4;
flash.display.BitmapDataChannel.GREEN = 2;
flash.display.BitmapDataChannel.RED = 1;
flash.display.Graphics.TILE_SCALE = 1;
flash.display.Graphics.TILE_ROTATION = 2;
flash.display.Graphics.TILE_RGB = 4;
flash.display.Graphics.TILE_ALPHA = 8;
flash.display.Graphics.TILE_TRANS_2x2 = 16;
flash.display.Graphics.TILE_BLEND_NORMAL = 0;
flash.display.Graphics.TILE_BLEND_ADD = 65536;
flash.display.Graphics.BMP_REPEAT = 16;
flash.display.Graphics.BMP_SMOOTH = 65536;
flash.display.Graphics.CORNER_ROUND = 0;
flash.display.Graphics.CORNER_MITER = 4096;
flash.display.Graphics.CORNER_BEVEL = 8192;
flash.display.Graphics.CURVE = 2;
flash.display.Graphics.END_NONE = 0;
flash.display.Graphics.END_ROUND = 256;
flash.display.Graphics.END_SQUARE = 512;
flash.display.Graphics.LINE = 1;
flash.display.Graphics.MOVE = 0;
flash.display.Graphics.__MAX_DIM = 5000;
flash.display.Graphics.PIXEL_HINTING = 16384;
flash.display.Graphics.RADIAL = 1;
flash.display.Graphics.SCALE_HORIZONTAL = 2;
flash.display.Graphics.SCALE_NONE = 0;
flash.display.Graphics.SCALE_NORMAL = 3;
flash.display.Graphics.SCALE_VERTICAL = 1;
flash.display.Graphics.SPREAD_REPEAT = 2;
flash.display.Graphics.SPREAD_REFLECT = 4;
flash.display.GraphicsPathCommand.LINE_TO = 2;
flash.display.GraphicsPathCommand.MOVE_TO = 1;
flash.display.GraphicsPathCommand.CURVE_TO = 3;
flash.display.GraphicsPathCommand.WIDE_LINE_TO = 5;
flash.display.GraphicsPathCommand.WIDE_MOVE_TO = 4;
flash.display.GraphicsPathCommand.NO_OP = 0;
flash.display.GraphicsPathCommand.CUBIC_CURVE_TO = 6;
flash.events.MouseEvent.CLICK = "click";
flash.events.MouseEvent.DOUBLE_CLICK = "doubleClick";
flash.events.MouseEvent.MOUSE_DOWN = "mouseDown";
flash.events.MouseEvent.MOUSE_MOVE = "mouseMove";
flash.events.MouseEvent.MOUSE_OUT = "mouseOut";
flash.events.MouseEvent.MOUSE_OVER = "mouseOver";
flash.events.MouseEvent.MOUSE_UP = "mouseUp";
flash.events.MouseEvent.MOUSE_WHEEL = "mouseWheel";
flash.events.MouseEvent.RIGHT_CLICK = "rightClick";
flash.events.MouseEvent.RIGHT_MOUSE_DOWN = "rightMouseDown";
flash.events.MouseEvent.RIGHT_MOUSE_UP = "rightMouseUp";
flash.events.MouseEvent.ROLL_OUT = "rollOut";
flash.events.MouseEvent.ROLL_OVER = "rollOver";
flash.display.Stage.NAME = "Stage";
flash.display.Stage.OrientationPortrait = 1;
flash.display.Stage.OrientationPortraitUpsideDown = 2;
flash.display.Stage.OrientationLandscapeRight = 3;
flash.display.Stage.OrientationLandscapeLeft = 4;
flash.display.Stage.__acceleration = { x : 0.0, y : 1.0, z : 0.0};
flash.display.Stage.DEFAULT_FRAMERATE = 0.0;
flash.display.Stage.UI_EVENTS_QUEUE_MAX = 1000;
flash.display.Stage.__mouseChanges = [flash.events.MouseEvent.MOUSE_OUT,flash.events.MouseEvent.MOUSE_OVER,flash.events.MouseEvent.ROLL_OUT,flash.events.MouseEvent.ROLL_OVER];
flash.display.Stage.__touchChanges = ["touchOut","touchOver","touchRollOut","touchRollOver"];
flash.display.StageQuality.BEST = "best";
flash.display.StageQuality.HIGH = "high";
flash.display.StageQuality.MEDIUM = "medium";
flash.display.StageQuality.LOW = "low";
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.DESTINATION_ALPHA = 772;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.DESTINATION_COLOR = 774;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.ONE = 1;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.ONE_MINUS_DESTINATION_ALPHA = 773;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.ONE_MINUS_DESTINATION_COLOR = 775;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.ONE_MINUS_SOURCE_ALPHA = 771;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.ONE_MINUS_SOURCE_COLOR = 769;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.SOURCE_ALPHA = 770;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.SOURCE_COLOR = 768;
flash.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_.ZERO = 0;
flash.display3D.Context3DClearMask.ALL = 17664;
flash.display3D.Context3DClearMask.COLOR = 16384;
flash.display3D.Context3DClearMask.DEPTH = 256;
flash.display3D.Context3DClearMask.STENCIL = 1024;
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.ALWAYS = 519;
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.EQUAL = 514;
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.GREATER = 516;
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.GREATER_EQUAL = 518;
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.LESS = 513;
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.LESS_EQUAL = 515;
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.NEVER = 512;
flash.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.NOT_EQUAL = 517;
flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_.BACK = 1028;
flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_.FRONT = 1029;
flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_.FRONT_AND_BACK = 1032;
flash.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_.NONE = 0;
flash.events.ContextMenuEvent.MENU_ITEM_SELECT = "menuItemSelect";
flash.events.ContextMenuEvent.MENU_SELECT = "menuSelect";
flash.events.TextEvent.LINK = "link";
flash.events.TextEvent.TEXT_INPUT = "textInput";
flash.events.ErrorEvent.ERROR = "error";
flash.events.Listener.sIDs = 1;
flash.events.FocusEvent.FOCUS_IN = "focusIn";
flash.events.FocusEvent.FOCUS_OUT = "focusOut";
flash.events.FocusEvent.KEY_FOCUS_CHANGE = "keyFocusChange";
flash.events.FocusEvent.MOUSE_FOCUS_CHANGE = "mouseFocusChange";
flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS = "httpResponseStatus";
flash.events.HTTPStatusEvent.HTTP_STATUS = "httpStatus";
flash.events.IOErrorEvent.IO_ERROR = "ioError";
flash.events.KeyboardEvent.KEY_DOWN = "keyDown";
flash.events.KeyboardEvent.KEY_UP = "keyUp";
flash.events.ProgressEvent.PROGRESS = "progress";
flash.events.ProgressEvent.SOCKET_DATA = "socketData";
flash.events.SecurityErrorEvent.SECURITY_ERROR = "securityError";
flash.events.TimerEvent.TIMER = "timer";
flash.events.TimerEvent.TIMER_COMPLETE = "timerComplete";
flash.events.TouchEvent.TOUCH_BEGIN = "touchBegin";
flash.events.TouchEvent.TOUCH_END = "touchEnd";
flash.events.TouchEvent.TOUCH_MOVE = "touchMove";
flash.events.TouchEvent.TOUCH_OUT = "touchOut";
flash.events.TouchEvent.TOUCH_OVER = "touchOver";
flash.events.TouchEvent.TOUCH_ROLL_OUT = "touchRollOut";
flash.events.TouchEvent.TOUCH_ROLL_OVER = "touchRollOver";
flash.events.TouchEvent.TOUCH_TAP = "touchTap";
flash.filters.DropShadowFilter.DEGREES_FULL_RADIUS = 360.0;
flash.geom.Transform.DEG_TO_RAD = Math.PI / 180.0;
flash.media.Sound.EXTENSION_MP3 = "mp3";
flash.media.Sound.EXTENSION_OGG = "ogg";
flash.media.Sound.EXTENSION_WAV = "wav";
flash.media.Sound.EXTENSION_AAC = "aac";
flash.media.Sound.MEDIA_TYPE_MP3 = "audio/mpeg";
flash.media.Sound.MEDIA_TYPE_OGG = "audio/ogg; codecs=\"vorbis\"";
flash.media.Sound.MEDIA_TYPE_WAV = "audio/wav; codecs=\"1\"";
flash.media.Sound.MEDIA_TYPE_AAC = "audio/mp4; codecs=\"mp4a.40.2\"";
flash.net.URLRequestMethod.DELETE = "DELETE";
flash.net.URLRequestMethod.GET = "GET";
flash.net.URLRequestMethod.HEAD = "HEAD";
flash.net.URLRequestMethod.OPTIONS = "OPTIONS";
flash.net.URLRequestMethod.POST = "POST";
flash.net.URLRequestMethod.PUT = "PUT";
flash.system.ApplicationDomain.currentDomain = new flash.system.ApplicationDomain(null);
flash.system.SecurityDomain.currentDomain = new flash.system.SecurityDomain();
flash.system.System.useCodePage = false;
flash.text.TextField.mDefaultFont = "Bitstream_Vera_Sans";
flash.text.FontInstance.mSolidFonts = new haxe.ds.StringMap();
flash.text.TextFieldAutoSize.CENTER = "CENTER";
flash.text.TextFieldAutoSize.LEFT = "LEFT";
flash.text.TextFieldAutoSize.NONE = "NONE";
flash.text.TextFieldAutoSize.RIGHT = "RIGHT";
flash.text.TextFieldType.DYNAMIC = "DYNAMIC";
flash.text.TextFieldType.INPUT = "INPUT";
flash.ui.Keyboard.NUMBER_0 = 48;
flash.ui.Keyboard.NUMBER_1 = 49;
flash.ui.Keyboard.NUMBER_2 = 50;
flash.ui.Keyboard.NUMBER_3 = 51;
flash.ui.Keyboard.NUMBER_4 = 52;
flash.ui.Keyboard.NUMBER_5 = 53;
flash.ui.Keyboard.NUMBER_6 = 54;
flash.ui.Keyboard.NUMBER_7 = 55;
flash.ui.Keyboard.NUMBER_8 = 56;
flash.ui.Keyboard.NUMBER_9 = 57;
flash.ui.Keyboard.A = 65;
flash.ui.Keyboard.B = 66;
flash.ui.Keyboard.C = 67;
flash.ui.Keyboard.D = 68;
flash.ui.Keyboard.E = 69;
flash.ui.Keyboard.F = 70;
flash.ui.Keyboard.G = 71;
flash.ui.Keyboard.H = 72;
flash.ui.Keyboard.I = 73;
flash.ui.Keyboard.J = 74;
flash.ui.Keyboard.K = 75;
flash.ui.Keyboard.L = 76;
flash.ui.Keyboard.M = 77;
flash.ui.Keyboard.N = 78;
flash.ui.Keyboard.O = 79;
flash.ui.Keyboard.P = 80;
flash.ui.Keyboard.Q = 81;
flash.ui.Keyboard.R = 82;
flash.ui.Keyboard.S = 83;
flash.ui.Keyboard.T = 84;
flash.ui.Keyboard.U = 85;
flash.ui.Keyboard.V = 86;
flash.ui.Keyboard.W = 87;
flash.ui.Keyboard.X = 88;
flash.ui.Keyboard.Y = 89;
flash.ui.Keyboard.Z = 90;
flash.ui.Keyboard.NUMPAD_0 = 96;
flash.ui.Keyboard.NUMPAD_1 = 97;
flash.ui.Keyboard.NUMPAD_2 = 98;
flash.ui.Keyboard.NUMPAD_3 = 99;
flash.ui.Keyboard.NUMPAD_4 = 100;
flash.ui.Keyboard.NUMPAD_5 = 101;
flash.ui.Keyboard.NUMPAD_6 = 102;
flash.ui.Keyboard.NUMPAD_7 = 103;
flash.ui.Keyboard.NUMPAD_8 = 104;
flash.ui.Keyboard.NUMPAD_9 = 105;
flash.ui.Keyboard.NUMPAD_MULTIPLY = 106;
flash.ui.Keyboard.NUMPAD_ADD = 107;
flash.ui.Keyboard.NUMPAD_ENTER = 108;
flash.ui.Keyboard.NUMPAD_SUBTRACT = 109;
flash.ui.Keyboard.NUMPAD_DECIMAL = 110;
flash.ui.Keyboard.NUMPAD_DIVIDE = 111;
flash.ui.Keyboard.F1 = 112;
flash.ui.Keyboard.F2 = 113;
flash.ui.Keyboard.F3 = 114;
flash.ui.Keyboard.F4 = 115;
flash.ui.Keyboard.F5 = 116;
flash.ui.Keyboard.F6 = 117;
flash.ui.Keyboard.F7 = 118;
flash.ui.Keyboard.F8 = 119;
flash.ui.Keyboard.F9 = 120;
flash.ui.Keyboard.F10 = 121;
flash.ui.Keyboard.F11 = 122;
flash.ui.Keyboard.F12 = 123;
flash.ui.Keyboard.F13 = 124;
flash.ui.Keyboard.F14 = 125;
flash.ui.Keyboard.F15 = 126;
flash.ui.Keyboard.BACKSPACE = 8;
flash.ui.Keyboard.TAB = 9;
flash.ui.Keyboard.ENTER = 13;
flash.ui.Keyboard.SHIFT = 16;
flash.ui.Keyboard.CONTROL = 17;
flash.ui.Keyboard.CAPS_LOCK = 18;
flash.ui.Keyboard.ESCAPE = 27;
flash.ui.Keyboard.SPACE = 32;
flash.ui.Keyboard.PAGE_UP = 33;
flash.ui.Keyboard.PAGE_DOWN = 34;
flash.ui.Keyboard.END = 35;
flash.ui.Keyboard.HOME = 36;
flash.ui.Keyboard.LEFT = 37;
flash.ui.Keyboard.RIGHT = 39;
flash.ui.Keyboard.UP = 38;
flash.ui.Keyboard.DOWN = 40;
flash.ui.Keyboard.INSERT = 45;
flash.ui.Keyboard.DELETE = 46;
flash.ui.Keyboard.NUMLOCK = 144;
flash.ui.Keyboard.BREAK = 19;
flash.ui.Keyboard.SEMICOLON = 186;
flash.ui.Keyboard.EQUAL = 187;
flash.ui.Keyboard.COMMA = 188;
flash.ui.Keyboard.MINUS = 189;
flash.ui.Keyboard.PERIOD = 190;
flash.ui.Keyboard.SLASH = 191;
flash.ui.Keyboard.BACKQUOTE = 192;
flash.ui.Keyboard.LEFTBRACKET = 219;
flash.ui.Keyboard.BACKSLASH = 220;
flash.ui.Keyboard.RIGHTBRACKET = 221;
flash.ui.Keyboard.DOM_VK_CANCEL = 3;
flash.ui.Keyboard.DOM_VK_HELP = 6;
flash.ui.Keyboard.DOM_VK_BACK_SPACE = 8;
flash.ui.Keyboard.DOM_VK_TAB = 9;
flash.ui.Keyboard.DOM_VK_CLEAR = 12;
flash.ui.Keyboard.DOM_VK_RETURN = 13;
flash.ui.Keyboard.DOM_VK_ENTER = 14;
flash.ui.Keyboard.DOM_VK_SHIFT = 16;
flash.ui.Keyboard.DOM_VK_CONTROL = 17;
flash.ui.Keyboard.DOM_VK_ALT = 18;
flash.ui.Keyboard.DOM_VK_PAUSE = 19;
flash.ui.Keyboard.DOM_VK_CAPS_LOCK = 20;
flash.ui.Keyboard.DOM_VK_ESCAPE = 27;
flash.ui.Keyboard.DOM_VK_SPACE = 32;
flash.ui.Keyboard.DOM_VK_PAGE_UP = 33;
flash.ui.Keyboard.DOM_VK_PAGE_DOWN = 34;
flash.ui.Keyboard.DOM_VK_END = 35;
flash.ui.Keyboard.DOM_VK_HOME = 36;
flash.ui.Keyboard.DOM_VK_LEFT = 37;
flash.ui.Keyboard.DOM_VK_UP = 38;
flash.ui.Keyboard.DOM_VK_RIGHT = 39;
flash.ui.Keyboard.DOM_VK_DOWN = 40;
flash.ui.Keyboard.DOM_VK_PRINTSCREEN = 44;
flash.ui.Keyboard.DOM_VK_INSERT = 45;
flash.ui.Keyboard.DOM_VK_DELETE = 46;
flash.ui.Keyboard.DOM_VK_0 = 48;
flash.ui.Keyboard.DOM_VK_1 = 49;
flash.ui.Keyboard.DOM_VK_2 = 50;
flash.ui.Keyboard.DOM_VK_3 = 51;
flash.ui.Keyboard.DOM_VK_4 = 52;
flash.ui.Keyboard.DOM_VK_5 = 53;
flash.ui.Keyboard.DOM_VK_6 = 54;
flash.ui.Keyboard.DOM_VK_7 = 55;
flash.ui.Keyboard.DOM_VK_8 = 56;
flash.ui.Keyboard.DOM_VK_9 = 57;
flash.ui.Keyboard.DOM_VK_SEMICOLON = 59;
flash.ui.Keyboard.DOM_VK_EQUALS = 61;
flash.ui.Keyboard.DOM_VK_A = 65;
flash.ui.Keyboard.DOM_VK_B = 66;
flash.ui.Keyboard.DOM_VK_C = 67;
flash.ui.Keyboard.DOM_VK_D = 68;
flash.ui.Keyboard.DOM_VK_E = 69;
flash.ui.Keyboard.DOM_VK_F = 70;
flash.ui.Keyboard.DOM_VK_G = 71;
flash.ui.Keyboard.DOM_VK_H = 72;
flash.ui.Keyboard.DOM_VK_I = 73;
flash.ui.Keyboard.DOM_VK_J = 74;
flash.ui.Keyboard.DOM_VK_K = 75;
flash.ui.Keyboard.DOM_VK_L = 76;
flash.ui.Keyboard.DOM_VK_M = 77;
flash.ui.Keyboard.DOM_VK_N = 78;
flash.ui.Keyboard.DOM_VK_O = 79;
flash.ui.Keyboard.DOM_VK_P = 80;
flash.ui.Keyboard.DOM_VK_Q = 81;
flash.ui.Keyboard.DOM_VK_R = 82;
flash.ui.Keyboard.DOM_VK_S = 83;
flash.ui.Keyboard.DOM_VK_T = 84;
flash.ui.Keyboard.DOM_VK_U = 85;
flash.ui.Keyboard.DOM_VK_V = 86;
flash.ui.Keyboard.DOM_VK_W = 87;
flash.ui.Keyboard.DOM_VK_X = 88;
flash.ui.Keyboard.DOM_VK_Y = 89;
flash.ui.Keyboard.DOM_VK_Z = 90;
flash.ui.Keyboard.DOM_VK_CONTEXT_MENU = 93;
flash.ui.Keyboard.DOM_VK_NUMPAD0 = 96;
flash.ui.Keyboard.DOM_VK_NUMPAD1 = 97;
flash.ui.Keyboard.DOM_VK_NUMPAD2 = 98;
flash.ui.Keyboard.DOM_VK_NUMPAD3 = 99;
flash.ui.Keyboard.DOM_VK_NUMPAD4 = 100;
flash.ui.Keyboard.DOM_VK_NUMPAD5 = 101;
flash.ui.Keyboard.DOM_VK_NUMPAD6 = 102;
flash.ui.Keyboard.DOM_VK_NUMPAD7 = 103;
flash.ui.Keyboard.DOM_VK_NUMPAD8 = 104;
flash.ui.Keyboard.DOM_VK_NUMPAD9 = 105;
flash.ui.Keyboard.DOM_VK_MULTIPLY = 106;
flash.ui.Keyboard.DOM_VK_ADD = 107;
flash.ui.Keyboard.DOM_VK_SEPARATOR = 108;
flash.ui.Keyboard.DOM_VK_SUBTRACT = 109;
flash.ui.Keyboard.DOM_VK_DECIMAL = 110;
flash.ui.Keyboard.DOM_VK_DIVIDE = 111;
flash.ui.Keyboard.DOM_VK_F1 = 112;
flash.ui.Keyboard.DOM_VK_F2 = 113;
flash.ui.Keyboard.DOM_VK_F3 = 114;
flash.ui.Keyboard.DOM_VK_F4 = 115;
flash.ui.Keyboard.DOM_VK_F5 = 116;
flash.ui.Keyboard.DOM_VK_F6 = 117;
flash.ui.Keyboard.DOM_VK_F7 = 118;
flash.ui.Keyboard.DOM_VK_F8 = 119;
flash.ui.Keyboard.DOM_VK_F9 = 120;
flash.ui.Keyboard.DOM_VK_F10 = 121;
flash.ui.Keyboard.DOM_VK_F11 = 122;
flash.ui.Keyboard.DOM_VK_F12 = 123;
flash.ui.Keyboard.DOM_VK_F13 = 124;
flash.ui.Keyboard.DOM_VK_F14 = 125;
flash.ui.Keyboard.DOM_VK_F15 = 126;
flash.ui.Keyboard.DOM_VK_F16 = 127;
flash.ui.Keyboard.DOM_VK_F17 = 128;
flash.ui.Keyboard.DOM_VK_F18 = 129;
flash.ui.Keyboard.DOM_VK_F19 = 130;
flash.ui.Keyboard.DOM_VK_F20 = 131;
flash.ui.Keyboard.DOM_VK_F21 = 132;
flash.ui.Keyboard.DOM_VK_F22 = 133;
flash.ui.Keyboard.DOM_VK_F23 = 134;
flash.ui.Keyboard.DOM_VK_F24 = 135;
flash.ui.Keyboard.DOM_VK_NUM_LOCK = 144;
flash.ui.Keyboard.DOM_VK_SCROLL_LOCK = 145;
flash.ui.Keyboard.DOM_VK_COMMA = 188;
flash.ui.Keyboard.DOM_VK_PERIOD = 190;
flash.ui.Keyboard.DOM_VK_SLASH = 191;
flash.ui.Keyboard.DOM_VK_BACK_QUOTE = 192;
flash.ui.Keyboard.DOM_VK_OPEN_BRACKET = 219;
flash.ui.Keyboard.DOM_VK_BACK_SLASH = 220;
flash.ui.Keyboard.DOM_VK_CLOSE_BRACKET = 221;
flash.ui.Keyboard.DOM_VK_QUOTE = 222;
flash.ui.Keyboard.DOM_VK_META = 224;
flash.ui.Keyboard.DOM_VK_KANA = 21;
flash.ui.Keyboard.DOM_VK_HANGUL = 21;
flash.ui.Keyboard.DOM_VK_JUNJA = 23;
flash.ui.Keyboard.DOM_VK_FINAL = 24;
flash.ui.Keyboard.DOM_VK_HANJA = 25;
flash.ui.Keyboard.DOM_VK_KANJI = 25;
flash.ui.Keyboard.DOM_VK_CONVERT = 28;
flash.ui.Keyboard.DOM_VK_NONCONVERT = 29;
flash.ui.Keyboard.DOM_VK_ACEPT = 30;
flash.ui.Keyboard.DOM_VK_MODECHANGE = 31;
flash.ui.Keyboard.DOM_VK_SELECT = 41;
flash.ui.Keyboard.DOM_VK_PRINT = 42;
flash.ui.Keyboard.DOM_VK_EXECUTE = 43;
flash.ui.Keyboard.DOM_VK_SLEEP = 95;
flash.utils.Endian.BIG_ENDIAN = "bigEndian";
flash.utils.Endian.LITTLE_ENDIAN = "littleEndian";
flash.utils.Uuid.UID_CHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
haxe.Template.splitter = new EReg("(::[A-Za-z0-9_ ()&|!+=/><*.\"-]+::|\\$\\$([A-Za-z0-9_-]+)\\()","");
haxe.Template.expr_splitter = new EReg("(\\(|\\)|[ \r\n\t]*\"[^\"]*\"[ \r\n\t]*|[!+=/><*.&|-]+)","");
haxe.Template.expr_trim = new EReg("^[ ]*([^ ]+)[ ]*$","");
haxe.Template.expr_int = new EReg("^[0-9]+$","");
haxe.Template.expr_float = new EReg("^([+-]?)(?=\\d|,\\d)\\d*(,\\d*)?([Ee]([+-]?\\d+))?$","");
haxe.Template.globals = { };
haxe.Unserializer.DEFAULT_RESOLVER = Type;
haxe.Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe.ds.ObjectMap.count = 0;
js.Browser.window = typeof window != "undefined" ? window : null;
js.Browser.document = typeof window != "undefined" ? window.document : null;
openfl.Assets.cache = new openfl.AssetCache();
openfl.Assets.libraries = new haxe.ds.StringMap();
openfl.Assets.initialized = false;
openfl.display.OpenGLView.CONTEXT_LOST = "glcontextlost";
openfl.display.OpenGLView.CONTEXT_RESTORED = "glcontextrestored";
openfl.display.Tilesheet.TILE_SCALE = 1;
openfl.display.Tilesheet.TILE_ROTATION = 2;
openfl.display.Tilesheet.TILE_RGB = 4;
openfl.display.Tilesheet.TILE_ALPHA = 8;
openfl.display.Tilesheet.TILE_TRANS_2x2 = 16;
openfl.display.Tilesheet.TILE_BLEND_NORMAL = 0;
openfl.display.Tilesheet.TILE_BLEND_ADD = 65536;
openfl.display.Tilesheet.TILE_BLEND_MULTIPLY = 131072;
openfl.display.Tilesheet.TILE_BLEND_SCREEN = 262144;
openfl.gl.GL.DEPTH_BUFFER_BIT = 256;
openfl.gl.GL.STENCIL_BUFFER_BIT = 1024;
openfl.gl.GL.COLOR_BUFFER_BIT = 16384;
openfl.gl.GL.POINTS = 0;
openfl.gl.GL.LINES = 1;
openfl.gl.GL.LINE_LOOP = 2;
openfl.gl.GL.LINE_STRIP = 3;
openfl.gl.GL.TRIANGLES = 4;
openfl.gl.GL.TRIANGLE_STRIP = 5;
openfl.gl.GL.TRIANGLE_FAN = 6;
openfl.gl.GL.ZERO = 0;
openfl.gl.GL.ONE = 1;
openfl.gl.GL.SRC_COLOR = 768;
openfl.gl.GL.ONE_MINUS_SRC_COLOR = 769;
openfl.gl.GL.SRC_ALPHA = 770;
openfl.gl.GL.ONE_MINUS_SRC_ALPHA = 771;
openfl.gl.GL.DST_ALPHA = 772;
openfl.gl.GL.ONE_MINUS_DST_ALPHA = 773;
openfl.gl.GL.DST_COLOR = 774;
openfl.gl.GL.ONE_MINUS_DST_COLOR = 775;
openfl.gl.GL.SRC_ALPHA_SATURATE = 776;
openfl.gl.GL.FUNC_ADD = 32774;
openfl.gl.GL.BLEND_EQUATION = 32777;
openfl.gl.GL.BLEND_EQUATION_RGB = 32777;
openfl.gl.GL.BLEND_EQUATION_ALPHA = 34877;
openfl.gl.GL.FUNC_SUBTRACT = 32778;
openfl.gl.GL.FUNC_REVERSE_SUBTRACT = 32779;
openfl.gl.GL.BLEND_DST_RGB = 32968;
openfl.gl.GL.BLEND_SRC_RGB = 32969;
openfl.gl.GL.BLEND_DST_ALPHA = 32970;
openfl.gl.GL.BLEND_SRC_ALPHA = 32971;
openfl.gl.GL.CONSTANT_COLOR = 32769;
openfl.gl.GL.ONE_MINUS_CONSTANT_COLOR = 32770;
openfl.gl.GL.CONSTANT_ALPHA = 32771;
openfl.gl.GL.ONE_MINUS_CONSTANT_ALPHA = 32772;
openfl.gl.GL.BLEND_COLOR = 32773;
openfl.gl.GL.ARRAY_BUFFER = 34962;
openfl.gl.GL.ELEMENT_ARRAY_BUFFER = 34963;
openfl.gl.GL.ARRAY_BUFFER_BINDING = 34964;
openfl.gl.GL.ELEMENT_ARRAY_BUFFER_BINDING = 34965;
openfl.gl.GL.STREAM_DRAW = 35040;
openfl.gl.GL.STATIC_DRAW = 35044;
openfl.gl.GL.DYNAMIC_DRAW = 35048;
openfl.gl.GL.BUFFER_SIZE = 34660;
openfl.gl.GL.BUFFER_USAGE = 34661;
openfl.gl.GL.CURRENT_VERTEX_ATTRIB = 34342;
openfl.gl.GL.FRONT = 1028;
openfl.gl.GL.BACK = 1029;
openfl.gl.GL.FRONT_AND_BACK = 1032;
openfl.gl.GL.CULL_FACE = 2884;
openfl.gl.GL.BLEND = 3042;
openfl.gl.GL.DITHER = 3024;
openfl.gl.GL.STENCIL_TEST = 2960;
openfl.gl.GL.DEPTH_TEST = 2929;
openfl.gl.GL.SCISSOR_TEST = 3089;
openfl.gl.GL.POLYGON_OFFSET_FILL = 32823;
openfl.gl.GL.SAMPLE_ALPHA_TO_COVERAGE = 32926;
openfl.gl.GL.SAMPLE_COVERAGE = 32928;
openfl.gl.GL.NO_ERROR = 0;
openfl.gl.GL.INVALID_ENUM = 1280;
openfl.gl.GL.INVALID_VALUE = 1281;
openfl.gl.GL.INVALID_OPERATION = 1282;
openfl.gl.GL.OUT_OF_MEMORY = 1285;
openfl.gl.GL.CW = 2304;
openfl.gl.GL.CCW = 2305;
openfl.gl.GL.LINE_WIDTH = 2849;
openfl.gl.GL.ALIASED_POINT_SIZE_RANGE = 33901;
openfl.gl.GL.ALIASED_LINE_WIDTH_RANGE = 33902;
openfl.gl.GL.CULL_FACE_MODE = 2885;
openfl.gl.GL.FRONT_FACE = 2886;
openfl.gl.GL.DEPTH_RANGE = 2928;
openfl.gl.GL.DEPTH_WRITEMASK = 2930;
openfl.gl.GL.DEPTH_CLEAR_VALUE = 2931;
openfl.gl.GL.DEPTH_FUNC = 2932;
openfl.gl.GL.STENCIL_CLEAR_VALUE = 2961;
openfl.gl.GL.STENCIL_FUNC = 2962;
openfl.gl.GL.STENCIL_FAIL = 2964;
openfl.gl.GL.STENCIL_PASS_DEPTH_FAIL = 2965;
openfl.gl.GL.STENCIL_PASS_DEPTH_PASS = 2966;
openfl.gl.GL.STENCIL_REF = 2967;
openfl.gl.GL.STENCIL_VALUE_MASK = 2963;
openfl.gl.GL.STENCIL_WRITEMASK = 2968;
openfl.gl.GL.STENCIL_BACK_FUNC = 34816;
openfl.gl.GL.STENCIL_BACK_FAIL = 34817;
openfl.gl.GL.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
openfl.gl.GL.STENCIL_BACK_PASS_DEPTH_PASS = 34819;
openfl.gl.GL.STENCIL_BACK_REF = 36003;
openfl.gl.GL.STENCIL_BACK_VALUE_MASK = 36004;
openfl.gl.GL.STENCIL_BACK_WRITEMASK = 36005;
openfl.gl.GL.VIEWPORT = 2978;
openfl.gl.GL.SCISSOR_BOX = 3088;
openfl.gl.GL.COLOR_CLEAR_VALUE = 3106;
openfl.gl.GL.COLOR_WRITEMASK = 3107;
openfl.gl.GL.UNPACK_ALIGNMENT = 3317;
openfl.gl.GL.PACK_ALIGNMENT = 3333;
openfl.gl.GL.MAX_TEXTURE_SIZE = 3379;
openfl.gl.GL.MAX_VIEWPORT_DIMS = 3386;
openfl.gl.GL.SUBPIXEL_BITS = 3408;
openfl.gl.GL.RED_BITS = 3410;
openfl.gl.GL.GREEN_BITS = 3411;
openfl.gl.GL.BLUE_BITS = 3412;
openfl.gl.GL.ALPHA_BITS = 3413;
openfl.gl.GL.DEPTH_BITS = 3414;
openfl.gl.GL.STENCIL_BITS = 3415;
openfl.gl.GL.POLYGON_OFFSET_UNITS = 10752;
openfl.gl.GL.POLYGON_OFFSET_FACTOR = 32824;
openfl.gl.GL.TEXTURE_BINDING_2D = 32873;
openfl.gl.GL.SAMPLE_BUFFERS = 32936;
openfl.gl.GL.SAMPLES = 32937;
openfl.gl.GL.SAMPLE_COVERAGE_VALUE = 32938;
openfl.gl.GL.SAMPLE_COVERAGE_INVERT = 32939;
openfl.gl.GL.COMPRESSED_TEXTURE_FORMATS = 34467;
openfl.gl.GL.DONT_CARE = 4352;
openfl.gl.GL.FASTEST = 4353;
openfl.gl.GL.NICEST = 4354;
openfl.gl.GL.GENERATE_MIPMAP_HINT = 33170;
openfl.gl.GL.BYTE = 5120;
openfl.gl.GL.UNSIGNED_BYTE = 5121;
openfl.gl.GL.SHORT = 5122;
openfl.gl.GL.UNSIGNED_SHORT = 5123;
openfl.gl.GL.INT = 5124;
openfl.gl.GL.UNSIGNED_INT = 5125;
openfl.gl.GL.FLOAT = 5126;
openfl.gl.GL.DEPTH_COMPONENT = 6402;
openfl.gl.GL.ALPHA = 6406;
openfl.gl.GL.RGB = 6407;
openfl.gl.GL.RGBA = 6408;
openfl.gl.GL.LUMINANCE = 6409;
openfl.gl.GL.LUMINANCE_ALPHA = 6410;
openfl.gl.GL.UNSIGNED_SHORT_4_4_4_4 = 32819;
openfl.gl.GL.UNSIGNED_SHORT_5_5_5_1 = 32820;
openfl.gl.GL.UNSIGNED_SHORT_5_6_5 = 33635;
openfl.gl.GL.FRAGMENT_SHADER = 35632;
openfl.gl.GL.VERTEX_SHADER = 35633;
openfl.gl.GL.MAX_VERTEX_ATTRIBS = 34921;
openfl.gl.GL.MAX_VERTEX_UNIFORM_VECTORS = 36347;
openfl.gl.GL.MAX_VARYING_VECTORS = 36348;
openfl.gl.GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
openfl.gl.GL.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
openfl.gl.GL.MAX_TEXTURE_IMAGE_UNITS = 34930;
openfl.gl.GL.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
openfl.gl.GL.SHADER_TYPE = 35663;
openfl.gl.GL.DELETE_STATUS = 35712;
openfl.gl.GL.LINK_STATUS = 35714;
openfl.gl.GL.VALIDATE_STATUS = 35715;
openfl.gl.GL.ATTACHED_SHADERS = 35717;
openfl.gl.GL.ACTIVE_UNIFORMS = 35718;
openfl.gl.GL.ACTIVE_ATTRIBUTES = 35721;
openfl.gl.GL.SHADING_LANGUAGE_VERSION = 35724;
openfl.gl.GL.CURRENT_PROGRAM = 35725;
openfl.gl.GL.NEVER = 512;
openfl.gl.GL.LESS = 513;
openfl.gl.GL.EQUAL = 514;
openfl.gl.GL.LEQUAL = 515;
openfl.gl.GL.GREATER = 516;
openfl.gl.GL.NOTEQUAL = 517;
openfl.gl.GL.GEQUAL = 518;
openfl.gl.GL.ALWAYS = 519;
openfl.gl.GL.KEEP = 7680;
openfl.gl.GL.REPLACE = 7681;
openfl.gl.GL.INCR = 7682;
openfl.gl.GL.DECR = 7683;
openfl.gl.GL.INVERT = 5386;
openfl.gl.GL.INCR_WRAP = 34055;
openfl.gl.GL.DECR_WRAP = 34056;
openfl.gl.GL.VENDOR = 7936;
openfl.gl.GL.RENDERER = 7937;
openfl.gl.GL.VERSION = 7938;
openfl.gl.GL.NEAREST = 9728;
openfl.gl.GL.LINEAR = 9729;
openfl.gl.GL.NEAREST_MIPMAP_NEAREST = 9984;
openfl.gl.GL.LINEAR_MIPMAP_NEAREST = 9985;
openfl.gl.GL.NEAREST_MIPMAP_LINEAR = 9986;
openfl.gl.GL.LINEAR_MIPMAP_LINEAR = 9987;
openfl.gl.GL.TEXTURE_MAG_FILTER = 10240;
openfl.gl.GL.TEXTURE_MIN_FILTER = 10241;
openfl.gl.GL.TEXTURE_WRAP_S = 10242;
openfl.gl.GL.TEXTURE_WRAP_T = 10243;
openfl.gl.GL.TEXTURE_2D = 3553;
openfl.gl.GL.TEXTURE = 5890;
openfl.gl.GL.TEXTURE_CUBE_MAP = 34067;
openfl.gl.GL.TEXTURE_BINDING_CUBE_MAP = 34068;
openfl.gl.GL.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
openfl.gl.GL.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
openfl.gl.GL.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
openfl.gl.GL.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
openfl.gl.GL.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
openfl.gl.GL.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
openfl.gl.GL.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
openfl.gl.GL.TEXTURE0 = 33984;
openfl.gl.GL.TEXTURE1 = 33985;
openfl.gl.GL.TEXTURE2 = 33986;
openfl.gl.GL.TEXTURE3 = 33987;
openfl.gl.GL.TEXTURE4 = 33988;
openfl.gl.GL.TEXTURE5 = 33989;
openfl.gl.GL.TEXTURE6 = 33990;
openfl.gl.GL.TEXTURE7 = 33991;
openfl.gl.GL.TEXTURE8 = 33992;
openfl.gl.GL.TEXTURE9 = 33993;
openfl.gl.GL.TEXTURE10 = 33994;
openfl.gl.GL.TEXTURE11 = 33995;
openfl.gl.GL.TEXTURE12 = 33996;
openfl.gl.GL.TEXTURE13 = 33997;
openfl.gl.GL.TEXTURE14 = 33998;
openfl.gl.GL.TEXTURE15 = 33999;
openfl.gl.GL.TEXTURE16 = 34000;
openfl.gl.GL.TEXTURE17 = 34001;
openfl.gl.GL.TEXTURE18 = 34002;
openfl.gl.GL.TEXTURE19 = 34003;
openfl.gl.GL.TEXTURE20 = 34004;
openfl.gl.GL.TEXTURE21 = 34005;
openfl.gl.GL.TEXTURE22 = 34006;
openfl.gl.GL.TEXTURE23 = 34007;
openfl.gl.GL.TEXTURE24 = 34008;
openfl.gl.GL.TEXTURE25 = 34009;
openfl.gl.GL.TEXTURE26 = 34010;
openfl.gl.GL.TEXTURE27 = 34011;
openfl.gl.GL.TEXTURE28 = 34012;
openfl.gl.GL.TEXTURE29 = 34013;
openfl.gl.GL.TEXTURE30 = 34014;
openfl.gl.GL.TEXTURE31 = 34015;
openfl.gl.GL.ACTIVE_TEXTURE = 34016;
openfl.gl.GL.REPEAT = 10497;
openfl.gl.GL.CLAMP_TO_EDGE = 33071;
openfl.gl.GL.MIRRORED_REPEAT = 33648;
openfl.gl.GL.FLOAT_VEC2 = 35664;
openfl.gl.GL.FLOAT_VEC3 = 35665;
openfl.gl.GL.FLOAT_VEC4 = 35666;
openfl.gl.GL.INT_VEC2 = 35667;
openfl.gl.GL.INT_VEC3 = 35668;
openfl.gl.GL.INT_VEC4 = 35669;
openfl.gl.GL.BOOL = 35670;
openfl.gl.GL.BOOL_VEC2 = 35671;
openfl.gl.GL.BOOL_VEC3 = 35672;
openfl.gl.GL.BOOL_VEC4 = 35673;
openfl.gl.GL.FLOAT_MAT2 = 35674;
openfl.gl.GL.FLOAT_MAT3 = 35675;
openfl.gl.GL.FLOAT_MAT4 = 35676;
openfl.gl.GL.SAMPLER_2D = 35678;
openfl.gl.GL.SAMPLER_CUBE = 35680;
openfl.gl.GL.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
openfl.gl.GL.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
openfl.gl.GL.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
openfl.gl.GL.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
openfl.gl.GL.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
openfl.gl.GL.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
openfl.gl.GL.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
openfl.gl.GL.VERTEX_PROGRAM_POINT_SIZE = 34370;
openfl.gl.GL.POINT_SPRITE = 34913;
openfl.gl.GL.COMPILE_STATUS = 35713;
openfl.gl.GL.LOW_FLOAT = 36336;
openfl.gl.GL.MEDIUM_FLOAT = 36337;
openfl.gl.GL.HIGH_FLOAT = 36338;
openfl.gl.GL.LOW_INT = 36339;
openfl.gl.GL.MEDIUM_INT = 36340;
openfl.gl.GL.HIGH_INT = 36341;
openfl.gl.GL.FRAMEBUFFER = 36160;
openfl.gl.GL.RENDERBUFFER = 36161;
openfl.gl.GL.RGBA4 = 32854;
openfl.gl.GL.RGB5_A1 = 32855;
openfl.gl.GL.RGB565 = 36194;
openfl.gl.GL.DEPTH_COMPONENT16 = 33189;
openfl.gl.GL.STENCIL_INDEX = 6401;
openfl.gl.GL.STENCIL_INDEX8 = 36168;
openfl.gl.GL.DEPTH_STENCIL = 34041;
openfl.gl.GL.RENDERBUFFER_WIDTH = 36162;
openfl.gl.GL.RENDERBUFFER_HEIGHT = 36163;
openfl.gl.GL.RENDERBUFFER_INTERNAL_FORMAT = 36164;
openfl.gl.GL.RENDERBUFFER_RED_SIZE = 36176;
openfl.gl.GL.RENDERBUFFER_GREEN_SIZE = 36177;
openfl.gl.GL.RENDERBUFFER_BLUE_SIZE = 36178;
openfl.gl.GL.RENDERBUFFER_ALPHA_SIZE = 36179;
openfl.gl.GL.RENDERBUFFER_DEPTH_SIZE = 36180;
openfl.gl.GL.RENDERBUFFER_STENCIL_SIZE = 36181;
openfl.gl.GL.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
openfl.gl.GL.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
openfl.gl.GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
openfl.gl.GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
openfl.gl.GL.COLOR_ATTACHMENT0 = 36064;
openfl.gl.GL.DEPTH_ATTACHMENT = 36096;
openfl.gl.GL.STENCIL_ATTACHMENT = 36128;
openfl.gl.GL.DEPTH_STENCIL_ATTACHMENT = 33306;
openfl.gl.GL.NONE = 0;
openfl.gl.GL.FRAMEBUFFER_COMPLETE = 36053;
openfl.gl.GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
openfl.gl.GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
openfl.gl.GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
openfl.gl.GL.FRAMEBUFFER_UNSUPPORTED = 36061;
openfl.gl.GL.FRAMEBUFFER_BINDING = 36006;
openfl.gl.GL.RENDERBUFFER_BINDING = 36007;
openfl.gl.GL.MAX_RENDERBUFFER_SIZE = 34024;
openfl.gl.GL.INVALID_FRAMEBUFFER_OPERATION = 1286;
openfl.gl.GL.UNPACK_FLIP_Y_WEBGL = 37440;
openfl.gl.GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
openfl.gl.GL.CONTEXT_LOST_WEBGL = 37442;
openfl.gl.GL.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
openfl.gl.GL.BROWSER_DEFAULT_WEBGL = 37444;
ApplicationMain.main();
})();
